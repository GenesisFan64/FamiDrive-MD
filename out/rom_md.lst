 AS V1.42 Beta [Bld 118] - source file md.asm - page 1 - 10/16/2020 0:15:35


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; FamiDrive beta
       4/       0 :                     ; 
       5/       0 :                     ; A Modification of Nemul by Mairtrus
       6/       0 :                     ; (credit him for his original attempt)
       7/       0 :                     ; 
       8/       0 :                     ; Fixed stuff, now works on real hardware
       9/       0 :                     ; +-----------------------------------------------------------------+
      10/       0 :                     
      11/       0 :                     		include	"system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; --------------------------------------------------------
(1)    7/       0 :                     ; AS Main settings
(1)    8/       0 :                     ; --------------------------------------------------------
(1)    9/       0 :                     
(1)   10/       0 :                     		!org 0				; Start at 0
(1)   11/       0 :                     		cpu 		68000		; BASE CPU is 68k (manually changed later)
(1)   12/       0 :                     		padding		off		; Dont pad dc.b
(1)   13/       0 :                     		listing 	purecode	; Want listing file, but only the final code in expanded macros
(1)   14/       0 :                     		supmode 	on 		; Supervisor mode
(1)   15/       0 :                     		dottedstructs	off		; If needed
(1)   16/       0 :                     		page 		0
(1)   17/       0 :                     
(1)   18/       0 :                     ; ====================================================================
(1)   19/       0 :                     ; ---------------------------------------------
(1)   20/       0 :                     ; Functions
(1)   21/       0 :                     ; ---------------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     ; Fix (address).w
(1)   24/       0 :                     m68k_addr 	function x,-(-x)&$FFFFFFFF					; Allow usage of negative addresses as .w
(1)   25/       0 :                     doubleword 	function l,r,(l<<16&$FFFF0000|r&$FFFF)				; LLLL RRRR
(1)   26/       0 :                     
(1)   27/       0 :                     mapsize		function l,r,( ((l-1)/8)<<16&$FFFF0000|((r-1)/8)&$FFFF )	; for cell w/h use doubleword
(1)   28/       0 :                     locate		function a,b,c,(c&$FF)|(b<<8&$FF00)|(a<<16&$FF0000)		; Layer|X pos|Y pos for some video routines
(1)   29/       0 :                     
(1)   30/       0 :                     ; ====================================================================
(1)   31/       0 :                     ; ---------------------------------------------
(1)   32/       0 :                     ; Macros
(1)   33/       0 :                     ; ---------------------------------------------
(1)   34/       0 :                     
(1)   35/       0 :                     ; -------------------------------------
(1)   36/       0 :                     ; Reserve memory space
(1)   37/       0 :                     ; -------------------------------------
(1)   38/       0 :                     
(1)   39/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   40/       0 :                     GLBL_LASTPC	set *
(1)   41/       0 :                     		dephase
(1)   42/       0 :                     GLBL_LASTORG	set *
(1)   43/       0 :                     		phase thisinput
(1)   44/       0 :                     		endm
(1)   45/       0 :                     		
(1)   46/       0 :                     ; -------------------------------------
(1)   47/       0 :                     ; Finish
(1)   48/       0 :                     ; -------------------------------------
(1)   49/       0 :                     
(1)   50/       0 :                     finish		macro				; Then finish
(1)   51/       0 :                     		!org GLBL_LASTORG
(1)   52/       0 :                     		phase GLBL_LASTPC
(1)   53/       0 :                     		endm
(1)   54/       0 :                     
(1)   55/       0 :                     ; -------------------------------------
(1)   56/       0 :                     ; ZERO Fill padding
(1)   57/       0 :                     ; -------------------------------------
(1)   58/       0 :                     
(1)   59/       0 :                     rompad		macro address			; Zero fill
(1)   60/       0 :                     diff := address - *
(1)   61/       0 :                     		if diff < 0
(1)   62/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   63/       0 :                     		else
(1)   64/       0 :                     			while diff > 1024
(1)   65/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   66/       0 :                     				dc.b [1024]0
(1)   67/       0 :                     diff := diff - 1024
(1)   68/       0 :                     			endm
(1)   69/       0 :                     			dc.b [diff]0
(1)   70/       0 :                     		endif
(1)   71/       0 :                     	endm
(1)   72/       0 :                     	
(1)   73/       0 :                     ; -------------------------------------
(1)   74/       0 :                     ; ORG
(1)   75/       0 :                     ;
(1)   76/       0 :                     ; (from s2disasm)
(1)   77/       0 :                     ; -------------------------------------
(1)   78/       0 :                     
(1)   79/       0 : =$0                 paddingSoFar set 0
(1)   80/       0 :                     ; 128 = 80h = z80, 32988 = 80DCh = z80unDoC 
(1)   81/       0 :                     notZ80 function cpu,(cpu<>128)&&(cpu<>32988)
(1)   82/       0 :                     
(1)   83/       0 :                     ; make org safer (impossible to overwrite previously assembled bytes) and count padding
(1)   84/       0 :                     ; and also make it work in Z80 code without creating a new segment
(1)   85/       0 :                     org macro address
(1)   86/       0 :                     	if notZ80(MOMCPU)
(1)   87/       0 :                     		if address < *
(1)   88/       0 :                     			error "too much stuff before org $\{address} ($\{(*-address)} bytes)"
(1)   89/       0 :                     		elseif address > *
(1)   90/       0 :                     paddingSoFar	set paddingSoFar + address - *
(1)   91/       0 :                     			!org address
(1)   92/       0 :                     		endif
(1)   93/       0 :                     	else
(1)   94/       0 :                     		if address < $
(1)   95/       0 :                     			error "too much stuff before org 0\{address}h (0\{($-address)}h bytes)"
(1)   96/       0 :                     		else
(1)   97/       0 :                     			while address > $
(1)   98/       0 :                     				db 0
(1)   99/       0 :                     			endm
(1)  100/       0 :                     		endif
(1)  101/       0 :                     	endif
(1)  102/       0 :                         endm
(1)  103/       0 :                     
(1)  104/       0 :                     ; ====================================================================
(1)  105/       0 :                     ; ---------------------------------------------
(1)  106/       0 :                     ; Mega CD only
(1)  107/       0 :                     ; ---------------------------------------------
(1)  108/       0 :                     
(1)  109/       0 :                     ; Set a ISO file
(1)  110/       0 :                     ; NOTE: a valid ISO head is required ($8000 to $B7FF)
(1)  111/       0 :                     
(1)  112/       0 :                     iso_setfs	macro type,start,end
(1)  113/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  114/       0 :                     		dc.b 0						; zero
(1)  115/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  116/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  117/       0 :                     		dc.l start>>11					; Start sector, big
(1)  118/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  119/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  120/       0 :                     		dc.l end-start					; Filesize, big
(1)  121/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  122/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  123/       0 :                     		dc.b 2						; File flags
(1)  124/       0 :                     		dc.b 0,0
(1)  125/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  126/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  127/       0 :                     		dc.b 1,type
(1)  128/       0 :                     .fend:
(1)  129/       0 :                     		endm
(1)  130/       0 :                     		
(1)  131/       0 :                     iso_file	macro filename,start,end
(1)  132/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  133/       0 :                     		dc.b 0						; zero
(1)  134/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  135/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  136/       0 :                     		dc.l start>>11					; Start sector, big
(1)  137/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  138/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  139/       0 :                     		dc.l end-start					; Filesize, big
(1)  140/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  141/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  142/       0 :                     		dc.b 0						; File flags
(1)  143/       0 :                     		dc.b 0,0
(1)  144/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  145/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  146/       0 :                     		dc.b .flend-.flen
(1)  147/       0 :                     .flen:		dc.b filename,";1"
(1)  148/       0 :                     .flend:		dc.b 0
(1)  149/       0 :                     .fend:
(1)  150/       0 :                     		endm
(1)  151/       0 :                     		
(1)  152/       0 :                     ; ====================================================================
(1)  153/       0 :                     ; ---------------------------------------------
(1)  154/       0 :                     ; 32X only
(1)  155/       0 :                     ; ---------------------------------------------
(1)  156/       0 :                     
      12/       0 :                     		include	"system/md/const.asm"	; RAM / Variables are here
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Engine settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; MDRAM_START	equ	$FFFF9000
(1)    7/       0 :                     ; MAX_MDERAM	equ 	$200		; MAX RAM for Game modes
(1)    8/       0 :                     
(1)    9/       0 :                     ; ====================================================================
(1)   10/       0 :                     ; ----------------------------------------------------------------
(1)   11/       0 :                     ; Aliases
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     
(1)   14/       0 :                     ; Controller_1	equ RAM_InputData
(1)   15/       0 :                     ; Controller_2	equ RAM_InputData+sizeof_input
(1)   16/       0 :                     
(1)   17/       0 : =$C0000000          Vdp_palette	equ $C0000000		; Palette
(1)   18/       0 : =$40000010          Vdp_vsram	equ $40000010		; Vertical scroll
(1)   19/       0 :                     
(1)   20/       0 :                     ; ====================================================================
(1)   21/       0 :                     ; ----------------------------------------------------------------
(1)   22/       0 :                     ; Variables
(1)   23/       0 :                     ; ----------------------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 :                     ; --------------------------------------------------------
(1)   26/       0 :                     ; controller
(1)   27/       0 :                     ; --------------------------------------------------------
(1)   28/       0 :                     
(1)   29/       0 : =$1                 JoyUp		equ $0001
(1)   30/       0 : =$2                 JoyDown		equ $0002
(1)   31/       0 : =$4                 JoyLeft		equ $0004
(1)   32/       0 : =$8                 JoyRight	equ $0008
(1)   33/       0 : =$10                JoyB		equ $0010
(1)   34/       0 : =$20                JoyC		equ $0020
(1)   35/       0 : =$40                JoyA		equ $0040
(1)   36/       0 : =$80                JoyStart	equ $0080
(1)   37/       0 : =$100               JoyZ		equ $0100
(1)   38/       0 : =$200               JoyY		equ $0200
(1)   39/       0 : =$400               JoyX		equ $0400
(1)   40/       0 : =$800               JoyMode		equ $0800
(1)   41/       0 :                     
(1)   42/       0 :                     ; right byte only
(1)   43/       0 : =$0                 bitJoyUp	equ 0
(1)   44/       0 : =$1                 bitJoyDown	equ 1
(1)   45/       0 : =$2                 bitJoyLeft	equ 2
(1)   46/       0 : =$3                 bitJoyRight	equ 3
(1)   47/       0 : =$4                 bitJoyB		equ 4
(1)   48/       0 : =$5                 bitJoyC		equ 5
(1)   49/       0 : =$6                 bitJoyA		equ 6
(1)   50/       0 : =$7                 bitJoyStart	equ 7
(1)   51/       0 :                     
(1)   52/       0 :                     ; left byte only
(1)   53/       0 : =$0                 bitJoyZ		equ 0
(1)   54/       0 : =$1                 bitJoyY		equ 1
(1)   55/       0 : =$2                 bitJoyX		equ 2
(1)   56/       0 : =$3                 bitJoyMode	equ 3
(1)   57/       0 :                     
(1)   58/       0 :                     ; --------------------------------------------------------
(1)   59/       0 :                     ; vdp_ctrl READ bits
(1)   60/       0 :                     ; --------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 : =$2                 bitHint		equ 2
(1)   63/       0 : =$3                 bitVint		equ 3
(1)   64/       0 : =$1                 bitDma		equ 1
(1)   65/       0 :                     
(1)   66/       0 :                     ; --------------------------------------------------------
(1)   67/       0 :                     ; VDP register vars
(1)   68/       0 :                     ; --------------------------------------------------------
(1)   69/       0 :                     
(1)   70/       0 :                     ; Register $80
(1)   71/       0 : =$2                 HVStop		equ $02
(1)   72/       0 : =$10                HintEnbl	equ $10
(1)   73/       0 : =$1                 bitHVStop	equ 1
(1)   74/       0 : =$4                 bitHintEnbl	equ 4
(1)   75/       0 :                     
(1)   76/       0 :                     ; Register $81
(1)   77/       0 : =$40                DispEnbl 	equ $40
(1)   78/       0 : =$20                VintEnbl 	equ $20
(1)   79/       0 : =$10                DmaEnbl		equ $10
(1)   80/       0 : =$6                 bitDispEnbl	equ 6
(1)   81/       0 : =$5                 bitVintEnbl	equ 5
(1)   82/       0 : =$4                 bitDmaEnbl	equ 4
(1)   83/       0 : =$3                 bitV30		equ 3
(1)   84/       0 :                     
(1)   85/       0 :                     ; --------------------------------------------------------
(1)   86/       0 :                     ; Misc
(1)   87/       0 :                     ; --------------------------------------------------------
(1)   88/       0 :                     
(1)   89/       0 : =$7FF               varNullVram	equ $7FF
(1)   90/       0 :                     
      13/       0 :                     		include	"system/md/map.asm"	; Genesis hardware map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Genesis / Mega drive 68k map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =$200000            sys_exram	equ	$200000		; External RAM
(1)    7/       0 : =$A00000            z80_cpu		equ	$A00000		; Z80 CPU, size: $2000
(1)    8/       0 : =$A04000            ym_ctrl_1	equ	$A04000		; YM2612 reg 1
(1)    9/       0 : =$A04001            ym_data_1	equ	$A04001		; YM2612 reg 2
(1)   10/       0 : =$A04002            ym_ctrl_2	equ	$A04002		; YM2612 reg 1
(1)   11/       0 : =$A04003            ym_data_2	equ	$A04003		; YM2612 reg 2
(1)   12/       0 : =$A10001            sys_io		equ	$A10001		; bits: OVRSEAS(7)|PAL(6)|DISK(5)|VER(3-0)
(1)   13/       0 : =$A10003            sys_data_1	equ	$A10003		; Port 1 DATA
(1)   14/       0 : =$A10005            sys_data_2	equ	$A10005		; Port 2 DATA
(1)   15/       0 : =$A10007            sys_data_3	equ	$A10007		; Modem DATA
(1)   16/       0 : =$A10009            sys_ctrl_1	equ	$A10009		; Port 1 CTRL
(1)   17/       0 : =$A1000B            sys_ctrl_2	equ	$A1000B		; Port 2 CTRL
(1)   18/       0 : =$A1000D            sys_ctrl_3	equ	$A1000D		; Modem CTRL
(1)   19/       0 : =$A14000            sys_tmss	equ	$A14000		; write "SEGA" here for ver > 0
(1)   20/       0 : =$A11100            z80_bus 	equ	$A11100		; only use bit 0 (bit 8 as WORD)
(1)   21/       0 : =$A11200            z80_reset	equ	$A11200		; WRITE only ($0000 reset/$0100 cancel)
(1)   22/       0 : =$A130EC            md_mars_id	equ	$A130EC		; MARS ID "MARS"
(1)   23/       0 : =$A130F1            md_bank_sram	equ	$A130F1		; Make SRAM visible at $200000
(1)   24/       0 : =$C00000            vdp_data	equ	$C00000		; video data port
(1)   25/       0 : =$C00004            vdp_ctrl	equ	$C00004		; video control port
(1)   26/       0 : =$C00011            psg_ctrl	equ	$C00011		; PSG control
(1)   27/       0 :                     
(1)   28/       0 :                     ; ----------------------------------------------------------------
(1)   29/       0 :                     ; Genesis / Mega drive Z80 map
(1)   30/       0 :                     ; ----------------------------------------------------------------
(1)   31/       0 :                     
(1)   32/       0 : =$4000              zym_ctrl_1	equ	$4000		; YM2612 reg 1
(1)   33/       0 : =$4001              zym_data_1	equ	$4001		; YM2612 reg 2
(1)   34/       0 : =$4002              zym_ctrl_2	equ	$4002		; YM2612 reg 1
(1)   35/       0 : =$4003              zym_data_2	equ	$4003		; YM2612 reg 2
(1)   36/       0 : =$6000              zbank		equ	$6000		; ROM BANK 24bits %XXXXXXXX X0000000 00000000
(1)   37/       0 : =$7F00              zvdp_data	equ	$7F00		; video data port
(1)   38/       0 : =$7F04              zvdp_ctrl	equ	$7F04		; video control port
(1)   39/       0 : =$7F11              zpsg_ctrl	equ	$7F11		; PSG control
(1)   40/       0 :                     
(1)   41/       0 :                     ; ----------------------------------------------------------------
(1)   42/       0 :                     ; If a SEGA CD is attached
(1)   43/       0 :                     ; ----------------------------------------------------------------
(1)   44/       0 :                     
(1)   45/       0 : =$20000             syscd_prgram	equ	$020000		; SubCPU PRG-RAM, up to $1FFFF, banked
(1)   46/       0 : =$200000            syscd_wordram	equ	$200000		; WORD-RAM seen in MAIN-CPU
(1)   47/       0 : =$A12000            syscd_bus	equ	$A12000		; WORD | Sub-CPU BUS/RESET
(1)   48/       0 : =$A12003            syscd_memory	equ	$A12003		; BYTE | Sub-CPU memory mode
(1)   49/       0 : =$A12004            syscd_cdcmode	equ	$A12004		; WORD | CDC Mode
(1)   50/       0 : =$A12006            syscd_hint	equ	$A12006		; WORD | VDP HBlank jump ($FFxxxx)
(1)   51/       0 : =$A12008            syscd_cdchost	equ	$A12008		; WORD | CDC Host
(1)   52/       0 : =$A12008            syscd_stopwtch	equ	$A12008		; WORD | Stopwatch
(1)   53/       0 : =$A1200E            syscd_comm_m	equ	$A1200E		; BYTE | MainCPU R/W comm byte
(1)   54/       0 : =$A1200F            syscd_comm_s	equ	$A1200F		; BYTE | Sub-CPU Read comm byte
(1)   55/       0 : =$A12010            syscd_args_m	equ	$A12010		; DATA | comm R/W list, max size: $E
(1)   56/       0 : =$A12020            syscd_args_s	equ	$A12020		; DATA | comm Read list, max size: $E
(1)   57/       0 :                     
(1)   58/       0 :                     ; ----------------------------------------------------------------
(1)   59/       0 :                     ; If a 32X is attached
(1)   60/       0 :                     ; ----------------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 :                     ; TODO
(1)   63/       0 :                     
      14/       0 :                     
      15/       0 :                     ; ====================================================================
      16/       0 :                     ; ----------------------------------------------------------------
      17/       0 :                     ; Emulator variables
      18/       0 :                     ; ----------------------------------------------------------------
      19/       0 :                     
      20/       0 :                     ; ------------------------------------------------
      21/       0 :                     ; RAM
      22/       0 :                     ; ------------------------------------------------
      23/       0 :                     
      24/       0 : =$FFFF0000          RAM_Fami_ROM	equ $FFFF0000		; PRG-ROM
      25/       0 : =$FFFF8000          RAM_Fami_Emu	equ $FFFF8000		; Emulator buffer
      26/       0 : =$FFFF9000          RAM_Fami_RAM	equ $FFFF9000		; RAM size: $800
      27/       0 : =$FFFFA000          RAM_Fami_PPU	equ $FFFFA000		; PPU size: $3EF8 (TODO: still uses negative variables)
      28/       0 :                     
      29/       0 :                     ; ----------------------------------------------------------------
      30/       0 :                     ; CPU
      31/       0 :                     ; ----------------------------------------------------------------
      32/       0 :                     
      33/       0 : =$7FFA              cpuNMI		equ $7FFA
      34/       0 : =$7FFC              cpuEntry	equ $7FFC
      35/       0 : =$7FFE              cpuIRQ		equ $7FFE
      36/       0 :                     
      37/       0 :                     ; ----------------------------------------------------------------
      38/       0 :                     ; Emulator
      39/       0 :                     ; ---------------------------------------------------------------
      40/       0 :                     
      41/       0 : (MACRO)             		struct RAM_Fami_Emu+$FF0
      41/       0 : =$0                 GLBL_LASTPC     set *
      41/       0 :                                     dephase
      41/       0 : =$0                 GLBL_LASTORG    set *
      41/FFFFFFFFFFFF8FF0 :                                     phase RAM_FAMI_EMU+$FF0
      42/FFFFFFFFFFFF8FF0 :                     RAM_EmuLoop	ds.w 3
      43/FFFFFFFFFFFF8FF6 : (MACRO)             		finish
      43/FFFFFFFFFFFF8FF0 :                                     !org GLBL_LASTORG
      43/       0 :                                     phase GLBL_LASTPC
      44/       0 :                     
      45/       0 :                     ; ----------------------------------------------------------------
      46/       0 :                     ; Unsorted
      47/       0 :                     ; ----------------------------------------------------------------
      48/       0 :                     
      49/       0 : (MACRO)             		struct 0
      49/       0 : =$0                 GLBL_LASTPC     set *
      49/       0 :                                     dephase
      49/       0 : =$0                 GLBL_LASTORG    set *
      49/       0 :                                     phase 0
      50/       0 :                     emuPrgRom	ds.l 1
      51/       4 :                     emuChrRom	ds.l 1
      52/       8 :                     famiVintSave	ds.l 8
      53/      28 :                     famiVintSave2	ds.w 1
      54/      2A :                     cpuSprHint	ds.w 1;equ -$38
      55/      2C :                     vdpReg00	ds.w 1
      56/      2E :                     vdpReg01	ds.w 1;equ -$36
      57/      30 :                     ppuMirror	ds.w 1;equ -$34
      58/      32 :                     cpuMapper	ds.w 1;equ -$32
      59/      34 :                     cpuFamiVint	ds.w 1;equ -$30
      60/      36 :                     cpuInputData	ds.w 2;equ -$28
      61/      3A :                     cpuModeDec	ds.w 1;equ -$22
      62/      3C :                     cpuFlag2	ds.w 1;equ -$20
      63/      3E :                     cpuModeIntDis	ds.w 1;equ -$1E
      64/      40 :                     ppuNTblBase	ds.w 1;equ -$1A
      65/      42 :                     ppuChrBank	ds.w 1;equ -$18
      66/      44 :                     ppuOamAddr	ds.w 1;equ -$16
      67/      46 :                     ppuAddrIncr	ds.w 1;equ -$14
      68/      48 :                     ppuAddrBase	ds.w 1;equ -$12
      69/      4A :                     ppuDataLast	ds.w 1;equ -$10
      70/      4C :                     ppuSprWide	ds.w 1;equ -$E
      71/      4E :                     ppuSp0Ypos	ds.w 1;equ -$C
      72/      50 :                     ppuAddrLatch	ds.w 1;equ -$A
      73/      52 :                     ppuOamUnk	ds.w 1;equ -6
      74/      54 :                     ppuNmiFlag	ds.w 1;equ -4
      75/      56 :                     ppuStatus	ds.w 1;equ -2
      76/      58 :                     vdpHintSp0	ds.w 1
      77/      5A :                     FamiMdVint	ds.w 1
      78/      5C :                     FamiPPUVint	ds.w 1
      79/      5E :                     vdpScrlX	ds.l 1
      80/      62 :                     vdpScrlY	ds.l 1
      81/      66 :                     vdpPalette	ds.w 64
      82/      E6 :                     vdpSprData	ds.w 8*64
      83/     4E6 : (MACRO)             		finish
      83/       0 :                                     !org GLBL_LASTORG
      83/       0 :                                     phase GLBL_LASTPC
      84/       0 :                     
      85/       0 :                     ; ====================================================================
      86/       0 :                     ; Header
      87/       0 :                     ; ====================================================================
      88/       0 :                     
      89/       0 : 0000 0000           		dc.l 0
      90/       4 : 0000 0202           		dc.l MD_Entry
      91/       8 : 0000 0200           		dc.l MD_Error
      92/       C : 0000 0200           		dc.l MD_Error
      93/      10 : 0000 0200           		dc.l MD_Error
      94/      14 : 0000 0200           		dc.l MD_Error
      95/      18 : 0000 0200           		dc.l MD_Error
      96/      1C : 0000 0200           		dc.l MD_Error
      97/      20 : 0000 0200           		dc.l MD_Error
      98/      24 : 0000 0200           		dc.l MD_Error
      99/      28 : 0000 0200           		dc.l MD_Error
     100/      2C : 0000 0200           		dc.l MD_Error
     101/      30 : 0000 0200           		dc.l MD_Error
     102/      34 : 0000 0200           		dc.l MD_Error
     103/      38 : 0000 0200           		dc.l MD_Error
     104/      3C : 0000 0200           		dc.l MD_Error
     105/      40 : 0000 0200           		dc.l MD_Error
     106/      44 : 0000 0200           		dc.l MD_Error
     107/      48 : 0000 0200           		dc.l MD_Error
     108/      4C : 0000 0200           		dc.l MD_Error
     109/      50 : 0000 0200           		dc.l MD_Error
     110/      54 : 0000 0200           		dc.l MD_Error
     111/      58 : 0000 0200           		dc.l MD_Error
     112/      5C : 0000 0200           		dc.l MD_Error
     113/      60 : 0000 0200           		dc.l MD_Error
     114/      64 : 0000 0200           		dc.l MD_Error
     115/      68 : 0000 0200           		dc.l MD_Error
     116/      6C : 0000 0200           		dc.l MD_Error
     117/      70 : 0000 0452           		dc.l MD_Hint
     118/      74 : 0000 0200           		dc.l MD_Error
     119/      78 : 0000 03AE           		dc.l MD_Vint
     120/      7C : 0000 0200           		dc.l MD_Error
     121/      80 : 0000 0200           		dc.l MD_Error
     122/      84 : 0000 0200           		dc.l MD_Error
     123/      88 : 0000 0200           		dc.l MD_Error
     124/      8C : 0000 0200           		dc.l MD_Error
     125/      90 : 0000 0200           		dc.l MD_Error
     126/      94 : 0000 0200           		dc.l MD_Error
     127/      98 : 0000 0200           		dc.l MD_Error
     128/      9C : 0000 0200           		dc.l MD_Error
     129/      A0 : 0000 0200           		dc.l MD_Error
     130/      A4 : 0000 0200           		dc.l MD_Error
     131/      A8 : 0000 0200           		dc.l MD_Error
     132/      AC : 0000 0200           		dc.l MD_Error
     133/      B0 : 0000 0200           		dc.l MD_Error
     134/      B4 : 0000 0200           		dc.l MD_Error
     135/      B8 : 0000 0200           		dc.l MD_Error
     136/      BC : 0000 0200           		dc.l MD_Error
     137/      C0 : 0000 0202           		dc.l MD_Entry
     138/      C4 : 0000 0202           		dc.l MD_Entry
     139/      C8 : 0000 0202           		dc.l MD_Entry
     140/      CC : 0000 0202           		dc.l MD_Entry
     141/      D0 : 0000 0202           		dc.l MD_Entry
     142/      D4 : 0000 0202           		dc.l MD_Entry
     143/      D8 : 0000 0202           		dc.l MD_Entry
     144/      DC : 0000 0202           		dc.l MD_Entry
     145/      E0 : 0000 0202           		dc.l MD_Entry
     146/      E4 : 0000 0202           		dc.l MD_Entry
     147/      E8 : 0000 0202           		dc.l MD_Entry
     148/      EC : 0000 0202           		dc.l MD_Entry
     149/      F0 : 0000 0202           		dc.l MD_Entry
     150/      F4 : 0000 0202           		dc.l MD_Entry
     151/      F8 : 0000 0202           		dc.l MD_Entry
     152/      FC : 0000 0202           		dc.l MD_Entry
     153/     100 : 5345 4741 204D 4547 		dc.b "SEGA MEGA DRIVE "
                    4120 4452 4956 4520 
     154/     110 : 2843 2947 4636 3420 		dc.b "(C)GF64 2020.???"
                    3230 3230 2E3F 3F3F 
     155/     120 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     156/     150 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     157/     180 : 474D 2048 4F4D 4542 		dc.b "GM HOMEBREW-00"
                    5245 572D 3030      
     158/     18E : 0000                		dc.w 0
     159/     190 : 0000                		dc.w 0
     160/     192 : 2020 2020 2020 2020 		dc.b "              "
                    2020 2020 2020      
     161/     1A0 : 0000 0000           		dc.l 0
     162/     1A4 : 0000 7FFF           		dc.l EndOfRom-1
     163/     1A8 : 00FF 0000           		dc.l $FF0000
     164/     1AC : 00FF FFFF           		dc.l $FFFFFF
     165/     1B0 : 2020 2020           		dc.l $20202020
     166/     1B4 : 2020 2020           		dc.l $20202020
     167/     1B8 : 2020 2020           		dc.l $20202020
     168/     1BC : 2020 2020 2020 2020 		dc.b "                                                    "
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020           
     169/     1F0 : 4A55 4520 2020 2020 		dc.b "JUE             "
                    2020 2020 2020 2020 
     170/     200 :                     
     171/     200 :                     ; ====================================================================
     172/     200 :                     ; ----------------------------------------------------------------
     173/     200 :                     ; Error
     174/     200 :                     ; ----------------------------------------------------------------
     175/     200 :                     
     176/     200 :                     MD_Error:
     177/     200 : 60FE                		bra.s	MD_Error
     178/     202 :                     
     179/     202 :                     ; ====================================================================
     180/     202 :                     ; ----------------------------------------------------------------
     181/     202 :                     ; Entry
     182/     202 :                     ; ----------------------------------------------------------------
     183/     202 :                     
     184/     202 :                     MD_Entry:
     185/     202 : 46FC 2700           		move	#$2700,sr
     186/     206 : 4AB9 00A1 0008      		tst.l	($A10008).l
     187/     20C : 6606                		bne.s	loc_210
     188/     20E : 4A79 00A1 000C      		tst.w	($A1000C).l
     189/     214 :                     loc_210:
     190/     214 : 6600 0054           		bne.w	loc_270
     191/     218 : 4BF9 0000 026E      		lea	(list_InitRegs).l,a5
     192/     21E : 4C9D 00E0           		movem.w	(a5)+,d5-d7
     193/     222 : 4CDD 1F00           		movem.l	(a5)+,a0-a4
     194/     226 : 1039 00A1 0001      		move.b	($A10001).l,d0
     195/     22C : 0200 000F           		andi.b	#$F,d0
     196/     230 : 6700 000C           		beq.w	old_md
     197/     234 : 23FC 5345 4741 00A1 		move.l	#"SEGA",($A14000).l
                    4000                
     198/     23E :                     old_md:
     199/     23E : 4280                		clr.l	d0
     200/     240 : 2C40                		movea.l	d0,a6
     201/     242 : 4E66                		move	a6,usp
     202/     244 :                     clrstack:
     203/     244 : 2D00                		move.l	d0,-(a6)
     204/     246 : 51CE FFFC           		dbf	d6,clrstack
     205/     24A : 6100 00C8           		bsr	Sound_LoadZ80
     206/     24E : 6100 00DC           		bsr	Sound_PsgInit
     207/     252 : 6100 00E6           		bsr	Video_Init
     208/     256 : 4CD6 7FFF           		movem.l	(a6),d0-a6
     209/     25A : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     210/     262 : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     211/     26A :                     loc_270:
     212/     26A : 6000 00F6           		bra.w	MD_Init
     213/     26E :                     ; ----------------------------------------------------------------
     214/     26E : 8000                list_InitRegs:	dc.w $8000		; d5
     215/     270 : 3FFF                		dc.w $3FFF		; d6
     216/     272 : 0100                		dc.w $100		; d7
     217/     274 : 00A0 0000           		dc.l $A00000		; a0
     218/     278 : 00A1 1100           		dc.l $A11100		; a1
     219/     27C : 00A1 1200           		dc.l $A11200		; a2
     220/     280 : 00C0 0000           		dc.l $C00000		; a3
     221/     284 : 00C0 0004           		dc.l $C00004		; a4
     222/     288 : AF01 D91F 1127 0021 		dc.b $AF, 1, $D9, $1F, $11, $27, 0, $21, $26, 0, $F9, $77
                    2600 F977           
     223/     294 : EDB0 DDE1 FDE1 ED47 		dc.b $ED, $B0, $DD, $E1, $FD, $E1, $ED,	$47, $ED, $4F
                    ED4F                
     224/     29E : D1E1 F108 D9C1 D1E1 		dc.b $D1, $E1, $F1, 8, $D9, $C1, $D1, $E1, $F1,	$F9, $F3
                    F1F9 F3             
     225/     2A9 : ED56 36E9 E981 048F 		dc.b $ED, $56, $36, $E9, $E9, $81, 4, $8F, 1
                    01                  
     226/     2B2 : 9F                  		dc.b $9F
     227/     2B3 : BF                  		dc.b $BF
     228/     2B4 : DF                  		dc.b $DF
     229/     2B5 : FF                  		dc.b $FF
     230/     2B6 :                     ; ----------------------------------------------------------------
     231/     2B6 :                     
     232/     2B6 :                     ; =============== S U B	R O U T	I N E =======================================
     233/     2B6 :                     
     234/     2B6 :                     Fami_InitVideo:
     235/     2B6 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     236/     2BC : 3E3C 0FFF           		move.w	#$FFF,d7
     237/     2C0 : 2D7C 4000 0003 0004 		move.l	#$40000003,4(a6)
     238/     2C8 :                     .loopfg:
     239/     2C8 : 3CBC 0200           		move.w	#$200,(a6)
     240/     2CC : 51CF FFFA           		dbf	d7,.loopfg
     241/     2D0 : 3E3C 0FFF           		move.w	#$FFF,d7
     242/     2D4 : 2D7C 6000 0003 0004 		move.l	#$60000003,4(a6)
     243/     2DC :                     .loopbg:
     244/     2DC : 3CBC 0200           		move.w	#$200,(a6)
     245/     2E0 : 51CF FFFA           		dbf	d7,.loopbg
     246/     2E4 : 2D7C 6800 0002 0004 		move.l	#$68000002,4(a6)
     247/     2EC : 2CBC 0000 0000      		move.l	#0,(a6)
     248/     2F2 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     249/     2FA : 2CBC 0000 0000      		move.l	#0,(a6)
     250/     300 : 7E3F                		moveq	#$3F,d7
     251/     302 : 2D7C C000 0000 0004 		move.l	#$C0000000,4(a6)
     252/     30A :                     
     253/     30A :                     loc_51E:
     254/     30A : 3CBC 0000           		move.w	#0,(a6)
     255/     30E : 51CF FFFA           		dbf	d7,loc_51E
     256/     312 : 4E75                		rts
     257/     314 :                     
     258/     314 :                     ; =============== S U B	R O U T	I N E =======================================
     259/     314 :                     
     260/     314 :                     
     261/     314 :                     Sound_LoadZ80:
     262/     314 : 3287                		move.w	d7,(a1)
     263/     316 : 3487                		move.w	d7,(a2)
     264/     318 :                     
     265/     318 :                     loc_8DA:
     266/     318 : 0111                		btst	d0,(a1)
     267/     31A : 66FC                		bne.s	loc_8DA
     268/     31C : 7425                		moveq	#$25,d2
     269/     31E :                     loc_8E0:
     270/     31E : 10DD                		move.b	(a5)+,(a0)+
     271/     320 : 51CA FFFC           		dbf	d2,loc_8E0
     272/     324 : 3480                		move.w	d0,(a2)
     273/     326 : 3280                		move.w	d0,(a1)
     274/     328 : 3487                		move.w	d7,(a2)
     275/     32A : 4E75                		rts
     276/     32C :                     ; End of function Sound_LoadZ80
     277/     32C :                     
     278/     32C :                     
     279/     32C :                     ; =============== S U B	R O U T	I N E =======================================
     280/     32C :                     
     281/     32C :                     
     282/     32C :                     Sound_PsgInit:
     283/     32C : 7203                		moveq	#3,d1
     284/     32E :                     
     285/     32E :                     loc_8F0:
     286/     32E : 175D 0011           		move.b	(a5)+,$11(a3)
     287/     332 : 51C9 FFFA           		dbf	d1,loc_8F0
     288/     336 : 3480                		move.w	d0,(a2)
     289/     338 : 4E75                		rts
     290/     33A :                     ; End of function Sound_PsgInit
     291/     33A :                     
     292/     33A :                     
     293/     33A :                     ; =============== S U B	R O U T	I N E =======================================
     294/     33A :                     
     295/     33A :                     
     296/     33A :                     Video_Init:
     297/     33A : 7017                		moveq	#$17,d0
     298/     33C : 41F9 0000 034E      		lea	(byte_910).l,a0
     299/     342 :                     loc_904:
     300/     342 : 1A18                		move.b	(a0)+,d5
     301/     344 : 3885                		move.w	d5,(a4)
     302/     346 : DA47                		add.w	d7,d5
     303/     348 : 51C8 FFF8           		dbf	d0,loc_904
     304/     34C : 4E75                		rts
     305/     34E :                     
     306/     34E :                     ; ----------------------------------------------------------------
     307/     34E :                     byte_910:
     308/     34E : 04                  		dc.b $04			; HBlank int on, HV Counter on
     309/     34F : 64                  		dc.b $64			; Display ON, VBlank int on
     310/     350 : 30                  		dc.b (($C000)>>10)		; ForeGrd at VRAM $C000 (%00xxx000)
     311/     351 : 34                  		dc.b (($D000)>>10)		; Window  at VRAM $D000 (%00xxxxy0)
     312/     352 : 07                  		dc.b (($E000)>>13)		; BackGrd at VRAM $E000 (%00000xxx)
     313/     353 : 5E                  		dc.b (($BC00)>>9)		; Sprites at VRAM $BC00 (%0xxxxxxy)
     314/     354 : 00                  		dc.b $00			; Nothing
     315/     355 : 00                  		dc.b $00			; Background color
     316/     356 : 00                  		dc.b $00			; Nothing
     317/     357 : 00                  		dc.b $00			; Nothing
     318/     358 : DF                  		dc.b $DF			; HInt value
     319/     359 : 00                  		dc.b (%000|%00)			; No ExtInt, Scroll: VSCR:full HSCR:full
     320/     35A : 00                  		dc.b $00			; H40, No shadow mode, Normal resolution
     321/     35B : 2E                  		dc.b (($B800)>>10)		; HScroll at VRAM $B800 (%00xxxxxx)
     322/     35C : 00                  		dc.b $00			; Nothing
     323/     35D : 02                  		dc.b $02			; VDP Auto increment by $02
     324/     35E : 11                  		dc.b (%01<<4)|%01		; Layer size: V32 H64
     325/     35F : 00                  		dc.b $00
     326/     360 : 00                  		dc.b $00
     327/     361 :                     		align 2
     328/     362 :                     
     329/     362 :                     ; ====================================================================
     330/     362 :                     
     331/     362 :                     MD_Init:
     332/     362 : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     333/     36A : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     334/     372 : 33FC 0100 00A1 1100 		move.w	#$100,(z80_bus).l		; Stop Z80
     335/     37A : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     336/     382 :                     .wait:
     337/     382 : 0839 0000 00A1 1100 		btst	#0,(z80_bus).l			; Wait bus
     338/     38A : 66F6                		bne.s	.wait
     339/     38C :                     
     340/     38C : 33FC 0000 00A1 1200 		move.w	#0,(z80_reset).l		; Reset request
     341/     394 : 4E71                		nop
     342/     396 : 4E71                		nop
     343/     398 : 4E71                		nop
     344/     39A : 33FC 0000 00A1 1100 		move.w	#0,(z80_bus).l			; Start Z80
     345/     3A2 : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     346/     3AA :                     		
     347/     3AA : 6000 013A           		bra	emuStart
     348/     3AE :                     
     349/     3AE :                     ; ====================================================================
     350/     3AE :                     ; ----------------------------------------------------------------
     351/     3AE :                     ; VBlank
     352/     3AE :                     ; ----------------------------------------------------------------
     353/     3AE :                     
     354/     3AE :                     MD_Vint:
     355/     3AE : 48E7 FFFE           		movem.l	d0-d7/a0-a6,-(sp)
     356/     3B2 :                     
     357/     3B2 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     358/     3B8 : 2D7C 7800 0002 0004 		move.l	#$78000002,4(a6)
     359/     3C0 : 2CAC 005E           		move.l	vdpScrlX(a4),(a6)
     360/     3C4 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     361/     3CC : 2CAC 0062           		move.l	vdpScrlY(a4),(a6)
     362/     3D0 : 2D7C 9401 9318 0004 		move.l	#$94019318,4(a6)
     363/     3D8 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     364/     3E0 : 2D7C 96C0 9573 0004 		move.l	#$96009500+(((RAM_Fami_Emu+vdpSprData)<<7)&$FF0000)|(((RAM_Fami_Emu+vdpSprData)>>1)&$FF),4(a6)
     365/     3E8 : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+vdpSprData)>>17)&$7F),4(a6)
     366/     3EE : 3D7C 7C00 0004      		move.w	#$7C00,4(a6)
     367/     3F4 : 3F3C 0082           		move.w	#$0002|$80,-(sp)
     368/     3F8 : 0839 0000 00A1 1100 .wait:		btst	#0,(z80_bus).l
     369/     400 : 66F6                		bne.s	.wait
     370/     402 : 3D5F 0004           		move.w	(sp)+,4(a6)
     371/     406 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     372/     40E : 2D7C 9400 9340 0004 		move.l	#$94009340,4(a6)
     373/     416 : 2D7C 96C0 9533 0004 		move.l	#$96009500+(((RAM_Fami_Emu+vdpPalette)<<7)&$FF0000)|(((RAM_Fami_Emu+vdpPalette)>>1)&$FF),4(a6)
     374/     41E : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+vdpPalette)>>17)&$7F),4(a6)
     375/     424 : 3D7C C000 0004      		move.w	#$C000,4(a6)
     376/     42A : 3F3C 0080           		move.w	#$0000|$80,-(sp)
     377/     42E : 0839 0000 00A1 1100 .wait2:		btst	#0,(z80_bus).l
     378/     436 : 66F6                		bne.s	.wait2
     379/     438 : 3D5F 0004           		move.w	(sp)+,4(a6)
     380/     43C :                     
     381/     43C : 426C 0058           		clr.w	vdpHintSp0(a4)
     382/     440 : 397C 0001 005A      		move.w	#1,FamiMdVint(a4)
     383/     446 : 397C 0001 005C      		move.w	#1,FamiPPUVint(a4)
     384/     44C : 4CDF 7FFF           		movem.l	(sp)+,d0-d7/a0-a6
     385/     450 : 4E73                		rte
     386/     452 :                     
     387/     452 :                     ; ====================================================================
     388/     452 :                     ; ----------------------------------------------------------------
     389/     452 :                     ; HBlank
     390/     452 :                     ; ----------------------------------------------------------------
     391/     452 :                     
     392/     452 :                     MD_Hint:
     393/     452 :                     ; 		move.w	#$2700,sr
     394/     452 :                     ; 		move.w	#$8ADF,4(a6)
     395/     452 :                     ; 		move.w	#1,vdpHintSp0(a4)
     396/     452 : 4E73                		rte
     397/     454 :                     
     398/     454 :                     ; ====================================================================
     399/     454 :                     ; ----------------------------------------------------------------
     400/     454 :                     ; Load ROM
     401/     454 :                     ; ----------------------------------------------------------------
     402/     454 :                     
     403/     454 :                     Fami_LoadRom:
     404/     454 : 2010                		move.l	(a0),d0		; Read and Load	Fami ROM
     405/     456 : 0C80 4E45 531A      		cmpi.l	#$4E45531A,d0
     406/     45C : 66FE                		bne.s	*
     407/     45E :                     
     408/     45E : 4BF9 FFFF 9000      		lea	(RAM_Fami_RAM).l,a5
     409/     464 : 7000                		moveq	#0,d0
     410/     466 : 323C 01FF           		move.w	#$7FF/4,d1
     411/     46A :                     .clrram:
     412/     46A : 2AC0                		move.l	d0,(a5)+
     413/     46C : 51C9 FFFC           		dbf	d1,.clrram
     414/     470 : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     415/     476 : 7000                		moveq	#0,d0
     416/     478 : 323C 1000           		move.w	#$4000/4,d1
     417/     47C :                     .clrvram:
     418/     47C : 2AC0                		move.l	d0,(a5)+
     419/     47E : 51C9 FFFC           		dbf	d1,.clrvram
     420/     482 : 4DF9 00C0 0000      		lea 	($C00000),a6
     421/     488 : 6100 FE2C           		bsr	Fami_InitVideo
     422/     48C :                     
     423/     48C : 47F9 FFFF 8000      		lea	(RAM_Fami_Emu).l,a3
     424/     492 : 7E00                		moveq	#0,d7			; PRG-ROM copy
     425/     494 : 1E28 0004           		move.b	4(a0),d7
     426/     498 : 6100 1C08           		bsr	romGrabPrg
     427/     49C : 1E28 0006           		move.b	6(a0),d7		; PPU mirroring
     428/     4A0 : 1C28 0007           		move.b	7(a0),d6
     429/     4A4 : CE7C 00F0           		and.w	#%11110000,d7
     430/     4A8 : CC7C 00F0           		and.w	#%11110000,d6
     431/     4AC : E84F                		lsr.w	#4,d7
     432/     4AE : 8E46                		or.w	d6,d7
     433/     4B0 : 3747 0032           		move.w	d7,cpuMapper(a3)
     434/     4B4 :                     	
     435/     4B4 :                     	; Mirror check
     436/     4B4 : 3E3C 0000           		move.w	#0,d7			; 0 - horizontal
     437/     4B8 : 0828 0000 0006      		btst	#0,6(a0)		; PPU mirroring
     438/     4BE : 6704                		beq.s	loc_9F4
     439/     4C0 : 3E3C 0001           		move.w	#1,d7			; 1 - vertical
     440/     4C4 :                     loc_9F4:
     441/     4C4 : 3747 0030           		move.w	d7,ppuMirror(a3)
     442/     4C8 :                     		
     443/     4C8 :                     	; COPY CHR-ROM TO RAM
     444/     4C8 : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     445/     4CE : 274C 0004           		move.l	a4,emuChrRom(a3)
     446/     4D2 : 2E3C 0000 07FF      		move.l	#$7FF,d7
     447/     4D8 :                     loc_A10:
     448/     4D8 : 2ADC                		move.l	(a4)+,(a5)+
     449/     4DA : 51CF FFFC           		dbf	d7,loc_A10
     450/     4DE : D0FC 0010           		adda	#$10,a0
     451/     4E2 : 2688                		move.l	a0,emuPrgRom(a3)
     452/     4E4 : 4E75                		rts
     453/     4E6 :                     
     454/     4E6 :                     ; ====================================================================
     455/     4E6 :                     ; ----------------------------------------------------------------
     456/     4E6 :                     ; Emulator start
     457/     4E6 :                     ; ----------------------------------------------------------------
     458/     4E6 :                     
     459/     4E6 :                     emuStart:
     460/     4E6 : 41F8 8000           		lea 	($FFFF8000),a0
     461/     4EA : 323C 0BFF           		move.w	#$2FFF/4,d1
     462/     4EE : 7000                		moveq	#0,d0
     463/     4F0 :                     .clrram:
     464/     4F0 : 20C0                		move.l	d0,(a0)+
     465/     4F2 : 51C9 FFFC           		dbf	d1,.clrram
     466/     4F6 :                     
     467/     4F6 : 41F9 0000 8000      		lea	(ROM_FILE).l,a0
     468/     4FC : 6100 FF56           		bsr	Fami_LoadRom
     469/     500 :                     		
     470/     500 : 4DF9 00C0 0000      		lea	($C00000).l,a6
     471/     506 : 49F8 8000           		lea 	(RAM_Fami_Emu),a4
     472/     50A : 47F8 A000           		lea	(RAM_Fami_PPU).w,a3
     473/     50E : 45F8 9000           		lea	(RAM_Fami_RAM).w,a2
     474/     512 : 6100 1BD6           		bsr	Nemul_LoadChr
     475/     516 : 43F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a1	; PRG base
     476/     51C : 2049                		movea.l	a1,a0
     477/     51E : 303C 7FFC           		move.w	#cpuEntry,d0		; go to Entry
     478/     522 : D0C0                		add.w	d0,a0
     479/     524 : 1028 0001           		move.b	1(a0),d0
     480/     528 : E148                		lsl.w	#8,d0
     481/     52A : 1010                		move.b	(a0),d0
     482/     52C : C07C 7FFF           		and.w	#$7FFF,d0
     483/     530 : 2049                		movea.l	a1,a0
     484/     532 : D0C0                		adda	d0,a0
     485/     534 : 397C 8004 002C      		move.w	#$8004,vdpReg00(a4)
     486/     53A : 397C 8174 002E      		move.w	#$8174,vdpReg01(a4)
     487/     540 : 33FC 4EF9 FFFF 8FF0 		move.w	#$4EF9,(RAM_EmuLoop).l
     488/     548 : 23FC 0000 055E FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
     489/     552 :                     
     490/     552 : 7000                		moveq	#0,d0
     491/     554 : 7200                		moveq	#0,d1
     492/     556 : 7400                		moveq	#0,d2
     493/     558 : 263C 0100 2000      		move.l	#$01002000,d3
     494/     55E :                     
     495/     55E :                     ; --------------------------------------------------------
     496/     55E :                     ; a0 - Fami CPU current PC
     497/     55E :                     ; a1 - Fami PRG address
     498/     55E :                     ; a2 - Fami RAM address (for zero addressing)
     499/     55E :                     ; a3 - Fami PPU Buffer
     500/     55E :                     ; a4 - Fami EMU Buffer
     501/     55E :                     ; a5 - Used on temporal tasks
     502/     55E :                     ; a6 - VDP data point
     503/     55E :                     ; 
     504/     55E :                     ; d0 - A register
     505/     55E :                     ; d1 - X register
     506/     55E :                     ; d2 - Y register
     507/     55E :                     ; d3 - Fami STACK Point | MD current sr
     508/     55E :                     ; d4 - free
     509/     55E :                     ; d5 - free
     510/     55E :                     ; d6 - free
     511/     55E :                     ; d7 - emu temporal input/output
     512/     55E :                     ; --------------------------------------------------------
     513/     55E :                     
     514/     55E :                     ; ------------------------------------------------
     515/     55E :                     ; Main Loop
     516/     55E :                     ; ------------------------------------------------
     517/     55E :                     
     518/     55E :                     emuLoop:
     519/     55E : 4A6C 005A           		tst.w	FamiMdVint(a4)
     520/     562 : 660E                		bne.s	famiVInt
     521/     564 :                     emuVint:
     522/     564 : 4244                		clr.w	d4
     523/     566 : 1818                		move.b	(a0)+,d4
     524/     568 : D844                		add.w	d4,d4
     525/     56A : 3C3B 4054           		move.w	mosCpu(pc,d4.w),d6
     526/     56E : 4EFB 6050           		jmp	mosCpu(pc,d6.w)
     527/     572 :                     
     528/     572 :                     ; ------------------------------------------------
     529/     572 :                     ; VBlank
     530/     572 :                     ; ------------------------------------------------
     531/     572 :                     
     532/     572 :                     famiVInt:
     533/     572 : 426C 005A           		clr.w	FamiMdVint(a4)
     534/     576 : 397C 0080 0056      		move.w	#$80,ppuStatus(a4)
     535/     57C : 4A6C 0034           		tst.w	cpuFamiVint(a4)
     536/     580 : 66E2                		bne.s	emuVint
     537/     582 : 4A6C 0054           		tst.w	ppuNmiFlag(a4)
     538/     586 : 67DC                		beq.s	emuVint
     539/     588 :                     
     540/     588 :                     ; ------------------------------------------------
     541/     588 :                     doVint:
     542/     588 : 23FC 0000 0564 FFFF 		move.l	#emuVint,(RAM_EmuLoop+2).l
                    8FF2                
     543/     592 : 397C 0001 0034      		move.w	#1,cpuFamiVint(a4)
     544/     598 :                     
     545/     598 :                     ; 		movem.l	d7/a5,famiVintSave(a4)
     546/     598 :                     ; 		move.w	d3,d7
     547/     598 :                     ; 		swap	d3
     548/     598 :                     ; 		move.l	a0,d6
     549/     598 :                     ; 		or.w	#$8000,d6
     550/     598 :                     ; 		move.w	d6,d5
     551/     598 :                     ; 		lsr.w	#8,d5
     552/     598 :                     ; 		subq.w	#1,d3
     553/     598 :                     ; 		move.b	d6,(a2,d3.w)
     554/     598 :                     ; 		subq.w	#1,d3		
     555/     598 :                     ; 		move.b	d5,(a2,d3.w)
     556/     598 :                     ; 		subq.w	#1,d3
     557/     598 :                     ; 		move.b	d7,(a2,d3.w)
     558/     598 :                     ; 		swap	d3
     559/     598 :                     
     560/     598 : 48EC 2100 0008      		movem.l	a0/a5,famiVintSave(a4)
     561/     59E : 3943 0028           		move.w	d3,famiVintSave2(a4)
     562/     5A2 : 41F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a0	; PRG base
     563/     5A8 : 3C3C 7FFA           		move.w	#cpuNMI,d6		; go to NMI
     564/     5AC : D0C6                		add.w	d6,a0
     565/     5AE : 1C28 0001           		move.b	1(a0),d6
     566/     5B2 : E14E                		lsl.w	#8,d6
     567/     5B4 : 1C10                		move.b	(a0),d6
     568/     5B6 : CC7C 7FFF           		and.w	#$7FFF,d6
     569/     5BA : 2049                		movea.l	a1,a0
     570/     5BC : D0C6                		add.w	d6,a0
     571/     5BE : 60A4                		bra	emuVint
     572/     5C0 :                     		
     573/     5C0 :                     ; ----------------------------------------------------------------
     574/     5C0 : 0578                mosCpu:		dc.w mos_BRK-mosCpu	; $00
     575/     5C2 : 0EC4                		dc.w loc_1A12-mosCpu
     576/     5C4 : 0200                		dc.w mos_Null-mosCpu
     577/     5C6 : 0200                		dc.w mos_Null-mosCpu
     578/     5C8 : 0200                		dc.w mos_Null-mosCpu
     579/     5CA : 0E1E                		dc.w loc_1970-mosCpu
     580/     5CC : 0430                		dc.w loc_1042-mosCpu
     581/     5CE : 0200                		dc.w mos_Null-mosCpu
     582/     5D0 : 0F34                		dc.w loc_1A78-mosCpu	; $08 - PHP
     583/     5D2 : 0E08                		dc.w loc_195C-mosCpu	; $09 - ORA #$xx
     584/     5D4 : 041C                		dc.w loc_1030-mosCpu
     585/     5D6 : 0200                		dc.w mos_Null-mosCpu
     586/     5D8 : 0200                		dc.w mos_Null-mosCpu
     587/     5DA : 0E58                		dc.w loc_19A6-mosCpu
     588/     5DC : 0472                		dc.w loc_1080-mosCpu
     589/     5DE : 0200                		dc.w mos_Null-mosCpu
     590/     5E0 : 0568                		dc.w loc_1166-mosCpu	; $10
     591/     5E2 : 0EF2                		dc.w loc_1A3C-mosCpu
     592/     5E4 : 0200                		dc.w mos_Null-mosCpu
     593/     5E6 : 0200                		dc.w mos_Null-mosCpu
     594/     5E8 : 0200                		dc.w mos_Null-mosCpu
     595/     5EA : 0E3A                		dc.w loc_198A-mosCpu
     596/     5EC : 0450                		dc.w loc_1060-mosCpu
     597/     5EE : 0200                		dc.w mos_Null-mosCpu
     598/     5F0 : 05BC                		dc.w loc_11AA-mosCpu	; $18
     599/     5F2 : 0E9E                		dc.w loc_19EC-mosCpu
     600/     5F4 : 0200                		dc.w mos_Null-mosCpu
     601/     5F6 : 0200                		dc.w mos_Null-mosCpu
     602/     5F8 : 0200                		dc.w mos_Null-mosCpu
     603/     5FA : 0E78                		dc.w loc_19C6-mosCpu
     604/     5FC : 0496                		dc.w loc_10A2-mosCpu
     605/     5FE : 0200                		dc.w mos_Null-mosCpu
     606/     600 : 0AF6                		dc.w loc_167C-mosCpu	; $20
     607/     602 : 03BC                		dc.w loc_FD8-mosCpu
     608/     604 : 0200                		dc.w mos_Null-mosCpu
     609/     606 : 0200                		dc.w mos_Null-mosCpu
     610/     608 : 04EC                		dc.w loc_10F0-mosCpu
     611/     60A : 0316                		dc.w loc_F36-mosCpu
     612/     60C : 0F92                		dc.w loc_1ACA-mosCpu
     613/     60E : 0200                		dc.w mos_Null-mosCpu
     614/     610 : 0F68                		dc.w loc_1AA6-mosCpu	; $28 - PLP
     615/     612 : 0300                		dc.w loc_F22-mosCpu
     616/     614 : 0F7C                		dc.w loc_1AB6-mosCpu
     617/     616 : 0200                		dc.w mos_Null-mosCpu
     618/     618 : 0518                		dc.w loc_111A-mosCpu
     619/     61A : 0350                		dc.w loc_F6C-mosCpu
     620/     61C : 0FD8                		dc.w loc_1B0C-mosCpu
     621/     61E : 0200                		dc.w mos_Null-mosCpu
     622/     620 : 0548                		dc.w loc_114A-mosCpu	; $30
     623/     622 : 03EA                		dc.w loc_1002-mosCpu
     624/     624 : 0200                		dc.w mos_Null-mosCpu
     625/     626 : 0200                		dc.w mos_Null-mosCpu
     626/     628 : 0200                		dc.w mos_Null-mosCpu
     627/     62A : 0332                		dc.w loc_F50-mosCpu
     628/     62C : 0FB4                		dc.w loc_1AEA-mosCpu
     629/     62E : 0200                		dc.w mos_Null-mosCpu
     630/     630 : 1288                		dc.w loc_1D80-mosCpu	; $38
     631/     632 : 0396                		dc.w loc_FB2-mosCpu
     632/     634 : 0200                		dc.w mos_Null-mosCpu
     633/     636 : 0200                		dc.w mos_Null-mosCpu
     634/     638 : 0200                		dc.w mos_Null-mosCpu
     635/     63A : 0370                		dc.w loc_F8C-mosCpu
     636/     63C : 0FFE                		dc.w loc_1B30-mosCpu
     637/     63E : 0200                		dc.w mos_Null-mosCpu
     638/     640 : 10D0                		dc.w loc_1BF6-mosCpu	; $40 - RTI
     639/     642 : 09A8                		dc.w loc_1566-mosCpu
     640/     644 : 0200                		dc.w mos_Null-mosCpu
     641/     646 : 0200                		dc.w mos_Null-mosCpu
     642/     648 : 0200                		dc.w mos_Null-mosCpu
     643/     64A : 0902                		dc.w loc_14C4-mosCpu
     644/     64C : 0D74                		dc.w loc_18D2-mosCpu
     645/     64E : 0200                		dc.w mos_Null-mosCpu
     646/     650 : 0F24                		dc.w loc_1A6A-mosCpu	; $48
     647/     652 : 08EC                		dc.w loc_14B0-mosCpu
     648/     654 : 0D60                		dc.w loc_18C0-mosCpu
     649/     656 : 0200                		dc.w mos_Null-mosCpu
     650/     658 : 0AA4                		dc.w loc_164E-mosCpu	; $4C - JMP $xxxx
     651/     65A : 093C                		dc.w loc_14FA-mosCpu
     652/     65C : 0DB6                		dc.w loc_1910-mosCpu
     653/     65E : 0200                		dc.w mos_Null-mosCpu
     654/     660 : 059C                		dc.w loc_118E-mosCpu	; $50
     655/     662 : 09D6                		dc.w loc_1590-mosCpu
     656/     664 : 0200                		dc.w mos_Null-mosCpu
     657/     666 : 0200                		dc.w mos_Null-mosCpu
     658/     668 : 0200                		dc.w mos_Null-mosCpu
     659/     66A : 091E                		dc.w loc_14DE-mosCpu
     660/     66C : 0D94                		dc.w loc_18F0-mosCpu
     661/     66E : 0200                		dc.w mos_Null-mosCpu
     662/     670 : 05D2                		dc.w loc_11BC-mosCpu	; $58
     663/     672 : 0982                		dc.w loc_1540-mosCpu
     664/     674 : 0200                		dc.w mos_Null-mosCpu
     665/     676 : 0200                		dc.w mos_Null-mosCpu
     666/     678 : 0200                		dc.w mos_Null-mosCpu
     667/     67A : 095C                		dc.w loc_151A-mosCpu
     668/     67C : 0DDA                		dc.w loc_1932-mosCpu
     669/     67E : 0200                		dc.w mos_Null-mosCpu
     670/     680 : 1124                		dc.w loc_1C32-mosCpu	; $60 - RTS
     671/     682 : 02A8                		dc.w loc_ED2-mosCpu
     672/     684 : 0200                		dc.w mos_Null-mosCpu
     673/     686 : 0200                		dc.w mos_Null-mosCpu
     674/     688 : 0200                		dc.w mos_Null-mosCpu
     675/     68A : 0216                		dc.w loc_E44-mosCpu
     676/     68C : 103C                		dc.w loc_1B6A-mosCpu
     677/     68E : 0200                		dc.w mos_Null-mosCpu
     678/     690 : 0F48                		dc.w loc_1A88-mosCpu	; $68
     679/     692 : 0204                		dc.w loc_E34-mosCpu
     680/     694 : 1026                		dc.w loc_1B56-mosCpu
     681/     696 : 0200                		dc.w mos_Null-mosCpu
     682/     698 : 0ABE                		dc.w loc_1660-mosCpu	; $6C - JMP ($xxxx)
     683/     69A : 0248                		dc.w loc_E72-mosCpu
     684/     69C : 1082                		dc.w loc_1BAC-mosCpu
     685/     69E : 0200                		dc.w mos_Null-mosCpu
     686/     6A0 : 05AC                		dc.w loc_119C-mosCpu	; $70
     687/     6A2 : 02D2                		dc.w loc_EF8-mosCpu
     688/     6A4 : 0200                		dc.w mos_Null-mosCpu
     689/     6A6 : 0200                		dc.w mos_Null-mosCpu
     690/     6A8 : 0200                		dc.w mos_Null-mosCpu
     691/     6AA : 022E                		dc.w loc_E5A-mosCpu
     692/     6AC : 105E                		dc.w loc_1B8A-mosCpu
     693/     6AE : 0200                		dc.w mos_Null-mosCpu
     694/     6B0 : 129E                		dc.w loc_1D92-mosCpu	; $78
     695/     6B2 : 0286                		dc.w loc_EB0-mosCpu
     696/     6B4 : 0200                		dc.w mos_Null-mosCpu
     697/     6B6 : 0200                		dc.w mos_Null-mosCpu
     698/     6B8 : 0200                		dc.w mos_Null-mosCpu
     699/     6BA : 0264                		dc.w loc_E8E-mosCpu
     700/     6BC : 10A8                		dc.w loc_1BD0-mosCpu
     701/     6BE : 0200                		dc.w mos_Null-mosCpu
     702/     6C0 : 0200                		dc.w mos_Null-mosCpu	; $80
     703/     6C2 : 1304                		dc.w loc_1DF6-mosCpu	; $81 - STA (oper,X)
     704/     6C4 : 0200                		dc.w mos_Null-mosCpu
     705/     6C6 : 0200                		dc.w mos_Null-mosCpu
     706/     6C8 : 1372                		dc.w loc_1E5C-mosCpu
     707/     6CA : 12AA                		dc.w loc_1D9C-mosCpu
     708/     6CC : 1340                		dc.w loc_1E2E-mosCpu
     709/     6CE : 0200                		dc.w mos_Null-mosCpu
     710/     6D0 : 08D8                		dc.w loc_149E-mosCpu	; $88 - DEY
     711/     6D2 : 0200                		dc.w mos_Null-mosCpu
     712/     6D4 : 13E4                		dc.w loc_1EC4-mosCpu
     713/     6D6 : 0200                		dc.w mos_Null-mosCpu
     714/     6D8 : 1390                		dc.w loc_1E76-mosCpu
     715/     6DA : 12C8                		dc.w loc_1DB6-mosCpu
     716/     6DC : 135E                		dc.w loc_1E48-mosCpu
     717/     6DE : 0200                		dc.w mos_Null-mosCpu
     718/     6E0 : 04BC                		dc.w loc_10C6-mosCpu	; $90
     719/     6E2 : 1320                		dc.w loc_1E10-mosCpu
     720/     6E4 : 0200                		dc.w mos_Null-mosCpu
     721/     6E6 : 0200                		dc.w mos_Null-mosCpu
     722/     6E8 : 1380                		dc.w loc_1E68-mosCpu
     723/     6EA : 12B8                		dc.w loc_1DA8-mosCpu
     724/     6EC : 134E                		dc.w loc_1E3A-mosCpu
     725/     6EE : 0200                		dc.w mos_Null-mosCpu
     726/     6F0 : 1404                		dc.w loc_1EE0-mosCpu	; $98
     727/     6F2 : 12F0                		dc.w loc_1DE0-mosCpu
     728/     6F4 : 13F8                		dc.w loc_1Ed3-mosCpu	; $9A
     729/     6F6 : 0200                		dc.w mos_Null-mosCpu
     730/     6F8 : 0200                		dc.w mos_Null-mosCpu
     731/     6FA : 12DC                		dc.w loc_1DCA-mosCpu
     732/     6FC : 0200                		dc.w mos_Null-mosCpu
     733/     6FE : 0200                		dc.w mos_Null-mosCpu
     734/     700 : 0CD0                		dc.w loc_1836-mosCpu	; $A0
     735/     702 : 0BE0                		dc.w loc_1754-mosCpu	; $A1 - LDA (oper,X)
     736/     704 : 0C40                		dc.w loc_17AC-mosCpu
     737/     706 : 0200                		dc.w mos_Null-mosCpu
     738/     708 : 0CE4                		dc.w loc_1848-mosCpu
     739/     70A : 0B3E                		dc.w loc_16B6-mosCpu
     740/     70C : 0C54                		dc.w loc_17BE-mosCpu
     741/     70E : 0200                		dc.w mos_Null-mosCpu
     742/     710 : 13B8                		dc.w loc_1E9C-mosCpu	; $A8
     743/     712 : 0B2A                		dc.w loc_16A4-mosCpu	; $A9 - LDA #$xx
     744/     714 : 13A4                		dc.w loc_1E8A-mosCpu
     745/     716 : 0200                		dc.w mos_Null-mosCpu
     746/     718 : 0D1A                		dc.w loc_187A-mosCpu
     747/     71A : 0B74                		dc.w loc_16E8-mosCpu	; $AD
     748/     71C : 0C8A                		dc.w loc_17F0-mosCpu
     749/     71E : 0200                		dc.w mos_Null-mosCpu
     750/     720 : 04CC                		dc.w loc_10D4-mosCpu	; $B0
     751/     722 : 0C0E                		dc.w loc_177E-mosCpu	; $B1 - LDA (oper),Y
     752/     724 : 0200                		dc.w mos_Null-mosCpu
     753/     726 : 0200                		dc.w mos_Null-mosCpu
     754/     728 : 0CFE                		dc.w loc_1860-mosCpu
     755/     72A : 0B58                		dc.w loc_16CE-mosCpu
     756/     72C : 0C6E                		dc.w loc_17d3-mosCpu
     757/     72E : 0200                		dc.w mos_Null-mosCpu
     758/     730 : 05DE                		dc.w loc_11C6-mosCpu	; $B8
     759/     732 : 0BBA                		dc.w loc_172E-mosCpu
     760/     734 : 13CC                		dc.w loc_1EAE-mosCpu	; $BA - TSX
     761/     736 : 0200                		dc.w mos_Null-mosCpu
     762/     738 : 0D3A                		dc.w loc_189A-mosCpu
     763/     73A : 0B94                		dc.w loc_1708-mosCpu
     764/     73C : 0CAA                		dc.w loc_1810-mosCpu
     765/     73E : 0200                		dc.w mos_Null-mosCpu
     766/     740 : 07DA                		dc.w loc_13AE-mosCpu	; $C0
     767/     742 : 06EC                		dc.w loc_12CC-mosCpu
     768/     744 : 0200                		dc.w mos_Null-mosCpu
     769/     746 : 0200                		dc.w mos_Null-mosCpu
     770/     748 : 07FC                		dc.w loc_13CE-mosCpu
     771/     74A : 060A                		dc.w loc_11EE-mosCpu
     772/     74C : 0850                		dc.w loc_1420-mosCpu
     773/     74E : 0200                		dc.w mos_Null-mosCpu
     774/     750 : 0A90                		dc.w loc_163C-mosCpu	; $C8 - INY
     775/     752 : 05E8                		dc.w loc_11CE-mosCpu
     776/     754 : 08C4                		dc.w loc_148C-mosCpu
     777/     756 : 0200                		dc.w mos_Null-mosCpu
     778/     758 : 0824                		dc.w loc_13F4-mosCpu
     779/     75A : 065C                		dc.w loc_123C-mosCpu
     780/     75C : 0886                		dc.w loc_1452-mosCpu
     781/     75E : 0200                		dc.w mos_Null-mosCpu
     782/     760 : 0558                		dc.w loc_1158-mosCpu	; $D0 - BNE rel
     783/     762 : 0726                		dc.w loc_1302-mosCpu
     784/     764 : 0200                		dc.w mos_Null-mosCpu
     785/     766 : 0200                		dc.w mos_Null-mosCpu
     786/     768 : 0200                		dc.w mos_Null-mosCpu
     787/     76A : 0632                		dc.w loc_1214-mosCpu
     788/     76C : 086A                		dc.w loc_1438-mosCpu
     789/     76E : 0200                		dc.w mos_Null-mosCpu
     790/     770 : 05C6                		dc.w loc_11B2-mosCpu	; $D8 - CLD
     791/     772 : 06BA                		dc.w loc_129A-mosCpu
     792/     774 : 0200                		dc.w mos_Null-mosCpu
     793/     776 : 0200                		dc.w mos_Null-mosCpu
     794/     778 : 0200                		dc.w mos_Null-mosCpu
     795/     77A : 0688                		dc.w loc_1268-mosCpu
     796/     77C : 08A4                		dc.w loc_146E-mosCpu
     797/     77E : 0200                		dc.w mos_Null-mosCpu
     798/     780 : 0764                		dc.w loc_133C-mosCpu	; $E0
     799/     782 : 1220                		dc.w loc_1D20-mosCpu
     800/     784 : 0200                		dc.w mos_Null-mosCpu
     801/     786 : 0200                		dc.w mos_Null-mosCpu
     802/     788 : 0786                		dc.w loc_135C-mosCpu
     803/     78A : 1166                		dc.w loc_1C6A-mosCpu
     804/     78C : 0A08                		dc.w loc_15BE-mosCpu
     805/     78E : 0200                		dc.w mos_Null-mosCpu
     806/     790 : 0A7C                		dc.w loc_162A-mosCpu	; $E8
     807/     792 : 114C                		dc.w loc_1C52-mosCpu
     808/     794 : 0E00                		dc.w loc_1956-mosCpu
     809/     796 : 0200                		dc.w mos_Null-mosCpu
     810/     798 : 07AE                		dc.w loc_1382-mosCpu
     811/     79A : 11A8                		dc.w loc_1CA8-mosCpu
     812/     79C : 0A3E                		dc.w loc_15F0-mosCpu
     813/     79E : 0200                		dc.w mos_Null-mosCpu
     814/     7A0 : 04DC                		dc.w loc_10E2-mosCpu	; $F0
     815/     7A2 : 1252                		dc.w loc_1D4E-mosCpu
     816/     7A4 : 0200                		dc.w mos_Null-mosCpu
     817/     7A6 : 0200                		dc.w mos_Null-mosCpu
     818/     7A8 : 0200                		dc.w mos_Null-mosCpu
     819/     7AA : 1186                		dc.w loc_1C88-mosCpu
     820/     7AC : 0A22                		dc.w loc_15d3-mosCpu
     821/     7AE : 0200                		dc.w mos_Null-mosCpu
     822/     7B0 : 1292                		dc.w loc_1D88-mosCpu	; $F8
     823/     7B2 : 11F6                		dc.w loc_1CF6-mosCpu
     824/     7B4 : 0200                		dc.w mos_Null-mosCpu
     825/     7B6 : 0200                		dc.w mos_Null-mosCpu
     826/     7B8 : 0200                		dc.w mos_Null-mosCpu
     827/     7BA : 11CC                		dc.w loc_1CCC-mosCpu
     828/     7BC : 0A5C                		dc.w loc_160C-mosCpu
     829/     7BE : 0200                		dc.w mos_Null-mosCpu
     830/     7C0 :                     
     831/     7C0 :                     ; ----------------------------------------------------------------
     832/     7C0 :                     
     833/     7C0 :                     mos_Null:
     834/     7C0 : E24C                		lsr.w	#1,d4
     835/     7C2 : 60FE                		bra.s	*
     836/     7C4 :                     
     837/     7C4 :                     ; ----------------------------------------------------------------
     838/     7C4 :                     
     839/     7C4 :                     loc_E34:
     840/     7C4 : 1E18                		move.b	(a0)+,d7
     841/     7C6 : 0003 0004           		ori.b	#4,d3
     842/     7CA : 46C3                		move	d3,sr
     843/     7CC : D107                		addx.b	d7,d0
     844/     7CE : 40C3                		move	sr,d3
     845/     7D0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     846/     7D6 :                     ; ----------------------------------------------------------------
     847/     7D6 :                     
     848/     7D6 :                     loc_E44:
     849/     7D6 : 4246                		clr.w	d6
     850/     7D8 : 1C18                		move.b	(a0)+,d6
     851/     7DA : 1E32 6000           		move.b	(a2,d6.w),d7
     852/     7DE : 0003 0004           		ori.b	#4,d3
     853/     7E2 : 46C3                		move	d3,sr
     854/     7E4 : D107                		addx.b	d7,d0
     855/     7E6 : 40C3                		move	sr,d3
     856/     7E8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     857/     7EE :                     ; ----------------------------------------------------------------
     858/     7EE :                     
     859/     7EE :                     loc_E5A:
     860/     7EE : 4246                		clr.w	d6
     861/     7F0 : 1C18                		move.b	(a0)+,d6
     862/     7F2 : DC01                		add.b	d1,d6
     863/     7F4 : 1E32 6000           		move.b	(a2,d6.w),d7
     864/     7F8 : 0003 0004           		ori.b	#4,d3
     865/     7FC : 46C3                		move	d3,sr
     866/     7FE : D107                		addx.b	d7,d0
     867/     800 : 40C3                		move	sr,d3
     868/     802 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     869/     808 :                     ; ----------------------------------------------------------------
     870/     808 :                     
     871/     808 :                     loc_E72:				; DATA XREF: ROM:00000BE6o
     872/     808 : 4244                		clr.w	d4
     873/     80A : 1818                		move.b	(a0)+,d4
     874/     80C : 4246                		clr.w	d6
     875/     80E : 1C18                		move.b	(a0)+,d6
     876/     810 : 6100 11C6           		bsr	addr_Read
     877/     814 : 0003 0004           		ori.b	#4,d3
     878/     818 : 46C3                		move	d3,sr
     879/     81A : D107                		addx.b	d7,d0
     880/     81C : 40C3                		move	sr,d3
     881/     81E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     882/     824 :                     ; ----------------------------------------------------------------
     883/     824 :                     
     884/     824 :                     loc_E8E:				; DATA XREF: ROM:00000C26o
     885/     824 : 4244                		clr.w	d4
     886/     826 : 1818                		move.b	(a0)+,d4
     887/     828 : 4246                		clr.w	d6
     888/     82A : 1C18                		move.b	(a0)+,d6
     889/     82C : 4207                		clr.b	d7
     890/     82E : D801                		add.b	d1,d4
     891/     830 : DD07                		addx.b	d7,d6
     892/     832 : 6100 11A4           		bsr	addr_Read
     893/     836 : 0003 0004           		ori.b	#4,d3
     894/     83A : 46C3                		move	d3,sr
     895/     83C : D107                		addx.b	d7,d0
     896/     83E : 40C3                		move	sr,d3
     897/     840 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     898/     846 :                     ; ----------------------------------------------------------------
     899/     846 :                     
     900/     846 :                     loc_EB0:				; DATA XREF: ROM:00000C16o
     901/     846 : 4244                		clr.w	d4
     902/     848 : 1818                		move.b	(a0)+,d4
     903/     84A : 4246                		clr.w	d6
     904/     84C : 1C18                		move.b	(a0)+,d6
     905/     84E : 4207                		clr.b	d7
     906/     850 : D802                		add.b	d2,d4
     907/     852 : DD07                		addx.b	d7,d6
     908/     854 : 6100 1182           		bsr	addr_Read
     909/     858 : 0003 0004           		ori.b	#4,d3
     910/     85C : 46C3                		move	d3,sr
     911/     85E : D107                		addx.b	d7,d0
     912/     860 : 40C3                		move	sr,d3
     913/     862 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     914/     868 :                     ; ----------------------------------------------------------------
     915/     868 :                     
     916/     868 :                     loc_ED2:
     917/     868 : 4244                		clr.w	d4
     918/     86A : 4245                		clr.w	d5
     919/     86C : 4246                		clr.w	d6
     920/     86E : 1A18                		move.b	(a0)+,d5
     921/     870 : DA01                		add.b	d1,d5
     922/     872 : 1832 5000           		move.b	(a2,d5.w),d4
     923/     876 : DA3C 0001           		add.b	#1,d5
     924/     87A : 1C32 5000           		move.b	(a2,d5.w),d6
     925/     87E : 6100 1158           		bsr	addr_Read
     926/     882 : 0003 0004           		ori.b	#4,d3
     927/     886 : 46C3                		move	d3,sr
     928/     888 : D107                		addx.b	d7,d0
     929/     88A : 40C3                		move	sr,d3
     930/     88C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     931/     892 :                     ; ----------------------------------------------------------------
     932/     892 :                     
     933/     892 :                     loc_EF8:
     934/     892 : 4244                		clr.w	d4
     935/     894 : 4245                		clr.w	d5
     936/     896 : 4246                		clr.w	d6
     937/     898 : 1A18                		move.b	(a0)+,d5
     938/     89A : 1832 5000           		move.b	(a2,d5.w),d4
     939/     89E : DA3C 0001           		add.b	#1,d5
     940/     8A2 : 1C32 5000           		move.b	(a2,d5.w),d6
     941/     8A6 : 4207                		clr.b	d7
     942/     8A8 : D802                		add.b	d2,d4
     943/     8AA : DD07                		addx.b	d7,d6
     944/     8AC : 6100 112A           		bsr	addr_Read
     945/     8B0 : 0003 0004           		ori.b	#4,d3
     946/     8B4 : 46C3                		move	d3,sr
     947/     8B6 : D107                		addx.b	d7,d0
     948/     8B8 : 40C3                		move	sr,d3
     949/     8BA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     950/     8C0 :                     ; ----------------------------------------------------------------
     951/     8C0 :                     
     952/     8C0 :                     loc_F22:				; DATA XREF: ROM:00000Ad3o
     953/     8C0 : 1E18                		move.b	(a0)+,d7
     954/     8C2 : C007                		and.b	d7,d0
     955/     8C4 : 40C5                		move	sr,d5
     956/     8C6 : 0245 000C           		andi.w	#$C,d5
     957/     8CA : 0203 00F3           		andi.b	#$F3,d3
     958/     8CE : 8645                		or.w	d5,d3
     959/     8D0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     960/     8D6 :                     ; ----------------------------------------------------------------
     961/     8D6 :                     
     962/     8D6 :                     loc_F36:				; DATA XREF: ROM:00000AC6o
     963/     8D6 : 4246                		clr.w	d6
     964/     8D8 : 1C18                		move.b	(a0)+,d6
     965/     8DA : 1E32 6000           		move.b	(a2,d6.w),d7
     966/     8DE : C007                		and.b	d7,d0
     967/     8E0 : 40C5                		move	sr,d5
     968/     8E2 : 0245 000C           		andi.w	#$C,d5
     969/     8E6 : 0203 00F3           		andi.b	#$F3,d3
     970/     8EA : 8645                		or.w	d5,d3
     971/     8EC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     972/     8F2 :                     ; ----------------------------------------------------------------
     973/     8F2 :                     
     974/     8F2 :                     loc_F50:				; DATA XREF: ROM:00000B06o
     975/     8F2 : 4246                		clr.w	d6
     976/     8F4 : 1C18                		move.b	(a0)+,d6
     977/     8F6 : DC01                		add.b	d1,d6
     978/     8F8 : 1E32 6000           		move.b	(a2,d6.w),d7
     979/     8FC : C007                		and.b	d7,d0
     980/     8FE : 40C5                		move	sr,d5
     981/     900 : 0245 000C           		andi.w	#$C,d5
     982/     904 : 0203 00F3           		andi.b	#$F3,d3
     983/     908 : 8645                		or.w	d5,d3
     984/     90A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     985/     910 :                     ; ----------------------------------------------------------------
     986/     910 :                     
     987/     910 :                     loc_F6C:
     988/     910 : 4244                		clr.w	d4
     989/     912 : 1818                		move.b	(a0)+,d4
     990/     914 : 4246                		clr.w	d6
     991/     916 : 1C18                		move.b	(a0)+,d6
     992/     918 : 6100 10BE           		bsr	addr_Read
     993/     91C : C007                		and.b	d7,d0
     994/     91E : 40C5                		move	sr,d5
     995/     920 : 0245 000C           		andi.w	#$C,d5
     996/     924 : 0203 00F3           		andi.b	#$F3,d3
     997/     928 : 8645                		or.w	d5,d3
     998/     92A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     999/     930 :                     ; ----------------------------------------------------------------
    1000/     930 :                     
    1001/     930 :                     loc_F8C:
    1002/     930 : 4244                		clr.w	d4
    1003/     932 : 1818                		move.b	(a0)+,d4
    1004/     934 : 4246                		clr.w	d6
    1005/     936 : 1C18                		move.b	(a0)+,d6
    1006/     938 : 4207                		clr.b	d7
    1007/     93A : D801                		add.b	d1,d4
    1008/     93C : DD07                		addx.b	d7,d6
    1009/     93E : 6100 1098           		bsr	addr_Read
    1010/     942 : C007                		and.b	d7,d0
    1011/     944 : 40C5                		move	sr,d5
    1012/     946 : 0245 000C           		andi.w	#$C,d5
    1013/     94A : 0203 00F3           		andi.b	#$F3,d3
    1014/     94E : 8645                		or.w	d5,d3
    1015/     950 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1016/     956 :                     ; ----------------------------------------------------------------
    1017/     956 :                     
    1018/     956 :                     loc_FB2:				; DATA XREF: ROM:00000B16o
    1019/     956 : 4244                		clr.w	d4
    1020/     958 : 1818                		move.b	(a0)+,d4
    1021/     95A : 4246                		clr.w	d6
    1022/     95C : 1C18                		move.b	(a0)+,d6
    1023/     95E : 4207                		clr.b	d7
    1024/     960 : D802                		add.b	d2,d4
    1025/     962 : DD07                		addx.b	d7,d6
    1026/     964 : 6100 1072           		bsr	addr_Read
    1027/     968 : C007                		and.b	d7,d0
    1028/     96A : 40C5                		move	sr,d5
    1029/     96C : 0245 000C           		andi.w	#$C,d5
    1030/     970 : 0203 00F3           		andi.b	#$F3,d3
    1031/     974 : 8645                		or.w	d5,d3
    1032/     976 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1033/     97C :                     ; ----------------------------------------------------------------
    1034/     97C :                     
    1035/     97C :                     loc_FD8:
    1036/     97C : 4244                		clr.w	d4
    1037/     97E : 4245                		clr.w	d5
    1038/     980 : 4246                		clr.w	d6
    1039/     982 : 1A18                		move.b	(a0)+,d5
    1040/     984 : DA01                		add.b	d1,d5
    1041/     986 : 1832 5000           		move.b	(a2,d5.w),d4
    1042/     98A : DA3C 0001           		add.b	#1,d5
    1043/     98E : 1C32 5000           		move.b	(a2,d5.w),d6
    1044/     992 : 6100 1044           		bsr	addr_Read
    1045/     996 : C007                		and.b	d7,d0
    1046/     998 : 40C5                		move	sr,d5
    1047/     99A : 0245 000C           		andi.w	#$C,d5
    1048/     99E : 0203 00F3           		andi.b	#$F3,d3
    1049/     9A2 : 8645                		or.w	d5,d3
    1050/     9A4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1051/     9AA :                     ; ----------------------------------------------------------------
    1052/     9AA :                     
    1053/     9AA :                     loc_1002:
    1054/     9AA : 4244                		clr.w	d4
    1055/     9AC : 4245                		clr.w	d5
    1056/     9AE : 4246                		clr.w	d6
    1057/     9B0 : 1A18                		move.b	(a0)+,d5
    1058/     9B2 : 1832 5000           		move.b	(a2,d5.w),d4
    1059/     9B6 : DA3C 0001           		add.b	#1,d5
    1060/     9BA : 1C32 5000           		move.b	(a2,d5.w),d6
    1061/     9BE : 4207                		clr.b	d7
    1062/     9C0 : D802                		add.b	d2,d4
    1063/     9C2 : DD07                		addx.b	d7,d6
    1064/     9C4 : 6100 1012           		bsr	addr_Read
    1065/     9C8 : C007                		and.b	d7,d0
    1066/     9CA : 40C5                		move	sr,d5
    1067/     9CC : 0245 000C           		andi.w	#$C,d5
    1068/     9D0 : 0203 00F3           		andi.b	#$F3,d3
    1069/     9D4 : 8645                		or.w	d5,d3
    1070/     9D6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1071/     9DC :                     ; ----------------------------------------------------------------
    1072/     9DC :                     
    1073/     9DC :                     loc_1030:
    1074/     9DC : E308                		lsl.b	#1,d0
    1075/     9DE : 40C5                		move	sr,d5
    1076/     9E0 : 0245 001D           		andi.w	#$1D,d5
    1077/     9E4 : 0203 00E2           		andi.b	#$E2,d3
    1078/     9E8 : 8645                		or.w	d5,d3
    1079/     9EA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1080/     9F0 :                     ; ----------------------------------------------------------------
    1081/     9F0 :                     
    1082/     9F0 :                     loc_1042:
    1083/     9F0 : 4246                		clr.w	d6
    1084/     9F2 : 1C18                		move.b	(a0)+,d6
    1085/     9F4 : 1E32 6000           		move.b	(a2,d6.w),d7
    1086/     9F8 : E30F                		lsl.b	#1,d7
    1087/     9FA : 40C5                		move	sr,d5
    1088/     9FC : 0245 001D           		andi.w	#$1D,d5
    1089/     A00 : 0203 00E2           		andi.b	#$E2,d3
    1090/     A04 : 8645                		or.w	d5,d3
    1091/     A06 : 1587 6000           		move.b	d7,(a2,d6.w)
    1092/     A0A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1093/     A10 :                     ; ----------------------------------------------------------------
    1094/     A10 :                     
    1095/     A10 :                     loc_1060:
    1096/     A10 : 4246                		clr.w	d6
    1097/     A12 : 1C18                		move.b	(a0)+,d6
    1098/     A14 : DC01                		add.b	d1,d6
    1099/     A16 : 1E32 6000           		move.b	(a2,d6.w),d7
    1100/     A1A : E30F                		lsl.b	#1,d7
    1101/     A1C : 40C5                		move	sr,d5
    1102/     A1E : 0245 001D           		andi.w	#$1D,d5
    1103/     A22 : 0203 00E2           		andi.b	#$E2,d3
    1104/     A26 : 8645                		or.w	d5,d3
    1105/     A28 : 1587 6000           		move.b	d7,(a2,d6.w)
    1106/     A2C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1107/     A32 :                     ; ----------------------------------------------------------------
    1108/     A32 :                     
    1109/     A32 :                     loc_1080:
    1110/     A32 : 1818                		move.b	(a0)+,d4
    1111/     A34 : 1C18                		move.b	(a0)+,d6
    1112/     A36 : E14E                		lsl.w	#8,d6
    1113/     A38 : 1C04                		move.b	d4,d6
    1114/     A3A : 1E32 6000           		move.b	(a2,d6.w),d7
    1115/     A3E : E30F                		lsl.b	#1,d7
    1116/     A40 : 40C5                		move	sr,d5
    1117/     A42 : 0245 001D           		andi.w	#$1D,d5
    1118/     A46 : 0203 00E2           		andi.b	#$E2,d3
    1119/     A4A : 8645                		or.w	d5,d3
    1120/     A4C : 1587 6000           		move.b	d7,(a2,d6.w)
    1121/     A50 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1122/     A56 :                     ; ----------------------------------------------------------------
    1123/     A56 :                     
    1124/     A56 :                     loc_10A2:				; DATA XREF: ROM:00000AAAo
    1125/     A56 : 1818                		move.b	(a0)+,d4
    1126/     A58 : 1C18                		move.b	(a0)+,d6
    1127/     A5A : E14E                		lsl.w	#8,d6
    1128/     A5C : 1C04                		move.b	d4,d6
    1129/     A5E : DC41                		add.w	d1,d6
    1130/     A60 : 1E32 6000           		move.b	(a2,d6.w),d7
    1131/     A64 : E30F                		lsl.b	#1,d7
    1132/     A66 : 40C5                		move	sr,d5
    1133/     A68 : 0245 001D           		andi.w	#$1D,d5
    1134/     A6C : 0203 00E2           		andi.b	#$E2,d3
    1135/     A70 : 8645                		or.w	d5,d3
    1136/     A72 : 1587 6000           		move.b	d7,(a2,d6.w)
    1137/     A76 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1138/     A7C :                     ; ----------------------------------------------------------------
    1139/     A7C :                     
    1140/     A7C :                     loc_10C6:
    1141/     A7C : 1C18                		move.b	(a0)+,d6
    1142/     A7E : 46C3                		move	d3,sr
    1143/     A80 : 6504                		bcs.s	loc_10D0
    1144/     A82 : 4886                		ext.w	d6
    1145/     A84 : D0C6                		adda.w	d6,a0
    1146/     A86 :                     loc_10D0:
    1147/     A86 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1148/     A8C :                     ; ----------------------------------------------------------------
    1149/     A8C :                     
    1150/     A8C :                     loc_10D4:
    1151/     A8C : 1C18                		move.b	(a0)+,d6
    1152/     A8E : 46C3                		move	d3,sr
    1153/     A90 : 6404                		bcc.s	loc_10DE
    1154/     A92 : 4886                		ext.w	d6
    1155/     A94 : D0C6                		adda.w	d6,a0
    1156/     A96 :                     loc_10DE:
    1157/     A96 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1158/     A9C :                     ; ----------------------------------------------------------------
    1159/     A9C :                     
    1160/     A9C :                     loc_10E2:
    1161/     A9C : 1C18                		move.b	(a0)+,d6
    1162/     A9E : 46C3                		move	d3,sr
    1163/     AA0 : 6604                		bne.s	loc_10EC
    1164/     AA2 : 4886                		ext.w	d6
    1165/     AA4 : D0C6                		adda.w	d6,a0
    1166/     AA6 :                     loc_10EC:
    1167/     AA6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1168/     AAC :                     ; ----------------------------------------------------------------
    1169/     AAC :                     
    1170/     AAC :                     loc_10F0:
    1171/     AAC : 4246                		clr.w	d6
    1172/     AAE : 1C18                		move.b	(a0)+,d6
    1173/     AB0 : 1E32 6000           		move.b	(a2,d6.w),d7
    1174/     AB4 : 1807                		move.b	d7,d4
    1175/     AB6 : 0203 00F1           		andi.b	#$F1,d3
    1176/     ABA : E30F                		lsl.b	#1,d7
    1177/     ABC : 6404                		bcc.s	loc_1106
    1178/     ABE : 0003 0008           		ori.b	#8,d3
    1179/     AC2 :                     loc_1106:
    1180/     AC2 : E30F                		lsl.b	#1,d7
    1181/     AC4 : 6404                		bcc.s	loc_110E
    1182/     AC6 : 0003 0002           		ori.b	#2,d3
    1183/     ACA :                     loc_110E:
    1184/     ACA : C800                		and.b	d0,d4
    1185/     ACC : 6604                		bne.s	loc_1116
    1186/     ACE : 0003 0004           		ori.b	#4,d3
    1187/     AD2 :                     loc_1116:
    1188/     AD2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1189/     AD8 :                     ; ----------------------------------------------------------------
    1190/     AD8 :                     
    1191/     AD8 :                     loc_111A:
    1192/     AD8 : 4244                		clr.w	d4
    1193/     ADA : 1818                		move.b	(a0)+,d4
    1194/     ADC : 4246                		clr.w	d6
    1195/     ADE : 1C18                		move.b	(a0)+,d6
    1196/     AE0 : 6100 0EF6           		bsr	addr_Read
    1197/     AE4 : 1807                		move.b	d7,d4
    1198/     AE6 : 0203 00F1           		andi.b	#$F1,d3
    1199/     AEA : E30F                		lsl.b	#1,d7
    1200/     AEC : 6404                		bcc.s	loc_1136
    1201/     AEE : 0003 0008           		ori.b	#8,d3
    1202/     AF2 :                     
    1203/     AF2 :                     loc_1136:
    1204/     AF2 : E30F                		lsl.b	#1,d7
    1205/     AF4 : 6404                		bcc.s	loc_113E
    1206/     AF6 : 0003 0002           		ori.b	#2,d3
    1207/     AFA :                     
    1208/     AFA :                     loc_113E:
    1209/     AFA : C800                		and.b	d0,d4
    1210/     AFC : 6604                		bne.s	loc_1146
    1211/     AFE : 0003 0004           		ori.b	#4,d3
    1212/     B02 :                     
    1213/     B02 :                     loc_1146:
    1214/     B02 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1215/     B08 :                     ; ----------------------------------------------------------------
    1216/     B08 :                     
    1217/     B08 :                     loc_114A:				; DATA XREF: ROM:00000AF2o
    1218/     B08 : 1C18                		move.b	(a0)+,d6
    1219/     B0A : 46C3                		move	d3,sr
    1220/     B0C : 6A04                		bpl.s	loc_1154
    1221/     B0E : 4886                		ext.w	d6
    1222/     B10 : D0C6                		adda.w	d6,a0
    1223/     B12 :                     
    1224/     B12 :                     loc_1154:				; CODE XREF: ROM:0000114Ej
    1225/     B12 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1226/     B18 :                     ; ----------------------------------------------------------------
    1227/     B18 :                     
    1228/     B18 :                     loc_1158:				; DATA XREF: ROM:00000D72o
    1229/     B18 : 1C18                		move.b	(a0)+,d6
    1230/     B1A : 46C3                		move	d3,sr
    1231/     B1C : 6704                		beq.s	loc_1162
    1232/     B1E : 4886                		ext.w	d6
    1233/     B20 : D0C6                		adda.w	d6,a0
    1234/     B22 :                     
    1235/     B22 :                     loc_1162:				; CODE XREF: ROM:0000115Cj
    1236/     B22 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1237/     B28 :                     ; ----------------------------------------------------------------
    1238/     B28 :                     
    1239/     B28 :                     loc_1166:
    1240/     B28 : 1C18                		move.b	(a0)+,d6
    1241/     B2A : 46C3                		move	d3,sr
    1242/     B2C : 6B04                		bmi.s	loc_1170
    1243/     B2E : 4886                		ext.w	d6
    1244/     B30 : D0C6                		adda.w	d6,a0
    1245/     B32 :                     
    1246/     B32 :                     loc_1170:
    1247/     B32 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1248/     B38 :                     
    1249/     B38 :                     ; ----------------------------------------------------------------
    1250/     B38 :                     ; $00 - BRK
    1251/     B38 :                     ; ----------------------------------------------------------------
    1252/     B38 :                     
    1253/     B38 :                     mos_BRK:
    1254/     B38 : 4BF9 FFFF 0000      		lea 	(RAM_Fami_ROM),a5
    1255/     B3E : 3C3C 7FFE           		move.w	#cpuIRQ,d6		; go to IRQ
    1256/     B42 : DAC6                		add.w	d6,a5
    1257/     B44 : 1C2D 0001           		move.b	1(a5),d6
    1258/     B48 : E14E                		lsl.w	#8,d6
    1259/     B4A : 1C15                		move.b	(a5),d6
    1260/     B4C :                     
    1261/     B4C : 397C 0001 003E      		move.w	#1,cpuModeIntDis(a4)
    1262/     B52 : 397C 0001 003C      		move.w	#1,cpuFlag2(a4)
    1263/     B58 : 6000 0566           		bra.w	loc_1686
    1264/     B5C :                     ; ----------------------------------------------------------------
    1265/     B5C :                     
    1266/     B5C :                     loc_118E:
    1267/     B5C : 1C18                		move.b	(a0)+,d6
    1268/     B5E : 46C3                		move	d3,sr
    1269/     B60 : 6904                		bvs.s	loc_1198
    1270/     B62 : 4886                		ext.w	d6
    1271/     B64 : D0C6                		adda.w	d6,a0
    1272/     B66 :                     
    1273/     B66 :                     loc_1198:
    1274/     B66 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1275/     B6C :                     ; ----------------------------------------------------------------
    1276/     B6C :                     
    1277/     B6C :                     loc_119C:
    1278/     B6C : 1C18                		move.b	(a0)+,d6
    1279/     B6E : 46C3                		move	d3,sr
    1280/     B70 : 6804                		bvc.s	loc_11A6
    1281/     B72 : 4886                		ext.w	d6
    1282/     B74 : D0C6                		adda.w	d6,a0
    1283/     B76 :                     
    1284/     B76 :                     loc_11A6:				; CODE XREF: ROM:000011A0j
    1285/     B76 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1286/     B7C :                     ; ----------------------------------------------------------------
    1287/     B7C :                     
    1288/     B7C :                     loc_11AA:				; DATA XREF: ROM:00000A92o
    1289/     B7C : 0203 00EE           		andi.b	#$EE,d3
    1290/     B80 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1291/     B86 :                     
    1292/     B86 :                     ; ----------------------------------------------------------------
    1293/     B86 :                     ; CLD - Clear Decimal mode
    1294/     B86 :                     ; ----------------------------------------------------------------
    1295/     B86 :                     
    1296/     B86 :                     loc_11B2:
    1297/     B86 : 397C 0000 003A      		move.w	#0,cpuModeDec(a4)
    1298/     B8C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1299/     B92 :                     
    1300/     B92 :                     ; ----------------------------------------------------------------
    1301/     B92 :                     ; CLI - Clear Interrupt disable
    1302/     B92 :                     ; ----------------------------------------------------------------
    1303/     B92 :                     
    1304/     B92 :                     loc_11BC:
    1305/     B92 : 397C 0000 003E      		move.w	#0,cpuModeIntDis(a4)
    1306/     B98 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1307/     B9E :                     
    1308/     B9E :                     ; ----------------------------------------------------------------
    1309/     B9E :                     
    1310/     B9E :                     loc_11C6:				; DATA XREF: ROM:00000D12o
    1311/     B9E : 0203 00FD           		andi.b	#$FD,d3
    1312/     BA2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1313/     BA8 :                     ; ----------------------------------------------------------------
    1314/     BA8 :                     
    1315/     BA8 :                     loc_11CE:				; DATA XREF: ROM:00000D56o
    1316/     BA8 : 1E18                		move.b	(a0)+,d7
    1317/     BAA : B007                		cmp.b	d7,d0
    1318/     BAC : 40C5                		move	sr,d5
    1319/     BAE : 0245 000D           		andi.w	#$D,d5
    1320/     BB2 : 0A05 0001           		eori.b	#1,d5
    1321/     BB6 : 0203 0002           		andi.b	#2,d3
    1322/     BBA : 8605                		or.b	d5,d3
    1323/     BBC : 0205 0001           		andi.b	#1,d5
    1324/     BC0 : E90D                		lsl.b	#4,d5
    1325/     BC2 : 8605                		or.b	d5,d3
    1326/     BC4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1327/     BCA :                     ; ----------------------------------------------------------------
    1328/     BCA :                     
    1329/     BCA :                     loc_11EE:				; DATA XREF: ROM:00000D46o
    1330/     BCA : 4246                		clr.w	d6
    1331/     BCC : 1C18                		move.b	(a0)+,d6
    1332/     BCE : 1E32 6000           		move.b	(a2,d6.w),d7
    1333/     BD2 : B007                		cmp.b	d7,d0
    1334/     BD4 : 40C5                		move	sr,d5
    1335/     BD6 : 0245 000D           		andi.w	#$D,d5
    1336/     BDA : 0A05 0001           		eori.b	#1,d5
    1337/     BDE : 0203 0002           		andi.b	#2,d3
    1338/     BE2 : 8605                		or.b	d5,d3
    1339/     BE4 : 0205 0001           		andi.b	#1,d5
    1340/     BE8 : E90D                		lsl.b	#4,d5
    1341/     BEA : 8605                		or.b	d5,d3
    1342/     BEC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1343/     BF2 :                     ; ----------------------------------------------------------------
    1344/     BF2 :                     
    1345/     BF2 :                     loc_1214:				; DATA XREF: ROM:00000D86o
    1346/     BF2 : 4246                		clr.w	d6
    1347/     BF4 : 1C18                		move.b	(a0)+,d6
    1348/     BF6 : DC01                		add.b	d1,d6
    1349/     BF8 : 1E32 6000           		move.b	(a2,d6.w),d7
    1350/     BFC : B007                		cmp.b	d7,d0
    1351/     BFE : 40C5                		move	sr,d5
    1352/     C00 : 0245 000D           		andi.w	#$D,d5
    1353/     C04 : 0A05 0001           		eori.b	#1,d5
    1354/     C08 : 0203 0002           		andi.b	#2,d3
    1355/     C0C : 8605                		or.b	d5,d3
    1356/     C0E : 0205 0001           		andi.b	#1,d5
    1357/     C12 : E90D                		lsl.b	#4,d5
    1358/     C14 : 8605                		or.b	d5,d3
    1359/     C16 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1360/     C1C :                     ; ----------------------------------------------------------------
    1361/     C1C :                     
    1362/     C1C :                     loc_123C:				; DATA XREF: ROM:00000d36o
    1363/     C1C : 4244                		clr.w	d4
    1364/     C1E : 1818                		move.b	(a0)+,d4
    1365/     C20 : 4246                		clr.w	d6
    1366/     C22 : 1C18                		move.b	(a0)+,d6
    1367/     C24 : 6100 0DB2           		bsr	addr_Read
    1368/     C28 : B007                		cmp.b	d7,d0
    1369/     C2A : 40C5                		move	sr,d5
    1370/     C2C : 0245 000D           		andi.w	#$D,d5
    1371/     C30 : 0A05 0001           		eori.b	#1,d5
    1372/     C34 : 0203 0002           		andi.b	#2,d3
    1373/     C38 : 8605                		or.b	d5,d3
    1374/     C3A : 0205 0001           		andi.b	#1,d5
    1375/     C3E : E90D                		lsl.b	#4,d5
    1376/     C40 : 8605                		or.b	d5,d3
    1377/     C42 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1378/     C48 :                     ; ----------------------------------------------------------------
    1379/     C48 :                     
    1380/     C48 :                     loc_1268:				; DATA XREF: ROM:00000DA6o
    1381/     C48 : 4244                		clr.w	d4
    1382/     C4A : 1818                		move.b	(a0)+,d4
    1383/     C4C : 4246                		clr.w	d6
    1384/     C4E : 1C18                		move.b	(a0)+,d6
    1385/     C50 : 4207                		clr.b	d7
    1386/     C52 : D801                		add.b	d1,d4
    1387/     C54 : DD07                		addx.b	d7,d6
    1388/     C56 : 6100 0D80           		bsr	addr_Read
    1389/     C5A : B007                		cmp.b	d7,d0
    1390/     C5C : 40C5                		move	sr,d5
    1391/     C5E : 0245 000D           		andi.w	#$D,d5
    1392/     C62 : 0A05 0001           		eori.b	#1,d5
    1393/     C66 : 0203 0002           		andi.b	#2,d3
    1394/     C6A : 8605                		or.b	d5,d3
    1395/     C6C : 0205 0001           		andi.b	#1,d5
    1396/     C70 : E90D                		lsl.b	#4,d5
    1397/     C72 : 8605                		or.b	d5,d3
    1398/     C74 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1399/     C7A :                     ; ----------------------------------------------------------------
    1400/     C7A :                     
    1401/     C7A :                     loc_129A:				; DATA XREF: ROM:00000D96o
    1402/     C7A : 4244                		clr.w	d4
    1403/     C7C : 1818                		move.b	(a0)+,d4
    1404/     C7E : 4246                		clr.w	d6
    1405/     C80 : 1C18                		move.b	(a0)+,d6
    1406/     C82 : 4207                		clr.b	d7
    1407/     C84 : D802                		add.b	d2,d4
    1408/     C86 : DD07                		addx.b	d7,d6
    1409/     C88 : 6100 0D4E           		bsr	addr_Read
    1410/     C8C : B007                		cmp.b	d7,d0
    1411/     C8E : 40C5                		move	sr,d5
    1412/     C90 : 0245 000D           		andi.w	#$D,d5
    1413/     C94 : 0A05 0001           		eori.b	#1,d5
    1414/     C98 : 0203 0002           		andi.b	#2,d3
    1415/     C9C : 8605                		or.b	d5,d3
    1416/     C9E : 0205 0001           		andi.b	#1,d5
    1417/     CA2 : E90D                		lsl.b	#4,d5
    1418/     CA4 : 8605                		or.b	d5,d3
    1419/     CA6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1420/     CAC :                     ; ----------------------------------------------------------------
    1421/     CAC :                     
    1422/     CAC :                     loc_12CC:
    1423/     CAC : 4245                		clr.w	d5
    1424/     CAE : 4244                		clr.w	d4
    1425/     CB0 : 4246                		clr.w	d6
    1426/     CB2 : 1A18                		move.b	(a0)+,d5
    1427/     CB4 : DA01                		add.b	d1,d5
    1428/     CB6 : 1832 5000           		move.b	(a2,d5.w),d4
    1429/     CBA : DA3C 0001           		add.b	#1,d5
    1430/     CBE : 1C32 5000           		move.b	(a2,d5.w),d6
    1431/     CC2 : 6100 0D14           		bsr	addr_Read
    1432/     CC6 : B007                		cmp.b	d7,d0
    1433/     CC8 : 40C5                		move	sr,d5
    1434/     CCA : 0245 000D           		andi.w	#$D,d5
    1435/     CCE : 0A05 0001           		eori.b	#1,d5
    1436/     CD2 : 0203 0002           		andi.b	#2,d3
    1437/     CD6 : 8605                		or.b	d5,d3
    1438/     CD8 : 0205 0001           		andi.b	#1,d5
    1439/     CDC : E90D                		lsl.b	#4,d5
    1440/     CDE : 8605                		or.b	d5,d3
    1441/     CE0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1442/     CE6 :                     ; ----------------------------------------------------------------
    1443/     CE6 :                     
    1444/     CE6 :                     loc_1302:
    1445/     CE6 : 4244                		clr.w	d4
    1446/     CE8 : 4245                		clr.w	d5
    1447/     CEA : 4246                		clr.w	d6
    1448/     CEC : 1A18                		move.b	(a0)+,d5
    1449/     CEE : 1832 5000           		move.b	(a2,d5.w),d4
    1450/     CF2 : DA3C 0001           		add.b	#1,d5
    1451/     CF6 : 1C32 5000           		move.b	(a2,d5.w),d6
    1452/     CFA : 4207                		clr.b	d7
    1453/     CFC : D802                		add.b	d2,d4
    1454/     CFE : DD07                		addx.b	d7,d6
    1455/     D00 : 6100 0CD6           		bsr	addr_Read
    1456/     D04 : B007                		cmp.b	d7,d0
    1457/     D06 : 40C5                		move	sr,d5
    1458/     D08 : 0245 000D           		andi.w	#$D,d5
    1459/     D0C : 0A05 0001           		eori.b	#1,d5
    1460/     D10 : 0203 0002           		andi.b	#2,d3
    1461/     D14 : 8605                		or.b	d5,d3
    1462/     D16 : 0205 0001           		andi.b	#1,d5
    1463/     D1A : E90D                		lsl.b	#4,d5
    1464/     D1C : 8605                		or.b	d5,d3
    1465/     D1E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1466/     D24 :                     ; ----------------------------------------------------------------
    1467/     D24 :                     
    1468/     D24 :                     loc_133C:				; DATA XREF: ROM:00000DB2o
    1469/     D24 : 1E18                		move.b	(a0)+,d7
    1470/     D26 : B207                		cmp.b	d7,d1
    1471/     D28 : 40C5                		move	sr,d5
    1472/     D2A : 0245 000D           		andi.w	#$D,d5
    1473/     D2E : 0A05 0001           		eori.b	#1,d5
    1474/     D32 : 0203 0002           		andi.b	#2,d3
    1475/     D36 : 8605                		or.b	d5,d3
    1476/     D38 : 0205 0001           		andi.b	#1,d5
    1477/     D3C : E90D                		lsl.b	#4,d5
    1478/     D3E : 8605                		or.b	d5,d3
    1479/     D40 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1480/     D46 :                     ; ----------------------------------------------------------------
    1481/     D46 :                     
    1482/     D46 :                     loc_135C:				; DATA XREF: ROM:00000DC2o
    1483/     D46 : 4246                		clr.w	d6
    1484/     D48 : 1C18                		move.b	(a0)+,d6
    1485/     D4A : 1E32 6000           		move.b	(a2,d6.w),d7
    1486/     D4E : B207                		cmp.b	d7,d1
    1487/     D50 : 40C5                		move	sr,d5
    1488/     D52 : 0245 000D           		andi.w	#$D,d5
    1489/     D56 : 0A05 0001           		eori.b	#1,d5
    1490/     D5A : 0203 0002           		andi.b	#2,d3
    1491/     D5E : 8605                		or.b	d5,d3
    1492/     D60 : 0205 0001           		andi.b	#1,d5
    1493/     D64 : E90D                		lsl.b	#4,d5
    1494/     D66 : 8605                		or.b	d5,d3
    1495/     D68 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1496/     D6E :                     ; ----------------------------------------------------------------
    1497/     D6E :                     
    1498/     D6E :                     loc_1382:				; DATA XREF: ROM:00000DE2o
    1499/     D6E : 4244                		clr.w	d4
    1500/     D70 : 1818                		move.b	(a0)+,d4
    1501/     D72 : 4246                		clr.w	d6
    1502/     D74 : 1C18                		move.b	(a0)+,d6
    1503/     D76 : 6100 0C60           		bsr	addr_Read
    1504/     D7A : B207                		cmp.b	d7,d1
    1505/     D7C : 40C5                		move	sr,d5
    1506/     D7E : 0245 000D           		andi.w	#$D,d5
    1507/     D82 : 0A05 0001           		eori.b	#1,d5
    1508/     D86 : 0203 0002           		andi.b	#2,d3
    1509/     D8A : 8605                		or.b	d5,d3
    1510/     D8C : 0205 0001           		andi.b	#1,d5
    1511/     D90 : E90D                		lsl.b	#4,d5
    1512/     D92 : 8605                		or.b	d5,d3
    1513/     D94 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1514/     D9A :                     ; ----------------------------------------------------------------
    1515/     D9A :                     
    1516/     D9A :                     loc_13AE:				; DATA XREF: ROM:00000d62o
    1517/     D9A : 1E18                		move.b	(a0)+,d7
    1518/     D9C : B407                		cmp.b	d7,d2
    1519/     D9E : 40C5                		move	sr,d5
    1520/     DA0 : 0245 000D           		andi.w	#$D,d5
    1521/     DA4 : 0A05 0001           		eori.b	#1,d5
    1522/     DA8 : 0203 0002           		andi.b	#2,d3
    1523/     DAC : 8605                		or.b	d5,d3
    1524/     DAE : 0205 0001           		andi.b	#1,d5
    1525/     DB2 : E90D                		lsl.b	#4,d5
    1526/     DB4 : 8605                		or.b	d5,d3
    1527/     DB6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1528/     DBC :                     ; ----------------------------------------------------------------
    1529/     DBC :                     
    1530/     DBC :                     loc_13CE:				; DATA XREF: ROM:00000D42o
    1531/     DBC : 4246                		clr.w	d6
    1532/     DBE : 1C18                		move.b	(a0)+,d6
    1533/     DC0 : 1E32 6000           		move.b	(a2,d6.w),d7
    1534/     DC4 : B407                		cmp.b	d7,d2
    1535/     DC6 : 40C5                		move	sr,d5
    1536/     DC8 : 0245 000D           		andi.w	#$D,d5
    1537/     DCC : 0A05 0001           		eori.b	#1,d5
    1538/     DD0 : 0203 0002           		andi.b	#2,d3
    1539/     DD4 : 8605                		or.b	d5,d3
    1540/     DD6 : 0205 0001           		andi.b	#1,d5
    1541/     DDA : E90D                		lsl.b	#4,d5
    1542/     DDC : 8605                		or.b	d5,d3
    1543/     DDE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1544/     DE4 :                     ; ----------------------------------------------------------------
    1545/     DE4 :                     
    1546/     DE4 :                     loc_13F4:				; DATA XREF: ROM:00000d32o
    1547/     DE4 : 4244                		clr.w	d4
    1548/     DE6 : 1818                		move.b	(a0)+,d4
    1549/     DE8 : 4246                		clr.w	d6
    1550/     DEA : 1C18                		move.b	(a0)+,d6
    1551/     DEC : 6100 0BEA           		bsr	addr_Read
    1552/     DF0 : B407                		cmp.b	d7,d2
    1553/     DF2 : 40C5                		move	sr,d5
    1554/     DF4 : 0245 000D           		andi.w	#$D,d5
    1555/     DF8 : 0A05 0001           		eori.b	#1,d5
    1556/     DFC : 0203 0002           		andi.b	#2,d3
    1557/     E00 : 8605                		or.b	d5,d3
    1558/     E02 : 0205 0001           		andi.b	#1,d5
    1559/     E06 : E90D                		lsl.b	#4,d5
    1560/     E08 : 8605                		or.b	d5,d3
    1561/     E0A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1562/     E10 :                     ; ----------------------------------------------------------------
    1563/     E10 :                     
    1564/     E10 :                     loc_1420:				; DATA XREF: ROM:00000D4Ao
    1565/     E10 : 4246                		clr.w	d6
    1566/     E12 : 1C18                		move.b	(a0)+,d6
    1567/     E14 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1568/     E18 : 40C5                		move	sr,d5
    1569/     E1A : 0245 000C           		andi.w	#$C,d5
    1570/     E1E : 0203 00F3           		andi.b	#$F3,d3
    1571/     E22 : 8645                		or.w	d5,d3
    1572/     E24 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1573/     E2A :                     ; ----------------------------------------------------------------
    1574/     E2A :                     
    1575/     E2A :                     loc_1438:				; DATA XREF: ROM:00000D8Ao
    1576/     E2A : 4246                		clr.w	d6
    1577/     E2C : 1C18                		move.b	(a0)+,d6
    1578/     E2E : DC01                		add.b	d1,d6
    1579/     E30 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1580/     E34 : 40C5                		move	sr,d5
    1581/     E36 : 0245 000C           		andi.w	#$C,d5
    1582/     E3A : 0203 00F3           		andi.b	#$F3,d3
    1583/     E3E : 8645                		or.w	d5,d3
    1584/     E40 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1585/     E46 :                     ; ----------------------------------------------------------------
    1586/     E46 :                     
    1587/     E46 :                     loc_1452:				; DATA XREF: ROM:00000d3Ao
    1588/     E46 : 1818                		move.b	(a0)+,d4
    1589/     E48 : 1C18                		move.b	(a0)+,d6
    1590/     E4A : E14E                		lsl.w	#8,d6
    1591/     E4C : 1C04                		move.b	d4,d6
    1592/     E4E : 5332 6000           		subq.b	#1,(a2,d6.w)
    1593/     E52 : 40C5                		move	sr,d5
    1594/     E54 : 0245 000C           		andi.w	#$C,d5
    1595/     E58 : 0203 00F3           		andi.b	#$F3,d3
    1596/     E5C : 8645                		or.w	d5,d3
    1597/     E5E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1598/     E64 :                     ; ----------------------------------------------------------------
    1599/     E64 :                     
    1600/     E64 :                     loc_146E:				; DATA XREF: ROM:00000DAAo
    1601/     E64 : 1818                		move.b	(a0)+,d4
    1602/     E66 : 1C18                		move.b	(a0)+,d6
    1603/     E68 : E14E                		lsl.w	#8,d6
    1604/     E6A : 1C04                		move.b	d4,d6
    1605/     E6C : DC41                		add.w	d1,d6
    1606/     E6E : 5332 6000           		subq.b	#1,(a2,d6.w)
    1607/     E72 : 40C5                		move	sr,d5
    1608/     E74 : 0245 000C           		andi.w	#$C,d5
    1609/     E78 : 0203 00F3           		andi.b	#$F3,d3
    1610/     E7C : 8645                		or.w	d5,d3
    1611/     E7E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1612/     E84 :                     ; ----------------------------------------------------------------
    1613/     E84 :                     
    1614/     E84 :                     loc_148C:				; DATA XREF: ROM:00000D5Ao
    1615/     E84 : 5301                		subq.b	#1,d1
    1616/     E86 : 40C5                		move	sr,d5
    1617/     E88 : 0245 000C           		andi.w	#$C,d5
    1618/     E8C : 0203 00F3           		andi.b	#$F3,d3
    1619/     E90 : 8645                		or.w	d5,d3
    1620/     E92 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1621/     E98 :                     ; ----------------------------------------------------------------
    1622/     E98 :                     
    1623/     E98 :                     loc_149E:
    1624/     E98 : 5302                		subq.b	#1,d2
    1625/     E9A : 40C5                		move	sr,d5
    1626/     E9C : 0245 000C           		andi.w	#$C,d5
    1627/     EA0 : 0203 00F3           		andi.b	#$F3,d3
    1628/     EA4 : 8645                		or.w	d5,d3
    1629/     EA6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1630/     EAC :                     ; ----------------------------------------------------------------
    1631/     EAC :                     
    1632/     EAC :                     loc_14B0:				; DATA XREF: ROM:00000B56o
    1633/     EAC : 1E18                		move.b	(a0)+,d7
    1634/     EAE : BF00                		eor.b	d7,d0
    1635/     EB0 : 40C5                		move	sr,d5
    1636/     EB2 : 0245 000C           		andi.w	#$C,d5
    1637/     EB6 : 0203 00F3           		andi.b	#$F3,d3
    1638/     EBA : 8645                		or.w	d5,d3
    1639/     EBC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1640/     EC2 :                     ; ----------------------------------------------------------------
    1641/     EC2 :                     
    1642/     EC2 :                     loc_14C4:				; DATA XREF: ROM:00000B46o
    1643/     EC2 : 4246                		clr.w	d6
    1644/     EC4 : 1C18                		move.b	(a0)+,d6
    1645/     EC6 : 1E32 6000           		move.b	(a2,d6.w),d7
    1646/     ECA : BF00                		eor.b	d7,d0
    1647/     ECC : 40C5                		move	sr,d5
    1648/     ECE : 0245 000C           		andi.w	#$C,d5
    1649/     ED2 : 0203 00F3           		andi.b	#$F3,d3
    1650/     ED6 : 8645                		or.w	d5,d3
    1651/     ED8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1652/     EDE :                     ; ----------------------------------------------------------------
    1653/     EDE :                     
    1654/     EDE :                     loc_14DE:				; DATA XREF: ROM:00000B86o
    1655/     EDE : 4246                		clr.w	d6
    1656/     EE0 : 1C18                		move.b	(a0)+,d6
    1657/     EE2 : DC01                		add.b	d1,d6
    1658/     EE4 : 1E32 6000           		move.b	(a2,d6.w),d7
    1659/     EE8 : BF00                		eor.b	d7,d0
    1660/     EEA : 40C5                		move	sr,d5
    1661/     EEC : 0245 000C           		andi.w	#$C,d5
    1662/     EF0 : 0203 00F3           		andi.b	#$F3,d3
    1663/     EF4 : 8645                		or.w	d5,d3
    1664/     EF6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1665/     EFC :                     ; ----------------------------------------------------------------
    1666/     EFC :                     
    1667/     EFC :                     loc_14FA:				; DATA XREF: ROM:00000B66o
    1668/     EFC : 4244                		clr.w	d4
    1669/     EFE : 1818                		move.b	(a0)+,d4
    1670/     F00 : 4246                		clr.w	d6
    1671/     F02 : 1C18                		move.b	(a0)+,d6
    1672/     F04 : 6100 0AD2           		bsr	addr_Read
    1673/     F08 : BF00                		eor.b	d7,d0
    1674/     F0A : 40C5                		move	sr,d5
    1675/     F0C : 0245 000C           		andi.w	#$C,d5
    1676/     F10 : 0203 00F3           		andi.b	#$F3,d3
    1677/     F14 : 8645                		or.w	d5,d3
    1678/     F16 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1679/     F1C :                     ; ----------------------------------------------------------------
    1680/     F1C :                     
    1681/     F1C :                     loc_151A:				; DATA XREF: ROM:00000BA6o
    1682/     F1C : 4244                		clr.w	d4
    1683/     F1E : 1818                		move.b	(a0)+,d4
    1684/     F20 : 4246                		clr.w	d6
    1685/     F22 : 1C18                		move.b	(a0)+,d6
    1686/     F24 : 4207                		clr.b	d7
    1687/     F26 : D801                		add.b	d1,d4
    1688/     F28 : DD07                		addx.b	d7,d6
    1689/     F2A : 6100 0AAC           		bsr	addr_Read
    1690/     F2E : BF00                		eor.b	d7,d0
    1691/     F30 : 40C5                		move	sr,d5
    1692/     F32 : 0245 000C           		andi.w	#$C,d5
    1693/     F36 : 0203 00F3           		andi.b	#$F3,d3
    1694/     F3A : 8645                		or.w	d5,d3
    1695/     F3C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1696/     F42 :                     ; ----------------------------------------------------------------
    1697/     F42 :                     
    1698/     F42 :                     loc_1540:				; DATA XREF: ROM:00000B96o
    1699/     F42 : 4244                		clr.w	d4
    1700/     F44 : 1818                		move.b	(a0)+,d4
    1701/     F46 : 4246                		clr.w	d6
    1702/     F48 : 1C18                		move.b	(a0)+,d6
    1703/     F4A : 4207                		clr.b	d7
    1704/     F4C : D802                		add.b	d2,d4
    1705/     F4E : DD07                		addx.b	d7,d6
    1706/     F50 : 6100 0A86           		bsr	addr_Read
    1707/     F54 : BF00                		eor.b	d7,d0
    1708/     F56 : 40C5                		move	sr,d5
    1709/     F58 : 0245 000C           		andi.w	#$C,d5
    1710/     F5C : 0203 00F3           		andi.b	#$F3,d3
    1711/     F60 : 8645                		or.w	d5,d3
    1712/     F62 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1713/     F68 :                     ; ----------------------------------------------------------------
    1714/     F68 :                     
    1715/     F68 :                     loc_1566:
    1716/     F68 : 4244                		clr.w	d4
    1717/     F6A : 4245                		clr.w	d5
    1718/     F6C : 4246                		clr.w	d6
    1719/     F6E : 1A18                		move.b	(a0)+,d5
    1720/     F70 : DA01                		add.b	d1,d5
    1721/     F72 : 1832 5000           		move.b	(a2,d5.w),d4
    1722/     F76 : DA3C 0001           		add.b	#1,d5
    1723/     F7A : 1C32 5000           		move.b	(a2,d5.w),d6
    1724/     F7E : 6100 0A58           		bsr	addr_Read
    1725/     F82 : BF00                		eor.b	d7,d0
    1726/     F84 : 40C5                		move	sr,d5
    1727/     F86 : 0245 000C           		andi.w	#$C,d5
    1728/     F8A : 0203 00F3           		andi.b	#$F3,d3
    1729/     F8E : 8645                		or.w	d5,d3
    1730/     F90 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1731/     F96 :                     ; ----------------------------------------------------------------
    1732/     F96 :                     
    1733/     F96 :                     loc_1590:
    1734/     F96 : 4244                		clr.w	d4
    1735/     F98 : 4245                		clr.w	d5
    1736/     F9A : 4246                		clr.w	d6
    1737/     F9C : 1A18                		move.b	(a0)+,d5
    1738/     F9E : 1832 5000           		move.b	(a2,d5.w),d4
    1739/     FA2 : DA3C 0001           		add.b	#1,d5
    1740/     FA6 : 1C32 5000           		move.b	(a2,d5.w),d6
    1741/     FAA : 4207                		clr.b	d7
    1742/     FAC : D802                		add.b	d2,d4
    1743/     FAE : DD07                		addx.b	d7,d6
    1744/     FB0 : 6100 0A26           		bsr	addr_Read
    1745/     FB4 : BF00                		eor.b	d7,d0
    1746/     FB6 : 40C5                		move	sr,d5
    1747/     FB8 : 0245 000C           		andi.w	#$C,d5
    1748/     FBC : 0203 00F3           		andi.b	#$F3,d3
    1749/     FC0 : 8645                		or.w	d5,d3
    1750/     FC2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1751/     FC8 :                     ; ----------------------------------------------------------------
    1752/     FC8 :                     
    1753/     FC8 :                     loc_15BE:
    1754/     FC8 : 4246                		clr.w	d6
    1755/     FCA : 1C18                		move.b	(a0)+,d6
    1756/     FCC : 5232 6000           		addq.b	#1,(a2,d6.w)
    1757/     FD0 : 40C5                		move	sr,d5
    1758/     FD2 : 0245 000C           		andi.w	#$C,d5
    1759/     FD6 : 0203 00F3           		andi.b	#$F3,d3
    1760/     FDA : 8645                		or.w	d5,d3
    1761/     FDC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1762/     FE2 :                     ; ----------------------------------------------------------------
    1763/     FE2 :                     
    1764/     FE2 :                     loc_15d3:
    1765/     FE2 : 4246                		clr.w	d6
    1766/     FE4 : 1C18                		move.b	(a0)+,d6
    1767/     FE6 : DC01                		add.b	d1,d6
    1768/     FE8 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1769/     FEC : 40C5                		move	sr,d5
    1770/     FEE : 0245 000C           		andi.w	#$C,d5
    1771/     FF2 : 0203 00F3           		andi.b	#$F3,d3
    1772/     FF6 : 8645                		or.w	d5,d3
    1773/     FF8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1774/     FFE :                     ; ----------------------------------------------------------------
    1775/     FFE :                     
    1776/     FFE :                     loc_15F0:
    1777/     FFE : 1818                		move.b	(a0)+,d4
    1778/    1000 : 1C18                		move.b	(a0)+,d6
    1779/    1002 : E14E                		lsl.w	#8,d6
    1780/    1004 : 1C04                		move.b	d4,d6
    1781/    1006 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1782/    100A : 40C5                		move	sr,d5
    1783/    100C : 0245 000C           		andi.w	#$C,d5
    1784/    1010 : 0203 00F3           		andi.b	#$F3,d3
    1785/    1014 : 8645                		or.w	d5,d3
    1786/    1016 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1787/    101C :                     ; ----------------------------------------------------------------
    1788/    101C :                     
    1789/    101C :                     loc_160C:
    1790/    101C : 1818                		move.b	(a0)+,d4
    1791/    101E : 1C18                		move.b	(a0)+,d6
    1792/    1020 : E14E                		lsl.w	#8,d6
    1793/    1022 : 1C04                		move.b	d4,d6
    1794/    1024 : DC41                		add.w	d1,d6
    1795/    1026 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1796/    102A : 40C5                		move	sr,d5
    1797/    102C : 0245 000C           		andi.w	#$C,d5
    1798/    1030 : 0203 00F3           		andi.b	#$F3,d3
    1799/    1034 : 8645                		or.w	d5,d3
    1800/    1036 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1801/    103C :                     ; ----------------------------------------------------------------
    1802/    103C :                     
    1803/    103C :                     loc_162A:
    1804/    103C : 5201                		addq.b	#1,d1
    1805/    103E : 40C5                		move	sr,d5
    1806/    1040 : 0245 000C           		andi.w	#$C,d5
    1807/    1044 : 0203 00F3           		andi.b	#$F3,d3
    1808/    1048 : 8645                		or.w	d5,d3
    1809/    104A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1810/    1050 :                     ; ----------------------------------------------------------------
    1811/    1050 :                     
    1812/    1050 :                     loc_163C:
    1813/    1050 : 5202                		addq.b	#1,d2
    1814/    1052 : 40C5                		move	sr,d5
    1815/    1054 : 0245 000C           		andi.w	#$C,d5
    1816/    1058 : 0203 00F3           		andi.b	#$F3,d3
    1817/    105C : 8645                		or.w	d5,d3
    1818/    105E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1819/    1064 :                     ; ----------------------------------------------------------------
    1820/    1064 :                     ; $4C - JMP $xxxx
    1821/    1064 :                     ; ----------------------------------------------------------------
    1822/    1064 :                     
    1823/    1064 :                     loc_164E:
    1824/    1064 : 7C00                		moveq	#0,d6
    1825/    1066 : 1C28 0001           		move.b	1(a0),d6
    1826/    106A : E14E                		lsl.w	#8,d6
    1827/    106C : 1C10                		move.b	(a0),d6
    1828/    106E : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1829/    1074 : 2049                		movea.l a1,a0
    1830/    1076 : D1C6                		add.l 	d6,a0
    1831/    1078 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1832/    107E :                     
    1833/    107E :                     ; ----------------------------------------------------------------
    1834/    107E :                     ; $6C - JMP ($xxxx)
    1835/    107E :                     ; ----------------------------------------------------------------
    1836/    107E :                     
    1837/    107E :                     loc_1660:
    1838/    107E : 7800                		moveq	#0,d4
    1839/    1080 : 1C28 0001           		move.b	1(a0),d6
    1840/    1084 : E14E                		lsl.w	#8,d6
    1841/    1086 : 1C10                		move.b	(a0),d6
    1842/    1088 : 1832 6000           		move.b	(a2,d6.w),d4
    1843/    108C : DC3C 0001           		add.b	#1,d6
    1844/    1090 : 1C32 6000           		move.b	(a2,d6.w),d6
    1845/    1094 : E14E                		lsl.w	#8,d6
    1846/    1096 : 8C04                		or.b	d4,d6
    1847/    1098 :                     
    1848/    1098 :                     	; TODO: Check for more jump locations
    1849/    1098 : 4A46                		tst.w	d6
    1850/    109A : 6B0A                		bmi.s	.to_rom
    1851/    109C : 204A                		move.l	a2,a0
    1852/    109E : D0C6                		adda	d6,a0
    1853/    10A0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1854/    10A6 :                     .to_rom:
    1855/    10A6 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1856/    10AC : 2049                		movea.l a1,a0
    1857/    10AE : D1C6                		add.l 	d6,a0
    1858/    10B0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1859/    10B6 :                     
    1860/    10B6 :                     ; ----------------------------------------------------------------
    1861/    10B6 :                     ; $6C - JSR $xxxx
    1862/    10B6 :                     ; ----------------------------------------------------------------
    1863/    10B6 :                     
    1864/    10B6 :                     loc_167C:
    1865/    10B6 : 7C00                		moveq	#0,d6
    1866/    10B8 : 1818                		move.b	(a0)+,d4
    1867/    10BA : 1C10                		move.b	(a0),d6
    1868/    10BC : E14E                		lsl.w	#8,d6
    1869/    10BE : 1C04                		move.b	d4,d6
    1870/    10C0 :                     
    1871/    10C0 :                     loc_1686:
    1872/    10C0 : 4843                		swap	d3
    1873/    10C2 : 3808                		move.w	a0,d4
    1874/    10C4 : 1A04                		move.b	d4,d5
    1875/    10C6 : E04C                		lsr.w	#8,d4
    1876/    10C8 : 883C 0080           		or.b	#$80,d4
    1877/    10CC : 1584 3000           		move.b	d4,(a2,d3.w)
    1878/    10D0 : 5303                		subq.b	#1,d3
    1879/    10D2 : 1585 3000           		move.b	d5,(a2,d3.w)
    1880/    10D6 : 5303                		subq.b	#1,d3
    1881/    10D8 : 4843                		swap	d3
    1882/    10DA :                     		
    1883/    10DA : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1884/    10E0 : 2049                		movea.l a1,a0
    1885/    10E2 : D1C6                		add.l 	d6,a0
    1886/    10E4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1887/    10EA :                     ; ----------------------------------------------------------------
    1888/    10EA :                     ; $A9 - LDA #$xx
    1889/    10EA :                     ; ----------------------------------------------------------------
    1890/    10EA :                     
    1891/    10EA :                     loc_16A4:
    1892/    10EA : 1018                		move.b	(a0)+,d0
    1893/    10EC : 40C5                		move	sr,d5
    1894/    10EE : 0245 000C           		andi.w	#$C,d5
    1895/    10F2 : 0203 00F3           		andi.b	#$F3,d3
    1896/    10F6 : 8645                		or.w	d5,d3
    1897/    10F8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1898/    10FE :                     ; ----------------------------------------------------------------
    1899/    10FE :                     
    1900/    10FE :                     loc_16B6:
    1901/    10FE : 4246                		clr.w	d6
    1902/    1100 : 1C18                		move.b	(a0)+,d6
    1903/    1102 : 1032 6000           		move.b	(a2,d6.w),d0
    1904/    1106 : 40C5                		move	sr,d5
    1905/    1108 : 0245 000C           		andi.w	#$C,d5
    1906/    110C : 0203 00F3           		andi.b	#$F3,d3
    1907/    1110 : 8645                		or.w	d5,d3
    1908/    1112 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1909/    1118 :                     ; ----------------------------------------------------------------
    1910/    1118 :                     
    1911/    1118 :                     loc_16CE:				; DATA XREF: ROM:00000D06o
    1912/    1118 : 4246                		clr.w	d6
    1913/    111A : 1C18                		move.b	(a0)+,d6
    1914/    111C : DC01                		add.b	d1,d6
    1915/    111E : 1032 6000           		move.b	(a2,d6.w),d0
    1916/    1122 : 40C5                		move	sr,d5
    1917/    1124 : 0245 000C           		andi.w	#$C,d5
    1918/    1128 : 0203 00F3           		andi.b	#$F3,d3
    1919/    112C : 8645                		or.w	d5,d3
    1920/    112E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1921/    1134 :                     ; ----------------------------------------------------------------
    1922/    1134 :                     
    1923/    1134 :                     loc_16E8:
    1924/    1134 : 4244                		clr.w	d4
    1925/    1136 : 4246                		clr.w	d6
    1926/    1138 : 1818                		move.b	(a0)+,d4
    1927/    113A : 1C18                		move.b	(a0)+,d6
    1928/    113C : 6100 089A           		bsr	addr_Read
    1929/    1140 : 1007                		move.b	d7,d0
    1930/    1142 : 40C5                		move	sr,d5
    1931/    1144 : 0245 000C           		andi.w	#$C,d5
    1932/    1148 : 0203 00F3           		andi.b	#$F3,d3
    1933/    114C : 8645                		or.w	d5,d3
    1934/    114E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1935/    1154 :                     ; ----------------------------------------------------------------
    1936/    1154 :                     
    1937/    1154 :                     loc_1708:				; DATA XREF: ROM:00000D26o
    1938/    1154 : 4244                		clr.w	d4
    1939/    1156 : 1818                		move.b	(a0)+,d4
    1940/    1158 : 4246                		clr.w	d6
    1941/    115A : 1C18                		move.b	(a0)+,d6
    1942/    115C : 4207                		clr.b	d7
    1943/    115E : D801                		add.b	d1,d4
    1944/    1160 : DD07                		addx.b	d7,d6
    1945/    1162 : 6100 0874           		bsr	addr_Read
    1946/    1166 : 1007                		move.b	d7,d0
    1947/    1168 : 40C5                		move	sr,d5
    1948/    116A : 0245 000C           		andi.w	#$C,d5
    1949/    116E : 0203 00F3           		andi.b	#$F3,d3
    1950/    1172 : 8645                		or.w	d5,d3
    1951/    1174 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1952/    117A :                     ; ----------------------------------------------------------------
    1953/    117A :                     
    1954/    117A :                     loc_172E:				; DATA XREF: ROM:00000D16o
    1955/    117A : 4244                		clr.w	d4
    1956/    117C : 1818                		move.b	(a0)+,d4
    1957/    117E : 4246                		clr.w	d6
    1958/    1180 : 1C18                		move.b	(a0)+,d6
    1959/    1182 : 4207                		clr.b	d7
    1960/    1184 : D802                		add.b	d2,d4
    1961/    1186 : DD07                		addx.b	d7,d6
    1962/    1188 : 6100 084E           		bsr	addr_Read
    1963/    118C : 1007                		move.b	d7,d0
    1964/    118E : 40C5                		move	sr,d5
    1965/    1190 : 0245 000C           		andi.w	#$C,d5
    1966/    1194 : 0203 00F3           		andi.b	#$F3,d3
    1967/    1198 : 8645                		or.w	d5,d3
    1968/    119A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1969/    11A0 :                     ; ----------------------------------------------------------------
    1970/    11A0 :                     ; LDA (oper,X)
    1971/    11A0 :                     
    1972/    11A0 :                     loc_1754:
    1973/    11A0 : 4244                		clr.w	d4
    1974/    11A2 : 4245                		clr.w	d5
    1975/    11A4 : 4246                		clr.w	d6
    1976/    11A6 : 1A18                		move.b	(a0)+,d5
    1977/    11A8 : DA01                		add.b	d1,d5
    1978/    11AA : 1832 5000           		move.b	(a2,d5.w),d4
    1979/    11AE : DA3C 0001           		add.b	#1,d5
    1980/    11B2 : 1C32 5000           		move.b	(a2,d5.w),d6
    1981/    11B6 : 6100 0820           		bsr	addr_Read
    1982/    11BA : 1007                		move.b	d7,d0
    1983/    11BC : 40C5                		move	sr,d5
    1984/    11BE : 0245 000C           		andi.w	#$C,d5
    1985/    11C2 : 0203 00F3           		andi.b	#$F3,d3
    1986/    11C6 : 8645                		or.w	d5,d3
    1987/    11C8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1988/    11CE :                     ; ----------------------------------------------------------------
    1989/    11CE :                     
    1990/    11CE :                     loc_177E:
    1991/    11CE : 4244                		clr.w	d4
    1992/    11D0 : 4245                		clr.w	d5
    1993/    11D2 : 4246                		clr.w	d6
    1994/    11D4 : 1A18                		move.b	(a0)+,d5
    1995/    11D6 : 1832 5000           		move.b	(a2,d5.w),d4
    1996/    11DA : DA3C 0001           		add.b	#1,d5
    1997/    11DE : 1C32 5000           		move.b	(a2,d5.w),d6
    1998/    11E2 : 4207                		clr.b	d7
    1999/    11E4 : D802                		add.b	d2,d4
    2000/    11E6 : DD07                		addx.b	d7,d6
    2001/    11E8 : 6100 07EE           		bsr	addr_Read
    2002/    11EC : 1007                		move.b	d7,d0
    2003/    11EE : 40C5                		move	sr,d5
    2004/    11F0 : 0245 000C           		andi.w	#$C,d5
    2005/    11F4 : 0203 00F3           		andi.b	#$F3,d3
    2006/    11F8 : 8645                		or.w	d5,d3
    2007/    11FA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2008/    1200 :                     ; ----------------------------------------------------------------
    2009/    1200 :                     
    2010/    1200 :                     loc_17AC:				; DATA XREF: ROM:00000CBAo
    2011/    1200 : 1218                		move.b	(a0)+,d1
    2012/    1202 : 40C5                		move	sr,d5
    2013/    1204 : 0245 000C           		andi.w	#$C,d5
    2014/    1208 : 0203 00F3           		andi.b	#$F3,d3
    2015/    120C : 8645                		or.w	d5,d3
    2016/    120E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2017/    1214 :                     ; ----------------------------------------------------------------
    2018/    1214 :                     
    2019/    1214 :                     loc_17BE:				; DATA XREF: ROM:00000CCAo
    2020/    1214 : 4246                		clr.w	d6
    2021/    1216 : 1C18                		move.b	(a0)+,d6
    2022/    1218 : 1232 6000           		move.b	(a2,d6.w),d1
    2023/    121C : 40C5                		move	sr,d5
    2024/    121E : 0245 000C           		andi.w	#$C,d5
    2025/    1222 : 0203 00F3           		andi.b	#$F3,d3
    2026/    1226 : 8645                		or.w	d5,d3
    2027/    1228 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2028/    122E :                     ; ----------------------------------------------------------------
    2029/    122E :                     
    2030/    122E :                     loc_17d3:				; DATA XREF: ROM:00000D0Ao
    2031/    122E : 4246                		clr.w	d6
    2032/    1230 : 1C18                		move.b	(a0)+,d6
    2033/    1232 : DC02                		add.b	d2,d6
    2034/    1234 : 1232 6000           		move.b	(a2,d6.w),d1
    2035/    1238 : 40C5                		move	sr,d5
    2036/    123A : 0245 000C           		andi.w	#$C,d5
    2037/    123E : 0203 00F3           		andi.b	#$F3,d3
    2038/    1242 : 8645                		or.w	d5,d3
    2039/    1244 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2040/    124A :                     ; ----------------------------------------------------------------
    2041/    124A :                     
    2042/    124A :                     loc_17F0:				; DATA XREF: ROM:00000CEAo
    2043/    124A : 4244                		clr.w	d4
    2044/    124C : 1818                		move.b	(a0)+,d4
    2045/    124E : 4246                		clr.w	d6
    2046/    1250 : 1C18                		move.b	(a0)+,d6
    2047/    1252 : 6100 0784           		bsr	addr_Read
    2048/    1256 : 1207                		move.b	d7,d1
    2049/    1258 : 40C5                		move	sr,d5
    2050/    125A : 0245 000C           		andi.w	#$C,d5
    2051/    125E : 0203 00F3           		andi.b	#$F3,d3
    2052/    1262 : 8645                		or.w	d5,d3
    2053/    1264 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2054/    126A :                     ; ----------------------------------------------------------------
    2055/    126A :                     
    2056/    126A :                     loc_1810:				; DATA XREF: ROM:00000D2Ao
    2057/    126A : 4244                		clr.w	d4
    2058/    126C : 1818                		move.b	(a0)+,d4
    2059/    126E : 4246                		clr.w	d6
    2060/    1270 : 1C18                		move.b	(a0)+,d6
    2061/    1272 : 4207                		clr.b	d7
    2062/    1274 : D802                		add.b	d2,d4
    2063/    1276 : DD07                		addx.b	d7,d6
    2064/    1278 : 6100 075E           		bsr	addr_Read
    2065/    127C : 1207                		move.b	d7,d1
    2066/    127E : 40C5                		move	sr,d5
    2067/    1280 : 0245 000C           		andi.w	#$C,d5
    2068/    1284 : 0203 00F3           		andi.b	#$F3,d3
    2069/    1288 : 8645                		or.w	d5,d3
    2070/    128A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2071/    1290 :                     ; ----------------------------------------------------------------
    2072/    1290 :                     
    2073/    1290 :                     loc_1836:				; DATA XREF: ROM:00000CB2o
    2074/    1290 : 1418                		move.b	(a0)+,d2
    2075/    1292 : 40C5                		move	sr,d5
    2076/    1294 : 0245 000C           		andi.w	#$C,d5
    2077/    1298 : 0203 00F3           		andi.b	#$F3,d3
    2078/    129C : 8645                		or.w	d5,d3
    2079/    129E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2080/    12A4 :                     ; ----------------------------------------------------------------
    2081/    12A4 :                     
    2082/    12A4 :                     loc_1848:				; DATA XREF: ROM:00000CC2o
    2083/    12A4 : 4246                		clr.w	d6
    2084/    12A6 : 1C18                		move.b	(a0)+,d6
    2085/    12A8 : 1432 6000           		move.b	(a2,d6.w),d2
    2086/    12AC : 40C5                		move	sr,d5
    2087/    12AE : 0245 000C           		andi.w	#$C,d5
    2088/    12B2 : 0203 00F3           		andi.b	#$F3,d3
    2089/    12B6 : 8645                		or.w	d5,d3
    2090/    12B8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2091/    12BE :                     ; ----------------------------------------------------------------
    2092/    12BE :                     
    2093/    12BE :                     loc_1860:				; DATA XREF: ROM:00000D02o
    2094/    12BE : 4246                		clr.w	d6
    2095/    12C0 : 1C18                		move.b	(a0)+,d6
    2096/    12C2 : DC01                		add.b	d1,d6
    2097/    12C4 : 1432 6000           		move.b	(a2,d6.w),d2
    2098/    12C8 : 40C5                		move	sr,d5
    2099/    12CA : 0245 000C           		andi.w	#$C,d5
    2100/    12CE : 0203 00F3           		andi.b	#$F3,d3
    2101/    12D2 : 8645                		or.w	d5,d3
    2102/    12D4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2103/    12DA :                     ; ----------------------------------------------------------------
    2104/    12DA :                     
    2105/    12DA :                     loc_187A:				; DATA XREF: ROM:00000CE2o
    2106/    12DA : 4244                		clr.w	d4
    2107/    12DC : 1818                		move.b	(a0)+,d4
    2108/    12DE : 4246                		clr.w	d6
    2109/    12E0 : 1C18                		move.b	(a0)+,d6
    2110/    12E2 : 6100 06F4           		bsr	addr_Read
    2111/    12E6 : 1407                		move.b	d7,d2
    2112/    12E8 : 40C5                		move	sr,d5
    2113/    12EA : 0245 000C           		andi.w	#$C,d5
    2114/    12EE : 0203 00F3           		andi.b	#$F3,d3
    2115/    12F2 : 8645                		or.w	d5,d3
    2116/    12F4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2117/    12FA :                     ; ----------------------------------------------------------------
    2118/    12FA :                     
    2119/    12FA :                     loc_189A:				; DATA XREF: ROM:00000D22o
    2120/    12FA : 4244                		clr.w	d4
    2121/    12FC : 1818                		move.b	(a0)+,d4
    2122/    12FE : 4246                		clr.w	d6
    2123/    1300 : 1C18                		move.b	(a0)+,d6
    2124/    1302 : 4207                		clr.b	d7
    2125/    1304 : D801                		add.b	d1,d4
    2126/    1306 : DD07                		addx.b	d7,d6
    2127/    1308 : 6100 06CE           		bsr	addr_Read
    2128/    130C : 1407                		move.b	d7,d2
    2129/    130E : 40C5                		move	sr,d5
    2130/    1310 : 0245 000C           		andi.w	#$C,d5
    2131/    1314 : 0203 00F3           		andi.b	#$F3,d3
    2132/    1318 : 8645                		or.w	d5,d3
    2133/    131A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2134/    1320 :                     ; ----------------------------------------------------------------
    2135/    1320 :                     
    2136/    1320 :                     loc_18C0:				; DATA XREF: ROM:00000B5Ao
    2137/    1320 : E208                		lsr.b	#1,d0
    2138/    1322 : 40C5                		move	sr,d5
    2139/    1324 : 0245 001D           		andi.w	#$1D,d5
    2140/    1328 : 0203 00E2           		andi.b	#$E2,d3
    2141/    132C : 8645                		or.w	d5,d3
    2142/    132E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2143/    1334 :                     ; ----------------------------------------------------------------
    2144/    1334 :                     
    2145/    1334 :                     loc_18D2:				; DATA XREF: ROM:00000B4Ao
    2146/    1334 : 4246                		clr.w	d6
    2147/    1336 : 1C18                		move.b	(a0)+,d6
    2148/    1338 : 1E32 6000           		move.b	(a2,d6.w),d7
    2149/    133C : E20F                		lsr.b	#1,d7
    2150/    133E : 40C5                		move	sr,d5
    2151/    1340 : 0245 001D           		andi.w	#$1D,d5
    2152/    1344 : 0203 00E2           		andi.b	#$E2,d3
    2153/    1348 : 8645                		or.w	d5,d3
    2154/    134A : 1587 6000           		move.b	d7,(a2,d6.w)
    2155/    134E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2156/    1354 :                     ; ----------------------------------------------------------------
    2157/    1354 :                     
    2158/    1354 :                     loc_18F0:				; DATA XREF: ROM:00000B8Ao
    2159/    1354 : 4246                		clr.w	d6
    2160/    1356 : 1C18                		move.b	(a0)+,d6
    2161/    1358 : DC01                		add.b	d1,d6
    2162/    135A : 1E32 6000           		move.b	(a2,d6.w),d7
    2163/    135E : E20F                		lsr.b	#1,d7
    2164/    1360 : 40C5                		move	sr,d5
    2165/    1362 : 0245 001D           		andi.w	#$1D,d5
    2166/    1366 : 0203 00E2           		andi.b	#$E2,d3
    2167/    136A : 8645                		or.w	d5,d3
    2168/    136C : 1587 6000           		move.b	d7,(a2,d6.w)
    2169/    1370 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2170/    1376 :                     ; ----------------------------------------------------------------
    2171/    1376 :                     
    2172/    1376 :                     loc_1910:				; DATA XREF: ROM:00000B6Ao
    2173/    1376 : 1818                		move.b	(a0)+,d4
    2174/    1378 : 1C18                		move.b	(a0)+,d6
    2175/    137A : E14E                		lsl.w	#8,d6
    2176/    137C : 1C04                		move.b	d4,d6
    2177/    137E : 1E32 6000           		move.b	(a2,d6.w),d7
    2178/    1382 : E20F                		lsr.b	#1,d7
    2179/    1384 : 40C5                		move	sr,d5
    2180/    1386 : 0245 001D           		andi.w	#$1D,d5
    2181/    138A : 0203 00E2           		andi.b	#$E2,d3
    2182/    138E : 8645                		or.w	d5,d3
    2183/    1390 : 1587 6000           		move.b	d7,(a2,d6.w)
    2184/    1394 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2185/    139A :                     ; ----------------------------------------------------------------
    2186/    139A :                     
    2187/    139A :                     loc_1932:				; DATA XREF: ROM:00000BAAo
    2188/    139A : 1818                		move.b	(a0)+,d4
    2189/    139C : 1C18                		move.b	(a0)+,d6
    2190/    139E : E14E                		lsl.w	#8,d6
    2191/    13A0 : 1C04                		move.b	d4,d6
    2192/    13A2 : DC41                		add.w	d1,d6
    2193/    13A4 : 1E32 6000           		move.b	(a2,d6.w),d7
    2194/    13A8 : E20F                		lsr.b	#1,d7
    2195/    13AA : 40C5                		move	sr,d5
    2196/    13AC : 0245 001D           		andi.w	#$1D,d5
    2197/    13B0 : 0203 00E2           		andi.b	#$E2,d3
    2198/    13B4 : 8645                		or.w	d5,d3
    2199/    13B6 : 1587 6000           		move.b	d7,(a2,d6.w)
    2200/    13BA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2201/    13C0 :                     ; ----------------------------------------------------------------
    2202/    13C0 :                     ; $EA - nop
    2203/    13C0 :                     
    2204/    13C0 :                     loc_1956:
    2205/    13C0 : 4E71                		nop
    2206/    13C2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2207/    13C8 :                     ; ----------------------------------------------------------------
    2208/    13C8 :                     
    2209/    13C8 :                     loc_195C:				; DATA XREF: ROM:00000A56o
    2210/    13C8 : 1E18                		move.b	(a0)+,d7
    2211/    13CA : 8007                		or.b	d7,d0
    2212/    13CC : 40C5                		move	sr,d5
    2213/    13CE : 0245 000C           		andi.w	#$C,d5
    2214/    13D2 : 0203 00F3           		andi.b	#$F3,d3
    2215/    13D6 : 8645                		or.w	d5,d3
    2216/    13D8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2217/    13DE :                     ; ----------------------------------------------------------------
    2218/    13DE :                     
    2219/    13DE :                     loc_1970:				; DATA XREF: ROM:00000A46o
    2220/    13DE : 4246                		clr.w	d6
    2221/    13E0 : 1C18                		move.b	(a0)+,d6
    2222/    13E2 : 1E32 6000           		move.b	(a2,d6.w),d7
    2223/    13E6 : 8007                		or.b	d7,d0
    2224/    13E8 : 40C5                		move	sr,d5
    2225/    13EA : 0245 000C           		andi.w	#$C,d5
    2226/    13EE : 0203 00F3           		andi.b	#$F3,d3
    2227/    13F2 : 8645                		or.w	d5,d3
    2228/    13F4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2229/    13FA :                     ; ----------------------------------------------------------------
    2230/    13FA :                     
    2231/    13FA :                     loc_198A:				; DATA XREF: ROM:00000A86o
    2232/    13FA : 4246                		clr.w	d6
    2233/    13FC : 1C18                		move.b	(a0)+,d6
    2234/    13FE : DC01                		add.b	d1,d6
    2235/    1400 : 1E32 6000           		move.b	(a2,d6.w),d7
    2236/    1404 : 8007                		or.b	d7,d0
    2237/    1406 : 40C5                		move	sr,d5
    2238/    1408 : 0245 000C           		andi.w	#$C,d5
    2239/    140C : 0203 00F3           		andi.b	#$F3,d3
    2240/    1410 : 8645                		or.w	d5,d3
    2241/    1412 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2242/    1418 :                     ; ----------------------------------------------------------------
    2243/    1418 :                     
    2244/    1418 :                     loc_19A6:				; DATA XREF: ROM:00000A66o
    2245/    1418 : 4244                		clr.w	d4
    2246/    141A : 1818                		move.b	(a0)+,d4
    2247/    141C : 4246                		clr.w	d6
    2248/    141E : 1C18                		move.b	(a0)+,d6
    2249/    1420 : 6100 05B6           		bsr	addr_Read
    2250/    1424 : 8007                		or.b	d7,d0
    2251/    1426 : 40C5                		move	sr,d5
    2252/    1428 : 0245 000C           		andi.w	#$C,d5
    2253/    142C : 0203 00F3           		andi.b	#$F3,d3
    2254/    1430 : 8645                		or.w	d5,d3
    2255/    1432 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2256/    1438 :                     ; ----------------------------------------------------------------
    2257/    1438 :                     
    2258/    1438 :                     loc_19C6:				; DATA XREF: ROM:00000AA6o
    2259/    1438 : 4244                		clr.w	d4
    2260/    143A : 1818                		move.b	(a0)+,d4
    2261/    143C : 4246                		clr.w	d6
    2262/    143E : 1C18                		move.b	(a0)+,d6
    2263/    1440 : 4207                		clr.b	d7
    2264/    1442 : D801                		add.b	d1,d4
    2265/    1444 : DD07                		addx.b	d7,d6
    2266/    1446 : 6100 0590           		bsr	addr_Read
    2267/    144A : 8007                		or.b	d7,d0
    2268/    144C : 40C5                		move	sr,d5
    2269/    144E : 0245 000C           		andi.w	#$C,d5
    2270/    1452 : 0203 00F3           		andi.b	#$F3,d3
    2271/    1456 : 8645                		or.w	d5,d3
    2272/    1458 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2273/    145E :                     ; ----------------------------------------------------------------
    2274/    145E :                     
    2275/    145E :                     loc_19EC:				; DATA XREF: ROM:00000A96o
    2276/    145E : 4244                		clr.w	d4
    2277/    1460 : 1818                		move.b	(a0)+,d4
    2278/    1462 : 4246                		clr.w	d6
    2279/    1464 : 1C18                		move.b	(a0)+,d6
    2280/    1466 : 4207                		clr.b	d7
    2281/    1468 : D802                		add.b	d2,d4
    2282/    146A : DD07                		addx.b	d7,d6
    2283/    146C : 6100 056A           		bsr	addr_Read
    2284/    1470 : 8007                		or.b	d7,d0
    2285/    1472 : 40C5                		move	sr,d5
    2286/    1474 : 0245 000C           		andi.w	#$C,d5
    2287/    1478 : 0203 00F3           		andi.b	#$F3,d3
    2288/    147C : 8645                		or.w	d5,d3
    2289/    147E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2290/    1484 :                     ; ----------------------------------------------------------------
    2291/    1484 :                     
    2292/    1484 :                     loc_1A12:
    2293/    1484 : 4244                		clr.w	d4
    2294/    1486 : 4245                		clr.w	d5
    2295/    1488 : 4246                		clr.w	d6
    2296/    148A : 1A18                		move.b	(a0)+,d5
    2297/    148C : DA01                		add.b	d1,d5
    2298/    148E : 1832 5000           		move.b	(a2,d5.w),d4
    2299/    1492 : DA3C 0001           		add.b	#1,d5
    2300/    1496 : 1C32 5000           		move.b	(a2,d5.w),d6
    2301/    149A : 6100 053C           		bsr	addr_Read
    2302/    149E : 8007                		or.b	d7,d0
    2303/    14A0 : 40C5                		move	sr,d5
    2304/    14A2 : 0245 000C           		andi.w	#$C,d5
    2305/    14A6 : 0203 00F3           		andi.b	#$F3,d3
    2306/    14AA : 8645                		or.w	d5,d3
    2307/    14AC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2308/    14B2 :                     ; ----------------------------------------------------------------
    2309/    14B2 :                     
    2310/    14B2 :                     loc_1A3C:
    2311/    14B2 : 4244                		clr.w	d4
    2312/    14B4 : 4245                		clr.w	d5
    2313/    14B6 : 4246                		clr.w	d6
    2314/    14B8 : 1A18                		move.b	(a0)+,d5
    2315/    14BA : 1832 5000           		move.b	(a2,d5.w),d4
    2316/    14BE : DA3C 0001           		add.b	#1,d5
    2317/    14C2 : 1C32 5000           		move.b	(a2,d5.w),d6
    2318/    14C6 : 4207                		clr.b	d7
    2319/    14C8 : D802                		add.b	d2,d4
    2320/    14CA : DD07                		addx.b	d7,d6
    2321/    14CC : 6100 050A           		bsr	addr_Read
    2322/    14D0 : 8007                		or.b	d7,d0
    2323/    14D2 : 40C5                		move	sr,d5
    2324/    14D4 : 0245 000C           		andi.w	#$C,d5
    2325/    14D8 : 0203 00F3           		andi.b	#$F3,d3
    2326/    14DC : 8645                		or.w	d5,d3
    2327/    14DE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2328/    14E4 :                     ; ----------------------------------------------------------------
    2329/    14E4 :                     
    2330/    14E4 :                     loc_1A6A:				; DATA XREF: ROM:00000B52o
    2331/    14E4 : 4843                		swap	d3
    2332/    14E6 : 1580 3000           		move.b	d0,(a2,d3.w)
    2333/    14EA : 5303                		subq.b	#1,d3
    2334/    14EC : 4843                		swap	d3
    2335/    14EE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2336/    14F4 :                     
    2337/    14F4 :                     ; ----------------------------------------------------------------
    2338/    14F4 :                     ; $08 - PHP
    2339/    14F4 :                     ; ----------------------------------------------------------------
    2340/    14F4 :                     
    2341/    14F4 :                     loc_1A78:
    2342/    14F4 : 3A03                		move.w	d3,d5
    2343/    14F6 : 4843                		swap	d3
    2344/    14F8 : 1585 3000           		move.b	d5,(a2,d3.w)
    2345/    14FC : 967C 0001           		sub.w	#1,d3
    2346/    1500 : 4843                		swap	d3
    2347/    1502 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2348/    1508 :                     ; ----------------------------------------------------------------
    2349/    1508 :                     
    2350/    1508 :                     loc_1A88:
    2351/    1508 : 0683 0001 0000      		addi.l	#$10000,d3
    2352/    150E : 2A03                		move.l	d3,d5
    2353/    1510 : 4845                		swap	d5
    2354/    1512 : 1032 5000           		move.b	(a2,d5.w),d0
    2355/    1516 : 40C5                		move	sr,d5
    2356/    1518 : 0245 000C           		andi.w	#$C,d5
    2357/    151C : 0203 00F3           		andi.b	#$F3,d3
    2358/    1520 : 8645                		or.w	d5,d3
    2359/    1522 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2360/    1528 :                     
    2361/    1528 :                     ; ----------------------------------------------------------------
    2362/    1528 :                     ; $28 - PLP
    2363/    1528 :                     ; ----------------------------------------------------------------
    2364/    1528 :                     
    2365/    1528 :                     loc_1AA6:
    2366/    1528 : 4843                		swap	d3
    2367/    152A : D67C 0001           		add.w	#1,d3
    2368/    152E : 1A32 3000           		move.b	(a2,d3.w),d5
    2369/    1532 : 4843                		swap	d3
    2370/    1534 : 1605                		move.b	d5,d3
    2371/    1536 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2372/    153C :                     ; ----------------------------------------------------------------
    2373/    153C :                     
    2374/    153C :                     loc_1AB6:
    2375/    153C : 46C3                		move	d3,sr
    2376/    153E : E310                		roxl.b	#1,d0
    2377/    1540 : 40C5                		move	sr,d5
    2378/    1542 : 0245 001D           		andi.w	#$1D,d5
    2379/    1546 : 0203 00E2           		andi.b	#$E2,d3
    2380/    154A : 8645                		or.w	d5,d3
    2381/    154C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2382/    1552 :                     ; ----------------------------------------------------------------
    2383/    1552 :                     
    2384/    1552 :                     loc_1ACA:				; DATA XREF: ROM:00000ACAo
    2385/    1552 : 4246                		clr.w	d6
    2386/    1554 : 1C18                		move.b	(a0)+,d6
    2387/    1556 : 1E32 6000           		move.b	(a2,d6.w),d7
    2388/    155A : 46C3                		move	d3,sr
    2389/    155C : E317                		roxl.b	#1,d7
    2390/    155E : 40C5                		move	sr,d5
    2391/    1560 : 0245 001D           		andi.w	#$1D,d5
    2392/    1564 : 0203 00E2           		andi.b	#$E2,d3
    2393/    1568 : 8645                		or.w	d5,d3
    2394/    156A : 1587 6000           		move.b	d7,(a2,d6.w)
    2395/    156E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2396/    1574 :                     ; ----------------------------------------------------------------
    2397/    1574 :                     
    2398/    1574 :                     loc_1AEA:				; DATA XREF: ROM:00000B0Ao
    2399/    1574 : 4246                		clr.w	d6
    2400/    1576 : 1C18                		move.b	(a0)+,d6
    2401/    1578 : DC01                		add.b	d1,d6
    2402/    157A : 1E32 6000           		move.b	(a2,d6.w),d7
    2403/    157E : 46C3                		move	d3,sr
    2404/    1580 : E317                		roxl.b	#1,d7
    2405/    1582 : 40C5                		move	sr,d5
    2406/    1584 : 0245 001D           		andi.w	#$1D,d5
    2407/    1588 : 0203 00E2           		andi.b	#$E2,d3
    2408/    158C : 8645                		or.w	d5,d3
    2409/    158E : 1587 6000           		move.b	d7,(a2,d6.w)
    2410/    1592 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2411/    1598 :                     ; ----------------------------------------------------------------
    2412/    1598 :                     
    2413/    1598 :                     loc_1B0C:				; DATA XREF: ROM:00000AEAo
    2414/    1598 : 1818                		move.b	(a0)+,d4
    2415/    159A : 1C18                		move.b	(a0)+,d6
    2416/    159C : E14E                		lsl.w	#8,d6
    2417/    159E : 1C04                		move.b	d4,d6
    2418/    15A0 : 1E32 6000           		move.b	(a2,d6.w),d7
    2419/    15A4 : 46C3                		move	d3,sr
    2420/    15A6 : E317                		roxl.b	#1,d7
    2421/    15A8 : 40C5                		move	sr,d5
    2422/    15AA : 0245 001D           		andi.w	#$1D,d5
    2423/    15AE : 0203 00E2           		andi.b	#$E2,d3
    2424/    15B2 : 8645                		or.w	d5,d3
    2425/    15B4 : 1587 6000           		move.b	d7,(a2,d6.w)
    2426/    15B8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2427/    15BE :                     ; ----------------------------------------------------------------
    2428/    15BE :                     
    2429/    15BE :                     loc_1B30:				; DATA XREF: ROM:00000B2Ao
    2430/    15BE : 1818                		move.b	(a0)+,d4
    2431/    15C0 : 1C18                		move.b	(a0)+,d6
    2432/    15C2 : E14E                		lsl.w	#8,d6
    2433/    15C4 : 1C04                		move.b	d4,d6
    2434/    15C6 : DC41                		add.w	d1,d6
    2435/    15C8 : 1E32 6000           		move.b	(a2,d6.w),d7
    2436/    15CC : 46C3                		move	d3,sr
    2437/    15CE : E317                		roxl.b	#1,d7
    2438/    15D0 : 40C5                		move	sr,d5
    2439/    15D2 : 0245 001D           		andi.w	#$1D,d5
    2440/    15D6 : 0203 00E2           		andi.b	#$E2,d3
    2441/    15DA : 8645                		or.w	d5,d3
    2442/    15DC : 1587 6000           		move.b	d7,(a2,d6.w)
    2443/    15E0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2444/    15E6 :                     ; ----------------------------------------------------------------
    2445/    15E6 :                     
    2446/    15E6 :                     loc_1B56:				; DATA XREF: ROM:00000BDAo
    2447/    15E6 : 46C3                		move	d3,sr
    2448/    15E8 : E210                		roxr.b	#1,d0
    2449/    15EA : 40C5                		move	sr,d5
    2450/    15EC : 0245 001D           		andi.w	#$1D,d5
    2451/    15F0 : 0203 00E2           		andi.b	#$E2,d3
    2452/    15F4 : 8645                		or.w	d5,d3
    2453/    15F6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2454/    15FC :                     ; ----------------------------------------------------------------
    2455/    15FC :                     
    2456/    15FC :                     loc_1B6A:				; DATA XREF: ROM:00000BCAo
    2457/    15FC : 4246                		clr.w	d6
    2458/    15FE : 1C18                		move.b	(a0)+,d6
    2459/    1600 : 1E32 6000           		move.b	(a2,d6.w),d7
    2460/    1604 : 46C3                		move	d3,sr
    2461/    1606 : E217                		roxr.b	#1,d7
    2462/    1608 : 40C5                		move	sr,d5
    2463/    160A : 0245 001D           		andi.w	#$1D,d5
    2464/    160E : 0203 00E2           		andi.b	#$E2,d3
    2465/    1612 : 8645                		or.w	d5,d3
    2466/    1614 : 1587 6000           		move.b	d7,(a2,d6.w)
    2467/    1618 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2468/    161E :                     ; ----------------------------------------------------------------
    2469/    161E :                     
    2470/    161E :                     loc_1B8A:				; DATA XREF: ROM:00000C0Ao
    2471/    161E : 4246                		clr.w	d6
    2472/    1620 : 1C18                		move.b	(a0)+,d6
    2473/    1622 : DC01                		add.b	d1,d6
    2474/    1624 : 1E32 6000           		move.b	(a2,d6.w),d7
    2475/    1628 : 46C3                		move	d3,sr
    2476/    162A : E217                		roxr.b	#1,d7
    2477/    162C : 40C5                		move	sr,d5
    2478/    162E : 0245 001D           		andi.w	#$1D,d5
    2479/    1632 : 0203 00E2           		andi.b	#$E2,d3
    2480/    1636 : 8645                		or.w	d5,d3
    2481/    1638 : 1587 6000           		move.b	d7,(a2,d6.w)
    2482/    163C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2483/    1642 :                     ; ----------------------------------------------------------------
    2484/    1642 :                     
    2485/    1642 :                     loc_1BAC:				; DATA XREF: ROM:00000BEAo
    2486/    1642 : 1818                		move.b	(a0)+,d4
    2487/    1644 : 1C18                		move.b	(a0)+,d6
    2488/    1646 : E14E                		lsl.w	#8,d6
    2489/    1648 : 1C04                		move.b	d4,d6
    2490/    164A : 1E32 6000           		move.b	(a2,d6.w),d7
    2491/    164E : 46C3                		move	d3,sr
    2492/    1650 : E217                		roxr.b	#1,d7
    2493/    1652 : 40C5                		move	sr,d5
    2494/    1654 : 0245 001D           		andi.w	#$1D,d5
    2495/    1658 : 0203 00E2           		andi.b	#$E2,d3
    2496/    165C : 8645                		or.w	d5,d3
    2497/    165E : 1587 6000           		move.b	d7,(a2,d6.w)
    2498/    1662 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2499/    1668 :                     ; ----------------------------------------------------------------
    2500/    1668 :                     
    2501/    1668 :                     loc_1BD0:				; DATA XREF: ROM:00000C2Ao
    2502/    1668 : 1818                		move.b	(a0)+,d4
    2503/    166A : 1C18                		move.b	(a0)+,d6
    2504/    166C : E14E                		lsl.w	#8,d6
    2505/    166E : 1C04                		move.b	d4,d6
    2506/    1670 : DC41                		add.w	d1,d6
    2507/    1672 : 1E32 6000           		move.b	(a2,d6.w),d7
    2508/    1676 : 46C3                		move	d3,sr
    2509/    1678 : E217                		roxr.b	#1,d7
    2510/    167A : 40C5                		move	sr,d5
    2511/    167C : 0245 001D           		andi.w	#$1D,d5
    2512/    1680 : 0203 00E2           		andi.b	#$E2,d3
    2513/    1684 : 8645                		or.w	d5,d3
    2514/    1686 : 1587 6000           		move.b	d7,(a2,d6.w)
    2515/    168A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2516/    1690 :                     
    2517/    1690 :                     ; ----------------------------------------------------------------
    2518/    1690 :                     ; $40 - RTI
    2519/    1690 :                     ; 
    2520/    1690 :                     ; NOTE: Interrupt exit
    2521/    1690 :                     ; ----------------------------------------------------------------
    2522/    1690 :                     
    2523/    1690 :                     loc_1BF6:
    2524/    1690 : 4A6C 0034           		tst.w	cpuFamiVint(a4)
    2525/    1694 : 6720                		beq.s	.nonint
    2526/    1696 : 4CEC 2100 0008      		movem.l	famiVintSave(a4),a0/a5
    2527/    169C : 362C 0028           		move.w	famiVintSave2(a4),d3
    2528/    16A0 :                     
    2529/    16A0 :                     ; 		movem.l	famiVintSave(a4),d7/a5
    2530/    16A0 : 23FC 0000 055E FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
    2531/    16AA : 397C 0000 0034      		move.w	#0,cpuFamiVint(a4)
    2532/    16B0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2533/    16B6 :                     
    2534/    16B6 :                     .nonint:
    2535/    16B6 : 4843                		swap	d3
    2536/    16B8 : 7C00                		moveq	#0,d6
    2537/    16BA : 5203                		addq.b	#1,d3
    2538/    16BC : 1A32 3000           		move.b	(a2,d3.w),d5
    2539/    16C0 : 5203                		addq.b	#1,d3
    2540/    16C2 : 1832 3000           		move.b	(a2,d3.w),d4
    2541/    16C6 : 5203                		addq.b	#1,d3
    2542/    16C8 : 1C32 3000           		move.b	(a2,d3.w),d6
    2543/    16CC : E14E                		lsl.w	#8,d6
    2544/    16CE : 1C04                		move.b	d4,d6
    2545/    16D0 : 4843                		swap	d3
    2546/    16D2 : 1605                		move.b	d5,d3
    2547/    16D4 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2548/    16DA : 2049                		movea.l a1,a0
    2549/    16DC : D1C6                		add.l 	d6,a0
    2550/    16DE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2551/    16E4 :                     
    2552/    16E4 :                     ; ----------------------------------------------------------------
    2553/    16E4 :                     ; $60 - RTS
    2554/    16E4 :                     ; ----------------------------------------------------------------
    2555/    16E4 :                     
    2556/    16E4 :                     loc_1C32:
    2557/    16E4 : 4843                		swap	d3
    2558/    16E6 : 7C00                		moveq	#0,d6
    2559/    16E8 : 5203                		addq.b	#1,d3
    2560/    16EA : 1832 3000           		move.b	(a2,d3.w),d4
    2561/    16EE : 5203                		addq.b	#1,d3
    2562/    16F0 : 1C32 3000           		move.b	(a2,d3.w),d6
    2563/    16F4 : E14E                		lsl.w	#8,d6
    2564/    16F6 : 1C04                		move.b	d4,d6
    2565/    16F8 : 4843                		swap	d3
    2566/    16FA : 5246                		addq.w	#1,d6
    2567/    16FC :                     
    2568/    16FC : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2569/    1702 : 2049                		movea.l a1,a0
    2570/    1704 : D1C6                		add.l 	d6,a0
    2571/    1706 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2572/    170C :                     ; ----------------------------------------------------------------
    2573/    170C :                     
    2574/    170C :                     loc_1C52:
    2575/    170C : 1E18                		move.b	(a0)+,d7
    2576/    170E : 0A03 0011           		eori.b	#$11,d3
    2577/    1712 : 0003 0004           		ori.b	#4,d3
    2578/    1716 : 46C3                		move	d3,sr
    2579/    1718 : 9107                		subx.b	d7,d0
    2580/    171A : 40C3                		move	sr,d3
    2581/    171C : 0A03 0011           		eori.b	#$11,d3
    2582/    1720 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2583/    1726 :                     ; ----------------------------------------------------------------
    2584/    1726 :                     
    2585/    1726 :                     loc_1C6A:
    2586/    1726 : 4246                		clr.w	d6
    2587/    1728 : 1C18                		move.b	(a0)+,d6
    2588/    172A : 1E32 6000           		move.b	(a2,d6.w),d7
    2589/    172E : 0A03 0011           		eori.b	#$11,d3
    2590/    1732 : 0003 0004           		ori.b	#4,d3
    2591/    1736 : 46C3                		move	d3,sr
    2592/    1738 : 9107                		subx.b	d7,d0
    2593/    173A : 40C3                		move	sr,d3
    2594/    173C : 0A03 0011           		eori.b	#$11,d3
    2595/    1740 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2596/    1746 :                     ; ----------------------------------------------------------------
    2597/    1746 :                     
    2598/    1746 :                     loc_1C88:				; DATA XREF: ROM:00000E06o
    2599/    1746 : 4246                		clr.w	d6
    2600/    1748 : 1C18                		move.b	(a0)+,d6
    2601/    174A : DC01                		add.b	d1,d6
    2602/    174C : 1E32 6000           		move.b	(a2,d6.w),d7
    2603/    1750 : 0A03 0011           		eori.b	#$11,d3
    2604/    1754 : 0003 0004           		ori.b	#4,d3
    2605/    1758 : 46C3                		move	d3,sr
    2606/    175A : 9107                		subx.b	d7,d0
    2607/    175C : 40C3                		move	sr,d3
    2608/    175E : 0A03 0011           		eori.b	#$11,d3
    2609/    1762 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2610/    1768 :                     ; ----------------------------------------------------------------
    2611/    1768 :                     
    2612/    1768 :                     loc_1CA8:				; DATA XREF: ROM:00000DE6o
    2613/    1768 : 4244                		clr.w	d4
    2614/    176A : 1818                		move.b	(a0)+,d4
    2615/    176C : 4246                		clr.w	d6
    2616/    176E : 1C18                		move.b	(a0)+,d6
    2617/    1770 : 6100 0266           		bsr	addr_Read
    2618/    1774 : 0A03 0011           		eori.b	#$11,d3
    2619/    1778 : 0003 0004           		ori.b	#4,d3
    2620/    177C : 46C3                		move	d3,sr
    2621/    177E : 9107                		subx.b	d7,d0
    2622/    1780 : 40C3                		move	sr,d3
    2623/    1782 : 0A03 0011           		eori.b	#$11,d3
    2624/    1786 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2625/    178C :                     ; ----------------------------------------------------------------
    2626/    178C :                     
    2627/    178C :                     loc_1CCC:				; DATA XREF: ROM:00000E26o
    2628/    178C : 4244                		clr.w	d4
    2629/    178E : 1818                		move.b	(a0)+,d4
    2630/    1790 : 4246                		clr.w	d6
    2631/    1792 : 1C18                		move.b	(a0)+,d6
    2632/    1794 : 4207                		clr.b	d7
    2633/    1796 : D801                		add.b	d1,d4
    2634/    1798 : DD07                		addx.b	d7,d6
    2635/    179A : 6100 023C           		bsr	addr_Read
    2636/    179E : 0A03 0011           		eori.b	#$11,d3
    2637/    17A2 : 0003 0004           		ori.b	#4,d3
    2638/    17A6 : 46C3                		move	d3,sr
    2639/    17A8 : 9107                		subx.b	d7,d0
    2640/    17AA : 40C3                		move	sr,d3
    2641/    17AC : 0A03 0011           		eori.b	#$11,d3
    2642/    17B0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2643/    17B6 :                     ; ----------------------------------------------------------------
    2644/    17B6 :                     
    2645/    17B6 :                     loc_1CF6:
    2646/    17B6 : 4244                		clr.w	d4
    2647/    17B8 : 4245                		clr.w	d5
    2648/    17BA : 4207                		clr.b	d7
    2649/    17BC : 1818                		move.b	(a0)+,d4
    2650/    17BE : 1C18                		move.b	(a0)+,d6
    2651/    17C0 : D802                		add.b	d2,d4
    2652/    17C2 : DD07                		addx.b	d7,d6
    2653/    17C4 : 6100 0212           		bsr	addr_Read
    2654/    17C8 : 0A03 0011           		eori.b	#$11,d3
    2655/    17CC : 0003 0004           		ori.b	#4,d3
    2656/    17D0 : 46C3                		move	d3,sr
    2657/    17D2 : 9107                		subx.b	d7,d0
    2658/    17D4 : 40C3                		move	sr,d3
    2659/    17D6 : 0A03 0011           		eori.b	#$11,d3
    2660/    17DA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2661/    17E0 :                     ; ----------------------------------------------------------------
    2662/    17E0 :                     
    2663/    17E0 :                     loc_1D20:
    2664/    17E0 : 4244                		clr.w	d4
    2665/    17E2 : 4245                		clr.w	d5
    2666/    17E4 : 4246                		clr.w	d6
    2667/    17E6 : 1A18                		move.b	(a0)+,d5
    2668/    17E8 : DA01                		add.b	d1,d5
    2669/    17EA : 1832 5000           		move.b	(a2,d5.w),d4
    2670/    17EE : DA3C 0001           		add.b	#1,d5
    2671/    17F2 : 1C32 5000           		move.b	(a2,d5.w),d6
    2672/    17F6 :                     
    2673/    17F6 : 6100 01E0           		bsr	addr_Read
    2674/    17FA : 0A03 0011           		eori.b	#$11,d3
    2675/    17FE : 0003 0004           		ori.b	#4,d3
    2676/    1802 : 46C3                		move	d3,sr
    2677/    1804 : 9107                		subx.b	d7,d0
    2678/    1806 : 40C3                		move	sr,d3
    2679/    1808 : 0A03 0011           		eori.b	#$11,d3
    2680/    180C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2681/    1812 :                     ; ----------------------------------------------------------------
    2682/    1812 :                     
    2683/    1812 :                     loc_1D4E:
    2684/    1812 : 4244                		clr.w	d4
    2685/    1814 : 4245                		clr.w	d5
    2686/    1816 : 4246                		clr.w	d6
    2687/    1818 : 1A18                		move.b	(a0)+,d5
    2688/    181A : 1832 5000           		move.b	(a2,d5.w),d4
    2689/    181E : DA3C 0001           		add.b	#1,d5
    2690/    1822 : 1C32 5000           		move.b	(a2,d5.w),d6
    2691/    1826 : 4207                		clr.b	d7
    2692/    1828 : D802                		add.b	d2,d4
    2693/    182A : DD07                		addx.b	d7,d6
    2694/    182C : 6100 01AA           		bsr	addr_Read
    2695/    1830 : 0A03 0011           		eori.b	#$11,d3
    2696/    1834 : 0003 0004           		ori.b	#4,d3
    2697/    1838 : 46C3                		move	d3,sr
    2698/    183A : 9107                		subx.b	d7,d0
    2699/    183C : 40C3                		move	sr,d3
    2700/    183E : 0A03 0011           		eori.b	#$11,d3
    2701/    1842 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2702/    1848 :                     ; ----------------------------------------------------------------
    2703/    1848 :                     
    2704/    1848 :                     loc_1D80:
    2705/    1848 : 0003 0011           		ori.b	#$11,d3
    2706/    184C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2707/    1852 :                     
    2708/    1852 :                     ; ----------------------------------------------------------------
    2709/    1852 :                     ; SED - Set Decimal mode
    2710/    1852 :                     ; ----------------------------------------------------------------
    2711/    1852 :                     
    2712/    1852 :                     loc_1D88:
    2713/    1852 : 397C 0001 003A      		move.w	#1,cpuModeDec(a4)
    2714/    1858 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2715/    185E :                     
    2716/    185E :                     ; ----------------------------------------------------------------
    2717/    185E :                     ; SEI - Set Interrupt disable
    2718/    185E :                     ; ----------------------------------------------------------------
    2719/    185E :                     
    2720/    185E :                     loc_1D92:
    2721/    185E : 397C 0001 003E      		move.w	#1,cpuModeIntDis(a4)
    2722/    1864 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2723/    186A :                     
    2724/    186A :                     ; ----------------------------------------------------------------
    2725/    186A :                     
    2726/    186A :                     loc_1D9C:
    2727/    186A : 4244                		clr.w	d4
    2728/    186C : 1818                		move.b	(a0)+,d4
    2729/    186E : 1580 4000           		move.b	d0,(a2,d4.w)
    2730/    1872 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2731/    1878 :                     ; ----------------------------------------------------------------
    2732/    1878 :                     
    2733/    1878 :                     loc_1DA8:
    2734/    1878 : 4244                		clr.w	d4
    2735/    187A : 1818                		move.b	(a0)+,d4
    2736/    187C : D801                		add.b	d1,d4
    2737/    187E : 1580 4000           		move.b	d0,(a2,d4.w)
    2738/    1882 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2739/    1888 :                     ; ----------------------------------------------------------------
    2740/    1888 :                     
    2741/    1888 :                     loc_1DB6:				; DATA XREF: ROM:00000C66o
    2742/    1888 : 4244                		clr.w	d4
    2743/    188A : 1818                		move.b	(a0)+,d4
    2744/    188C : 4246                		clr.w	d6
    2745/    188E : 1C18                		move.b	(a0)+,d6
    2746/    1890 : 1E00                		move.b	d0,d7
    2747/    1892 : 6000 0224           		bra	addr_Write
    2748/    1896 :                     ; ----------------------------------------------------------------
    2749/    1896 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2750/    189C :                     ; ----------------------------------------------------------------
    2751/    189C :                     
    2752/    189C :                     loc_1DCA:
    2753/    189C : 4244                		clr.w	d4
    2754/    189E : 1818                		move.b	(a0)+,d4
    2755/    18A0 : 4246                		clr.w	d6
    2756/    18A2 : 1C18                		move.b	(a0)+,d6
    2757/    18A4 : 4207                		clr.b	d7
    2758/    18A6 : D801                		add.b	d1,d4
    2759/    18A8 : DD07                		addx.b	d7,d6
    2760/    18AA : 1E00                		move.b	d0,d7
    2761/    18AC : 6000 020A           		bra	addr_Write
    2762/    18B0 :                     ; ----------------------------------------------------------------
    2763/    18B0 :                     
    2764/    18B0 :                     loc_1DE0:
    2765/    18B0 : 4244                		clr.w	d4
    2766/    18B2 : 1818                		move.b	(a0)+,d4
    2767/    18B4 : 4246                		clr.w	d6
    2768/    18B6 : 1C18                		move.b	(a0)+,d6
    2769/    18B8 : 4207                		clr.b	d7
    2770/    18BA : D802                		add.b	d2,d4
    2771/    18BC : DD07                		addx.b	d7,d6
    2772/    18BE : 1E00                		move.b	d0,d7
    2773/    18C0 : 6000 01F6           		bra	addr_Write
    2774/    18C4 :                     ; ----------------------------------------------------------------
    2775/    18C4 :                     ; STA (oper,X)
    2776/    18C4 :                     
    2777/    18C4 :                     loc_1DF6:
    2778/    18C4 : 4245                		clr.w	d5
    2779/    18C6 : 4244                		clr.w	d4
    2780/    18C8 : 4246                		clr.w	d6
    2781/    18CA : 1A18                		move.b	(a0)+,d5
    2782/    18CC : DA01                		add.b	d1,d5
    2783/    18CE : 1832 5000           		move.b	(a2,d5.w),d4
    2784/    18D2 : DA3C 0001           		add.b	#1,d5
    2785/    18D6 : 1C32 5000           		move.b	(a2,d5.w),d6
    2786/    18DA : 1E00                		move.b	d0,d7
    2787/    18DC : 6000 01DA           		bra	addr_Write
    2788/    18E0 :                     ; ----------------------------------------------------------------
    2789/    18E0 :                     
    2790/    18E0 :                     loc_1E10:
    2791/    18E0 : 4244                		clr.w	d4
    2792/    18E2 : 4245                		clr.w	d5
    2793/    18E4 : 4246                		clr.w	d6
    2794/    18E6 : 1A18                		move.b	(a0)+,d5
    2795/    18E8 : 1832 5000           		move.b	(a2,d5.w),d4
    2796/    18EC : DA3C 0001           		add.b	#1,d5
    2797/    18F0 : 1C32 5000           		move.b	(a2,d5.w),d6
    2798/    18F4 : 4207                		clr.b	d7
    2799/    18F6 : D802                		add.b	d2,d4
    2800/    18F8 : DD07                		addx.b	d7,d6
    2801/    18FA : 1E00                		move.b	d0,d7
    2802/    18FC : 6000 01BA           		bra	addr_Write
    2803/    1900 :                     ; ----------------------------------------------------------------
    2804/    1900 :                     
    2805/    1900 :                     loc_1E2E:
    2806/    1900 : 4244                		clr.w	d4
    2807/    1902 : 1818                		move.b	(a0)+,d4
    2808/    1904 : 1581 4000           		move.b	d1,(a2,d4.w)
    2809/    1908 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2810/    190E :                     ; ----------------------------------------------------------------
    2811/    190E :                     
    2812/    190E :                     loc_1E3A:
    2813/    190E : 4244                		clr.w	d4
    2814/    1910 : 1818                		move.b	(a0)+,d4
    2815/    1912 : D802                		add.b	d2,d4
    2816/    1914 : 1581 4000           		move.b	d1,(a2,d4.w)
    2817/    1918 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2818/    191E :                     ; ----------------------------------------------------------------
    2819/    191E :                     
    2820/    191E :                     loc_1E48:
    2821/    191E : 4244                		clr.w	d4
    2822/    1920 : 1818                		move.b	(a0)+,d4
    2823/    1922 : 4246                		clr.w	d6
    2824/    1924 : 1C18                		move.b	(a0)+,d6
    2825/    1926 : 1E01                		move.b	d1,d7
    2826/    1928 : 6000 018E           		bra	addr_Write
    2827/    192C :                     ; ----------------------------------------------------------------
    2828/    192C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2829/    1932 :                     ; ----------------------------------------------------------------
    2830/    1932 :                     
    2831/    1932 :                     loc_1E5C:
    2832/    1932 : 4244                		clr.w	d4
    2833/    1934 : 1818                		move.b	(a0)+,d4
    2834/    1936 : 1582 4000           		move.b	d2,(a2,d4.w)
    2835/    193A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2836/    1940 :                     ; ----------------------------------------------------------------
    2837/    1940 :                     
    2838/    1940 :                     loc_1E68:
    2839/    1940 : 4244                		clr.w	d4
    2840/    1942 : 1818                		move.b	(a0)+,d4
    2841/    1944 : D801                		add.b	d1,d4
    2842/    1946 : 1582 4000           		move.b	d2,(a2,d4.w)
    2843/    194A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2844/    1950 :                     ; ----------------------------------------------------------------
    2845/    1950 :                     
    2846/    1950 :                     loc_1E76:
    2847/    1950 : 4244                		clr.w	d4
    2848/    1952 : 1818                		move.b	(a0)+,d4
    2849/    1954 : 4246                		clr.w	d6
    2850/    1956 : 1C18                		move.b	(a0)+,d6
    2851/    1958 : 1E02                		move.b	d2,d7
    2852/    195A : 6000 015C           		bra	addr_Write
    2853/    195E :                     ; ----------------------------------------------------------------
    2854/    195E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2855/    1964 :                     ; ----------------------------------------------------------------
    2856/    1964 :                     
    2857/    1964 :                     loc_1E8A:
    2858/    1964 : 1200                		move.b	d0,d1
    2859/    1966 : 40C5                		move	sr,d5
    2860/    1968 : 0245 000C           		andi.w	#$C,d5
    2861/    196C : 0203 00F3           		andi.b	#$F3,d3
    2862/    1970 : 8645                		or.w	d5,d3
    2863/    1972 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2864/    1978 :                     ; ----------------------------------------------------------------
    2865/    1978 :                     
    2866/    1978 :                     loc_1E9C:
    2867/    1978 : 1400                		move.b	d0,d2
    2868/    197A : 40C5                		move	sr,d5
    2869/    197C : 0245 000C           		andi.w	#$C,d5
    2870/    1980 : 0203 00F3           		andi.b	#$F3,d3
    2871/    1984 : 8645                		or.w	d5,d3
    2872/    1986 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2873/    198C :                     ; ----------------------------------------------------------------
    2874/    198C :                     ; TSX
    2875/    198C :                     
    2876/    198C :                     loc_1EAE:
    2877/    198C : 4843                		swap	d3
    2878/    198E : 1203                		move.b	d3,d1
    2879/    1990 : 4843                		swap	d3
    2880/    1992 : 40C5                		move	sr,d5
    2881/    1994 : 0245 000C           		andi.w	#$C,d5
    2882/    1998 : 0203 00F3           		andi.b	#$F3,d3
    2883/    199C : 8645                		or.w	d5,d3
    2884/    199E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2885/    19A4 :                     ; ----------------------------------------------------------------
    2886/    19A4 :                     
    2887/    19A4 :                     loc_1EC4:
    2888/    19A4 : 1001                		move.b	d1,d0
    2889/    19A6 : 40C5                		move	sr,d5
    2890/    19A8 : 0245 000C           		andi.w	#$C,d5
    2891/    19AC : 0203 00F3           		andi.b	#$F3,d3
    2892/    19B0 : 8645                		or.w	d5,d3
    2893/    19B2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2894/    19B8 :                     ; ----------------------------------------------------------------
    2895/    19B8 :                     
    2896/    19B8 :                     loc_1Ed3:
    2897/    19B8 : 4843                		swap	d3
    2898/    19BA : 1601                		move.b	d1,d3
    2899/    19BC : 4843                		swap	d3
    2900/    19BE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2901/    19C4 :                     ; ----------------------------------------------------------------
    2902/    19C4 :                     
    2903/    19C4 :                     loc_1EE0:
    2904/    19C4 : 1002                		move.b	d2,d0
    2905/    19C6 : 40C5                		move	sr,d5
    2906/    19C8 : 0245 000C           		andi.w	#$C,d5
    2907/    19CC : 0203 00F3           		andi.b	#$F3,d3
    2908/    19D0 : 8645                		or.w	d5,d3
    2909/    19D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2910/    19D8 :                     
    2911/    19D8 :                     ; ====================================================================
    2912/    19D8 :                     ; ----------------------------------------------------------------
    2913/    19D8 :                     ; Read request
    2914/    19D8 :                     ; 
    2915/    19D8 :                     ; d6 - XX00
    2916/    19D8 :                     ; d4 - 00XX
    2917/    19D8 :                     ; ----------------------------------------------------------------
    2918/    19D8 :                     
    2919/    19D8 :                     addr_Read:
    2920/    19D8 : 4A06                		tst.b	d6		; $8000
    2921/    19DA : 6B1A                		bmi	rdFrom_PRG
    2922/    19DC :                     	; TODO: $6000-$7FFF
    2923/    19DC : BC3C 0040           		cmp.b	#$40,d6		; $4000
    2924/    19E0 : 6C22                		bge	rdFrom_APU
    2925/    19E2 : BC3C 0020           		cmp.b	#$20,d6		; $2000
    2926/    19E6 : 6C52                		bge	rdFrom_PPU
    2927/    19E8 :                     
    2928/    19E8 :                     ; ----------------------------------------------------------------
    2929/    19E8 :                     
    2930/    19E8 :                     rdFrom_RAM:
    2931/    19E8 : E14E                		lsl.w	#8,d6
    2932/    19EA : 1C04                		move.b	d4,d6
    2933/    19EC : 0246 07FF           		andi.w	#$7FF,d6
    2934/    19F0 : 1E32 6000           		move.b	(a2,d6.w),d7
    2935/    19F4 : 4E75                		rts
    2936/    19F6 :                     ; ----------------------------------------------------------------
    2937/    19F6 :                     
    2938/    19F6 :                     rdFrom_PRG:
    2939/    19F6 : E14E                		lsl.w	#8,d6
    2940/    19F8 : 1C04                		move.b	d4,d6
    2941/    19FA : 0246 7FFF           		andi.w	#$7FFF,d6
    2942/    19FE : 1E31 6000           		move.b	(a1,d6.w),d7
    2943/    1A02 : 4E75                		rts
    2944/    1A04 :                     ; ----------------------------------------------------------------
    2945/    1A04 :                     
    2946/    1A04 :                     rdFrom_APU:
    2947/    1A04 : 0C04 001F           		cmpi.b	#$1F,d4
    2948/    1A08 : 6200 0010           		bhi.w	loc_23A6
    2949/    1A0C :                     
    2950/    1A0C : B83C 0016           		cmp.b	#$16,d4		; $4016
    2951/    1A10 : 670C                		beq.s	APU_Input_1
    2952/    1A12 : B83C 0017           		cmp.b	#$17,d4		; $4017
    2953/    1A16 : 6714                		beq.s	APU_Input_2
    2954/    1A18 :                     
    2955/    1A18 :                     ; ----------------------------------------------------------------
    2956/    1A18 :                     
    2957/    1A18 :                     APU_Rd_Null:
    2958/    1A18 : 4E75                		rts
    2959/    1A1A :                     
    2960/    1A1A :                     ; ----------------------------------------------------------------
    2961/    1A1A :                     
    2962/    1A1A :                     loc_23A6:
    2963/    1A1A : 3E03                		move.w	d3,d7
    2964/    1A1C : 4E75                		rts
    2965/    1A1E :                     
    2966/    1A1E :                     ; ----------------------------------------------------------------
    2967/    1A1E :                     
    2968/    1A1E :                     APU_Input_1:
    2969/    1A1E : 3E2C 0036           		move.w	cpuInputData(a4),d7
    2970/    1A22 : 0247 0001           		andi.w	#1,d7
    2971/    1A26 : E2EC 0036           		lsr	cpuInputData(a4)
    2972/    1A2A : 4E75                		rts
    2973/    1A2C :                     ; ----------------------------------------------------------------
    2974/    1A2C :                     
    2975/    1A2C :                     APU_Input_2:
    2976/    1A2C : 3E2C 0038           		move.w	cpuInputData+2(a4),d7
    2977/    1A30 : 0247 0001           		andi.w	#1,d7
    2978/    1A34 : E2EC 0038           		lsr	cpuInputData+2(a4)
    2979/    1A38 : 4E75                		rts
    2980/    1A3A :                     ; ----------------------------------------------------------------
    2981/    1A3A :                     
    2982/    1A3A :                     rdFrom_PPU:
    2983/    1A3A : 0244 0007           		andi.w	#7,d4
    2984/    1A3E : D844                		add.w	d4,d4
    2985/    1A40 : 383B 4006           		move.w	off_23D4(pc,d4.w),d4
    2986/    1A44 : 4EFB 4002           		jmp	off_23D4(pc,d4.w)
    2987/    1A48 :                     ; ----------------------------------------------------------------
    2988/    1A48 : 0010                off_23D4:	dc.w loc_23F4-off_23D4		; $2000
    2989/    1A4A : 0010                		dc.w loc_23F4-off_23D4		; $2001
    2990/    1A4C : 0016                		dc.w rdPPU_Status-off_23D4	; $2002
    2991/    1A4E : 0010                		dc.w loc_23F4-off_23D4		; $2003
    2992/    1A50 : 0056                		dc.w return_241A-off_23D4	; $2004
    2993/    1A52 : 0010                		dc.w loc_23F4-off_23D4		; $2005
    2994/    1A54 : 0010                		dc.w loc_23F4-off_23D4		; $2006
    2995/    1A56 : 0058                		dc.w rdPPU_Data-off_23D4	; $2007
    2996/    1A58 :                     ; ----------------------------------------------------------------
    2997/    1A58 :                     
    2998/    1A58 :                     loc_23F4:
    2999/    1A58 : 3E31 3000           		move.w	(a1,d3.w),d7
    3000/    1A5C : 4E75                		rts
    3001/    1A5E :                     ; ----------------------------------------------------------------
    3002/    1A5E :                     
    3003/    1A5E :                     rdPPU_Status:
    3004/    1A5E : 397C 0000 0050      		move.w	#0,ppuAddrLatch(a4)
    3005/    1A64 : 3E2C 0056           		move.w	ppuStatus(a4),d7
    3006/    1A68 : 397C 0000 0056      		move.w	#0,ppuStatus(a4)
    3007/    1A6E :                     
    3008/    1A6E :                     	; sprite 0 beam hit
    3009/    1A6E : 46FC 2700           		move.w	#$2700,sr
    3010/    1A72 : 382C 004E           		move.w	ppuSp0Ypos(a4),d4
    3011/    1A76 : B87C 00E0           		cmp.w	#$E0,d4
    3012/    1A7A : 6C0A                		bge.s	.setspron
    3013/    1A7C : 3A2E 0008           		move.w	8(a6),d5
    3014/    1A80 : E04D                		lsr.w	#8,d5
    3015/    1A82 : B805                		cmp.b	d5,d4
    3016/    1A84 : 6604                		bne.s	return_2418
    3017/    1A86 :                     .setspron:
    3018/    1A86 : 0047 0040           		ori.w	#$40,d7
    3019/    1A8A :                     return_2418:
    3020/    1A8A :                     
    3021/    1A8A : 4A6C 005C           		tst.w	FamiPPUVint(a4)
    3022/    1A8E : 6708                		beq.s	.novflag
    3023/    1A90 : 426C 005C           		clr.w	FamiPPUVint(a4)
    3024/    1A94 :                     		
    3025/    1A94 :                     ; 		move.w	(vdp_ctrl),d4
    3026/    1A94 :                     ; 		btst	#bitVint,d4
    3027/    1A94 :                     ; 		beq.s	.novflag
    3028/    1A94 : 0047 0080           		ori.w	#$80,d7
    3029/    1A98 :                     .novflag:
    3030/    1A98 : 46FC 2000           		move.w	#$2000,sr
    3031/    1A9C : 4E75                		rts
    3032/    1A9E :                     ; ----------------------------------------------------------------
    3033/    1A9E :                     
    3034/    1A9E :                     return_241A:				; DATA XREF: ROM:000023E4o
    3035/    1A9E : 4E75                		rts
    3036/    1AA0 :                     ; ----------------------------------------------------------------
    3037/    1AA0 :                     
    3038/    1AA0 :                     rdPPU_Data:
    3039/    1AA0 : 3E2C 004A           		move.w	ppuDataLast(a4),d7
    3040/    1AA4 : 382C 0048           		move.w	ppuAddrBase(a4),d4
    3041/    1AA8 : 1973 4000 004B      		move.b	(a3,d4.w),ppuDataLast+1(a4)
    3042/    1AAE : 382C 0046           		move.w	ppuAddrIncr(a4),d4
    3043/    1AB2 : D96C 0048           		add.w	d4,ppuAddrBase(a4)
    3044/    1AB6 : 4E75                		rts
    3045/    1AB8 :                     
    3046/    1AB8 :                     ; ====================================================================
    3047/    1AB8 :                     ; ----------------------------------------------------------------
    3048/    1AB8 :                     ; Write request
    3049/    1AB8 :                     ; 
    3050/    1AB8 :                     ; d6 - XX00
    3051/    1AB8 :                     ; d4 - 00XX
    3052/    1AB8 :                     ; d7 - data
    3053/    1AB8 :                     ; ----------------------------------------------------------------
    3054/    1AB8 :                     
    3055/    1AB8 :                     addr_Write:
    3056/    1AB8 : 4A06                		tst.b	d6		; $8000
    3057/    1ABA : 6B20                		bmi	wrTo_PRG
    3058/    1ABC :                     	; TODO: $6000-$7FFF
    3059/    1ABC : BC3C 0040           		cmp.b	#$40,d6		; $4000
    3060/    1AC0 : 6C52                		bge	wrTo_APU
    3061/    1AC2 : BC3C 0020           		cmp.b	#$20,d6		; $2000
    3062/    1AC6 : 6C00 016C           		bge	wrTo_PPU
    3063/    1ACA :                     
    3064/    1ACA :                     ; ====================================================================
    3065/    1ACA :                     ; ----------------------------------------------------------------
    3066/    1ACA :                     ; WRITE request to RAM
    3067/    1ACA :                     ; ----------------------------------------------------------------
    3068/    1ACA :                     
    3069/    1ACA :                     wrTo_RAM:
    3070/    1ACA : E14E                		lsl.w	#8,d6
    3071/    1ACC : 1C04                		move.b	d4,d6
    3072/    1ACE : 0246 07FF           		andi.w	#$7FF,d6
    3073/    1AD2 : 1587 6000           		move.b	d7,(a2,d6.w)
    3074/    1AD6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3075/    1ADC :                     
    3076/    1ADC :                     ; ====================================================================
    3077/    1ADC :                     ; ----------------------------------------------------------------
    3078/    1ADC :                     ; WRITE request to ROM area, mappers
    3079/    1ADC :                     ; ----------------------------------------------------------------
    3080/    1ADC :                     
    3081/    1ADC :                     wrTo_PRG:
    3082/    1ADC : 0C6C 0003 0032      		cmp.w	#3,cpuMapper(a4)
    3083/    1AE2 : 6706                		beq.s	.mapper_3
    3084/    1AE4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3085/    1AEA :                     
    3086/    1AEA :                     ; --------------------------------------------------------
    3087/    1AEA :                     ; Mapper $03, CNROM
    3088/    1AEA :                     ; 
    3089/    1AEA :                     ; Bank select ($8000-$FFFF)
    3090/    1AEA :                     ; 
    3091/    1AEA :                     ; 7  bit  0
    3092/    1AEA :                     ; ---- ----
    3093/    1AEA :                     ; xxDD xxCC
    3094/    1AEA :                     ;   ||   ||
    3095/    1AEA :                     ;   ||   ++- Select 8 KB CHR ROM bank for PPU $0000-$1FFF
    3096/    1AEA :                     ;   ++------ Security diodes config
    3097/    1AEA :                     ; --------------------------------------------------------
    3098/    1AEA :                     
    3099/    1AEA :                     .mapper_3:
    3100/    1AEA : 2F0C                		move.l	a4,-(sp)
    3101/    1AEC : 2A6C 0004           		movea.l	emuChrRom(a4),a5
    3102/    1AF0 : 3807                		move.w	d7,d4
    3103/    1AF2 : C87C 0003           		and.w	#%11,d4
    3104/    1AF6 : E14C                		lsl.w	#8,d4
    3105/    1AF8 : EB4C                		lsl.w	#5,d4
    3106/    1AFA : DAC4                		adda	d4,a5
    3107/    1AFC : 284B                		move.l	a3,a4
    3108/    1AFE : 383C 07FE           		move.w	#($1FFF/4)-1,d4
    3109/    1B02 :                     .copychr:
    3110/    1B02 : 28DD                		move.l	(a5)+,(a4)+
    3111/    1B04 : 51CC FFFC           		dbf	d4,.copychr
    3112/    1B08 : 285F                		move.l	(sp)+,a4
    3113/    1B0A : 6100 05DE           		bsr	Nemul_LoadChr
    3114/    1B0E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3115/    1B14 :                     
    3116/    1B14 :                     ; ====================================================================
    3117/    1B14 :                     ; ----------------------------------------------------------------
    3118/    1B14 :                     ; WRITE to APU
    3119/    1B14 :                     ; ----------------------------------------------------------------
    3120/    1B14 :                     
    3121/    1B14 :                     wrTo_APU:
    3122/    1B14 : 0C04 001F           		cmpi.b	#$1F,d4
    3123/    1B18 : 624A                		bhi.s	APU_Null
    3124/    1B1A : D844                		add.w	d4,d4
    3125/    1B1C : 383B 4006           		move.w	off_2866(pc,d4.w),d4
    3126/    1B20 : 4EFB 4002           		jmp	off_2866(pc,d4.w)
    3127/    1B24 :                     
    3128/    1B24 :                     ; ----------------------------------------------------------------
    3129/    1B24 : 0040                off_2866:	dc.w APU_Null-off_2866
    3130/    1B26 : 0040                		dc.w APU_Null-off_2866
    3131/    1B28 : 0040                		dc.w APU_Null-off_2866
    3132/    1B2A : 0040                		dc.w APU_Null-off_2866
    3133/    1B2C : 0040                		dc.w APU_Null-off_2866
    3134/    1B2E : 0040                		dc.w APU_Null-off_2866
    3135/    1B30 : 0040                		dc.w APU_Null-off_2866
    3136/    1B32 : 0040                		dc.w APU_Null-off_2866
    3137/    1B34 : 0040                		dc.w APU_Null-off_2866
    3138/    1B36 : 0040                		dc.w APU_Null-off_2866
    3139/    1B38 : 0040                		dc.w APU_Null-off_2866
    3140/    1B3A : 0040                		dc.w APU_Null-off_2866
    3141/    1B3C : 0040                		dc.w APU_Null-off_2866
    3142/    1B3E : 0040                		dc.w APU_Null-off_2866
    3143/    1B40 : 0040                		dc.w APU_Null-off_2866
    3144/    1B42 : 0040                		dc.w APU_Null-off_2866
    3145/    1B44 : 0040                		dc.w APU_Null-off_2866
    3146/    1B46 : 0040                		dc.w APU_Null-off_2866
    3147/    1B48 : 0040                		dc.w APU_Null-off_2866
    3148/    1B4A : 0040                		dc.w APU_Null-off_2866
    3149/    1B4C : 00A6                		dc.w APU_OAMDMA-off_2866
    3150/    1B4E : 0040                		dc.w APU_Null-off_2866
    3151/    1B50 : 0046                		dc.w APU_Input-off_2866
    3152/    1B52 : 0040                		dc.w APU_Null-off_2866
    3153/    1B54 : 0040                		dc.w APU_Null-off_2866
    3154/    1B56 : 0040                		dc.w APU_Null-off_2866
    3155/    1B58 : 0040                		dc.w APU_Null-off_2866
    3156/    1B5A : 0040                		dc.w APU_Null-off_2866
    3157/    1B5C : 0040                		dc.w APU_Null-off_2866
    3158/    1B5E : 0040                		dc.w APU_Null-off_2866
    3159/    1B60 : 0040                		dc.w APU_Null-off_2866
    3160/    1B62 : 0040                		dc.w APU_Null-off_2866
    3161/    1B64 :                     
    3162/    1B64 :                     APU_Null:
    3163/    1B64 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3164/    1B6A :                     
    3165/    1B6A :                     ; =============== S U B	R O U T	I N E =======================================
    3166/    1B6A :                     
    3167/    1B6A :                     
    3168/    1B6A :                     APU_Input:				; DATA XREF: ROM:000028BEo
    3169/    1B6A : 4A07                		tst.b	d7
    3170/    1B6C : 67F6                		beq.s	APU_Null
    3171/    1B6E : 6106                		bsr	readInput
    3172/    1B70 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3173/    1B76 :                     
    3174/    1B76 :                     ; =============== S U B	R O U T	I N E =======================================
    3175/    1B76 :                     
    3176/    1B76 :                     
    3177/    1B76 :                     readInput:
    3178/    1B76 : 2F0B                		move.l	a3,-(sp)
    3179/    1B78 : 47F9 00A1 0003      		lea	($A10003).l,a3
    3180/    1B7E : 4BEC 0036           		lea	cpuInputData(a4),a5
    3181/    1B82 : 6108                		bsr	.this_pad
    3182/    1B84 : 544B                		addq.w	#2,a3
    3183/    1B86 : 6104                		bsr	.this_pad		
    3184/    1B88 : 265F                		move.l	(sp)+,a3
    3185/    1B8A : 4E75                		rts
    3186/    1B8C :                     		
    3187/    1B8C :                     .this_pad:
    3188/    1B8C : 16BC 0000           		move.b	#0,(a3)
    3189/    1B90 : 4E71                		nop
    3190/    1B92 : 4E71                		nop
    3191/    1B94 : 1A13                		move.b	(a3),d5
    3192/    1B96 : E50D                		lsl.b	#2,d5
    3193/    1B98 : 0205 00C0           		andi.b	#$C0,d5
    3194/    1B9C : 16BC 0040           		move.b	#$40,(a3)
    3195/    1BA0 : 4E71                		nop
    3196/    1BA2 : 4E71                		nop
    3197/    1BA4 : 1813                		move.b	(a3),d4
    3198/    1BA6 : 0204 003F           		andi.b	#$3F,d4
    3199/    1BAA : 8A04                		or.b	d4,d5
    3200/    1BAC : 4605                		not.b	d5
    3201/    1BAE : 4244                		clr.w	d4
    3202/    1BB0 : E30D                		lsl.b	#1,d5
    3203/    1BB2 : D904                		addx.b	d4,d4
    3204/    1BB4 : E34D                		lsl.w	#1,d5
    3205/    1BB6 : E30D                		lsl.b	#1,d5
    3206/    1BB8 : D904                		addx.b	d4,d4
    3207/    1BBA : E24D                		lsr.w	#1,d5
    3208/    1BBC : E30D                		lsl.b	#1,d5
    3209/    1BBE : D904                		addx.b	d4,d4
    3210/    1BC0 : E30D                		lsl.b	#1,d5
    3211/    1BC2 : D904                		addx.b	d4,d4
    3212/    1BC4 : 8805                		or.b	d5,d4
    3213/    1BC6 : 3AC4                		move.w	d4,(a5)+
    3214/    1BC8 : 4E75                		rts
    3215/    1BCA :                     
    3216/    1BCA :                     
    3217/    1BCA :                     ; =============== S U B	R O U T	I N E =======================================
    3218/    1BCA :                     
    3219/    1BCA :                     
    3220/    1BCA :                     APU_OAMDMA:
    3221/    1BCA : 2F07                		move.l	d7,-(sp)
    3222/    1BCC : 2F0B                		move.l	a3,-(sp)
    3223/    1BCE :                     		
    3224/    1BCE : E14F                		lsl.w	#8,d7
    3225/    1BD0 : 3C2C 0052           		move.w	ppuOamUnk(a4),d6
    3226/    1BD4 : 0A46 0001           		eori.w	#1,d6
    3227/    1BD8 : 1E34 6044           		move.b	ppuOamAddr(a4,d6.w),d7
    3228/    1BDC : 4BF2 7000           		lea	(a2,d7.w),a5
    3229/    1BE0 : 1947 004F           		move.b	d7,ppuSp0Ypos+1(a4)		; sprite 0 ypos
    3230/    1BE4 :                     
    3231/    1BE4 : 47EC 00E6           		lea 	vdpSprData(a4),a3
    3232/    1BE8 : 7A3F                		moveq	#$3F,d5
    3233/    1BEA : 7E00                		moveq	#0,d7
    3234/    1BEC :                     .lp_sprnormal:
    3235/    1BEC : 1E1D                		move.b	(a5)+,d7
    3236/    1BEE : 3C07                		move.w	d7,d6
    3237/    1BF0 : 0646 0079           		addi.w	#$79,d6
    3238/    1BF4 : 36C6                		move.w	d6,(a3)+
    3239/    1BF6 :                     
    3240/    1BF6 : 7C40                		moveq	#64,d6
    3241/    1BF8 : 9C05                		sub.b	d5,d6
    3242/    1BFA : 8C6C 004C           		or.w	ppuSprWide(a4),d6
    3243/    1BFE : 36C6                		move.w	d6,(a3)+
    3244/    1C00 :                     		
    3245/    1C00 : 1E1D                		move.b	(a5)+,d7
    3246/    1C02 : 3C07                		move.w	d7,d6
    3247/    1C04 : 0046 0100           		ori.w	#$100,d6
    3248/    1C08 :                     
    3249/    1C08 : 1E1D                		move.b	(a5)+,d7
    3250/    1C0A : 3807                		move.w	d7,d4
    3251/    1C0C : E51C                		rol.b	#2,d4
    3252/    1C0E : E34C                		lsl.w	#1,d4
    3253/    1C10 : E70C                		lsl.b	#3,d4
    3254/    1C12 : EF4C                		lsl.w	#7,d4
    3255/    1C14 : 8846                		or.w	d6,d4
    3256/    1C16 : 0A44 8000           		eori.w	#$8000,d4
    3257/    1C1A : 36C4                		move.w	d4,(a3)+
    3258/    1C1C :                     
    3259/    1C1C : 1E1D                		move.b	(a5)+,d7
    3260/    1C1E : 3C07                		move.w	d7,d6
    3261/    1C20 : 0646 0080           		addi.w	#$80,d6
    3262/    1C24 : 36C6                		move.w	d6,(a3)+
    3263/    1C26 :                     
    3264/    1C26 : 51CD FFC4           		dbf	d5,.lp_sprnormal
    3265/    1C2A : 265F                		move.l	(sp)+,a3
    3266/    1C2C : 2E1F                		move.l	(sp)+,d7
    3267/    1C2E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3268/    1C34 :                     
    3269/    1C34 :                     
    3270/    1C34 :                     ; =============== S U B	R O U T	I N E =======================================
    3271/    1C34 :                     
    3272/    1C34 :                     
    3273/    1C34 :                     wrTo_PPU:
    3274/    1C34 : 0244 0007           		andi.w	#7,d4
    3275/    1C38 : D844                		add.w	d4,d4
    3276/    1C3A : 383B 4006           		move.w	off_29F6(pc,d4.w),d4
    3277/    1C3E : 4EFB 4002           		jmp	off_29F6(pc,d4.w)
    3278/    1C42 :                     
    3279/    1C42 :                     ; ----------------------------------------------------------------
    3280/    1C42 : 0010                off_29F6:	dc.w loc_2A16-off_29F6 ; $2000
    3281/    1C44 : 005A                		dc.w loc_2A5E-off_29F6 ; $2001
    3282/    1C46 : 0104                		dc.w loc_2ACC-off_29F6 ; $2002
    3283/    1C48 : 010A                		dc.w loc_2AD0-off_29F6 ; $2003
    3284/    1C4A : 011E                		dc.w loc_2AE2-off_29F6 ; $2004
    3285/    1C4C : 00B0                		dc.w wrPPU_Scroll-off_29F6 ; $2005
    3286/    1C4E : 0124                		dc.w loc_2AE6-off_29F6 ; $2006
    3287/    1C50 : 0138                		dc.w wrPPU_Data-off_29F6 ; $2007
    3288/    1C52 :                     
    3289/    1C52 :                     ; ----------------------------------------------------------------
    3290/    1C52 :                     ; $2000
    3291/    1C52 :                     ; ----------------------------------------------------------------
    3292/    1C52 :                     
    3293/    1C52 :                     loc_2A16:
    3294/    1C52 :                     
    3295/    1C52 :                     	; NMI on/off
    3296/    1C52 : 4246                		clr.w	d6
    3297/    1C54 : E30F                		lsl.b	#1,d7			; $80
    3298/    1C56 : 6404                		bcc.s	.noVintFlag
    3299/    1C58 : 1C3C 0080           		move.b	#$80,d6			; NMI ON
    3300/    1C5C :                     .noVintFlag:
    3301/    1C5C : 3946 0054           		move.w	d6,ppuNmiFlag(a4)
    3302/    1C60 :                     		
    3303/    1C60 :                     	; 8x8 or 8x16 sprites
    3304/    1C60 : 4246                		clr.w	d6
    3305/    1C62 : E50F                		lsl.b	#2,d7
    3306/    1C64 : 6404                		bcc.s	loc_2A2C
    3307/    1C66 : 3C3C 0100           		move.w	#$100,d6
    3308/    1C6A :                     loc_2A2C:
    3309/    1C6A : 3946 004C           		move.w	d6,ppuSprWide(a4)
    3310/    1C6E :                     		
    3311/    1C6E :                     	; PPU VRAM BG bank/Sprites bank
    3312/    1C6E : 1C07                		move.b	d7,d6
    3313/    1C70 : 0246 00C0           		andi.w	#$C0,d6
    3314/    1C74 : BC6C 0042           		cmp.w	ppuChrBank(a4),d6
    3315/    1C78 : 6708                		beq.s	.no_reload
    3316/    1C7A : 3946 0042           		move.w	d6,ppuChrBank(a4)
    3317/    1C7E : 6100 046A           		bsr	Nemul_LoadChr
    3318/    1C82 :                     .no_reload:
    3319/    1C82 :                     
    3320/    1C82 :                     	; PPU VRAM increment
    3321/    1C82 : 7C01                		moveq	#1,d6
    3322/    1C84 : E70F                		lsl.b	#3,d7
    3323/    1C86 : 6402                		bcc.s	.nrml_incr
    3324/    1C88 : 7C20                		moveq	#$20,d6
    3325/    1C8A :                     .nrml_incr:
    3326/    1C8A : 3946 0046           		move.w	d6,ppuAddrIncr(a4)
    3327/    1C8E :                     
    3328/    1C8E :                     	; PPU Name table base
    3329/    1C8E : 0247 00C0           		andi.w	#$C0,d7
    3330/    1C92 : 3947 0040           		move.w	d7,ppuNTblBase(a4)
    3331/    1C96 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3332/    1C9C :                     
    3333/    1C9C :                     ; ----------------------------------------------------------------
    3334/    1C9C :                     ; $2002 - PPU MASK
    3335/    1C9C :                     ; ----------------------------------------------------------------
    3336/    1C9C :                     
    3337/    1C9C :                     loc_2A5E:
    3338/    1C9C : 46FC 2700           		move.w	#$2700,sr
    3339/    1CA0 :                     
    3340/    1CA0 :                     	; Hide sprites and BG
    3341/    1CA0 : 3C3C 8550           		move.w	#$8500+(($A000)>>9),d6
    3342/    1CA4 : 4846                		swap	d6
    3343/    1CA6 : 3C2C 002E           		move.w	vdpReg01(a4),d6		; REGISTER 81
    3344/    1CAA : CC3C 00BF           		and.b	#$BF,d6
    3345/    1CAE : 0807 0003           		btst	#3,d7
    3346/    1CB2 : 6704                		beq.s	.hidebg
    3347/    1CB4 : 0006 0040           		ori.b	#$40,d6
    3348/    1CB8 :                     .hidebg:
    3349/    1CB8 : 4846                		swap	d6
    3350/    1CBA : 0807 0004           		btst	#4,d7
    3351/    1CBE : 6704                		beq.s	.hidesp
    3352/    1CC0 : 3C3C 855E           		move.w	#$8500+(($BC00)>>9),d6
    3353/    1CC4 :                     .hidesp:
    3354/    1CC4 : 2D46 0004           		move.l	d6,4(a6)
    3355/    1CC8 : 4846                		swap	d6
    3356/    1CCA : 3946 002E           		move.w	d6,vdpReg01(a4)
    3357/    1CCE :                     
    3358/    1CCE : 3C2C 002C           		move.w	vdpReg00(a4),d6
    3359/    1CD2 : 08C6 0005           		bset	#5,d6
    3360/    1CD6 : 0807 0001           		btst	#1,d7
    3361/    1CDA : 6704                		beq.s	.hide_bg
    3362/    1CDC : 0886 0005           		bclr	#5,d6
    3363/    1CE0 :                     .hide_bg:
    3364/    1CE0 : 3D46 0004           		move.w	d6,4(a6)
    3365/    1CE4 : 3946 002C           		move.w	d6,vdpReg00(a4)
    3366/    1CE8 : 46FC 2000           		move.w	#$2000,sr
    3367/    1CEC :                     
    3368/    1CEC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3369/    1CF2 :                     
    3370/    1CF2 :                     ; ----------------------------------------------------------------
    3371/    1CF2 :                     ; $2005 - PPU SCROLL
    3372/    1CF2 :                     ; -----------------------------------------------------------------
    3373/    1CF2 :                     
    3374/    1CF2 :                     wrPPU_Scroll:
    3375/    1CF2 : 3807                		move.w	d7,d4
    3376/    1CF4 : 0244 00FF           		andi.w	#$FF,d4
    3377/    1CF8 : 3C2C 0040           		move.w	ppuNTblBase(a4),d6
    3378/    1CFC : 0A6C 0001 0050      		eori.w	#1,ppuAddrLatch(a4)
    3379/    1D02 : 6718                		beq.s	loc_2AA4
    3380/    1D04 : CC7C 0001           		and.w	#1,d6
    3381/    1D08 : E14E                		lsl.w	#8,d6
    3382/    1D0A : D846                		add.w	d6,d4
    3383/    1D0C : 4444                		neg.w	d4
    3384/    1D0E : 3944 005E           		move.w	d4,vdpScrlX(a4)
    3385/    1D12 : 3944 0060           		move.w	d4,vdpScrlX+2(a4)
    3386/    1D16 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3387/    1D1C :                     
    3388/    1D1C :                     ; --------------------------------------------------------
    3389/    1D1C :                     ; Vertical
    3390/    1D1C :                     ; --------------------------------------------------------
    3391/    1D1C :                     
    3392/    1D1C :                     loc_2AA4:
    3393/    1D1C : 5044                		addq.w	#8,d4
    3394/    1D1E : E30E                		lsl.b	#1,d6
    3395/    1D20 : 6512                		bcs.s	loc_2ABE
    3396/    1D22 : 3944 0062           		move.w	d4,vdpScrlY(a4)
    3397/    1D26 : D87C 0110           		add.w	#$110,d4
    3398/    1D2A : 3944 0064           		move.w	d4,vdpScrlY+2(a4)
    3399/    1D2E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3400/    1D34 :                     loc_2ABE:
    3401/    1D34 : 3944 0064           		move.w	d4,vdpScrlY+2(a4)
    3402/    1D38 : D87C 0110           		add.w	#$110,d4
    3403/    1D3C : 3944 0062           		move.w	d4,vdpScrlY(a4)
    3404/    1D40 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3405/    1D46 :                     
    3406/    1D46 :                     ; ----------------------------------------------------------------
    3407/    1D46 :                     
    3408/    1D46 :                     loc_2ACC:				; DATA XREF: ROM:000029FEo
    3409/    1D46 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3410/    1D4C :                     ; ----------------------------------------------------------------
    3411/    1D4C :                     
    3412/    1D4C :                     loc_2AD0:
    3413/    1D4C : 382C 0052           		move.w	ppuOamUnk(a4),d4
    3414/    1D50 : 1987 4044           		move.b	d7,ppuOamAddr(a4,d4.w)
    3415/    1D54 : 0A6C 0001 0052      		eori.w	#1,ppuOamUnk(a4)
    3416/    1D5A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3417/    1D60 :                     ; ----------------------------------------------------------------
    3418/    1D60 :                     
    3419/    1D60 :                     loc_2AE2:
    3420/    1D60 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3421/    1D66 :                     ; ----------------------------------------------------------------
    3422/    1D66 :                     
    3423/    1D66 :                     loc_2AE6:
    3424/    1D66 : 382C 0050           		move.w	ppuAddrLatch(a4),d4
    3425/    1D6A : 1987 4048           		move.b	d7,ppuAddrBase(a4,d4.w)
    3426/    1D6E : 0A6C 0001 0050      		eori.w	#1,ppuAddrLatch(a4)
    3427/    1D74 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3428/    1D7A :                     ; ----------------------------------------------------------------
    3429/    1D7A :                     
    3430/    1D7A :                     wrPPU_Data:
    3431/    1D7A : 382C 0048           		move.w	ppuAddrBase(a4),d4
    3432/    1D7E : 3C2C 0046           		move.w	ppuAddrIncr(a4),d6
    3433/    1D82 : DD6C 0048           		add.w	d6,ppuAddrBase(a4)
    3434/    1D86 : 0244 3FFF           		andi.w	#$3FFF,d4
    3435/    1D8A : 1787 4000           		move.b	d7,(a3,d4.w)
    3436/    1D8E : 0C44 3F00           		cmpi.w	#$3F00,d4
    3437/    1D92 : 6452                		bcc.s	ppuSetColor
    3438/    1D94 : 3A04                		move.w	d4,d5
    3439/    1D96 : 0245 03C0           		andi.w	#$3C0,d5
    3440/    1D9A : 0C45 03C0           		cmpi.w	#$3C0,d5
    3441/    1D9E : 6600 00F6           		bne.w	ppuDrwCell
    3442/    1DA2 : 6000 01BE           		bra.w	ppuDrwCellPal
    3443/    1DA6 :                     ; ----------------------------------------------------------------
    3444/    1DA6 :                     
    3445/    1DA6 :                     ppuVdpIndex:
    3446/    1DA6 : 0000 0002 0004 0006 		dc.w $0000,$0002,$0004,$0006
    3447/    1DAE : 0020 0022 0024 0026 		dc.w $0020,$0022,$0024,$0026
    3448/    1DB6 : 0040 0042 0044 0046 		dc.w $0040,$0042,$0044,$0046
    3449/    1DBE : 0060 0062 0064 0066 		dc.w $0060,$0062,$0064,$0066
    3450/    1DC6 : 0010 0012 0014 0016 		dc.w $0010,$0012,$0014,$0016
    3451/    1DCE : 0030 0032 0034 0036 		dc.w $0030,$0032,$0034,$0036
    3452/    1DD6 : 0050 0052 0054 0056 		dc.w $0050,$0052,$0054,$0056
    3453/    1DDE : 0070 0072 0074 0076 		dc.w $0070,$0072,$0074,$0076
    3454/    1DE6 :                     		align 2
    3455/    1DE6 :                     
    3456/    1DE6 :                     ppuSetColor:
    3457/    1DE6 : 0244 001F           		andi.w	#$1F,d4
    3458/    1DEA : D844                		add.w	d4,d4
    3459/    1DEC : 383B 40B8           		move.w	ppuVdpIndex(pc,d4.w),d4
    3460/    1DF0 : 3C04                		move.w	d4,d6
    3461/    1DF2 : 3A07                		move.w	d7,d5
    3462/    1DF4 : 0205 003F           		andi.b	#$3F,d5
    3463/    1DF8 : DA45                		add.w	d5,d5
    3464/    1DFA : 39BB 501A 4066      		move.w	ppuVdpColors(pc,d5.w),vdpPalette(a4,d4.w)
    3465/    1E00 : CC7C 000F           		and.w	#$F,d6
    3466/    1E04 : 660A                		bne.s	.no_bgpal
    3467/    1E06 : 0844 0004           		bchg	#4,d4
    3468/    1E0A : 39BB 500A 4066      		move.w	ppuVdpColors(pc,d5.w),vdpPalette(a4,d4.w)
    3469/    1E10 :                     		
    3470/    1E10 :                     .no_bgpal:
    3471/    1E10 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3472/    1E16 :                     ; ----------------------------------------------------------------
    3473/    1E16 :                     
    3474/    1E16 : 0666                ppuVdpColors:	dc.w $666
    3475/    1E18 : 0820                		dc.w $820
    3476/    1E1A : 0A00                		dc.w $A00
    3477/    1E1C : 0A04                		dc.w $A04
    3478/    1E1E : 0806                		dc.w $806
    3479/    1E20 : 0406                		dc.w $406
    3480/    1E22 : 0006                		dc.w 6
    3481/    1E24 : 0026                		dc.w $26
    3482/    1E26 : 0044                		dc.w $44
    3483/    1E28 : 0040                		dc.w $40
    3484/    1E2A : 0060                		dc.w $60
    3485/    1E2C : 0040                		dc.w $40
    3486/    1E2E : 0440                		dc.w $440
    3487/    1E30 : 0000                		dc.w 0
    3488/    1E32 : 0000                		dc.w 0
    3489/    1E34 : 0000                		dc.w 0
    3490/    1E36 : 0AAA                		dc.w $AAA
    3491/    1E38 : 0E60                		dc.w $E60
    3492/    1E3A : 0E40                		dc.w $E40
    3493/    1E3C : 0E28                		dc.w $E28
    3494/    1E3E : 0C2A                		dc.w $C2A
    3495/    1E40 : 082C                		dc.w $82C
    3496/    1E42 : 024C                		dc.w $24C
    3497/    1E44 : 004A                		dc.w $4A
    3498/    1E46 : 0066                		dc.w $66
    3499/    1E48 : 0084                		dc.w $84
    3500/    1E4A : 00A0                		dc.w $A0
    3501/    1E4C : 0480                		dc.w $480
    3502/    1E4E : 0880                		dc.w $880
    3503/    1E50 : 0000                		dc.w 0
    3504/    1E52 : 0000                		dc.w 0
    3505/    1E54 : 0000                		dc.w 0
    3506/    1E56 : 0EEE                		dc.w $EEE
    3507/    1E58 : 0EC6                		dc.w $EC6
    3508/    1E5A : 0EAA                		dc.w $EAA
    3509/    1E5C : 0E8C                		dc.w $E8C
    3510/    1E5E : 0E6E                		dc.w $E6E
    3511/    1E60 : 0C6E                		dc.w $C6E
    3512/    1E62 : 088E                		dc.w $88E
    3513/    1E64 : 02AE                		dc.w $2AE
    3514/    1E66 : 00CC                		dc.w $CC
    3515/    1E68 : 00E8                		dc.w $E8
    3516/    1E6A : 04E6                		dc.w $4E6
    3517/    1E6C : 08E4                		dc.w $8E4
    3518/    1E6E : 0EC4                		dc.w $EC4
    3519/    1E70 : 0444                		dc.w $444
    3520/    1E72 : 0000                		dc.w 0
    3521/    1E74 : 0000                		dc.w 0
    3522/    1E76 : 0EEE                		dc.w $EEE
    3523/    1E78 : 0EEC                		dc.w $EEC
    3524/    1E7A : 0ECC                		dc.w $ECC
    3525/    1E7C : 0ECE                		dc.w $ECE
    3526/    1E7E : 0ECE                		dc.w $ECE
    3527/    1E80 : 0ECE                		dc.w $ECE
    3528/    1E82 : 0CCE                		dc.w $CCE
    3529/    1E84 : 0AEE                		dc.w $AEE
    3530/    1E86 : 08EE                		dc.w $8EE
    3531/    1E88 : 0AEC                		dc.w $AEC
    3532/    1E8A : 08EC                		dc.w $8EC
    3533/    1E8C : 0CEC                		dc.w $CEC
    3534/    1E8E : 0EEC                		dc.w $EEC
    3535/    1E90 : 0CCC                		dc.w $CCC
    3536/    1E92 : 0000                		dc.w 0
    3537/    1E94 : 0000                		dc.w 0
    3538/    1E96 :                     ; ----------------------------------------------------------------
    3539/    1E96 :                     ; Set Cell character
    3540/    1E96 :                     
    3541/    1E96 :                     ppuDrwCell:
    3542/    1E96 :                     	; d4 - ppu address
    3543/    1E96 :                     	; d5 - X pos
    3544/    1E96 :                     	; d6 - Y pos
    3545/    1E96 :                     	; d7 - cell 0-255
    3546/    1E96 :                     
    3547/    1E96 : 3A04                		move.w	d4,d5
    3548/    1E98 : 3C04                		move.w	d4,d6
    3549/    1E9A : CA7C 001F           		and.w	#$1F,d5
    3550/    1E9E : CC7C 03E0           		and.w	#$3E0,d6
    3551/    1EA2 : DA45                		add.w	d5,d5
    3552/    1EA4 : E54E                		lsl.w	#2,d6
    3553/    1EA6 : DC45                		add.w	d5,d6
    3554/    1EA8 :                     
    3555/    1EA8 : 3A04                		move.w	d4,d5
    3556/    1EAA : E04D                		lsr.w	#8,d5
    3557/    1EAC : E44D                		lsr.w	#2,d5
    3558/    1EAE : 0805 0001           		btst	#1,d5
    3559/    1EB2 : 6704                		beq.s	.top_lyr
    3560/    1EB4 : DC7C 2000           		add.w	#$2000,d6
    3561/    1EB8 :                     .top_lyr:
    3562/    1EB8 : 0805 0000           		btst	#0,d5
    3563/    1EBC : 6704                		beq.s	.left_pg
    3564/    1EBE : DC7C 0040           		add.w	#$40,d6
    3565/    1EC2 :                     .left_pg:
    3566/    1EC2 : CE7C 00FF           		and.w	#$FF,d7
    3567/    1EC6 : 8E7C 8000           		or.w	#$8000,d7
    3568/    1ECA :                     		
    3569/    1ECA : 46FC 2700           		move.w	#$2700,sr
    3570/    1ECE : 3D46 0004           		move.w	d6,4(a6)
    3571/    1ED2 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3572/    1ED8 : 3816                		move.w	(a6),d4
    3573/    1EDA : C87C E000           		and.w	#$E000,d4
    3574/    1EDE : 8847                		or.w	d7,d4
    3575/    1EE0 : 8C7C 4000           		or.w	#$4000,d6
    3576/    1EE4 : 3D46 0004           		move.w	d6,4(a6)
    3577/    1EE8 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3578/    1EEE : 3C84                		move.w	d4,(a6)
    3579/    1EF0 : C87C 3FFF           		and.w	#$3FFF,d4
    3580/    1EF4 :                     
    3581/    1EF4 : 4A6C 0030           		tst.w	ppuMirror(a4)		; check horizontal mirror
    3582/    1EF8 : 6634                		bne.s	.vermirror
    3583/    1EFA :                     
    3584/    1EFA : CC7C 3FFF           		and.w	#$3FFF,d6
    3585/    1EFE : 0846 0006           		bchg	#6,d6
    3586/    1F02 : 3D46 0004           		move.w	d6,4(a6)
    3587/    1F06 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3588/    1F0C : 3816                		move.w	(a6),d4
    3589/    1F0E : C87C E000           		and.w	#$E000,d4
    3590/    1F12 : 8847                		or.w	d7,d4
    3591/    1F14 : 8C7C 4000           		or.w	#$4000,d6
    3592/    1F18 : 3D46 0004           		move.w	d6,4(a6)
    3593/    1F1C : 3D7C 0003 0004      		move.w	#3,4(a6)
    3594/    1F22 : 3C84                		move.w	d4,(a6)
    3595/    1F24 : 46FC 2000           		move.w	#$2000,sr
    3596/    1F28 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3597/    1F2E :                     .vermirror:
    3598/    1F2E : CC7C 3FFF           		and.w	#$3FFF,d6
    3599/    1F32 : DC7C 2000           		add.w	#$2000,d6
    3600/    1F36 : 3D46 0004           		move.w	d6,4(a6)
    3601/    1F3A : 3D7C 0003 0004      		move.w	#3,4(a6)
    3602/    1F40 : 3816                		move.w	(a6),d4
    3603/    1F42 : C87C E000           		and.w	#$E000,d4
    3604/    1F46 : 8847                		or.w	d7,d4
    3605/    1F48 : 8C7C 4000           		or.w	#$4000,d6
    3606/    1F4C : 3D46 0004           		move.w	d6,4(a6)
    3607/    1F50 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3608/    1F56 : 3C84                		move.w	d4,(a6)
    3609/    1F58 :                     
    3610/    1F58 : 46FC 2000           		move.w	#$2000,sr
    3611/    1F5C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3612/    1F62 :                     
    3613/    1F62 :                     ; ----------------------------------------------------------------
    3614/    1F62 :                     ; Pick Tile 16x16 color
    3615/    1F62 :                     
    3616/    1F62 :                     ppuDrwCellPal:
    3617/    1F62 :                     	; d4 - Page
    3618/    1F62 :                     	; d5 - X pos
    3619/    1F62 :                     	; d6 - Y pos
    3620/    1F62 :                     	; d7 - attr
    3621/    1F62 : 3A04                		move.w	d4,d5
    3622/    1F64 : 3C04                		move.w	d4,d6
    3623/    1F66 : CA7C 0007           		and.w	#%111,d5
    3624/    1F6A : E74D                		lsl.w	#3,d5
    3625/    1F6C : CC7C 0038           		and.w	#%111000,d6
    3626/    1F70 : ED4E                		lsl.w	#6,d6
    3627/    1F72 : 4847                		swap	d7
    3628/    1F74 : 3E04                		move.w	d4,d7
    3629/    1F76 : CE7C 0C00           		and.w	#$C00,d7
    3630/    1F7A : E04F                		lsr.w	#8,d7
    3631/    1F7C : E44F                		lsr.w	#2,d7
    3632/    1F7E : 0807 0001           		btst	#1,d7
    3633/    1F82 : 6704                		beq.s	.top_lyr
    3634/    1F84 : DC7C 2000           		add.w	#$2000,d6
    3635/    1F88 :                     .top_lyr:
    3636/    1F88 : 0807 0000           		btst	#0,d7
    3637/    1F8C : 6704                		beq.s	.left_pg
    3638/    1F8E : DC7C 0040           		add.w	#$40,d6
    3639/    1F92 :                     .left_pg:
    3640/    1F92 : 4847                		swap	d7
    3641/    1F94 : 383C 0000           		move.w	#$0000,d4
    3642/    1F98 : D846                		add.w	d6,d4
    3643/    1F9A : D845                		add.w	d5,d4
    3644/    1F9C :                     
    3645/    1F9C :                     	; d4 - VDP address
    3646/    1F9C :                     	; d5 - Palette bits
    3647/    1F9C : 4847                		swap	d7
    3648/    1F9E : 3E04                		move.w	d4,d7
    3649/    1FA0 : 4847                		swap	d7
    3650/    1FA2 : 612A                		bsr.s	.make_attr
    3651/    1FA4 : 4A6C 0030           		tst.w	ppuMirror(a4)		; check horizontal mirror
    3652/    1FA8 : 6612                		bne	.vert_mirr
    3653/    1FAA : 4847                		swap	d7
    3654/    1FAC : 3807                		move.w	d7,d4
    3655/    1FAE : 4847                		swap	d7
    3656/    1FB0 : D87C 0040           		add.w	#$40,d4
    3657/    1FB4 : 6118                		bsr.s	.make_attr
    3658/    1FB6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3659/    1FBC :                     .vert_mirr:
    3660/    1FBC : 4847                		swap	d7
    3661/    1FBE : 3807                		move.w	d7,d4
    3662/    1FC0 : 4847                		swap	d7
    3663/    1FC2 : D87C 2000           		add.w	#$2000,d4
    3664/    1FC6 : 6106                		bsr.s	.make_attr
    3665/    1FC8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3666/    1FCE :                     
    3667/    1FCE :                     ; ----------------------------------------------------------------
    3668/    1FCE :                     ; d4 - VDP plane pos
    3669/    1FCE :                     ; d7 - pal bits
    3670/    1FCE :                     
    3671/    1FCE :                     .make_attr:
    3672/    1FCE : 7A00                		moveq	#0,d5			; TL
    3673/    1FD0 : 1A07                		move.b	d7,d5
    3674/    1FD2 : CA7C 0003           		and.w	#%11,d5
    3675/    1FD6 : E14D                		lsl.w	#8,d5
    3676/    1FD8 : EB4D                		lsl.w	#5,d5
    3677/    1FDA : 4845                		swap	d5
    3678/    1FDC : 1A07                		move.b	d7,d5
    3679/    1FDE : CA7C 0003           		and.w	#%11,d5
    3680/    1FE2 : E14D                		lsl.w	#8,d5
    3681/    1FE4 : EB4D                		lsl.w	#5,d5
    3682/    1FE6 : 6158                		bsr	.pick_color
    3683/    1FE8 : D87C 0004           		add.w	#4,d4			; TR
    3684/    1FEC : 7A00                		moveq	#0,d5
    3685/    1FEE : 1A07                		move.b	d7,d5
    3686/    1FF0 : CA7C 000C           		and.w	#%1100,d5
    3687/    1FF4 : E14D                		lsl.w	#8,d5
    3688/    1FF6 : E74D                		lsl.w	#3,d5
    3689/    1FF8 : 4845                		swap	d5
    3690/    1FFA : 1A07                		move.b	d7,d5
    3691/    1FFC : CA7C 000C           		and.w	#%1100,d5
    3692/    2000 : E14D                		lsl.w	#8,d5
    3693/    2002 : E74D                		lsl.w	#3,d5
    3694/    2004 : 613A                		bsr	.pick_color
    3695/    2006 : 987C 0004           		sub.w	#4,d4			; BL
    3696/    200A : D87C 0100           		add.w	#$100,d4
    3697/    200E : 7A00                		moveq	#0,d5
    3698/    2010 : 1A07                		move.b	d7,d5
    3699/    2012 : CA7C 0030           		and.w	#%110000,d5
    3700/    2016 : E14D                		lsl.w	#8,d5
    3701/    2018 : E34D                		lsl.w	#1,d5
    3702/    201A : 4845                		swap	d5
    3703/    201C : 1A07                		move.b	d7,d5
    3704/    201E : CA7C 0030           		and.w	#%110000,d5
    3705/    2022 : E14D                		lsl.w	#8,d5
    3706/    2024 : E34D                		lsl.w	#1,d5
    3707/    2026 : 6118                		bsr	.pick_color
    3708/    2028 : D87C 0004           		add.w	#4,d4			; BR
    3709/    202C : 7A00                		moveq	#0,d5
    3710/    202E : 1A07                		move.b	d7,d5
    3711/    2030 : CA7C 00C0           		and.w	#%11000000,d5
    3712/    2034 : EF4D                		lsl.w	#7,d5
    3713/    2036 : 4845                		swap	d5
    3714/    2038 : 1A07                		move.b	d7,d5
    3715/    203A : CA7C 00C0           		and.w	#%11000000,d5
    3716/    203E : EF4D                		lsl.w	#7,d5
    3717/    2040 :                     ; 		bsr	.pick_color
    3718/    2040 :                     
    3719/    2040 :                     .pick_color:
    3720/    2040 : 46FC 2700           		move.w	#$2700,sr
    3721/    2044 : 3D44 0004           		move.w	d4,4(a6)
    3722/    2048 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3723/    204E : 2C16                		move.l	(a6),d6
    3724/    2050 : CCBC 9FFF 9FFF      		and.l	#$9FFF9FFF,d6
    3725/    2056 : 8C85                		or.l	d5,d6
    3726/    2058 : 887C 4000           		or.w	#$4000,d4
    3727/    205C : 3D44 0004           		move.w	d4,4(a6)
    3728/    2060 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3729/    2066 : 2C86                		move.l	d6,(a6)
    3730/    2068 : C87C 3FFF           		and.w	#$3FFF,d4
    3731/    206C : D87C 0080           		add.w	#$80,d4
    3732/    2070 : 3D44 0004           		move.w	d4,4(a6)
    3733/    2074 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3734/    207A : 2C16                		move.l	(a6),d6
    3735/    207C : CCBC 9FFF 9FFF      		and.l	#$9FFF9FFF,d6
    3736/    2082 : 8C85                		or.l	d5,d6
    3737/    2084 : 887C 4000           		or.w	#$4000,d4
    3738/    2088 : 3D44 0004           		move.w	d4,4(a6)
    3739/    208C : 3D7C 0003 0004      		move.w	#3,4(a6)
    3740/    2092 : 2C86                		move.l	d6,(a6)
    3741/    2094 : C87C 3FFF           		and.w	#$3FFF,d4
    3742/    2098 : 987C 0080           		sub.w	#$80,d4
    3743/    209C : 46FC 2000           		move.w	#$2000,sr
    3744/    20A0 : 4E75                		rts
    3745/    20A2 :                     
    3746/    20A2 :                     ; =============== S U B	R O U T	I N E =======================================
    3747/    20A2 :                     
    3748/    20A2 :                     
    3749/    20A2 :                     romGrabPrg:
    3750/    20A2 : 49E8 0010           		lea	$10(a0),a4
    3751/    20A6 : 0C07 0001           		cmpi.b	#1,d7
    3752/    20AA : 6700 000C           		beq.w	loc_29C0
    3753/    20AE : 0C07 0002           		cmpi.b	#2,d7
    3754/    20B2 : 6700 0022           		beq.w	loc_29D8
    3755/    20B6 : 4E42                		trap	#2
    3756/    20B8 :                     ; ----------------------------------------------------------------
    3757/    20B8 :                     loc_29C0:
    3758/    20B8 : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3759/    20BE : 47F9 FFFF 4000      		lea	(RAM_Fami_ROM+$4000).l,a3
    3760/    20C4 : 2E3C 0000 0FFF      		move.l	#$FFF,d7
    3761/    20CA :                     .rom_1:
    3762/    20CA : 261C                		move.l	(a4)+,d3
    3763/    20CC : 2AC3                		move.l	d3,(a5)+
    3764/    20CE : 26C3                		move.l	d3,(a3)+
    3765/    20D0 : 51CF FFF8           		dbf	d7,.rom_1
    3766/    20D4 : 4E75                		rts
    3767/    20D6 :                     ; ----------------------------------------------------------------
    3768/    20D6 :                     
    3769/    20D6 :                     loc_29D8:
    3770/    20D6 : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3771/    20DC : 2E3C 0000 1FFF      		move.l	#$1FFF,d7
    3772/    20E2 :                     loc_29E2:
    3773/    20E2 : 2ADC                		move.l	(a4)+,(a5)+
    3774/    20E4 : 51CF FFFC           		dbf	d7,loc_29E2
    3775/    20E8 : 4E75                		rts
    3776/    20EA :                     
    3777/    20EA :                     ; =============== S U B	R O U T	I N E =======================================
    3778/    20EA :                     
    3779/    20EA :                     ; a6 - $C00000
    3780/    20EA :                     ; a4 - RAM_Fami_Emu
    3781/    20EA :                     
    3782/    20EA :                     Nemul_LoadChr:
    3783/    20EA : 46FC 2700           		move.w	#$2700,sr
    3784/    20EE : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
    3785/    20F4 : 2D7C 4000 0000 0004 		move.l	#$40000000,4(a6)
    3786/    20FC : 7A00                		moveq	#0,d5
    3787/    20FE : 3C2C 0042           		move.w	ppuChrBank(a4),d6
    3788/    2102 : 6100 0014           		bsr.w	.make_chr
    3789/    2106 : 7A08                		moveq	#8,d5
    3790/    2108 : 3C2C 0042           		move.w	ppuChrBank(a4),d6
    3791/    210C : E30E                		lsl.b	#1,d6
    3792/    210E : 6100 0008           		bsr.w	.make_chr
    3793/    2112 : 46FC 2000           		move.w	#$2000,sr
    3794/    2116 : 4E75                		rts
    3795/    2118 :                     
    3796/    2118 :                     .make_chr:
    3797/    2118 : 2A4B                		movea.l	a3,a5
    3798/    211A : E30E                		lsl.b	#1,d6
    3799/    211C : 6406                		bcc.s	loc_8DBA
    3800/    211E : DBFC 0000 1000      		adda.l	#$1000,a5
    3801/    2124 :                     loc_8DBA:
    3802/    2124 : 48E7 FF00           		movem.l	d0-d2/d3-d7,-(sp)
    3803/    2128 : 2E3C 0000 00FF      		move.l	#$FF,d7
    3804/    212E :                     loc_8DC4:
    3805/    212E : 7607                		moveq	#7,d3
    3806/    2130 :                     loc_8DC6:
    3807/    2130 : 1215                		move.b	(a5),d1
    3808/    2132 : 142D 0008           		move.b	8(a5),d2
    3809/    2136 : 7000                		moveq	#0,d0
    3810/    2138 : 7C07                		moveq	#7,d6
    3811/    213A :                     loc_8DD0:
    3812/    213A : D402                		add.b	d2,d2
    3813/    213C : D140                		addx.w	d0,d0
    3814/    213E : D201                		add.b	d1,d1
    3815/    2140 : D140                		addx.w	d0,d0
    3816/    2142 : 51CE FFF6           		dbf	d6,loc_8DD0
    3817/    2146 : 7800                		moveq	#0,d4
    3818/    2148 : 7C07                		moveq	#7,d6
    3819/    214A :                     loc_8DE0:
    3820/    214A : 1200                		move.b	d0,d1
    3821/    214C : E448                		lsr.w	#2,d0
    3822/    214E : 0281 0000 0003      		andi.l	#3,d1
    3823/    2154 : 6702                		beq.s	loc_8DEE
    3824/    2156 : 8205                		or.b	d5,d1
    3825/    2158 :                     loc_8DEE:
    3826/    2158 : 8801                		or.b	d1,d4
    3827/    215A : E89C                		ror.l	#4,d4
    3828/    215C : 51CE FFEC           		dbf	d6,loc_8DE0
    3829/    2160 : 2C84                		move.l	d4,(a6)
    3830/    2162 : 528D                		addq.l	#1,a5
    3831/    2164 : 51CB FFCA           		dbf	d3,loc_8DC6
    3832/    2168 : 508D                		addq.l	#8,a5
    3833/    216A : 51CF FFC2           		dbf	d7,loc_8DC4
    3834/    216E : 4CDF 00FF           		movem.l	(sp)+,d0-d2/d3-d7
    3835/    2172 :                     return_8E08:
    3836/    2172 : 4E75                		rts
    3837/    2174 :                     
    3838/    2174 :                     ; ====================================================================
    3839/    2174 :                     
    3840/    2174 :                     		align $8000
    3841/    8000 :                     EndOfRom:
    3842/    8000 :                     
    3843/    8000 :                     ; ====================================================================
    3844/    8000 :                     ; ----------------------------------------------------------------
    3845/    8000 :                     ; ROM are here
    3846/    8000 :                     ; ----------------------------------------------------------------
    3847/    8000 :                     
    3848/    8000 :                     ROM_FILE:	binclude "roms/castle.nes"
    3849/   18010 :                     
 AS V1.42 Beta [Bld 118] - source file md.asm - page 2 - 10/16/2020 0:15:35


  symbol table (* = unused):
  ------------------------

 ADDR_READ :                   19D8 C |  ADDR_WRITE :                  1AB8 C |
 APU_INPUT :                   1B6A C |  APU_INPUT_1 :                 1A1E C |
 APU_INPUT_2 :                 1A2C C |  APU_NULL :                    1B64 C |
 APU_OAMDMA :                  1BCA C |  APU_OAMDMA.LP_SPRNORMAL :     1BEC C |
*APU_RD_NULL :                 1A18 C |
*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BITDISPENBL :                    6 - |
*BITDMA :                         1 - | *BITDMAENBL :                     4 - |
*BITHINT :                        2 - | *BITHINTENBL :                    4 - |
*BITHVSTOP :                      1 - | *BITJOYA :                        6 - |
*BITJOYB :                        4 - | *BITJOYC :                        5 - |
*BITJOYDOWN :                     1 - | *BITJOYLEFT :                     2 - |
*BITJOYMODE :                     3 - | *BITJOYRIGHT :                    3 - |
*BITJOYSTART :                    7 - | *BITJOYUP :                       0 - |
*BITJOYX :                        2 - | *BITJOYY :                        1 - |
*BITJOYZ :                        0 - | *BITV30 :                         3 - |
*BITVINT :                        3 - | *BITVINTENBL :                    5 - |
*BRANCHEXT :                      0 - |  BYTE_910 :                     34E C |
*CASESENSITIVE :                  0 - |  CLRSTACK :                     244 C |
*CONSTPI :        3.141592653589793 - |  CPUENTRY :                    7FFC - |
 CPUFAMIVINT :                   34 C |  CPUFLAG2 :                      3C C |
 CPUINPUTDATA :                  36 C |  CPUIRQ :                      7FFE - |
 CPUMAPPER :                     32 C |  CPUMODEDEC :                    3A C |
 CPUMODEINTDIS :                 3E C |  CPUNMI :                      7FFA - |
*CPUSPRHINT :                    2A C | *DATE :                  10/16/2020 - |
*DISPENBL :                      40 - | *DMAENBL :                       10 - |
*DOTTEDSTRUCTS :                  0 - | *DOVINT :                       588 C |
 EMUCHRROM :                      4 C |  EMULOOP :                      55E C |
 EMUPRGROM :                      0 C |  EMUSTART :                     4E6 C |
 EMUSTART.CLRRAM :              4F0 C |  EMUVINT :                      564 C |
 ENDOFROM :                    8000 C | *FALSE :                          0 - |
 FAMIMDVINT :                    5A C |  FAMIPPUVINT :                   5C C |
 FAMIVINT :                     572 C |  FAMIVINTSAVE :                   8 C |
 FAMIVINTSAVE2 :                 28 C |  FAMI_INITVIDEO :               2B6 C |
 FAMI_INITVIDEO.LOOPBG :        2DC C |  FAMI_INITVIDEO.LOOPFG :        2C8 C |
 FAMI_LOADROM :                 454 C |  FAMI_LOADROM.CLRRAM :          46A C |
 FAMI_LOADROM.CLRVRAM :         47C C | *FULLPMMU :                       1 - |
 GLBL_LASTORG :                   0 - |  GLBL_LASTPC :                    0 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*HINTENBL :                      10 - | *HVSTOP :                         2 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - | *JOYA :                          40 - |
*JOYB :                          10 - | *JOYC :                          20 - |
*JOYDOWN :                        2 - | *JOYLEFT :                        4 - |
*JOYMODE :                      800 - | *JOYRIGHT :                       8 - |
*JOYSTART :                      80 - | *JOYUP :                          1 - |
*JOYX :                         400 - | *JOYY :                         200 - |
*JOYZ :                         100 - | *LISTON :                         3 - |
 LIST_INITREGS :                26E C |  LOC_1002 :                     9AA C |
 LOC_1030 :                     9DC C |  LOC_1042 :                     9F0 C |
 LOC_1060 :                     A10 C |  LOC_1080 :                     A32 C |
 LOC_10A2 :                     A56 C |  LOC_10C6 :                     A7C C |
 LOC_10D0 :                     A86 C |  LOC_10D4 :                     A8C C |
 LOC_10DE :                     A96 C |  LOC_10E2 :                     A9C C |
 LOC_10EC :                     AA6 C |  LOC_10F0 :                     AAC C |
 LOC_1106 :                     AC2 C |  LOC_110E :                     ACA C |
 LOC_1116 :                     AD2 C |  LOC_111A :                     AD8 C |
 LOC_1136 :                     AF2 C |  LOC_113E :                     AFA C |
 LOC_1146 :                     B02 C |  LOC_114A :                     B08 C |
 LOC_1154 :                     B12 C |  LOC_1158 :                     B18 C |
 LOC_1162 :                     B22 C |  LOC_1166 :                     B28 C |
 LOC_1170 :                     B32 C |  LOC_118E :                     B5C C |
 LOC_1198 :                     B66 C |  LOC_119C :                     B6C C |
 LOC_11A6 :                     B76 C |  LOC_11AA :                     B7C C |
 LOC_11B2 :                     B86 C |  LOC_11BC :                     B92 C |
 LOC_11C6 :                     B9E C |  LOC_11CE :                     BA8 C |
 LOC_11EE :                     BCA C |  LOC_1214 :                     BF2 C |
 LOC_123C :                     C1C C |  LOC_1268 :                     C48 C |
 LOC_129A :                     C7A C |  LOC_12CC :                     CAC C |
 LOC_1302 :                     CE6 C |  LOC_133C :                     D24 C |
 LOC_135C :                     D46 C |  LOC_1382 :                     D6E C |
 LOC_13AE :                     D9A C |  LOC_13CE :                     DBC C |
 LOC_13F4 :                     DE4 C |  LOC_1420 :                     E10 C |
 LOC_1438 :                     E2A C |  LOC_1452 :                     E46 C |
 LOC_146E :                     E64 C |  LOC_148C :                     E84 C |
 LOC_149E :                     E98 C |  LOC_14B0 :                     EAC C |
 LOC_14C4 :                     EC2 C |  LOC_14DE :                     EDE C |
 LOC_14FA :                     EFC C |  LOC_151A :                     F1C C |
 LOC_1540 :                     F42 C |  LOC_1566 :                     F68 C |
 LOC_1590 :                     F96 C |  LOC_15BE :                     FC8 C |
 LOC_15D3 :                     FE2 C |  LOC_15F0 :                     FFE C |
 LOC_160C :                    101C C |  LOC_162A :                    103C C |
 LOC_163C :                    1050 C |  LOC_164E :                    1064 C |
 LOC_1660 :                    107E C |  LOC_1660.TO_ROM :             10A6 C |
 LOC_167C :                    10B6 C |  LOC_1686 :                    10C0 C |
 LOC_16A4 :                    10EA C |  LOC_16B6 :                    10FE C |
 LOC_16CE :                    1118 C |  LOC_16E8 :                    1134 C |
 LOC_1708 :                    1154 C |  LOC_172E :                    117A C |
 LOC_1754 :                    11A0 C |  LOC_177E :                    11CE C |
 LOC_17AC :                    1200 C |  LOC_17BE :                    1214 C |
 LOC_17D3 :                    122E C |  LOC_17F0 :                    124A C |
 LOC_1810 :                    126A C |  LOC_1836 :                    1290 C |
 LOC_1848 :                    12A4 C |  LOC_1860 :                    12BE C |
 LOC_187A :                    12DA C |  LOC_189A :                    12FA C |
 LOC_18C0 :                    1320 C |  LOC_18D2 :                    1334 C |
 LOC_18F0 :                    1354 C |  LOC_1910 :                    1376 C |
 LOC_1932 :                    139A C |  LOC_1956 :                    13C0 C |
 LOC_195C :                    13C8 C |  LOC_1970 :                    13DE C |
 LOC_198A :                    13FA C |  LOC_19A6 :                    1418 C |
 LOC_19C6 :                    1438 C |  LOC_19EC :                    145E C |
 LOC_1A12 :                    1484 C |  LOC_1A3C :                    14B2 C |
 LOC_1A6A :                    14E4 C |  LOC_1A78 :                    14F4 C |
 LOC_1A88 :                    1508 C |  LOC_1AA6 :                    1528 C |
 LOC_1AB6 :                    153C C |  LOC_1ACA :                    1552 C |
 LOC_1AEA :                    1574 C |  LOC_1B0C :                    1598 C |
 LOC_1B30 :                    15BE C |  LOC_1B56 :                    15E6 C |
 LOC_1B6A :                    15FC C |  LOC_1B8A :                    161E C |
 LOC_1BAC :                    1642 C |  LOC_1BD0 :                    1668 C |
 LOC_1BF6 :                    1690 C |  LOC_1BF6.NONINT :             16B6 C |
 LOC_1C32 :                    16E4 C |  LOC_1C52 :                    170C C |
 LOC_1C6A :                    1726 C |  LOC_1C88 :                    1746 C |
 LOC_1CA8 :                    1768 C |  LOC_1CCC :                    178C C |
 LOC_1CF6 :                    17B6 C |  LOC_1D20 :                    17E0 C |
 LOC_1D4E :                    1812 C |  LOC_1D80 :                    1848 C |
 LOC_1D88 :                    1852 C |  LOC_1D92 :                    185E C |
 LOC_1D9C :                    186A C |  LOC_1DA8 :                    1878 C |
 LOC_1DB6 :                    1888 C |  LOC_1DCA :                    189C C |
 LOC_1DE0 :                    18B0 C |  LOC_1DF6 :                    18C4 C |
 LOC_1E10 :                    18E0 C |  LOC_1E2E :                    1900 C |
 LOC_1E3A :                    190E C |  LOC_1E48 :                    191E C |
 LOC_1E5C :                    1932 C |  LOC_1E68 :                    1940 C |
 LOC_1E76 :                    1950 C |  LOC_1E8A :                    1964 C |
 LOC_1E9C :                    1978 C |  LOC_1EAE :                    198C C |
 LOC_1EC4 :                    19A4 C |  LOC_1ED3 :                    19B8 C |
 LOC_1EE0 :                    19C4 C |  LOC_210 :                      214 C |
 LOC_23A6 :                    1A1A C |  LOC_23F4 :                    1A58 C |
 LOC_270 :                      26A C |  LOC_29C0 :                    20B8 C |
 LOC_29C0.ROM_1 :              20CA C |  LOC_29D8 :                    20D6 C |
 LOC_29E2 :                    20E2 C |  LOC_2A16 :                    1C52 C |
 LOC_2A16.NOVINTFLAG :         1C5C C |  LOC_2A2C :                    1C6A C |
 LOC_2A2C.NO_RELOAD :          1C82 C |  LOC_2A2C.NRML_INCR :          1C8A C |
 LOC_2A5E :                    1C9C C |  LOC_2A5E.HIDEBG :             1CB8 C |
 LOC_2A5E.HIDESP :             1CC4 C |  LOC_2A5E.HIDE_BG :            1CE0 C |
 LOC_2AA4 :                    1D1C C |  LOC_2ABE :                    1D34 C |
 LOC_2ACC :                    1D46 C |  LOC_2AD0 :                    1D4C C |
 LOC_2AE2 :                    1D60 C |  LOC_2AE6 :                    1D66 C |
 LOC_51E :                      30A C |  LOC_8DA :                      318 C |
 LOC_8DBA :                    2124 C |  LOC_8DC4 :                    212E C |
 LOC_8DC6 :                    2130 C |  LOC_8DD0 :                    213A C |
 LOC_8DE0 :                    214A C |  LOC_8DEE :                    2158 C |
 LOC_8E0 :                      31E C |  LOC_8F0 :                      32E C |
 LOC_904 :                      342 C |  LOC_9F4 :                      4C4 C |
 LOC_A10 :                      4D8 C |  LOC_E34 :                      7C4 C |
 LOC_E44 :                      7D6 C |  LOC_E5A :                      7EE C |
 LOC_E72 :                      808 C |  LOC_E8E :                      824 C |
 LOC_EB0 :                      846 C |  LOC_ED2 :                      868 C |
 LOC_EF8 :                      892 C |  LOC_F22 :                      8C0 C |
 LOC_F36 :                      8D6 C |  LOC_F50 :                      8F2 C |
 LOC_F6C :                      910 C |  LOC_F8C :                      930 C |
 LOC_FB2 :                      956 C |  LOC_FD8 :                      97C C |
*MACEXP :                         7 - | *MARS :                           0 - |
*MARSCD :                         0 - | *MCD :                            0 - |
*MD_BANK_SRAM :              A130F1 - |  MD_ENTRY :                     202 C |
 MD_ERROR :                     200 C |  MD_HINT :                      452 C |
 MD_INIT :                      362 C |  MD_INIT.WAIT :                 382 C |
*MD_MARS_ID :                A130EC - |  MD_VINT :                      3AE C |
 MD_VINT.WAIT :                 3F8 C |  MD_VINT.WAIT2 :                42E C |
*MOMCPU :                     68000 - | *MOMCPUNAME :                 68000 - |
 MOSCPU :                       5C0 C |  MOS_BRK :                      B38 C |
 MOS_NULL :                     7C0 C |  NEMUL_LOADCHR :               20EA C |
 NEMUL_LOADCHR.MAKE_CHR :      2118 C | *NESTMAX :                      100 - |
 OFF_23D4 :                    1A48 C |  OFF_2866 :                    1B24 C |
 OFF_29F6 :                    1C42 C |  OLD_MD :                       23E C |
*PACKING :                        0 - | *PADDING :                        0 - |
*PADDINGSOFAR :                   0 - |  PPUADDRBASE :                   48 C |
 PPUADDRINCR :                   46 C |  PPUADDRLATCH :                  50 C |
 PPUCHRBANK :                    42 C |  PPUDATALAST :                   4A C |
 PPUDRWCELL :                  1E96 C |  PPUDRWCELL.LEFT_PG :          1EC2 C |
 PPUDRWCELL.TOP_LYR :          1EB8 C |  PPUDRWCELL.VERMIRROR :        1F2E C |
 PPUDRWCELLPAL :               1F62 C |  PPUDRWCELLPAL.LEFT_PG :       1F92 C |
 PPUDRWCELLPAL.MAKE_ATTR :     1FCE C |  PPUDRWCELLPAL.PICK_COLOR :    2040 C |
 PPUDRWCELLPAL.TOP_LYR :       1F88 C |  PPUDRWCELLPAL.VERT_MIRR :     1FBC C |
 PPUMIRROR :                     30 C |  PPUNMIFLAG :                    54 C |
 PPUNTBLBASE :                   40 C |  PPUOAMADDR :                    44 C |
 PPUOAMUNK :                     52 C |  PPUSETCOLOR :                 1DE6 C |
 PPUSETCOLOR.NO_BGPAL :        1E10 C |  PPUSP0YPOS :                    4E C |
 PPUSPRWIDE :                    4C C |  PPUSTATUS :                     56 C |
 PPUVDPCOLORS :                1E16 C |  PPUVDPINDEX :                 1DA6 C |
*PSG_CTRL :                  C00011 - |  RAM_EMULOOP :     FFFFFFFFFFFF8FF0 C |
 RAM_FAMI_EMU :            FFFF8000 - |  RAM_FAMI_PPU :            FFFFA000 - |
 RAM_FAMI_RAM :            FFFF9000 - |  RAM_FAMI_ROM :            FFFF0000 - |
 RDFROM_APU :                  1A04 C |  RDFROM_PPU :                  1A3A C |
 RDFROM_PRG :                  19F6 C | *RDFROM_RAM :                  19E8 C |
 RDPPU_DATA :                  1AA0 C |  RDPPU_STATUS :                1A5E C |
 RDPPU_STATUS.SETSPRON :       1A86 C |  READINPUT :                   1B76 C |
 READINPUT.THIS_PAD :          1B8C C | *RELAXED :                        0 - |
 RETURN_2418 :                 1A8A C |  RETURN_2418.NOVFLAG :         1A98 C |
 RETURN_241A :                 1A9E C | *RETURN_8E08 :                 2172 C |
 ROMGRABPRG :                  20A2 C |  ROM_FILE :                    8000 C |
 SOUND_LOADZ80 :                314 C |  SOUND_PSGINIT :                32C C |
*SYSCD_ARGS_M :              A12010 - | *SYSCD_ARGS_S :              A12020 - |
*SYSCD_BUS :                 A12000 - | *SYSCD_CDCHOST :             A12008 - |
*SYSCD_CDCMODE :             A12004 - | *SYSCD_COMM_M :              A1200E - |
*SYSCD_COMM_S :              A1200F - | *SYSCD_HINT :                A12006 - |
*SYSCD_MEMORY :              A12003 - | *SYSCD_PRGRAM :               20000 - |
*SYSCD_STOPWTCH :            A12008 - | *SYSCD_WORDRAM :             200000 - |
*SYS_CTRL_1 :                A10009 - | *SYS_CTRL_2 :                A1000B - |
*SYS_CTRL_3 :                A1000D - | *SYS_DATA_1 :                A10003 - |
*SYS_DATA_2 :                A10005 - | *SYS_DATA_3 :                A10007 - |
*SYS_EXRAM :                 200000 - | *SYS_IO :                    A10001 - |
*SYS_TMSS :                  A14000 - | *TIME :                     0:15:35 - |
*TRUE :                           1 - | *VARNULLVRAM :                  7FF - |
 VDPHINTSP0 :                    58 C |  VDPPALETTE :                    66 C |
 VDPREG00 :                      2C C |  VDPREG01 :                      2E C |
 VDPSCRLX :                      5E C |  VDPSCRLY :                      62 C |
 VDPSPRDATA :                    E6 C | *VDP_CTRL :                  C00004 - |
*VDP_DATA :                  C00000 - | *VDP_PALETTE :             C0000000 - |
*VDP_VSRAM :               40000010 - | *VERSION :                     142F - |
 VIDEO_INIT :                   33A C | *VINTENBL :                      20 - |
 WRPPU_DATA :                  1D7A C |  WRPPU_SCROLL :                1CF2 C |
 WRTO_APU :                    1B14 C |  WRTO_PPU :                    1C34 C |
 WRTO_PRG :                    1ADC C |  WRTO_PRG.COPYCHR :            1B02 C |
 WRTO_PRG.MAPPER_3 :           1AEA C | *WRTO_RAM :                    1ACA C |
*YM_CTRL_1 :                 A04000 - | *YM_CTRL_2 :                 A04002 - |
*YM_DATA_1 :                 A04001 - | *YM_DATA_2 :                 A04003 - |
 Z80_BUS :                   A11100 - | *Z80_CPU :                   A00000 - |
 Z80_RESET :                 A11200 - | *ZBANK :                       6000 - |
*ZPSG_CTRL :                   7F11 - | *ZVDP_CTRL :                   7F04 - |
*ZVDP_DATA :                   7F00 - | *ZYM_CTRL_1 :                  4000 - |
*ZYM_CTRL_2 :                  4002 - | *ZYM_DATA_1 :                  4001 - |
*ZYM_DATA_2 :                  4003 - |

    443 symbols
    119 unused symbols

 AS V1.42 Beta [Bld 118] - source file md.asm - page 3 - 10/16/2020 0:15:35


  defined macros:
  ---------------

FINISH                                | ISO_FILE                             
ISO_SETFS                             | ORG                                  
ROMPAD                                | STRUCT                               

      6 macros

 AS V1.42 Beta [Bld 118] - source file md.asm - page 4 - 10/16/2020 0:15:35


  defined functions:
  ------------------

NOTZ80                                | LOCATE                               
MAPSIZE                               | DOUBLEWORD                           
M68K_ADDR                             |

 AS V1.42 Beta [Bld 118] - source file md.asm - page 5 - 10/16/2020 0:15:35


  codepages:
  ----------

STANDARD (0 changed characters)


0.02 seconds assembly time

   4158 lines source file
   4170 lines incl. macro expansions
      3 passes
      0 errors
      0 warnings
