 AS V1.42 Beta [Bld 118] - source file md.asm - page 1 - 4/13/2021 19:48:59


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; FamiDrive beta
       4/       0 :                     ; A Modification of Nemul by Mairtrus
       5/       0 :                     ; 
       6/       0 :                     ; Now works on real hardware
       7/       0 :                     ; +-----------------------------------------------------------------+
       8/       0 :                     
       9/       0 :                     		include	"system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; --------------------------------------------------------
(1)    7/       0 :                     ; AS Main settings
(1)    8/       0 :                     ; --------------------------------------------------------
(1)    9/       0 :                     
(1)   10/       0 :                     		!org 0				; Start at 0
(1)   11/       0 :                     		cpu 		68000		; BASE CPU is 68k (manually changed later)
(1)   12/       0 :                     		padding		off		; Dont pad dc.b
(1)   13/       0 :                     		listing 	purecode	; Want listing file, but only the final code in expanded macros
(1)   14/       0 :                     		supmode 	on 		; Supervisor mode
(1)   15/       0 :                     		dottedstructs	off		; If needed
(1)   16/       0 :                     		page 		0
(1)   17/       0 :                     
(1)   18/       0 :                     ; ====================================================================
(1)   19/       0 :                     ; ---------------------------------------------
(1)   20/       0 :                     ; Functions
(1)   21/       0 :                     ; ---------------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     ; Fix (address).w
(1)   24/       0 :                     m68k_addr 	function x,-(-x)&$FFFFFFFF					; Allow usage of negative addresses as .w
(1)   25/       0 :                     doubleword 	function l,r,(l<<16&$FFFF0000|r&$FFFF)				; LLLL RRRR
(1)   26/       0 :                     
(1)   27/       0 :                     mapsize		function l,r,( ((l-1)/8)<<16&$FFFF0000|((r-1)/8)&$FFFF )	; for cell w/h use doubleword
(1)   28/       0 :                     locate		function a,b,c,(c&$FF)|(b<<8&$FF00)|(a<<16&$FF0000)		; Layer|X pos|Y pos for some video routines
(1)   29/       0 :                     
(1)   30/       0 :                     ; ====================================================================
(1)   31/       0 :                     ; ---------------------------------------------
(1)   32/       0 :                     ; Macros
(1)   33/       0 :                     ; ---------------------------------------------
(1)   34/       0 :                     
(1)   35/       0 :                     ; -------------------------------------
(1)   36/       0 :                     ; Reserve memory space
(1)   37/       0 :                     ; -------------------------------------
(1)   38/       0 :                     
(1)   39/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   40/       0 :                     GLBL_LASTPC	set *
(1)   41/       0 :                     		dephase
(1)   42/       0 :                     GLBL_LASTORG	set *
(1)   43/       0 :                     		phase thisinput
(1)   44/       0 :                     		endm
(1)   45/       0 :                     		
(1)   46/       0 :                     ; -------------------------------------
(1)   47/       0 :                     ; Finish
(1)   48/       0 :                     ; -------------------------------------
(1)   49/       0 :                     
(1)   50/       0 :                     finish		macro				; Then finish
(1)   51/       0 :                     		!org GLBL_LASTORG
(1)   52/       0 :                     		phase GLBL_LASTPC
(1)   53/       0 :                     		endm
(1)   54/       0 :                     
(1)   55/       0 :                     ; -------------------------------------
(1)   56/       0 :                     ; ZERO Fill padding
(1)   57/       0 :                     ; -------------------------------------
(1)   58/       0 :                     
(1)   59/       0 :                     rompad		macro address			; Zero fill
(1)   60/       0 :                     diff := address - *
(1)   61/       0 :                     		if diff < 0
(1)   62/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   63/       0 :                     		else
(1)   64/       0 :                     			while diff > 1024
(1)   65/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   66/       0 :                     				dc.b [1024]0
(1)   67/       0 :                     diff := diff - 1024
(1)   68/       0 :                     			endm
(1)   69/       0 :                     			dc.b [diff]0
(1)   70/       0 :                     		endif
(1)   71/       0 :                     	endm
(1)   72/       0 :                     	
(1)   73/       0 :                     ; -------------------------------------
(1)   74/       0 :                     ; ORG
(1)   75/       0 :                     ;
(1)   76/       0 :                     ; (from s2disasm)
(1)   77/       0 :                     ; -------------------------------------
(1)   78/       0 :                     
(1)   79/       0 : =$0                 paddingSoFar set 0
(1)   80/       0 :                     ; 128 = 80h = z80, 32988 = 80DCh = z80unDoC 
(1)   81/       0 :                     notZ80 function cpu,(cpu<>128)&&(cpu<>32988)
(1)   82/       0 :                     
(1)   83/       0 :                     ; make org safer (impossible to overwrite previously assembled bytes) and count padding
(1)   84/       0 :                     ; and also make it work in Z80 code without creating a new segment
(1)   85/       0 :                     org macro address
(1)   86/       0 :                     	if notZ80(MOMCPU)
(1)   87/       0 :                     		if address < *
(1)   88/       0 :                     			error "too much stuff before org $\{address} ($\{(*-address)} bytes)"
(1)   89/       0 :                     		elseif address > *
(1)   90/       0 :                     paddingSoFar	set paddingSoFar + address - *
(1)   91/       0 :                     			!org address
(1)   92/       0 :                     		endif
(1)   93/       0 :                     	else
(1)   94/       0 :                     		if address < $
(1)   95/       0 :                     			error "too much stuff before org 0\{address}h (0\{($-address)}h bytes)"
(1)   96/       0 :                     		else
(1)   97/       0 :                     			while address > $
(1)   98/       0 :                     				db 0
(1)   99/       0 :                     			endm
(1)  100/       0 :                     		endif
(1)  101/       0 :                     	endif
(1)  102/       0 :                         endm
(1)  103/       0 :                     
(1)  104/       0 :                     ; ====================================================================
(1)  105/       0 :                     ; ---------------------------------------------
(1)  106/       0 :                     ; Mega CD only
(1)  107/       0 :                     ; ---------------------------------------------
(1)  108/       0 :                     
(1)  109/       0 :                     ; Set a ISO file
(1)  110/       0 :                     ; NOTE: a valid ISO head is required ($8000 to $B7FF)
(1)  111/       0 :                     
(1)  112/       0 :                     iso_setfs	macro type,start,end
(1)  113/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  114/       0 :                     		dc.b 0						; zero
(1)  115/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  116/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  117/       0 :                     		dc.l start>>11					; Start sector, big
(1)  118/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  119/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  120/       0 :                     		dc.l end-start					; Filesize, big
(1)  121/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  122/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  123/       0 :                     		dc.b 2						; File flags
(1)  124/       0 :                     		dc.b 0,0
(1)  125/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  126/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  127/       0 :                     		dc.b 1,type
(1)  128/       0 :                     .fend:
(1)  129/       0 :                     		endm
(1)  130/       0 :                     		
(1)  131/       0 :                     iso_file	macro filename,start,end
(1)  132/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  133/       0 :                     		dc.b 0						; zero
(1)  134/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  135/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  136/       0 :                     		dc.l start>>11					; Start sector, big
(1)  137/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  138/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  139/       0 :                     		dc.l end-start					; Filesize, big
(1)  140/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  141/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  142/       0 :                     		dc.b 0						; File flags
(1)  143/       0 :                     		dc.b 0,0
(1)  144/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  145/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  146/       0 :                     		dc.b .flend-.flen
(1)  147/       0 :                     .flen:		dc.b filename,";1"
(1)  148/       0 :                     .flend:		dc.b 0
(1)  149/       0 :                     .fend:
(1)  150/       0 :                     		endm
(1)  151/       0 :                     		
(1)  152/       0 :                     ; ====================================================================
(1)  153/       0 :                     ; ---------------------------------------------
(1)  154/       0 :                     ; 32X only
(1)  155/       0 :                     ; ---------------------------------------------
(1)  156/       0 :                     
      10/       0 :                     		include	"system/md/const.asm"	; RAM / Variables are here
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Engine settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; MDRAM_START	equ	$FFFF9000
(1)    7/       0 :                     ; MAX_MDERAM	equ 	$200		; MAX RAM for Game modes
(1)    8/       0 :                     
(1)    9/       0 :                     ; ====================================================================
(1)   10/       0 :                     ; ----------------------------------------------------------------
(1)   11/       0 :                     ; Aliases
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     
(1)   14/       0 :                     ; Controller_1	equ RAM_InputData
(1)   15/       0 :                     ; Controller_2	equ RAM_InputData+sizeof_input
(1)   16/       0 :                     
(1)   17/       0 : =$C0000000          Vdp_palette	equ $C0000000		; Palette
(1)   18/       0 : =$40000010          Vdp_vsram	equ $40000010		; Vertical scroll
(1)   19/       0 :                     
(1)   20/       0 :                     ; ====================================================================
(1)   21/       0 :                     ; ----------------------------------------------------------------
(1)   22/       0 :                     ; Variables
(1)   23/       0 :                     ; ----------------------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 :                     ; --------------------------------------------------------
(1)   26/       0 :                     ; controller
(1)   27/       0 :                     ; --------------------------------------------------------
(1)   28/       0 :                     
(1)   29/       0 : =$1                 JoyUp		equ $0001
(1)   30/       0 : =$2                 JoyDown		equ $0002
(1)   31/       0 : =$4                 JoyLeft		equ $0004
(1)   32/       0 : =$8                 JoyRight	equ $0008
(1)   33/       0 : =$10                JoyB		equ $0010
(1)   34/       0 : =$20                JoyC		equ $0020
(1)   35/       0 : =$40                JoyA		equ $0040
(1)   36/       0 : =$80                JoyStart	equ $0080
(1)   37/       0 : =$100               JoyZ		equ $0100
(1)   38/       0 : =$200               JoyY		equ $0200
(1)   39/       0 : =$400               JoyX		equ $0400
(1)   40/       0 : =$800               JoyMode		equ $0800
(1)   41/       0 :                     
(1)   42/       0 :                     ; right byte only
(1)   43/       0 : =$0                 bitJoyUp	equ 0
(1)   44/       0 : =$1                 bitJoyDown	equ 1
(1)   45/       0 : =$2                 bitJoyLeft	equ 2
(1)   46/       0 : =$3                 bitJoyRight	equ 3
(1)   47/       0 : =$4                 bitJoyB		equ 4
(1)   48/       0 : =$5                 bitJoyC		equ 5
(1)   49/       0 : =$6                 bitJoyA		equ 6
(1)   50/       0 : =$7                 bitJoyStart	equ 7
(1)   51/       0 :                     
(1)   52/       0 :                     ; left byte only
(1)   53/       0 : =$0                 bitJoyZ		equ 0
(1)   54/       0 : =$1                 bitJoyY		equ 1
(1)   55/       0 : =$2                 bitJoyX		equ 2
(1)   56/       0 : =$3                 bitJoyMode	equ 3
(1)   57/       0 :                     
(1)   58/       0 :                     ; --------------------------------------------------------
(1)   59/       0 :                     ; vdp_ctrl READ bits
(1)   60/       0 :                     ; --------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 : =$2                 bitHint		equ 2
(1)   63/       0 : =$3                 bitVint		equ 3
(1)   64/       0 : =$1                 bitDma		equ 1
(1)   65/       0 :                     
(1)   66/       0 :                     ; --------------------------------------------------------
(1)   67/       0 :                     ; VDP register vars
(1)   68/       0 :                     ; --------------------------------------------------------
(1)   69/       0 :                     
(1)   70/       0 :                     ; Register $80
(1)   71/       0 : =$2                 HVStop		equ $02
(1)   72/       0 : =$10                HintEnbl	equ $10
(1)   73/       0 : =$1                 bitHVStop	equ 1
(1)   74/       0 : =$4                 bitHintEnbl	equ 4
(1)   75/       0 :                     
(1)   76/       0 :                     ; Register $81
(1)   77/       0 : =$40                DispEnbl 	equ $40
(1)   78/       0 : =$20                VintEnbl 	equ $20
(1)   79/       0 : =$10                DmaEnbl		equ $10
(1)   80/       0 : =$6                 bitDispEnbl	equ 6
(1)   81/       0 : =$5                 bitVintEnbl	equ 5
(1)   82/       0 : =$4                 bitDmaEnbl	equ 4
(1)   83/       0 : =$3                 bitV30		equ 3
(1)   84/       0 :                     
(1)   85/       0 :                     ; --------------------------------------------------------
(1)   86/       0 :                     ; Misc
(1)   87/       0 :                     ; --------------------------------------------------------
(1)   88/       0 :                     
(1)   89/       0 : =$7FF               varNullVram	equ $7FF
(1)   90/       0 :                     
      11/       0 :                     		include	"system/md/map.asm"	; Genesis hardware map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Genesis / Mega drive 68k map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =$200000            sys_exram	equ	$200000		; External RAM
(1)    7/       0 : =$A00000            z80_cpu		equ	$A00000		; Z80 CPU, size: $2000
(1)    8/       0 : =$A04000            ym_ctrl_1	equ	$A04000		; YM2612 reg 1
(1)    9/       0 : =$A04001            ym_data_1	equ	$A04001		; YM2612 reg 2
(1)   10/       0 : =$A04002            ym_ctrl_2	equ	$A04002		; YM2612 reg 1
(1)   11/       0 : =$A04003            ym_data_2	equ	$A04003		; YM2612 reg 2
(1)   12/       0 : =$A10001            sys_io		equ	$A10001		; bits: OVRSEAS(7)|PAL(6)|DISK(5)|VER(3-0)
(1)   13/       0 : =$A10003            sys_data_1	equ	$A10003		; Port 1 DATA
(1)   14/       0 : =$A10005            sys_data_2	equ	$A10005		; Port 2 DATA
(1)   15/       0 : =$A10007            sys_data_3	equ	$A10007		; Modem DATA
(1)   16/       0 : =$A10009            sys_ctrl_1	equ	$A10009		; Port 1 CTRL
(1)   17/       0 : =$A1000B            sys_ctrl_2	equ	$A1000B		; Port 2 CTRL
(1)   18/       0 : =$A1000D            sys_ctrl_3	equ	$A1000D		; Modem CTRL
(1)   19/       0 : =$A14000            sys_tmss	equ	$A14000		; write "SEGA" here for ver > 0
(1)   20/       0 : =$A11100            z80_bus 	equ	$A11100		; only use bit 0 (bit 8 as WORD)
(1)   21/       0 : =$A11200            z80_reset	equ	$A11200		; WRITE only ($0000 reset/$0100 cancel)
(1)   22/       0 : =$A130EC            md_mars_id	equ	$A130EC		; MARS ID "MARS"
(1)   23/       0 : =$A130F1            md_bank_sram	equ	$A130F1		; Make SRAM visible at $200000
(1)   24/       0 : =$C00000            vdp_data	equ	$C00000		; video data port
(1)   25/       0 : =$C00004            vdp_ctrl	equ	$C00004		; video control port
(1)   26/       0 : =$C00011            psg_ctrl	equ	$C00011		; PSG control
(1)   27/       0 :                     
(1)   28/       0 :                     ; ----------------------------------------------------------------
(1)   29/       0 :                     ; Genesis / Mega drive Z80 map
(1)   30/       0 :                     ; ----------------------------------------------------------------
(1)   31/       0 :                     
(1)   32/       0 : =$4000              zym_ctrl_1	equ	$4000		; YM2612 reg 1
(1)   33/       0 : =$4001              zym_data_1	equ	$4001		; YM2612 reg 2
(1)   34/       0 : =$4002              zym_ctrl_2	equ	$4002		; YM2612 reg 1
(1)   35/       0 : =$4003              zym_data_2	equ	$4003		; YM2612 reg 2
(1)   36/       0 : =$6000              zbank		equ	$6000		; ROM BANK 24bits %XXXXXXXX X0000000 00000000
(1)   37/       0 : =$7F00              zvdp_data	equ	$7F00		; video data port
(1)   38/       0 : =$7F04              zvdp_ctrl	equ	$7F04		; video control port
(1)   39/       0 : =$7F11              zpsg_ctrl	equ	$7F11		; PSG control
(1)   40/       0 :                     
(1)   41/       0 :                     ; ----------------------------------------------------------------
(1)   42/       0 :                     ; If a SEGA CD is attached
(1)   43/       0 :                     ; ----------------------------------------------------------------
(1)   44/       0 :                     
(1)   45/       0 : =$20000             syscd_prgram	equ	$020000		; SubCPU PRG-RAM, up to $1FFFF, banked
(1)   46/       0 : =$200000            syscd_wordram	equ	$200000		; WORD-RAM seen in MAIN-CPU
(1)   47/       0 : =$A12000            syscd_bus	equ	$A12000		; WORD | Sub-CPU BUS/RESET
(1)   48/       0 : =$A12003            syscd_memory	equ	$A12003		; BYTE | Sub-CPU memory mode
(1)   49/       0 : =$A12004            syscd_cdcmode	equ	$A12004		; WORD | CDC Mode
(1)   50/       0 : =$A12006            syscd_hint	equ	$A12006		; WORD | VDP HBlank jump ($FFxxxx)
(1)   51/       0 : =$A12008            syscd_cdchost	equ	$A12008		; WORD | CDC Host
(1)   52/       0 : =$A12008            syscd_stopwtch	equ	$A12008		; WORD | Stopwatch
(1)   53/       0 : =$A1200E            syscd_comm_m	equ	$A1200E		; BYTE | MainCPU R/W comm byte
(1)   54/       0 : =$A1200F            syscd_comm_s	equ	$A1200F		; BYTE | Sub-CPU Read comm byte
(1)   55/       0 : =$A12010            syscd_args_m	equ	$A12010		; DATA | comm R/W list, max size: $E
(1)   56/       0 : =$A12020            syscd_args_s	equ	$A12020		; DATA | comm Read list, max size: $E
(1)   57/       0 :                     
(1)   58/       0 :                     ; ----------------------------------------------------------------
(1)   59/       0 :                     ; If a 32X is attached
(1)   60/       0 :                     ; ----------------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 :                     ; TODO
(1)   63/       0 :                     
      12/       0 :                     
      13/       0 :                     ; ====================================================================
      14/       0 :                     ; ----------------------------------------------------------------
      15/       0 :                     ; Emulator variables
      16/       0 :                     ; ----------------------------------------------------------------
      17/       0 :                     
      18/       0 :                     ; ------------------------------------------------
      19/       0 :                     ; RAM
      20/       0 :                     ; ------------------------------------------------
      21/       0 :                     
      22/       0 : =$FFFF0000          RAM_Fami_ROM	equ $FFFF0000		; PRG-ROM
      23/       0 : =$FFFF8000          RAM_Fami_Emu	equ $FFFF8000		; Emulator buffer
      24/       0 : =$FFFF9000          RAM_Fami_RAM	equ $FFFF9000		; RAM size: $800
      25/       0 : =$FFFFA000          RAM_Fami_PPU	equ $FFFFA000		; PPU size: $3EF8 (TODO: still uses negative variables)
      26/       0 :                     
      27/       0 :                     ; ----------------------------------------------------------------
      28/       0 :                     ; CPU
      29/       0 :                     ; ----------------------------------------------------------------
      30/       0 :                     
      31/       0 : =$7FFA              cpuNMI		equ $7FFA
      32/       0 : =$7FFC              cpuEntry	equ $7FFC
      33/       0 : =$7FFE              cpuIRQ		equ $7FFE
      34/       0 :                     
      35/       0 :                     ; ----------------------------------------------------------------
      36/       0 :                     ; Emulator
      37/       0 :                     ; ---------------------------------------------------------------
      38/       0 :                     
      39/       0 : (MACRO)             		struct RAM_Fami_Emu+$FF0
      39/       0 : =$0                 GLBL_LASTPC     set *
      39/       0 :                                     dephase
      39/       0 : =$0                 GLBL_LASTORG    set *
      39/FFFFFFFFFFFF8FF0 :                                     phase RAM_FAMI_EMU+$FF0
      40/FFFFFFFFFFFF8FF0 :                     RAM_EmuLoop	ds.w 3
      41/FFFFFFFFFFFF8FF6 : (MACRO)             		finish
      41/FFFFFFFFFFFF8FF0 :                                     !org GLBL_LASTORG
      41/       0 :                                     phase GLBL_LASTPC
      42/       0 :                     
      43/       0 :                     ; ----------------------------------------------------------------
      44/       0 :                     ; Unsorted
      45/       0 :                     ; ----------------------------------------------------------------
      46/       0 :                     
      47/       0 : (MACRO)             		struct 0
      47/       0 : =$0                 GLBL_LASTPC     set *
      47/       0 :                                     dephase
      47/       0 : =$0                 GLBL_LASTORG    set *
      47/       0 :                                     phase 0
      48/       0 :                     emuPrgRom	ds.l 1
      49/       4 :                     emuChrRom	ds.l 1
      50/       8 :                     famiVintSave	ds.l 8
      51/      28 :                     famiVintSave2	ds.w 1
      52/      2A :                     cpuSprHint	ds.w 1;equ -$38
      53/      2C :                     vdpReg00	ds.w 1
      54/      2E :                     vdpReg01	ds.w 1;equ -$36
      55/      30 :                     ppuMirror	ds.w 1;equ -$34
      56/      32 :                     cpuMapper	ds.w 1;equ -$32
      57/      34 :                     cpuFamiVint	ds.w 1;equ -$30
      58/      36 :                     cpuInputData	ds.w 2;equ -$28
      59/      3A :                     cpuModeDec	ds.w 1;equ -$22
      60/      3C :                     cpuFlag2	ds.w 1;equ -$20
      61/      3E :                     cpuModeIntDis	ds.w 1;equ -$1E
      62/      40 :                     ppuNTblBase	ds.w 1;equ -$1A
      63/      42 :                     ppuChrBank	ds.w 1;equ -$18
      64/      44 :                     ppuOamAddr	ds.w 1;equ -$16
      65/      46 :                     ppuAddrIncr	ds.w 1;equ -$14
      66/      48 :                     ppuAddrBase	ds.w 1;equ -$12
      67/      4A :                     ppuDataLast	ds.w 1;equ -$10
      68/      4C :                     ppuSprWide	ds.w 1;equ -$E
      69/      4E :                     ppuSp0Ypos	ds.w 1;equ -$C
      70/      50 :                     ppuAddrLatch	ds.w 1;equ -$A
      71/      52 :                     ppuOamUnk	ds.w 1;equ -6
      72/      54 :                     ppuNmiFlag	ds.w 1;equ -4
      73/      56 :                     ppuStatus	ds.w 1;equ -2
      74/      58 :                     vdpHintSp0	ds.w 1
      75/      5A :                     FamiMdVint	ds.w 1
      76/      5C :                     FamiPPUVint	ds.w 1
      77/      5E :                     vdpScrlX	ds.l 1
      78/      62 :                     vdpScrlY	ds.l 1
      79/      66 :                     vdpPalette	ds.w 64
      80/      E6 :                     vdpSprData	ds.w 8*64
      81/     4E6 : (MACRO)             		finish
      81/       0 :                                     !org GLBL_LASTORG
      81/       0 :                                     phase GLBL_LASTPC
      82/       0 :                     
      83/       0 :                     ; ====================================================================
      84/       0 :                     ; Header
      85/       0 :                     ; ====================================================================
      86/       0 :                     
      87/       0 : 0000 0000           		dc.l 0
      88/       4 : 0000 0202           		dc.l MD_Entry
      89/       8 : 0000 0200           		dc.l MD_Error
      90/       C : 0000 0200           		dc.l MD_Error
      91/      10 : 0000 0200           		dc.l MD_Error
      92/      14 : 0000 0200           		dc.l MD_Error
      93/      18 : 0000 0200           		dc.l MD_Error
      94/      1C : 0000 0200           		dc.l MD_Error
      95/      20 : 0000 0200           		dc.l MD_Error
      96/      24 : 0000 0200           		dc.l MD_Error
      97/      28 : 0000 0200           		dc.l MD_Error
      98/      2C : 0000 0200           		dc.l MD_Error
      99/      30 : 0000 0200           		dc.l MD_Error
     100/      34 : 0000 0200           		dc.l MD_Error
     101/      38 : 0000 0200           		dc.l MD_Error
     102/      3C : 0000 0200           		dc.l MD_Error
     103/      40 : 0000 0200           		dc.l MD_Error
     104/      44 : 0000 0200           		dc.l MD_Error
     105/      48 : 0000 0200           		dc.l MD_Error
     106/      4C : 0000 0200           		dc.l MD_Error
     107/      50 : 0000 0200           		dc.l MD_Error
     108/      54 : 0000 0200           		dc.l MD_Error
     109/      58 : 0000 0200           		dc.l MD_Error
     110/      5C : 0000 0200           		dc.l MD_Error
     111/      60 : 0000 0200           		dc.l MD_Error
     112/      64 : 0000 0200           		dc.l MD_Error
     113/      68 : 0000 0200           		dc.l MD_Error
     114/      6C : 0000 0200           		dc.l MD_Error
     115/      70 : 0000 0452           		dc.l MD_Hint
     116/      74 : 0000 0200           		dc.l MD_Error
     117/      78 : 0000 03AE           		dc.l MD_Vint
     118/      7C : 0000 0200           		dc.l MD_Error
     119/      80 : 0000 0200           		dc.l MD_Error
     120/      84 : 0000 0200           		dc.l MD_Error
     121/      88 : 0000 0200           		dc.l MD_Error
     122/      8C : 0000 0200           		dc.l MD_Error
     123/      90 : 0000 0200           		dc.l MD_Error
     124/      94 : 0000 0200           		dc.l MD_Error
     125/      98 : 0000 0200           		dc.l MD_Error
     126/      9C : 0000 0200           		dc.l MD_Error
     127/      A0 : 0000 0200           		dc.l MD_Error
     128/      A4 : 0000 0200           		dc.l MD_Error
     129/      A8 : 0000 0200           		dc.l MD_Error
     130/      AC : 0000 0200           		dc.l MD_Error
     131/      B0 : 0000 0200           		dc.l MD_Error
     132/      B4 : 0000 0200           		dc.l MD_Error
     133/      B8 : 0000 0200           		dc.l MD_Error
     134/      BC : 0000 0200           		dc.l MD_Error
     135/      C0 : 0000 0202           		dc.l MD_Entry
     136/      C4 : 0000 0202           		dc.l MD_Entry
     137/      C8 : 0000 0202           		dc.l MD_Entry
     138/      CC : 0000 0202           		dc.l MD_Entry
     139/      D0 : 0000 0202           		dc.l MD_Entry
     140/      D4 : 0000 0202           		dc.l MD_Entry
     141/      D8 : 0000 0202           		dc.l MD_Entry
     142/      DC : 0000 0202           		dc.l MD_Entry
     143/      E0 : 0000 0202           		dc.l MD_Entry
     144/      E4 : 0000 0202           		dc.l MD_Entry
     145/      E8 : 0000 0202           		dc.l MD_Entry
     146/      EC : 0000 0202           		dc.l MD_Entry
     147/      F0 : 0000 0202           		dc.l MD_Entry
     148/      F4 : 0000 0202           		dc.l MD_Entry
     149/      F8 : 0000 0202           		dc.l MD_Entry
     150/      FC : 0000 0202           		dc.l MD_Entry
     151/     100 : 5345 4741 204D 4547 		dc.b "SEGA MEGA DRIVE "
                    4120 4452 4956 4520 
     152/     110 : 2843 2947 4636 3420 		dc.b "(C)GF64 2020.???"
                    3230 3230 2E3F 3F3F 
     153/     120 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     154/     150 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     155/     180 : 474D 2048 4F4D 4542 		dc.b "GM HOMEBREW-00"
                    5245 572D 3030      
     156/     18E : 0000                		dc.w 0
     157/     190 : 0000                		dc.w 0
     158/     192 : 2020 2020 2020 2020 		dc.b "              "
                    2020 2020 2020      
     159/     1A0 : 0000 0000           		dc.l 0
     160/     1A4 : 0000 7FFF           		dc.l EndOfRom-1
     161/     1A8 : 00FF 0000           		dc.l $FF0000
     162/     1AC : 00FF FFFF           		dc.l $FFFFFF
     163/     1B0 : 2020 2020           		dc.l $20202020
     164/     1B4 : 2020 2020           		dc.l $20202020
     165/     1B8 : 2020 2020           		dc.l $20202020
     166/     1BC : 2020 2020 2020 2020 		dc.b "                                                    "
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020           
     167/     1F0 : 4A55 4520 2020 2020 		dc.b "JUE             "
                    2020 2020 2020 2020 
     168/     200 :                     
     169/     200 :                     ; ====================================================================
     170/     200 :                     ; ----------------------------------------------------------------
     171/     200 :                     ; Error
     172/     200 :                     ; ----------------------------------------------------------------
     173/     200 :                     
     174/     200 :                     MD_Error:
     175/     200 : 60FE                		bra.s	MD_Error
     176/     202 :                     
     177/     202 :                     ; ====================================================================
     178/     202 :                     ; ----------------------------------------------------------------
     179/     202 :                     ; Entry
     180/     202 :                     ; ----------------------------------------------------------------
     181/     202 :                     
     182/     202 :                     MD_Entry:
     183/     202 : 46FC 2700           		move	#$2700,sr
     184/     206 : 4AB9 00A1 0008      		tst.l	($A10008).l
     185/     20C : 6606                		bne.s	loc_210
     186/     20E : 4A79 00A1 000C      		tst.w	($A1000C).l
     187/     214 :                     loc_210:
     188/     214 : 6600 0054           		bne.w	loc_270
     189/     218 : 4BF9 0000 026E      		lea	(list_InitRegs).l,a5
     190/     21E : 4C9D 00E0           		movem.w	(a5)+,d5-d7
     191/     222 : 4CDD 1F00           		movem.l	(a5)+,a0-a4
     192/     226 : 1039 00A1 0001      		move.b	($A10001).l,d0
     193/     22C : 0200 000F           		andi.b	#$F,d0
     194/     230 : 6700 000C           		beq.w	old_md
     195/     234 : 23FC 5345 4741 00A1 		move.l	#"SEGA",($A14000).l
                    4000                
     196/     23E :                     old_md:
     197/     23E : 4280                		clr.l	d0
     198/     240 : 2C40                		movea.l	d0,a6
     199/     242 : 4E66                		move	a6,usp
     200/     244 :                     clrstack:
     201/     244 : 2D00                		move.l	d0,-(a6)
     202/     246 : 51CE FFFC           		dbf	d6,clrstack
     203/     24A : 6100 00C8           		bsr	Sound_LoadZ80
     204/     24E : 6100 00DC           		bsr	Sound_PsgInit
     205/     252 : 6100 00E6           		bsr	Video_Init
     206/     256 : 4CD6 7FFF           		movem.l	(a6),d0-a6
     207/     25A : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     208/     262 : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     209/     26A :                     loc_270:
     210/     26A : 6000 00F6           		bra.w	MD_Init
     211/     26E :                     ; ----------------------------------------------------------------
     212/     26E : 8000                list_InitRegs:	dc.w $8000		; d5
     213/     270 : 3FFF                		dc.w $3FFF		; d6
     214/     272 : 0100                		dc.w $100		; d7
     215/     274 : 00A0 0000           		dc.l $A00000		; a0
     216/     278 : 00A1 1100           		dc.l $A11100		; a1
     217/     27C : 00A1 1200           		dc.l $A11200		; a2
     218/     280 : 00C0 0000           		dc.l $C00000		; a3
     219/     284 : 00C0 0004           		dc.l $C00004		; a4
     220/     288 : AF01 D91F 1127 0021 		dc.b $AF, 1, $D9, $1F, $11, $27, 0, $21, $26, 0, $F9, $77
                    2600 F977           
     221/     294 : EDB0 DDE1 FDE1 ED47 		dc.b $ED, $B0, $DD, $E1, $FD, $E1, $ED,	$47, $ED, $4F
                    ED4F                
     222/     29E : D1E1 F108 D9C1 D1E1 		dc.b $D1, $E1, $F1, 8, $D9, $C1, $D1, $E1, $F1,	$F9, $F3
                    F1F9 F3             
     223/     2A9 : ED56 36E9 E981 048F 		dc.b $ED, $56, $36, $E9, $E9, $81, 4, $8F, 1
                    01                  
     224/     2B2 : 9F                  		dc.b $9F
     225/     2B3 : BF                  		dc.b $BF
     226/     2B4 : DF                  		dc.b $DF
     227/     2B5 : FF                  		dc.b $FF
     228/     2B6 :                     ; ----------------------------------------------------------------
     229/     2B6 :                     
     230/     2B6 :                     ; =============== S U B	R O U T	I N E =======================================
     231/     2B6 :                     
     232/     2B6 :                     Fami_InitVideo:
     233/     2B6 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     234/     2BC : 3E3C 0FFF           		move.w	#$FFF,d7
     235/     2C0 : 2D7C 4000 0003 0004 		move.l	#$40000003,4(a6)
     236/     2C8 :                     .loopfg:
     237/     2C8 : 3CBC 0200           		move.w	#$200,(a6)
     238/     2CC : 51CF FFFA           		dbf	d7,.loopfg
     239/     2D0 : 3E3C 0FFF           		move.w	#$FFF,d7
     240/     2D4 : 2D7C 6000 0003 0004 		move.l	#$60000003,4(a6)
     241/     2DC :                     .loopbg:
     242/     2DC : 3CBC 0200           		move.w	#$200,(a6)
     243/     2E0 : 51CF FFFA           		dbf	d7,.loopbg
     244/     2E4 : 2D7C 6800 0002 0004 		move.l	#$68000002,4(a6)
     245/     2EC : 2CBC 0000 0000      		move.l	#0,(a6)
     246/     2F2 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     247/     2FA : 2CBC 0000 0000      		move.l	#0,(a6)
     248/     300 : 7E3F                		moveq	#$3F,d7
     249/     302 : 2D7C C000 0000 0004 		move.l	#$C0000000,4(a6)
     250/     30A :                     
     251/     30A :                     loc_51E:
     252/     30A : 3CBC 0000           		move.w	#0,(a6)
     253/     30E : 51CF FFFA           		dbf	d7,loc_51E
     254/     312 : 4E75                		rts
     255/     314 :                     
     256/     314 :                     ; =============== S U B	R O U T	I N E =======================================
     257/     314 :                     
     258/     314 :                     
     259/     314 :                     Sound_LoadZ80:
     260/     314 : 3287                		move.w	d7,(a1)
     261/     316 : 3487                		move.w	d7,(a2)
     262/     318 :                     
     263/     318 :                     loc_8DA:
     264/     318 : 0111                		btst	d0,(a1)
     265/     31A : 66FC                		bne.s	loc_8DA
     266/     31C : 7425                		moveq	#$25,d2
     267/     31E :                     loc_8E0:
     268/     31E : 10DD                		move.b	(a5)+,(a0)+
     269/     320 : 51CA FFFC           		dbf	d2,loc_8E0
     270/     324 : 3480                		move.w	d0,(a2)
     271/     326 : 3280                		move.w	d0,(a1)
     272/     328 : 3487                		move.w	d7,(a2)
     273/     32A : 4E75                		rts
     274/     32C :                     ; End of function Sound_LoadZ80
     275/     32C :                     
     276/     32C :                     
     277/     32C :                     ; =============== S U B	R O U T	I N E =======================================
     278/     32C :                     
     279/     32C :                     
     280/     32C :                     Sound_PsgInit:
     281/     32C : 7203                		moveq	#3,d1
     282/     32E :                     
     283/     32E :                     loc_8F0:
     284/     32E : 175D 0011           		move.b	(a5)+,$11(a3)
     285/     332 : 51C9 FFFA           		dbf	d1,loc_8F0
     286/     336 : 3480                		move.w	d0,(a2)
     287/     338 : 4E75                		rts
     288/     33A :                     ; End of function Sound_PsgInit
     289/     33A :                     
     290/     33A :                     
     291/     33A :                     ; =============== S U B	R O U T	I N E =======================================
     292/     33A :                     
     293/     33A :                     
     294/     33A :                     Video_Init:
     295/     33A : 7017                		moveq	#$17,d0
     296/     33C : 41F9 0000 034E      		lea	(byte_910).l,a0
     297/     342 :                     loc_904:
     298/     342 : 1A18                		move.b	(a0)+,d5
     299/     344 : 3885                		move.w	d5,(a4)
     300/     346 : DA47                		add.w	d7,d5
     301/     348 : 51C8 FFF8           		dbf	d0,loc_904
     302/     34C : 4E75                		rts
     303/     34E :                     
     304/     34E :                     ; ----------------------------------------------------------------
     305/     34E :                     byte_910:
     306/     34E : 04                  		dc.b $04			; HBlank int on, HV Counter on
     307/     34F : 64                  		dc.b $64			; Display ON, VBlank int on
     308/     350 : 30                  		dc.b (($C000)>>10)		; ForeGrd at VRAM $C000 (%00xxx000)
     309/     351 : 34                  		dc.b (($D000)>>10)		; Window  at VRAM $D000 (%00xxxxy0)
     310/     352 : 07                  		dc.b (($E000)>>13)		; BackGrd at VRAM $E000 (%00000xxx)
     311/     353 : 5E                  		dc.b (($BC00)>>9)		; Sprites at VRAM $BC00 (%0xxxxxxy)
     312/     354 : 00                  		dc.b $00			; Nothing
     313/     355 : 00                  		dc.b $00			; Background color
     314/     356 : 00                  		dc.b $00			; Nothing
     315/     357 : 00                  		dc.b $00			; Nothing
     316/     358 : DF                  		dc.b $DF			; HInt value
     317/     359 : 00                  		dc.b (%000|%00)			; No ExtInt, Scroll: VSCR:full HSCR:full
     318/     35A : 00                  		dc.b $00			; H40, No shadow mode, Normal resolution
     319/     35B : 2E                  		dc.b (($B800)>>10)		; HScroll at VRAM $B800 (%00xxxxxx)
     320/     35C : 00                  		dc.b $00			; Nothing
     321/     35D : 02                  		dc.b $02			; VDP Auto increment by $02
     322/     35E : 11                  		dc.b (%01<<4)|%01		; Layer size: V32 H64
     323/     35F : 00                  		dc.b $00
     324/     360 : 00                  		dc.b $00
     325/     361 :                     		align 2
     326/     362 :                     
     327/     362 :                     ; ====================================================================
     328/     362 :                     
     329/     362 :                     MD_Init:
     330/     362 : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     331/     36A : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     332/     372 : 33FC 0100 00A1 1100 		move.w	#$100,(z80_bus).l		; Stop Z80
     333/     37A : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     334/     382 :                     .wait:
     335/     382 : 0839 0000 00A1 1100 		btst	#0,(z80_bus).l			; Wait bus
     336/     38A : 66F6                		bne.s	.wait
     337/     38C :                     
     338/     38C : 33FC 0000 00A1 1200 		move.w	#0,(z80_reset).l		; Reset request
     339/     394 : 4E71                		nop
     340/     396 : 4E71                		nop
     341/     398 : 4E71                		nop
     342/     39A : 33FC 0000 00A1 1100 		move.w	#0,(z80_bus).l			; Start Z80
     343/     3A2 : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     344/     3AA :                     		
     345/     3AA : 6000 013A           		bra	emuStart
     346/     3AE :                     
     347/     3AE :                     ; ====================================================================
     348/     3AE :                     ; ----------------------------------------------------------------
     349/     3AE :                     ; VBlank
     350/     3AE :                     ; ----------------------------------------------------------------
     351/     3AE :                     
     352/     3AE :                     MD_Vint:
     353/     3AE : 48E7 FFFE           		movem.l	d0-d7/a0-a6,-(sp)
     354/     3B2 :                     
     355/     3B2 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     356/     3B8 : 2D7C 7800 0002 0004 		move.l	#$78000002,4(a6)
     357/     3C0 : 2CAC 005E           		move.l	vdpScrlX(a4),(a6)
     358/     3C4 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     359/     3CC : 2CAC 0062           		move.l	vdpScrlY(a4),(a6)
     360/     3D0 : 2D7C 9401 9318 0004 		move.l	#$94019318,4(a6)
     361/     3D8 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     362/     3E0 : 2D7C 96C0 9573 0004 		move.l	#$96009500+(((RAM_Fami_Emu+vdpSprData)<<7)&$FF0000)|(((RAM_Fami_Emu+vdpSprData)>>1)&$FF),4(a6)
     363/     3E8 : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+vdpSprData)>>17)&$7F),4(a6)
     364/     3EE : 3D7C 7C00 0004      		move.w	#$7C00,4(a6)
     365/     3F4 : 3F3C 0082           		move.w	#$0002|$80,-(sp)
     366/     3F8 : 0839 0000 00A1 1100 .wait:		btst	#0,(z80_bus).l
     367/     400 : 66F6                		bne.s	.wait
     368/     402 : 3D5F 0004           		move.w	(sp)+,4(a6)
     369/     406 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     370/     40E : 2D7C 9400 9340 0004 		move.l	#$94009340,4(a6)
     371/     416 : 2D7C 96C0 9533 0004 		move.l	#$96009500+(((RAM_Fami_Emu+vdpPalette)<<7)&$FF0000)|(((RAM_Fami_Emu+vdpPalette)>>1)&$FF),4(a6)
     372/     41E : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+vdpPalette)>>17)&$7F),4(a6)
     373/     424 : 3D7C C000 0004      		move.w	#$C000,4(a6)
     374/     42A : 3F3C 0080           		move.w	#$0000|$80,-(sp)
     375/     42E : 0839 0000 00A1 1100 .wait2:		btst	#0,(z80_bus).l
     376/     436 : 66F6                		bne.s	.wait2
     377/     438 : 3D5F 0004           		move.w	(sp)+,4(a6)
     378/     43C :                     
     379/     43C : 426C 0058           		clr.w	vdpHintSp0(a4)
     380/     440 : 397C 0001 005A      		move.w	#1,FamiMdVint(a4)
     381/     446 : 397C 0001 005C      		move.w	#1,FamiPPUVint(a4)
     382/     44C : 4CDF 7FFF           		movem.l	(sp)+,d0-d7/a0-a6
     383/     450 : 4E73                		rte
     384/     452 :                     
     385/     452 :                     ; ====================================================================
     386/     452 :                     ; ----------------------------------------------------------------
     387/     452 :                     ; HBlank
     388/     452 :                     ; ----------------------------------------------------------------
     389/     452 :                     
     390/     452 :                     MD_Hint:
     391/     452 :                     ; 		move.w	#$2700,sr
     392/     452 :                     ; 		move.w	#$8ADF,4(a6)
     393/     452 :                     ; 		move.w	#1,vdpHintSp0(a4)
     394/     452 : 4E73                		rte
     395/     454 :                     
     396/     454 :                     ; ====================================================================
     397/     454 :                     ; ----------------------------------------------------------------
     398/     454 :                     ; Load ROM
     399/     454 :                     ; ----------------------------------------------------------------
     400/     454 :                     
     401/     454 :                     Fami_LoadRom:
     402/     454 : 2010                		move.l	(a0),d0		; Read and Load	Fami ROM
     403/     456 : 0C80 4E45 531A      		cmpi.l	#$4E45531A,d0
     404/     45C : 66FE                		bne.s	*
     405/     45E :                     
     406/     45E : 4BF9 FFFF 9000      		lea	(RAM_Fami_RAM).l,a5
     407/     464 : 7000                		moveq	#0,d0
     408/     466 : 323C 01FF           		move.w	#$7FF/4,d1
     409/     46A :                     .clrram:
     410/     46A : 2AC0                		move.l	d0,(a5)+
     411/     46C : 51C9 FFFC           		dbf	d1,.clrram
     412/     470 : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     413/     476 : 7000                		moveq	#0,d0
     414/     478 : 323C 1000           		move.w	#$4000/4,d1
     415/     47C :                     .clrvram:
     416/     47C : 2AC0                		move.l	d0,(a5)+
     417/     47E : 51C9 FFFC           		dbf	d1,.clrvram
     418/     482 : 4DF9 00C0 0000      		lea 	($C00000),a6
     419/     488 : 6100 FE2C           		bsr	Fami_InitVideo
     420/     48C :                     
     421/     48C : 47F9 FFFF 8000      		lea	(RAM_Fami_Emu).l,a3
     422/     492 : 7E00                		moveq	#0,d7			; PRG-ROM copy
     423/     494 : 1E28 0004           		move.b	4(a0),d7
     424/     498 : 6100 1C44           		bsr	romGrabPrg
     425/     49C : 1E28 0006           		move.b	6(a0),d7		; PPU mirroring
     426/     4A0 : 1C28 0007           		move.b	7(a0),d6
     427/     4A4 : CE7C 00F0           		and.w	#%11110000,d7
     428/     4A8 : CC7C 00F0           		and.w	#%11110000,d6
     429/     4AC : E84F                		lsr.w	#4,d7
     430/     4AE : 8E46                		or.w	d6,d7
     431/     4B0 : 3747 0032           		move.w	d7,cpuMapper(a3)
     432/     4B4 :                     	
     433/     4B4 :                     	; Mirror check
     434/     4B4 : 3E3C 0000           		move.w	#0,d7			; 0 - horizontal
     435/     4B8 : 0828 0000 0006      		btst	#0,6(a0)		; PPU mirroring
     436/     4BE : 6704                		beq.s	loc_9F4
     437/     4C0 : 3E3C 0001           		move.w	#1,d7			; 1 - vertical
     438/     4C4 :                     loc_9F4:
     439/     4C4 : 3747 0030           		move.w	d7,ppuMirror(a3)
     440/     4C8 :                     		
     441/     4C8 :                     	; COPY CHR-ROM TO RAM
     442/     4C8 : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     443/     4CE : 274C 0004           		move.l	a4,emuChrRom(a3)
     444/     4D2 : 2E3C 0000 07FF      		move.l	#$7FF,d7
     445/     4D8 :                     loc_A10:
     446/     4D8 : 2ADC                		move.l	(a4)+,(a5)+
     447/     4DA : 51CF FFFC           		dbf	d7,loc_A10
     448/     4DE : D0FC 0010           		adda	#$10,a0
     449/     4E2 : 2688                		move.l	a0,emuPrgRom(a3)
     450/     4E4 : 4E75                		rts
     451/     4E6 :                     
     452/     4E6 :                     ; ====================================================================
     453/     4E6 :                     ; ----------------------------------------------------------------
     454/     4E6 :                     ; Emulator start
     455/     4E6 :                     ; ----------------------------------------------------------------
     456/     4E6 :                     
     457/     4E6 :                     emuStart:
     458/     4E6 : 41F8 8000           		lea 	($FFFF8000),a0
     459/     4EA : 323C 0BFF           		move.w	#$2FFF/4,d1
     460/     4EE : 7000                		moveq	#0,d0
     461/     4F0 :                     .clrram:
     462/     4F0 : 20C0                		move.l	d0,(a0)+
     463/     4F2 : 51C9 FFFC           		dbf	d1,.clrram
     464/     4F6 :                     
     465/     4F6 : 41F9 0000 8000      		lea	(ROM_FILE).l,a0
     466/     4FC : 6100 FF56           		bsr	Fami_LoadRom
     467/     500 :                     		
     468/     500 : 4DF9 00C0 0000      		lea	($C00000).l,a6
     469/     506 : 49F8 8000           		lea 	(RAM_Fami_Emu),a4
     470/     50A : 47F8 A000           		lea	(RAM_Fami_PPU).w,a3
     471/     50E : 45F8 9000           		lea	(RAM_Fami_RAM).w,a2
     472/     512 : 6100 1C12           		bsr	Nemul_LoadChr
     473/     516 : 43F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a1	; PRG base
     474/     51C : 2049                		movea.l	a1,a0
     475/     51E : 303C 7FFC           		move.w	#cpuEntry,d0		; go to Entry
     476/     522 : D0C0                		add.w	d0,a0
     477/     524 : 1028 0001           		move.b	1(a0),d0
     478/     528 : E148                		lsl.w	#8,d0
     479/     52A : 1010                		move.b	(a0),d0
     480/     52C : C07C 7FFF           		and.w	#$7FFF,d0
     481/     530 : 2049                		movea.l	a1,a0
     482/     532 : D0C0                		adda	d0,a0
     483/     534 : 397C 8004 002C      		move.w	#$8004,vdpReg00(a4)
     484/     53A : 397C 8174 002E      		move.w	#$8174,vdpReg01(a4)
     485/     540 : 33FC 4EF9 FFFF 8FF0 		move.w	#$4EF9,(RAM_EmuLoop).l		; JMP opcode
     486/     548 : 23FC 0000 055E FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l	; default emulation loop
                    8FF2                
     487/     552 : 7000                		moveq	#0,d0
     488/     554 : 7200                		moveq	#0,d1
     489/     556 : 7400                		moveq	#0,d2
     490/     558 : 263C 0100 2000      		move.l	#$01002000,d3
     491/     55E :                     
     492/     55E :                     ; --------------------------------------------------------
     493/     55E :                     ; a0 - Fami CPU current PC
     494/     55E :                     ; a1 - Fami PRG address
     495/     55E :                     ; a2 - Fami RAM address (for zero addressing)
     496/     55E :                     ; a3 - Fami PPU Buffer
     497/     55E :                     ; a4 - Fami EMU Buffer
     498/     55E :                     ; a5 - Used on temporal tasks
     499/     55E :                     ; a6 - VDP data point
     500/     55E :                     ; 
     501/     55E :                     ; d0 - A register
     502/     55E :                     ; d1 - X register
     503/     55E :                     ; d2 - Y register
     504/     55E :                     ; d3 - Fami STACK Point | Current SR
     505/     55E :                     ; d4 - free
     506/     55E :                     ; d5 - free
     507/     55E :                     ; d6 - free
     508/     55E :                     ; d7 - emu temporal input/output
     509/     55E :                     ; --------------------------------------------------------
     510/     55E :                     
     511/     55E :                     ; TODO:
     512/     55E :                     ; Actually implement Fami's SR, the
     513/     55E :                     ; current SR is a copypaste of MD's status bits
     514/     55E :                     
     515/     55E :                     ; ------------------------------------------------
     516/     55E :                     ; Main Loop
     517/     55E :                     ; ------------------------------------------------
     518/     55E :                     
     519/     55E :                     emuLoop:
     520/     55E : 4A6C 005A           		tst.w	FamiMdVint(a4)
     521/     562 : 660E                		bne.s	famiVInt
     522/     564 :                     emuVint:
     523/     564 : 4244                		clr.w	d4
     524/     566 : 1818                		move.b	(a0)+,d4
     525/     568 : D844                		add.w	d4,d4
     526/     56A : 3C3B 4072           		move.w	mosCpu(pc,d4.w),d6
     527/     56E : 4EFB 606E           		jmp	mosCpu(pc,d6.w)
     528/     572 :                     
     529/     572 :                     ; ------------------------------------------------
     530/     572 :                     ; VBlank
     531/     572 :                     ; ------------------------------------------------
     532/     572 :                     
     533/     572 :                     famiVInt:
     534/     572 : 426C 005A           		clr.w	FamiMdVint(a4)
     535/     576 : 397C 0080 0056      		move.w	#$80,ppuStatus(a4)
     536/     57C : 4A6C 0034           		tst.w	cpuFamiVint(a4)
     537/     580 : 66E2                		bne.s	emuVint
     538/     582 : 4A6C 0054           		tst.w	ppuNmiFlag(a4)
     539/     586 : 67DC                		beq.s	emuVint
     540/     588 :                     
     541/     588 :                     ; ------------------------------------------------
     542/     588 :                     doVint:
     543/     588 : 23FC 0000 0564 FFFF 		move.l	#emuVint,(RAM_EmuLoop+2).l
                    8FF2                
     544/     592 : 397C 0001 0034      		move.w	#1,cpuFamiVint(a4)
     545/     598 :                     
     546/     598 : 3E03                		move.w	d3,d7			; Save PC and SR
     547/     59A : 4843                		swap	d3
     548/     59C : 2808                		move.l	a0,d4
     549/     59E : 98BC FFFF 0000      		sub.l	#RAM_Fami_ROM,d4
     550/     5A4 : 1A04                		move.b	d4,d5
     551/     5A6 : E04C                		lsr.w	#8,d4
     552/     5A8 : 883C 0080           		or.b	#$80,d4
     553/     5AC : 1584 3000           		move.b	d4,(a2,d3.w)
     554/     5B0 : 5303                		subq.b	#1,d3
     555/     5B2 : 1585 3000           		move.b	d5,(a2,d3.w)
     556/     5B6 : 5303                		subq.b	#1,d3
     557/     5B8 : 1587 3000           		move.b	d7,(a2,d3.w)
     558/     5BC : 5303                		subq.b	#1,d3
     559/     5BE : 4843                		swap	d3
     560/     5C0 :                     
     561/     5C0 : 41F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a0	; PRG base
     562/     5C6 : 3C3C 7FFA           		move.w	#cpuNMI,d6		; go to NMI
     563/     5CA : D0C6                		add.w	d6,a0
     564/     5CC : 1C28 0001           		move.b	1(a0),d6
     565/     5D0 : E14E                		lsl.w	#8,d6
     566/     5D2 : 1C10                		move.b	(a0),d6
     567/     5D4 : CC7C 7FFF           		and.w	#$7FFF,d6
     568/     5D8 : 2049                		movea.l	a1,a0
     569/     5DA : D0C6                		add.w	d6,a0
     570/     5DC : 6086                		bra	emuVint
     571/     5DE :                     		
     572/     5DE :                     ; ----------------------------------------------------------------
     573/     5DE : 0578                mosCpu:		dc.w mos_BRK-mosCpu	; $00
     574/     5E0 : 0EC4                		dc.w loc_1A12-mosCpu
     575/     5E2 : 0200                		dc.w mos_Null-mosCpu
     576/     5E4 : 0200                		dc.w mos_Null-mosCpu
     577/     5E6 : 0200                		dc.w mos_Null-mosCpu
     578/     5E8 : 0E1E                		dc.w loc_1970-mosCpu
     579/     5EA : 0430                		dc.w loc_1042-mosCpu
     580/     5EC : 0200                		dc.w mos_Null-mosCpu
     581/     5EE : 0F34                		dc.w loc_1A78-mosCpu	; $08 - PHP
     582/     5F0 : 0E08                		dc.w loc_195C-mosCpu	; $09 - ORA #$xx
     583/     5F2 : 041C                		dc.w loc_1030-mosCpu
     584/     5F4 : 0200                		dc.w mos_Null-mosCpu
     585/     5F6 : 0200                		dc.w mos_Null-mosCpu
     586/     5F8 : 0E58                		dc.w loc_19A6-mosCpu
     587/     5FA : 0472                		dc.w loc_1080-mosCpu
     588/     5FC : 0200                		dc.w mos_Null-mosCpu
     589/     5FE : 0568                		dc.w loc_1166-mosCpu	; $10
     590/     600 : 0EF2                		dc.w loc_1A3C-mosCpu
     591/     602 : 0200                		dc.w mos_Null-mosCpu
     592/     604 : 0200                		dc.w mos_Null-mosCpu
     593/     606 : 0200                		dc.w mos_Null-mosCpu
     594/     608 : 0E3A                		dc.w loc_198A-mosCpu
     595/     60A : 0450                		dc.w loc_1060-mosCpu
     596/     60C : 0200                		dc.w mos_Null-mosCpu
     597/     60E : 05BC                		dc.w loc_11AA-mosCpu	; $18
     598/     610 : 0E9E                		dc.w loc_19EC-mosCpu
     599/     612 : 0200                		dc.w mos_Null-mosCpu
     600/     614 : 0200                		dc.w mos_Null-mosCpu
     601/     616 : 0200                		dc.w mos_Null-mosCpu
     602/     618 : 0E78                		dc.w loc_19C6-mosCpu
     603/     61A : 0496                		dc.w loc_10A2-mosCpu
     604/     61C : 0200                		dc.w mos_Null-mosCpu
     605/     61E : 0AF6                		dc.w loc_167C-mosCpu	; $20
     606/     620 : 03BC                		dc.w loc_FD8-mosCpu
     607/     622 : 0200                		dc.w mos_Null-mosCpu
     608/     624 : 0200                		dc.w mos_Null-mosCpu
     609/     626 : 04EC                		dc.w loc_10F0-mosCpu
     610/     628 : 0316                		dc.w loc_F36-mosCpu
     611/     62A : 0F92                		dc.w loc_1ACA-mosCpu
     612/     62C : 0200                		dc.w mos_Null-mosCpu
     613/     62E : 0F68                		dc.w loc_1AA6-mosCpu	; $28 - PLP
     614/     630 : 0300                		dc.w loc_F22-mosCpu
     615/     632 : 0F7C                		dc.w loc_1AB6-mosCpu
     616/     634 : 0200                		dc.w mos_Null-mosCpu
     617/     636 : 0518                		dc.w loc_111A-mosCpu
     618/     638 : 0350                		dc.w loc_F6C-mosCpu
     619/     63A : 0FD8                		dc.w loc_1B0C-mosCpu
     620/     63C : 0200                		dc.w mos_Null-mosCpu
     621/     63E : 0548                		dc.w loc_114A-mosCpu	; $30
     622/     640 : 03EA                		dc.w loc_1002-mosCpu
     623/     642 : 0200                		dc.w mos_Null-mosCpu
     624/     644 : 0200                		dc.w mos_Null-mosCpu
     625/     646 : 0200                		dc.w mos_Null-mosCpu
     626/     648 : 0332                		dc.w loc_F50-mosCpu
     627/     64A : 0FB4                		dc.w loc_1AEA-mosCpu
     628/     64C : 0200                		dc.w mos_Null-mosCpu
     629/     64E : 12A6                		dc.w loc_1D80-mosCpu	; $38
     630/     650 : 0396                		dc.w loc_FB2-mosCpu
     631/     652 : 0200                		dc.w mos_Null-mosCpu
     632/     654 : 0200                		dc.w mos_Null-mosCpu
     633/     656 : 0200                		dc.w mos_Null-mosCpu
     634/     658 : 0370                		dc.w loc_F8C-mosCpu
     635/     65A : 0FFE                		dc.w loc_1B30-mosCpu
     636/     65C : 0200                		dc.w mos_Null-mosCpu
     637/     65E : 10D0                		dc.w loc_1BF6-mosCpu	; $40 - RTI
     638/     660 : 09A8                		dc.w loc_1566-mosCpu
     639/     662 : 0200                		dc.w mos_Null-mosCpu
     640/     664 : 0200                		dc.w mos_Null-mosCpu
     641/     666 : 0200                		dc.w mos_Null-mosCpu
     642/     668 : 0902                		dc.w loc_14C4-mosCpu
     643/     66A : 0D74                		dc.w loc_18D2-mosCpu
     644/     66C : 0200                		dc.w mos_Null-mosCpu
     645/     66E : 0F24                		dc.w loc_1A6A-mosCpu	; $48
     646/     670 : 08EC                		dc.w loc_14B0-mosCpu
     647/     672 : 0D60                		dc.w loc_18C0-mosCpu
     648/     674 : 0200                		dc.w mos_Null-mosCpu
     649/     676 : 0AA4                		dc.w loc_164E-mosCpu	; $4C - JMP $xxxx
     650/     678 : 093C                		dc.w loc_14FA-mosCpu
     651/     67A : 0DB6                		dc.w loc_1910-mosCpu
     652/     67C : 0200                		dc.w mos_Null-mosCpu
     653/     67E : 059C                		dc.w loc_118E-mosCpu	; $50
     654/     680 : 09D6                		dc.w loc_1590-mosCpu
     655/     682 : 0200                		dc.w mos_Null-mosCpu
     656/     684 : 0200                		dc.w mos_Null-mosCpu
     657/     686 : 0200                		dc.w mos_Null-mosCpu
     658/     688 : 091E                		dc.w loc_14DE-mosCpu
     659/     68A : 0D94                		dc.w loc_18F0-mosCpu
     660/     68C : 0200                		dc.w mos_Null-mosCpu
     661/     68E : 05D2                		dc.w loc_11BC-mosCpu	; $58
     662/     690 : 0982                		dc.w loc_1540-mosCpu
     663/     692 : 0200                		dc.w mos_Null-mosCpu
     664/     694 : 0200                		dc.w mos_Null-mosCpu
     665/     696 : 0200                		dc.w mos_Null-mosCpu
     666/     698 : 095C                		dc.w loc_151A-mosCpu
     667/     69A : 0DDA                		dc.w loc_1932-mosCpu
     668/     69C : 0200                		dc.w mos_Null-mosCpu
     669/     69E : 1142                		dc.w loc_1C32-mosCpu	; $60 - RTS
     670/     6A0 : 02A8                		dc.w loc_ED2-mosCpu
     671/     6A2 : 0200                		dc.w mos_Null-mosCpu
     672/     6A4 : 0200                		dc.w mos_Null-mosCpu
     673/     6A6 : 0200                		dc.w mos_Null-mosCpu
     674/     6A8 : 0216                		dc.w loc_E44-mosCpu
     675/     6AA : 103C                		dc.w loc_1B6A-mosCpu
     676/     6AC : 0200                		dc.w mos_Null-mosCpu
     677/     6AE : 0F48                		dc.w loc_1A88-mosCpu	; $68
     678/     6B0 : 0204                		dc.w loc_E34-mosCpu
     679/     6B2 : 1026                		dc.w loc_1B56-mosCpu
     680/     6B4 : 0200                		dc.w mos_Null-mosCpu
     681/     6B6 : 0ABE                		dc.w loc_1660-mosCpu	; $6C - JMP ($xxxx)
     682/     6B8 : 0248                		dc.w loc_E72-mosCpu
     683/     6BA : 1082                		dc.w loc_1BAC-mosCpu
     684/     6BC : 0200                		dc.w mos_Null-mosCpu
     685/     6BE : 05AC                		dc.w loc_119C-mosCpu	; $70
     686/     6C0 : 02D2                		dc.w loc_EF8-mosCpu
     687/     6C2 : 0200                		dc.w mos_Null-mosCpu
     688/     6C4 : 0200                		dc.w mos_Null-mosCpu
     689/     6C6 : 0200                		dc.w mos_Null-mosCpu
     690/     6C8 : 022E                		dc.w loc_E5A-mosCpu
     691/     6CA : 105E                		dc.w loc_1B8A-mosCpu
     692/     6CC : 0200                		dc.w mos_Null-mosCpu
     693/     6CE : 12BC                		dc.w loc_1D92-mosCpu	; $78
     694/     6D0 : 0286                		dc.w loc_EB0-mosCpu
     695/     6D2 : 0200                		dc.w mos_Null-mosCpu
     696/     6D4 : 0200                		dc.w mos_Null-mosCpu
     697/     6D6 : 0200                		dc.w mos_Null-mosCpu
     698/     6D8 : 0264                		dc.w loc_E8E-mosCpu
     699/     6DA : 10A8                		dc.w loc_1BD0-mosCpu
     700/     6DC : 0200                		dc.w mos_Null-mosCpu
     701/     6DE : 0200                		dc.w mos_Null-mosCpu	; $80
     702/     6E0 : 1322                		dc.w loc_1DF6-mosCpu	; $81 - STA (oper,X)
     703/     6E2 : 0200                		dc.w mos_Null-mosCpu
     704/     6E4 : 0200                		dc.w mos_Null-mosCpu
     705/     6E6 : 1390                		dc.w loc_1E5C-mosCpu
     706/     6E8 : 12C8                		dc.w loc_1D9C-mosCpu
     707/     6EA : 135E                		dc.w loc_1E2E-mosCpu
     708/     6EC : 0200                		dc.w mos_Null-mosCpu
     709/     6EE : 08D8                		dc.w loc_149E-mosCpu	; $88 - DEY
     710/     6F0 : 0200                		dc.w mos_Null-mosCpu
     711/     6F2 : 1402                		dc.w loc_1EC4-mosCpu
     712/     6F4 : 0200                		dc.w mos_Null-mosCpu
     713/     6F6 : 13AE                		dc.w loc_1E76-mosCpu
     714/     6F8 : 12E6                		dc.w loc_1DB6-mosCpu
     715/     6FA : 137C                		dc.w loc_1E48-mosCpu
     716/     6FC : 0200                		dc.w mos_Null-mosCpu
     717/     6FE : 04BC                		dc.w loc_10C6-mosCpu	; $90
     718/     700 : 133E                		dc.w loc_1E10-mosCpu
     719/     702 : 0200                		dc.w mos_Null-mosCpu
     720/     704 : 0200                		dc.w mos_Null-mosCpu
     721/     706 : 139E                		dc.w loc_1E68-mosCpu
     722/     708 : 12D6                		dc.w loc_1DA8-mosCpu
     723/     70A : 136C                		dc.w loc_1E3A-mosCpu
     724/     70C : 0200                		dc.w mos_Null-mosCpu
     725/     70E : 1422                		dc.w loc_1EE0-mosCpu	; $98
     726/     710 : 130E                		dc.w loc_1DE0-mosCpu
     727/     712 : 1416                		dc.w loc_1Ed3-mosCpu	; $9A
     728/     714 : 0200                		dc.w mos_Null-mosCpu
     729/     716 : 0200                		dc.w mos_Null-mosCpu
     730/     718 : 12FA                		dc.w loc_1DCA-mosCpu
     731/     71A : 0200                		dc.w mos_Null-mosCpu
     732/     71C : 0200                		dc.w mos_Null-mosCpu
     733/     71E : 0CD0                		dc.w loc_1836-mosCpu	; $A0
     734/     720 : 0BE0                		dc.w loc_1754-mosCpu	; $A1 - LDA (oper,X)
     735/     722 : 0C40                		dc.w loc_17AC-mosCpu
     736/     724 : 0200                		dc.w mos_Null-mosCpu
     737/     726 : 0CE4                		dc.w loc_1848-mosCpu
     738/     728 : 0B3E                		dc.w loc_16B6-mosCpu
     739/     72A : 0C54                		dc.w loc_17BE-mosCpu
     740/     72C : 0200                		dc.w mos_Null-mosCpu
     741/     72E : 13D6                		dc.w loc_1E9C-mosCpu	; $A8
     742/     730 : 0B2A                		dc.w loc_16A4-mosCpu	; $A9 - LDA #$xx
     743/     732 : 13C2                		dc.w loc_1E8A-mosCpu
     744/     734 : 0200                		dc.w mos_Null-mosCpu
     745/     736 : 0D1A                		dc.w loc_187A-mosCpu
     746/     738 : 0B74                		dc.w loc_16E8-mosCpu	; $AD
     747/     73A : 0C8A                		dc.w loc_17F0-mosCpu
     748/     73C : 0200                		dc.w mos_Null-mosCpu
     749/     73E : 04CC                		dc.w loc_10D4-mosCpu	; $B0
     750/     740 : 0C0E                		dc.w loc_177E-mosCpu	; $B1 - LDA (oper),Y
     751/     742 : 0200                		dc.w mos_Null-mosCpu
     752/     744 : 0200                		dc.w mos_Null-mosCpu
     753/     746 : 0CFE                		dc.w loc_1860-mosCpu
     754/     748 : 0B58                		dc.w loc_16CE-mosCpu
     755/     74A : 0C6E                		dc.w loc_17d3-mosCpu
     756/     74C : 0200                		dc.w mos_Null-mosCpu
     757/     74E : 05DE                		dc.w loc_11C6-mosCpu	; $B8
     758/     750 : 0BBA                		dc.w loc_172E-mosCpu
     759/     752 : 13EA                		dc.w loc_1EAE-mosCpu	; $BA - TSX
     760/     754 : 0200                		dc.w mos_Null-mosCpu
     761/     756 : 0D3A                		dc.w loc_189A-mosCpu
     762/     758 : 0B94                		dc.w loc_1708-mosCpu
     763/     75A : 0CAA                		dc.w loc_1810-mosCpu
     764/     75C : 0200                		dc.w mos_Null-mosCpu
     765/     75E : 07DA                		dc.w loc_13AE-mosCpu	; $C0
     766/     760 : 06EC                		dc.w loc_12CC-mosCpu
     767/     762 : 0200                		dc.w mos_Null-mosCpu
     768/     764 : 0200                		dc.w mos_Null-mosCpu
     769/     766 : 07FC                		dc.w loc_13CE-mosCpu
     770/     768 : 060A                		dc.w loc_11EE-mosCpu
     771/     76A : 0850                		dc.w loc_1420-mosCpu
     772/     76C : 0200                		dc.w mos_Null-mosCpu
     773/     76E : 0A90                		dc.w loc_163C-mosCpu	; $C8 - INY
     774/     770 : 05E8                		dc.w loc_11CE-mosCpu
     775/     772 : 08C4                		dc.w loc_148C-mosCpu
     776/     774 : 0200                		dc.w mos_Null-mosCpu
     777/     776 : 0824                		dc.w loc_13F4-mosCpu
     778/     778 : 065C                		dc.w loc_123C-mosCpu
     779/     77A : 0886                		dc.w loc_1452-mosCpu
     780/     77C : 0200                		dc.w mos_Null-mosCpu
     781/     77E : 0558                		dc.w loc_1158-mosCpu	; $D0 - BNE rel
     782/     780 : 0726                		dc.w loc_1302-mosCpu
     783/     782 : 0200                		dc.w mos_Null-mosCpu
     784/     784 : 0200                		dc.w mos_Null-mosCpu
     785/     786 : 0200                		dc.w mos_Null-mosCpu
     786/     788 : 0632                		dc.w loc_1214-mosCpu
     787/     78A : 086A                		dc.w loc_1438-mosCpu
     788/     78C : 0200                		dc.w mos_Null-mosCpu
     789/     78E : 05C6                		dc.w loc_11B2-mosCpu	; $D8 - CLD
     790/     790 : 06BA                		dc.w loc_129A-mosCpu
     791/     792 : 0200                		dc.w mos_Null-mosCpu
     792/     794 : 0200                		dc.w mos_Null-mosCpu
     793/     796 : 0200                		dc.w mos_Null-mosCpu
     794/     798 : 0688                		dc.w loc_1268-mosCpu
     795/     79A : 08A4                		dc.w loc_146E-mosCpu
     796/     79C : 0200                		dc.w mos_Null-mosCpu
     797/     79E : 0764                		dc.w loc_133C-mosCpu	; $E0
     798/     7A0 : 123E                		dc.w loc_1D20-mosCpu
     799/     7A2 : 0200                		dc.w mos_Null-mosCpu
     800/     7A4 : 0200                		dc.w mos_Null-mosCpu
     801/     7A6 : 0786                		dc.w loc_135C-mosCpu
     802/     7A8 : 1184                		dc.w loc_1C6A-mosCpu
     803/     7AA : 0A08                		dc.w loc_15BE-mosCpu
     804/     7AC : 0200                		dc.w mos_Null-mosCpu
     805/     7AE : 0A7C                		dc.w loc_162A-mosCpu	; $E8
     806/     7B0 : 116A                		dc.w loc_1C52-mosCpu
     807/     7B2 : 0E00                		dc.w loc_1956-mosCpu
     808/     7B4 : 0200                		dc.w mos_Null-mosCpu
     809/     7B6 : 07AE                		dc.w loc_1382-mosCpu
     810/     7B8 : 11C6                		dc.w loc_1CA8-mosCpu
     811/     7BA : 0A3E                		dc.w loc_15F0-mosCpu
     812/     7BC : 0200                		dc.w mos_Null-mosCpu
     813/     7BE : 04DC                		dc.w loc_10E2-mosCpu	; $F0
     814/     7C0 : 1270                		dc.w loc_1D4E-mosCpu
     815/     7C2 : 0200                		dc.w mos_Null-mosCpu
     816/     7C4 : 0200                		dc.w mos_Null-mosCpu
     817/     7C6 : 0200                		dc.w mos_Null-mosCpu
     818/     7C8 : 11A4                		dc.w loc_1C88-mosCpu
     819/     7CA : 0A22                		dc.w loc_15d3-mosCpu
     820/     7CC : 0200                		dc.w mos_Null-mosCpu
     821/     7CE : 12B0                		dc.w loc_1D88-mosCpu	; $F8
     822/     7D0 : 1214                		dc.w loc_1CF6-mosCpu
     823/     7D2 : 0200                		dc.w mos_Null-mosCpu
     824/     7D4 : 0200                		dc.w mos_Null-mosCpu
     825/     7D6 : 0200                		dc.w mos_Null-mosCpu
     826/     7D8 : 11EA                		dc.w loc_1CCC-mosCpu
     827/     7DA : 0A5C                		dc.w loc_160C-mosCpu
     828/     7DC : 0200                		dc.w mos_Null-mosCpu
     829/     7DE :                     
     830/     7DE :                     ; ----------------------------------------------------------------
     831/     7DE :                     
     832/     7DE :                     mos_Null:
     833/     7DE : E24C                		lsr.w	#1,d4
     834/     7E0 : 60FE                		bra.s	*
     835/     7E2 :                     
     836/     7E2 :                     ; ----------------------------------------------------------------
     837/     7E2 :                     
     838/     7E2 :                     loc_E34:
     839/     7E2 : 1E18                		move.b	(a0)+,d7
     840/     7E4 : 0003 0004           		ori.b	#4,d3
     841/     7E8 : 46C3                		move	d3,sr
     842/     7EA : D107                		addx.b	d7,d0
     843/     7EC : 40C3                		move	sr,d3
     844/     7EE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     845/     7F4 :                     ; ----------------------------------------------------------------
     846/     7F4 :                     
     847/     7F4 :                     loc_E44:
     848/     7F4 : 4246                		clr.w	d6
     849/     7F6 : 1C18                		move.b	(a0)+,d6
     850/     7F8 : 1E32 6000           		move.b	(a2,d6.w),d7
     851/     7FC : 0003 0004           		ori.b	#4,d3
     852/     800 : 46C3                		move	d3,sr
     853/     802 : D107                		addx.b	d7,d0
     854/     804 : 40C3                		move	sr,d3
     855/     806 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     856/     80C :                     ; ----------------------------------------------------------------
     857/     80C :                     
     858/     80C :                     loc_E5A:
     859/     80C : 4246                		clr.w	d6
     860/     80E : 1C18                		move.b	(a0)+,d6
     861/     810 : DC01                		add.b	d1,d6
     862/     812 : 1E32 6000           		move.b	(a2,d6.w),d7
     863/     816 : 0003 0004           		ori.b	#4,d3
     864/     81A : 46C3                		move	d3,sr
     865/     81C : D107                		addx.b	d7,d0
     866/     81E : 40C3                		move	sr,d3
     867/     820 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     868/     826 :                     ; ----------------------------------------------------------------
     869/     826 :                     
     870/     826 :                     loc_E72:				; DATA XREF: ROM:00000BE6o
     871/     826 : 4244                		clr.w	d4
     872/     828 : 1818                		move.b	(a0)+,d4
     873/     82A : 4246                		clr.w	d6
     874/     82C : 1C18                		move.b	(a0)+,d6
     875/     82E : 6100 11E4           		bsr	addr_Read
     876/     832 : 0003 0004           		ori.b	#4,d3
     877/     836 : 46C3                		move	d3,sr
     878/     838 : D107                		addx.b	d7,d0
     879/     83A : 40C3                		move	sr,d3
     880/     83C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     881/     842 :                     ; ----------------------------------------------------------------
     882/     842 :                     
     883/     842 :                     loc_E8E:				; DATA XREF: ROM:00000C26o
     884/     842 : 4244                		clr.w	d4
     885/     844 : 1818                		move.b	(a0)+,d4
     886/     846 : 4246                		clr.w	d6
     887/     848 : 1C18                		move.b	(a0)+,d6
     888/     84A : 4207                		clr.b	d7
     889/     84C : D801                		add.b	d1,d4
     890/     84E : DD07                		addx.b	d7,d6
     891/     850 : 6100 11C2           		bsr	addr_Read
     892/     854 : 0003 0004           		ori.b	#4,d3
     893/     858 : 46C3                		move	d3,sr
     894/     85A : D107                		addx.b	d7,d0
     895/     85C : 40C3                		move	sr,d3
     896/     85E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     897/     864 :                     ; ----------------------------------------------------------------
     898/     864 :                     
     899/     864 :                     loc_EB0:				; DATA XREF: ROM:00000C16o
     900/     864 : 4244                		clr.w	d4
     901/     866 : 1818                		move.b	(a0)+,d4
     902/     868 : 4246                		clr.w	d6
     903/     86A : 1C18                		move.b	(a0)+,d6
     904/     86C : 4207                		clr.b	d7
     905/     86E : D802                		add.b	d2,d4
     906/     870 : DD07                		addx.b	d7,d6
     907/     872 : 6100 11A0           		bsr	addr_Read
     908/     876 : 0003 0004           		ori.b	#4,d3
     909/     87A : 46C3                		move	d3,sr
     910/     87C : D107                		addx.b	d7,d0
     911/     87E : 40C3                		move	sr,d3
     912/     880 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     913/     886 :                     ; ----------------------------------------------------------------
     914/     886 :                     
     915/     886 :                     loc_ED2:
     916/     886 : 4244                		clr.w	d4
     917/     888 : 4245                		clr.w	d5
     918/     88A : 4246                		clr.w	d6
     919/     88C : 1A18                		move.b	(a0)+,d5
     920/     88E : DA01                		add.b	d1,d5
     921/     890 : 1832 5000           		move.b	(a2,d5.w),d4
     922/     894 : DA3C 0001           		add.b	#1,d5
     923/     898 : 1C32 5000           		move.b	(a2,d5.w),d6
     924/     89C : 6100 1176           		bsr	addr_Read
     925/     8A0 : 0003 0004           		ori.b	#4,d3
     926/     8A4 : 46C3                		move	d3,sr
     927/     8A6 : D107                		addx.b	d7,d0
     928/     8A8 : 40C3                		move	sr,d3
     929/     8AA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     930/     8B0 :                     ; ----------------------------------------------------------------
     931/     8B0 :                     
     932/     8B0 :                     loc_EF8:
     933/     8B0 : 4244                		clr.w	d4
     934/     8B2 : 4245                		clr.w	d5
     935/     8B4 : 4246                		clr.w	d6
     936/     8B6 : 1A18                		move.b	(a0)+,d5
     937/     8B8 : 1832 5000           		move.b	(a2,d5.w),d4
     938/     8BC : DA3C 0001           		add.b	#1,d5
     939/     8C0 : 1C32 5000           		move.b	(a2,d5.w),d6
     940/     8C4 : 4207                		clr.b	d7
     941/     8C6 : D802                		add.b	d2,d4
     942/     8C8 : DD07                		addx.b	d7,d6
     943/     8CA : 6100 1148           		bsr	addr_Read
     944/     8CE : 0003 0004           		ori.b	#4,d3
     945/     8D2 : 46C3                		move	d3,sr
     946/     8D4 : D107                		addx.b	d7,d0
     947/     8D6 : 40C3                		move	sr,d3
     948/     8D8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     949/     8DE :                     ; ----------------------------------------------------------------
     950/     8DE :                     
     951/     8DE :                     loc_F22:
     952/     8DE : 1E18                		move.b	(a0)+,d7
     953/     8E0 : C007                		and.b	d7,d0
     954/     8E2 : 40C5                		move	sr,d5
     955/     8E4 : 0245 000C           		andi.w	#$C,d5
     956/     8E8 : 0203 00F3           		andi.b	#$F3,d3
     957/     8EC : 8645                		or.w	d5,d3
     958/     8EE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     959/     8F4 :                     ; ----------------------------------------------------------------
     960/     8F4 :                     
     961/     8F4 :                     loc_F36:
     962/     8F4 : 4246                		clr.w	d6
     963/     8F6 : 1C18                		move.b	(a0)+,d6
     964/     8F8 : 1E32 6000           		move.b	(a2,d6.w),d7
     965/     8FC : C007                		and.b	d7,d0
     966/     8FE : 40C5                		move	sr,d5
     967/     900 : 0245 000C           		andi.w	#$C,d5
     968/     904 : 0203 00F3           		andi.b	#$F3,d3
     969/     908 : 8645                		or.w	d5,d3
     970/     90A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     971/     910 :                     ; ----------------------------------------------------------------
     972/     910 :                     
     973/     910 :                     loc_F50:				; DATA XREF: ROM:00000B06o
     974/     910 : 4246                		clr.w	d6
     975/     912 : 1C18                		move.b	(a0)+,d6
     976/     914 : DC01                		add.b	d1,d6
     977/     916 : 1E32 6000           		move.b	(a2,d6.w),d7
     978/     91A : C007                		and.b	d7,d0
     979/     91C : 40C5                		move	sr,d5
     980/     91E : 0245 000C           		andi.w	#$C,d5
     981/     922 : 0203 00F3           		andi.b	#$F3,d3
     982/     926 : 8645                		or.w	d5,d3
     983/     928 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     984/     92E :                     ; ----------------------------------------------------------------
     985/     92E :                     
     986/     92E :                     loc_F6C:
     987/     92E : 4244                		clr.w	d4
     988/     930 : 1818                		move.b	(a0)+,d4
     989/     932 : 4246                		clr.w	d6
     990/     934 : 1C18                		move.b	(a0)+,d6
     991/     936 : 6100 10DC           		bsr	addr_Read
     992/     93A : C007                		and.b	d7,d0
     993/     93C : 40C5                		move	sr,d5
     994/     93E : 0245 000C           		andi.w	#$C,d5
     995/     942 : 0203 00F3           		andi.b	#$F3,d3
     996/     946 : 8645                		or.w	d5,d3
     997/     948 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     998/     94E :                     ; ----------------------------------------------------------------
     999/     94E :                     
    1000/     94E :                     loc_F8C:
    1001/     94E : 4244                		clr.w	d4
    1002/     950 : 1818                		move.b	(a0)+,d4
    1003/     952 : 4246                		clr.w	d6
    1004/     954 : 1C18                		move.b	(a0)+,d6
    1005/     956 : 4207                		clr.b	d7
    1006/     958 : D801                		add.b	d1,d4
    1007/     95A : DD07                		addx.b	d7,d6
    1008/     95C : 6100 10B6           		bsr	addr_Read
    1009/     960 : C007                		and.b	d7,d0
    1010/     962 : 40C5                		move	sr,d5
    1011/     964 : 0245 000C           		andi.w	#$C,d5
    1012/     968 : 0203 00F3           		andi.b	#$F3,d3
    1013/     96C : 8645                		or.w	d5,d3
    1014/     96E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1015/     974 :                     ; ----------------------------------------------------------------
    1016/     974 :                     
    1017/     974 :                     loc_FB2:				; DATA XREF: ROM:00000B16o
    1018/     974 : 4244                		clr.w	d4
    1019/     976 : 1818                		move.b	(a0)+,d4
    1020/     978 : 4246                		clr.w	d6
    1021/     97A : 1C18                		move.b	(a0)+,d6
    1022/     97C : 4207                		clr.b	d7
    1023/     97E : D802                		add.b	d2,d4
    1024/     980 : DD07                		addx.b	d7,d6
    1025/     982 : 6100 1090           		bsr	addr_Read
    1026/     986 : C007                		and.b	d7,d0
    1027/     988 : 40C5                		move	sr,d5
    1028/     98A : 0245 000C           		andi.w	#$C,d5
    1029/     98E : 0203 00F3           		andi.b	#$F3,d3
    1030/     992 : 8645                		or.w	d5,d3
    1031/     994 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1032/     99A :                     ; ----------------------------------------------------------------
    1033/     99A :                     
    1034/     99A :                     loc_FD8:
    1035/     99A : 4244                		clr.w	d4
    1036/     99C : 4245                		clr.w	d5
    1037/     99E : 4246                		clr.w	d6
    1038/     9A0 : 1A18                		move.b	(a0)+,d5
    1039/     9A2 : DA01                		add.b	d1,d5
    1040/     9A4 : 1832 5000           		move.b	(a2,d5.w),d4
    1041/     9A8 : DA3C 0001           		add.b	#1,d5
    1042/     9AC : 1C32 5000           		move.b	(a2,d5.w),d6
    1043/     9B0 : 6100 1062           		bsr	addr_Read
    1044/     9B4 : C007                		and.b	d7,d0
    1045/     9B6 : 40C5                		move	sr,d5
    1046/     9B8 : 0245 000C           		andi.w	#$C,d5
    1047/     9BC : 0203 00F3           		andi.b	#$F3,d3
    1048/     9C0 : 8645                		or.w	d5,d3
    1049/     9C2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1050/     9C8 :                     ; ----------------------------------------------------------------
    1051/     9C8 :                     
    1052/     9C8 :                     loc_1002:
    1053/     9C8 : 4244                		clr.w	d4
    1054/     9CA : 4245                		clr.w	d5
    1055/     9CC : 4246                		clr.w	d6
    1056/     9CE : 1A18                		move.b	(a0)+,d5
    1057/     9D0 : 1832 5000           		move.b	(a2,d5.w),d4
    1058/     9D4 : DA3C 0001           		add.b	#1,d5
    1059/     9D8 : 1C32 5000           		move.b	(a2,d5.w),d6
    1060/     9DC : 4207                		clr.b	d7
    1061/     9DE : D802                		add.b	d2,d4
    1062/     9E0 : DD07                		addx.b	d7,d6
    1063/     9E2 : 6100 1030           		bsr	addr_Read
    1064/     9E6 : C007                		and.b	d7,d0
    1065/     9E8 : 40C5                		move	sr,d5
    1066/     9EA : 0245 000C           		andi.w	#$C,d5
    1067/     9EE : 0203 00F3           		andi.b	#$F3,d3
    1068/     9F2 : 8645                		or.w	d5,d3
    1069/     9F4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1070/     9FA :                     ; ----------------------------------------------------------------
    1071/     9FA :                     
    1072/     9FA :                     loc_1030:
    1073/     9FA : E308                		lsl.b	#1,d0
    1074/     9FC : 40C5                		move	sr,d5
    1075/     9FE : 0245 001D           		andi.w	#$1D,d5
    1076/     A02 : 0203 00E2           		andi.b	#$E2,d3
    1077/     A06 : 8645                		or.w	d5,d3
    1078/     A08 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1079/     A0E :                     ; ----------------------------------------------------------------
    1080/     A0E :                     
    1081/     A0E :                     loc_1042:
    1082/     A0E : 4246                		clr.w	d6
    1083/     A10 : 1C18                		move.b	(a0)+,d6
    1084/     A12 : 1E32 6000           		move.b	(a2,d6.w),d7
    1085/     A16 : E30F                		lsl.b	#1,d7
    1086/     A18 : 40C5                		move	sr,d5
    1087/     A1A : 0245 001D           		andi.w	#$1D,d5
    1088/     A1E : 0203 00E2           		andi.b	#$E2,d3
    1089/     A22 : 8645                		or.w	d5,d3
    1090/     A24 : 1587 6000           		move.b	d7,(a2,d6.w)
    1091/     A28 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1092/     A2E :                     ; ----------------------------------------------------------------
    1093/     A2E :                     
    1094/     A2E :                     loc_1060:
    1095/     A2E : 4246                		clr.w	d6
    1096/     A30 : 1C18                		move.b	(a0)+,d6
    1097/     A32 : DC01                		add.b	d1,d6
    1098/     A34 : 1E32 6000           		move.b	(a2,d6.w),d7
    1099/     A38 : E30F                		lsl.b	#1,d7
    1100/     A3A : 40C5                		move	sr,d5
    1101/     A3C : 0245 001D           		andi.w	#$1D,d5
    1102/     A40 : 0203 00E2           		andi.b	#$E2,d3
    1103/     A44 : 8645                		or.w	d5,d3
    1104/     A46 : 1587 6000           		move.b	d7,(a2,d6.w)
    1105/     A4A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1106/     A50 :                     ; ----------------------------------------------------------------
    1107/     A50 :                     
    1108/     A50 :                     loc_1080:
    1109/     A50 : 1818                		move.b	(a0)+,d4
    1110/     A52 : 1C18                		move.b	(a0)+,d6
    1111/     A54 : E14E                		lsl.w	#8,d6
    1112/     A56 : 1C04                		move.b	d4,d6
    1113/     A58 : 1E32 6000           		move.b	(a2,d6.w),d7
    1114/     A5C : E30F                		lsl.b	#1,d7
    1115/     A5E : 40C5                		move	sr,d5
    1116/     A60 : 0245 001D           		andi.w	#$1D,d5
    1117/     A64 : 0203 00E2           		andi.b	#$E2,d3
    1118/     A68 : 8645                		or.w	d5,d3
    1119/     A6A : 1587 6000           		move.b	d7,(a2,d6.w)
    1120/     A6E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1121/     A74 :                     ; ----------------------------------------------------------------
    1122/     A74 :                     
    1123/     A74 :                     loc_10A2:				; DATA XREF: ROM:00000AAAo
    1124/     A74 : 1818                		move.b	(a0)+,d4
    1125/     A76 : 1C18                		move.b	(a0)+,d6
    1126/     A78 : E14E                		lsl.w	#8,d6
    1127/     A7A : 1C04                		move.b	d4,d6
    1128/     A7C : DC41                		add.w	d1,d6
    1129/     A7E : 1E32 6000           		move.b	(a2,d6.w),d7
    1130/     A82 : E30F                		lsl.b	#1,d7
    1131/     A84 : 40C5                		move	sr,d5
    1132/     A86 : 0245 001D           		andi.w	#$1D,d5
    1133/     A8A : 0203 00E2           		andi.b	#$E2,d3
    1134/     A8E : 8645                		or.w	d5,d3
    1135/     A90 : 1587 6000           		move.b	d7,(a2,d6.w)
    1136/     A94 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1137/     A9A :                     ; ----------------------------------------------------------------
    1138/     A9A :                     
    1139/     A9A :                     loc_10C6:
    1140/     A9A : 1C18                		move.b	(a0)+,d6
    1141/     A9C : 46C3                		move	d3,sr
    1142/     A9E : 6504                		bcs.s	loc_10D0
    1143/     AA0 : 4886                		ext.w	d6
    1144/     AA2 : D0C6                		adda.w	d6,a0
    1145/     AA4 :                     loc_10D0:
    1146/     AA4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1147/     AAA :                     ; ----------------------------------------------------------------
    1148/     AAA :                     
    1149/     AAA :                     loc_10D4:
    1150/     AAA : 1C18                		move.b	(a0)+,d6
    1151/     AAC : 46C3                		move	d3,sr
    1152/     AAE : 6404                		bcc.s	loc_10DE
    1153/     AB0 : 4886                		ext.w	d6
    1154/     AB2 : D0C6                		adda.w	d6,a0
    1155/     AB4 :                     loc_10DE:
    1156/     AB4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1157/     ABA :                     ; ----------------------------------------------------------------
    1158/     ABA :                     
    1159/     ABA :                     loc_10E2:
    1160/     ABA : 1C18                		move.b	(a0)+,d6
    1161/     ABC : 46C3                		move	d3,sr
    1162/     ABE : 6604                		bne.s	loc_10EC
    1163/     AC0 : 4886                		ext.w	d6
    1164/     AC2 : D0C6                		adda.w	d6,a0
    1165/     AC4 :                     loc_10EC:
    1166/     AC4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1167/     ACA :                     ; ----------------------------------------------------------------
    1168/     ACA :                     
    1169/     ACA :                     loc_10F0:
    1170/     ACA : 4246                		clr.w	d6
    1171/     ACC : 1C18                		move.b	(a0)+,d6
    1172/     ACE : 1E32 6000           		move.b	(a2,d6.w),d7
    1173/     AD2 : 1807                		move.b	d7,d4
    1174/     AD4 : 0203 00F1           		andi.b	#$F1,d3
    1175/     AD8 : E30F                		lsl.b	#1,d7
    1176/     ADA : 6404                		bcc.s	loc_1106
    1177/     ADC : 0003 0008           		ori.b	#8,d3
    1178/     AE0 :                     loc_1106:
    1179/     AE0 : E30F                		lsl.b	#1,d7
    1180/     AE2 : 6404                		bcc.s	loc_110E
    1181/     AE4 : 0003 0002           		ori.b	#2,d3
    1182/     AE8 :                     loc_110E:
    1183/     AE8 : C800                		and.b	d0,d4
    1184/     AEA : 6604                		bne.s	loc_1116
    1185/     AEC : 0003 0004           		ori.b	#4,d3
    1186/     AF0 :                     loc_1116:
    1187/     AF0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1188/     AF6 :                     ; ----------------------------------------------------------------
    1189/     AF6 :                     
    1190/     AF6 :                     loc_111A:
    1191/     AF6 : 4244                		clr.w	d4
    1192/     AF8 : 1818                		move.b	(a0)+,d4
    1193/     AFA : 4246                		clr.w	d6
    1194/     AFC : 1C18                		move.b	(a0)+,d6
    1195/     AFE : 6100 0F14           		bsr	addr_Read
    1196/     B02 : 1807                		move.b	d7,d4
    1197/     B04 : 0203 00F1           		andi.b	#$F1,d3
    1198/     B08 : E30F                		lsl.b	#1,d7
    1199/     B0A : 6404                		bcc.s	loc_1136
    1200/     B0C : 0003 0008           		ori.b	#8,d3
    1201/     B10 :                     
    1202/     B10 :                     loc_1136:
    1203/     B10 : E30F                		lsl.b	#1,d7
    1204/     B12 : 6404                		bcc.s	loc_113E
    1205/     B14 : 0003 0002           		ori.b	#2,d3
    1206/     B18 :                     
    1207/     B18 :                     loc_113E:
    1208/     B18 : C800                		and.b	d0,d4
    1209/     B1A : 6604                		bne.s	loc_1146
    1210/     B1C : 0003 0004           		ori.b	#4,d3
    1211/     B20 :                     
    1212/     B20 :                     loc_1146:
    1213/     B20 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1214/     B26 :                     ; ----------------------------------------------------------------
    1215/     B26 :                     
    1216/     B26 :                     loc_114A:				; DATA XREF: ROM:00000AF2o
    1217/     B26 : 1C18                		move.b	(a0)+,d6
    1218/     B28 : 46C3                		move	d3,sr
    1219/     B2A : 6A04                		bpl.s	loc_1154
    1220/     B2C : 4886                		ext.w	d6
    1221/     B2E : D0C6                		adda.w	d6,a0
    1222/     B30 :                     
    1223/     B30 :                     loc_1154:				; CODE XREF: ROM:0000114Ej
    1224/     B30 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1225/     B36 :                     ; ----------------------------------------------------------------
    1226/     B36 :                     
    1227/     B36 :                     loc_1158:				; DATA XREF: ROM:00000D72o
    1228/     B36 : 1C18                		move.b	(a0)+,d6
    1229/     B38 : 46C3                		move	d3,sr
    1230/     B3A : 6704                		beq.s	loc_1162
    1231/     B3C : 4886                		ext.w	d6
    1232/     B3E : D0C6                		adda.w	d6,a0
    1233/     B40 :                     
    1234/     B40 :                     loc_1162:				; CODE XREF: ROM:0000115Cj
    1235/     B40 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1236/     B46 :                     ; ----------------------------------------------------------------
    1237/     B46 :                     
    1238/     B46 :                     loc_1166:
    1239/     B46 : 1C18                		move.b	(a0)+,d6
    1240/     B48 : 46C3                		move	d3,sr
    1241/     B4A : 6B04                		bmi.s	loc_1170
    1242/     B4C : 4886                		ext.w	d6
    1243/     B4E : D0C6                		adda.w	d6,a0
    1244/     B50 :                     
    1245/     B50 :                     loc_1170:
    1246/     B50 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1247/     B56 :                     
    1248/     B56 :                     ; ----------------------------------------------------------------
    1249/     B56 :                     ; $00 - BRK
    1250/     B56 :                     ; ----------------------------------------------------------------
    1251/     B56 :                     
    1252/     B56 :                     mos_BRK:
    1253/     B56 : 4BF9 FFFF 0000      		lea 	(RAM_Fami_ROM),a5
    1254/     B5C : 3C3C 7FFE           		move.w	#cpuIRQ,d6		; go to IRQ
    1255/     B60 : DAC6                		add.w	d6,a5
    1256/     B62 : 1C2D 0001           		move.b	1(a5),d6
    1257/     B66 : E14E                		lsl.w	#8,d6
    1258/     B68 : 1C15                		move.b	(a5),d6
    1259/     B6A :                     
    1260/     B6A : 397C 0001 003E      		move.w	#1,cpuModeIntDis(a4)
    1261/     B70 : 397C 0001 003C      		move.w	#1,cpuFlag2(a4)
    1262/     B76 : 6000 0566           		bra.w	loc_1686
    1263/     B7A :                     ; ----------------------------------------------------------------
    1264/     B7A :                     
    1265/     B7A :                     loc_118E:
    1266/     B7A : 1C18                		move.b	(a0)+,d6
    1267/     B7C : 46C3                		move	d3,sr
    1268/     B7E : 6904                		bvs.s	loc_1198
    1269/     B80 : 4886                		ext.w	d6
    1270/     B82 : D0C6                		adda.w	d6,a0
    1271/     B84 :                     
    1272/     B84 :                     loc_1198:
    1273/     B84 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1274/     B8A :                     ; ----------------------------------------------------------------
    1275/     B8A :                     
    1276/     B8A :                     loc_119C:
    1277/     B8A : 1C18                		move.b	(a0)+,d6
    1278/     B8C : 46C3                		move	d3,sr
    1279/     B8E : 6804                		bvc.s	loc_11A6
    1280/     B90 : 4886                		ext.w	d6
    1281/     B92 : D0C6                		adda.w	d6,a0
    1282/     B94 :                     
    1283/     B94 :                     loc_11A6:				; CODE XREF: ROM:000011A0j
    1284/     B94 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1285/     B9A :                     ; ----------------------------------------------------------------
    1286/     B9A :                     
    1287/     B9A :                     loc_11AA:				; DATA XREF: ROM:00000A92o
    1288/     B9A : 0203 00EE           		andi.b	#$EE,d3
    1289/     B9E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1290/     BA4 :                     
    1291/     BA4 :                     ; ----------------------------------------------------------------
    1292/     BA4 :                     ; CLD - Clear Decimal mode
    1293/     BA4 :                     ; ----------------------------------------------------------------
    1294/     BA4 :                     
    1295/     BA4 :                     loc_11B2:
    1296/     BA4 : 397C 0000 003A      		move.w	#0,cpuModeDec(a4)
    1297/     BAA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1298/     BB0 :                     
    1299/     BB0 :                     ; ----------------------------------------------------------------
    1300/     BB0 :                     ; CLI - Clear Interrupt disable
    1301/     BB0 :                     ; ----------------------------------------------------------------
    1302/     BB0 :                     
    1303/     BB0 :                     loc_11BC:
    1304/     BB0 : 397C 0000 003E      		move.w	#0,cpuModeIntDis(a4)
    1305/     BB6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1306/     BBC :                     
    1307/     BBC :                     ; ----------------------------------------------------------------
    1308/     BBC :                     
    1309/     BBC :                     loc_11C6:				; DATA XREF: ROM:00000D12o
    1310/     BBC : 0203 00FD           		andi.b	#$FD,d3
    1311/     BC0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1312/     BC6 :                     ; ----------------------------------------------------------------
    1313/     BC6 :                     
    1314/     BC6 :                     loc_11CE:				; DATA XREF: ROM:00000D56o
    1315/     BC6 : 1E18                		move.b	(a0)+,d7
    1316/     BC8 : B007                		cmp.b	d7,d0
    1317/     BCA : 40C5                		move	sr,d5
    1318/     BCC : 0245 000D           		andi.w	#$D,d5
    1319/     BD0 : 0A05 0001           		eori.b	#1,d5
    1320/     BD4 : 0203 0002           		andi.b	#2,d3
    1321/     BD8 : 8605                		or.b	d5,d3
    1322/     BDA : 0205 0001           		andi.b	#1,d5
    1323/     BDE : E90D                		lsl.b	#4,d5
    1324/     BE0 : 8605                		or.b	d5,d3
    1325/     BE2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1326/     BE8 :                     ; ----------------------------------------------------------------
    1327/     BE8 :                     
    1328/     BE8 :                     loc_11EE:				; DATA XREF: ROM:00000D46o
    1329/     BE8 : 4246                		clr.w	d6
    1330/     BEA : 1C18                		move.b	(a0)+,d6
    1331/     BEC : 1E32 6000           		move.b	(a2,d6.w),d7
    1332/     BF0 : B007                		cmp.b	d7,d0
    1333/     BF2 : 40C5                		move	sr,d5
    1334/     BF4 : 0245 000D           		andi.w	#$D,d5
    1335/     BF8 : 0A05 0001           		eori.b	#1,d5
    1336/     BFC : 0203 0002           		andi.b	#2,d3
    1337/     C00 : 8605                		or.b	d5,d3
    1338/     C02 : 0205 0001           		andi.b	#1,d5
    1339/     C06 : E90D                		lsl.b	#4,d5
    1340/     C08 : 8605                		or.b	d5,d3
    1341/     C0A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1342/     C10 :                     ; ----------------------------------------------------------------
    1343/     C10 :                     
    1344/     C10 :                     loc_1214:				; DATA XREF: ROM:00000D86o
    1345/     C10 : 4246                		clr.w	d6
    1346/     C12 : 1C18                		move.b	(a0)+,d6
    1347/     C14 : DC01                		add.b	d1,d6
    1348/     C16 : 1E32 6000           		move.b	(a2,d6.w),d7
    1349/     C1A : B007                		cmp.b	d7,d0
    1350/     C1C : 40C5                		move	sr,d5
    1351/     C1E : 0245 000D           		andi.w	#$D,d5
    1352/     C22 : 0A05 0001           		eori.b	#1,d5
    1353/     C26 : 0203 0002           		andi.b	#2,d3
    1354/     C2A : 8605                		or.b	d5,d3
    1355/     C2C : 0205 0001           		andi.b	#1,d5
    1356/     C30 : E90D                		lsl.b	#4,d5
    1357/     C32 : 8605                		or.b	d5,d3
    1358/     C34 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1359/     C3A :                     ; ----------------------------------------------------------------
    1360/     C3A :                     
    1361/     C3A :                     loc_123C:				; DATA XREF: ROM:00000d36o
    1362/     C3A : 4244                		clr.w	d4
    1363/     C3C : 1818                		move.b	(a0)+,d4
    1364/     C3E : 4246                		clr.w	d6
    1365/     C40 : 1C18                		move.b	(a0)+,d6
    1366/     C42 : 6100 0DD0           		bsr	addr_Read
    1367/     C46 : B007                		cmp.b	d7,d0
    1368/     C48 : 40C5                		move	sr,d5
    1369/     C4A : 0245 000D           		andi.w	#$D,d5
    1370/     C4E : 0A05 0001           		eori.b	#1,d5
    1371/     C52 : 0203 0002           		andi.b	#2,d3
    1372/     C56 : 8605                		or.b	d5,d3
    1373/     C58 : 0205 0001           		andi.b	#1,d5
    1374/     C5C : E90D                		lsl.b	#4,d5
    1375/     C5E : 8605                		or.b	d5,d3
    1376/     C60 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1377/     C66 :                     ; ----------------------------------------------------------------
    1378/     C66 :                     
    1379/     C66 :                     loc_1268:				; DATA XREF: ROM:00000DA6o
    1380/     C66 : 4244                		clr.w	d4
    1381/     C68 : 1818                		move.b	(a0)+,d4
    1382/     C6A : 4246                		clr.w	d6
    1383/     C6C : 1C18                		move.b	(a0)+,d6
    1384/     C6E : 4207                		clr.b	d7
    1385/     C70 : D801                		add.b	d1,d4
    1386/     C72 : DD07                		addx.b	d7,d6
    1387/     C74 : 6100 0D9E           		bsr	addr_Read
    1388/     C78 : B007                		cmp.b	d7,d0
    1389/     C7A : 40C5                		move	sr,d5
    1390/     C7C : 0245 000D           		andi.w	#$D,d5
    1391/     C80 : 0A05 0001           		eori.b	#1,d5
    1392/     C84 : 0203 0002           		andi.b	#2,d3
    1393/     C88 : 8605                		or.b	d5,d3
    1394/     C8A : 0205 0001           		andi.b	#1,d5
    1395/     C8E : E90D                		lsl.b	#4,d5
    1396/     C90 : 8605                		or.b	d5,d3
    1397/     C92 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1398/     C98 :                     ; ----------------------------------------------------------------
    1399/     C98 :                     
    1400/     C98 :                     loc_129A:				; DATA XREF: ROM:00000D96o
    1401/     C98 : 4244                		clr.w	d4
    1402/     C9A : 1818                		move.b	(a0)+,d4
    1403/     C9C : 4246                		clr.w	d6
    1404/     C9E : 1C18                		move.b	(a0)+,d6
    1405/     CA0 : 4207                		clr.b	d7
    1406/     CA2 : D802                		add.b	d2,d4
    1407/     CA4 : DD07                		addx.b	d7,d6
    1408/     CA6 : 6100 0D6C           		bsr	addr_Read
    1409/     CAA : B007                		cmp.b	d7,d0
    1410/     CAC : 40C5                		move	sr,d5
    1411/     CAE : 0245 000D           		andi.w	#$D,d5
    1412/     CB2 : 0A05 0001           		eori.b	#1,d5
    1413/     CB6 : 0203 0002           		andi.b	#2,d3
    1414/     CBA : 8605                		or.b	d5,d3
    1415/     CBC : 0205 0001           		andi.b	#1,d5
    1416/     CC0 : E90D                		lsl.b	#4,d5
    1417/     CC2 : 8605                		or.b	d5,d3
    1418/     CC4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1419/     CCA :                     ; ----------------------------------------------------------------
    1420/     CCA :                     
    1421/     CCA :                     loc_12CC:
    1422/     CCA : 4245                		clr.w	d5
    1423/     CCC : 4244                		clr.w	d4
    1424/     CCE : 4246                		clr.w	d6
    1425/     CD0 : 1A18                		move.b	(a0)+,d5
    1426/     CD2 : DA01                		add.b	d1,d5
    1427/     CD4 : 1832 5000           		move.b	(a2,d5.w),d4
    1428/     CD8 : DA3C 0001           		add.b	#1,d5
    1429/     CDC : 1C32 5000           		move.b	(a2,d5.w),d6
    1430/     CE0 : 6100 0D32           		bsr	addr_Read
    1431/     CE4 : B007                		cmp.b	d7,d0
    1432/     CE6 : 40C5                		move	sr,d5
    1433/     CE8 : 0245 000D           		andi.w	#$D,d5
    1434/     CEC : 0A05 0001           		eori.b	#1,d5
    1435/     CF0 : 0203 0002           		andi.b	#2,d3
    1436/     CF4 : 8605                		or.b	d5,d3
    1437/     CF6 : 0205 0001           		andi.b	#1,d5
    1438/     CFA : E90D                		lsl.b	#4,d5
    1439/     CFC : 8605                		or.b	d5,d3
    1440/     CFE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1441/     D04 :                     ; ----------------------------------------------------------------
    1442/     D04 :                     
    1443/     D04 :                     loc_1302:
    1444/     D04 : 4244                		clr.w	d4
    1445/     D06 : 4245                		clr.w	d5
    1446/     D08 : 4246                		clr.w	d6
    1447/     D0A : 1A18                		move.b	(a0)+,d5
    1448/     D0C : 1832 5000           		move.b	(a2,d5.w),d4
    1449/     D10 : DA3C 0001           		add.b	#1,d5
    1450/     D14 : 1C32 5000           		move.b	(a2,d5.w),d6
    1451/     D18 : 4207                		clr.b	d7
    1452/     D1A : D802                		add.b	d2,d4
    1453/     D1C : DD07                		addx.b	d7,d6
    1454/     D1E : 6100 0CF4           		bsr	addr_Read
    1455/     D22 : B007                		cmp.b	d7,d0
    1456/     D24 : 40C5                		move	sr,d5
    1457/     D26 : 0245 000D           		andi.w	#$D,d5
    1458/     D2A : 0A05 0001           		eori.b	#1,d5
    1459/     D2E : 0203 0002           		andi.b	#2,d3
    1460/     D32 : 8605                		or.b	d5,d3
    1461/     D34 : 0205 0001           		andi.b	#1,d5
    1462/     D38 : E90D                		lsl.b	#4,d5
    1463/     D3A : 8605                		or.b	d5,d3
    1464/     D3C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1465/     D42 :                     ; ----------------------------------------------------------------
    1466/     D42 :                     
    1467/     D42 :                     loc_133C:				; DATA XREF: ROM:00000DB2o
    1468/     D42 : 1E18                		move.b	(a0)+,d7
    1469/     D44 : B207                		cmp.b	d7,d1
    1470/     D46 : 40C5                		move	sr,d5
    1471/     D48 : 0245 000D           		andi.w	#$D,d5
    1472/     D4C : 0A05 0001           		eori.b	#1,d5
    1473/     D50 : 0203 0002           		andi.b	#2,d3
    1474/     D54 : 8605                		or.b	d5,d3
    1475/     D56 : 0205 0001           		andi.b	#1,d5
    1476/     D5A : E90D                		lsl.b	#4,d5
    1477/     D5C : 8605                		or.b	d5,d3
    1478/     D5E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1479/     D64 :                     ; ----------------------------------------------------------------
    1480/     D64 :                     
    1481/     D64 :                     loc_135C:				; DATA XREF: ROM:00000DC2o
    1482/     D64 : 4246                		clr.w	d6
    1483/     D66 : 1C18                		move.b	(a0)+,d6
    1484/     D68 : 1E32 6000           		move.b	(a2,d6.w),d7
    1485/     D6C : B207                		cmp.b	d7,d1
    1486/     D6E : 40C5                		move	sr,d5
    1487/     D70 : 0245 000D           		andi.w	#$D,d5
    1488/     D74 : 0A05 0001           		eori.b	#1,d5
    1489/     D78 : 0203 0002           		andi.b	#2,d3
    1490/     D7C : 8605                		or.b	d5,d3
    1491/     D7E : 0205 0001           		andi.b	#1,d5
    1492/     D82 : E90D                		lsl.b	#4,d5
    1493/     D84 : 8605                		or.b	d5,d3
    1494/     D86 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1495/     D8C :                     ; ----------------------------------------------------------------
    1496/     D8C :                     
    1497/     D8C :                     loc_1382:				; DATA XREF: ROM:00000DE2o
    1498/     D8C : 4244                		clr.w	d4
    1499/     D8E : 1818                		move.b	(a0)+,d4
    1500/     D90 : 4246                		clr.w	d6
    1501/     D92 : 1C18                		move.b	(a0)+,d6
    1502/     D94 : 6100 0C7E           		bsr	addr_Read
    1503/     D98 : B207                		cmp.b	d7,d1
    1504/     D9A : 40C5                		move	sr,d5
    1505/     D9C : 0245 000D           		andi.w	#$D,d5
    1506/     DA0 : 0A05 0001           		eori.b	#1,d5
    1507/     DA4 : 0203 0002           		andi.b	#2,d3
    1508/     DA8 : 8605                		or.b	d5,d3
    1509/     DAA : 0205 0001           		andi.b	#1,d5
    1510/     DAE : E90D                		lsl.b	#4,d5
    1511/     DB0 : 8605                		or.b	d5,d3
    1512/     DB2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1513/     DB8 :                     ; ----------------------------------------------------------------
    1514/     DB8 :                     
    1515/     DB8 :                     loc_13AE:				; DATA XREF: ROM:00000d62o
    1516/     DB8 : 1E18                		move.b	(a0)+,d7
    1517/     DBA : B407                		cmp.b	d7,d2
    1518/     DBC : 40C5                		move	sr,d5
    1519/     DBE : 0245 000D           		andi.w	#$D,d5
    1520/     DC2 : 0A05 0001           		eori.b	#1,d5
    1521/     DC6 : 0203 0002           		andi.b	#2,d3
    1522/     DCA : 8605                		or.b	d5,d3
    1523/     DCC : 0205 0001           		andi.b	#1,d5
    1524/     DD0 : E90D                		lsl.b	#4,d5
    1525/     DD2 : 8605                		or.b	d5,d3
    1526/     DD4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1527/     DDA :                     ; ----------------------------------------------------------------
    1528/     DDA :                     
    1529/     DDA :                     loc_13CE:				; DATA XREF: ROM:00000D42o
    1530/     DDA : 4246                		clr.w	d6
    1531/     DDC : 1C18                		move.b	(a0)+,d6
    1532/     DDE : 1E32 6000           		move.b	(a2,d6.w),d7
    1533/     DE2 : B407                		cmp.b	d7,d2
    1534/     DE4 : 40C5                		move	sr,d5
    1535/     DE6 : 0245 000D           		andi.w	#$D,d5
    1536/     DEA : 0A05 0001           		eori.b	#1,d5
    1537/     DEE : 0203 0002           		andi.b	#2,d3
    1538/     DF2 : 8605                		or.b	d5,d3
    1539/     DF4 : 0205 0001           		andi.b	#1,d5
    1540/     DF8 : E90D                		lsl.b	#4,d5
    1541/     DFA : 8605                		or.b	d5,d3
    1542/     DFC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1543/     E02 :                     ; ----------------------------------------------------------------
    1544/     E02 :                     
    1545/     E02 :                     loc_13F4:				; DATA XREF: ROM:00000d32o
    1546/     E02 : 4244                		clr.w	d4
    1547/     E04 : 1818                		move.b	(a0)+,d4
    1548/     E06 : 4246                		clr.w	d6
    1549/     E08 : 1C18                		move.b	(a0)+,d6
    1550/     E0A : 6100 0C08           		bsr	addr_Read
    1551/     E0E : B407                		cmp.b	d7,d2
    1552/     E10 : 40C5                		move	sr,d5
    1553/     E12 : 0245 000D           		andi.w	#$D,d5
    1554/     E16 : 0A05 0001           		eori.b	#1,d5
    1555/     E1A : 0203 0002           		andi.b	#2,d3
    1556/     E1E : 8605                		or.b	d5,d3
    1557/     E20 : 0205 0001           		andi.b	#1,d5
    1558/     E24 : E90D                		lsl.b	#4,d5
    1559/     E26 : 8605                		or.b	d5,d3
    1560/     E28 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1561/     E2E :                     ; ----------------------------------------------------------------
    1562/     E2E :                     
    1563/     E2E :                     loc_1420:				; DATA XREF: ROM:00000D4Ao
    1564/     E2E : 4246                		clr.w	d6
    1565/     E30 : 1C18                		move.b	(a0)+,d6
    1566/     E32 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1567/     E36 : 40C5                		move	sr,d5
    1568/     E38 : 0245 000C           		andi.w	#$C,d5
    1569/     E3C : 0203 00F3           		andi.b	#$F3,d3
    1570/     E40 : 8645                		or.w	d5,d3
    1571/     E42 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1572/     E48 :                     ; ----------------------------------------------------------------
    1573/     E48 :                     
    1574/     E48 :                     loc_1438:				; DATA XREF: ROM:00000D8Ao
    1575/     E48 : 4246                		clr.w	d6
    1576/     E4A : 1C18                		move.b	(a0)+,d6
    1577/     E4C : DC01                		add.b	d1,d6
    1578/     E4E : 5332 6000           		subq.b	#1,(a2,d6.w)
    1579/     E52 : 40C5                		move	sr,d5
    1580/     E54 : 0245 000C           		andi.w	#$C,d5
    1581/     E58 : 0203 00F3           		andi.b	#$F3,d3
    1582/     E5C : 8645                		or.w	d5,d3
    1583/     E5E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1584/     E64 :                     ; ----------------------------------------------------------------
    1585/     E64 :                     
    1586/     E64 :                     loc_1452:				; DATA XREF: ROM:00000d3Ao
    1587/     E64 : 1818                		move.b	(a0)+,d4
    1588/     E66 : 1C18                		move.b	(a0)+,d6
    1589/     E68 : E14E                		lsl.w	#8,d6
    1590/     E6A : 1C04                		move.b	d4,d6
    1591/     E6C : 5332 6000           		subq.b	#1,(a2,d6.w)
    1592/     E70 : 40C5                		move	sr,d5
    1593/     E72 : 0245 000C           		andi.w	#$C,d5
    1594/     E76 : 0203 00F3           		andi.b	#$F3,d3
    1595/     E7A : 8645                		or.w	d5,d3
    1596/     E7C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1597/     E82 :                     ; ----------------------------------------------------------------
    1598/     E82 :                     
    1599/     E82 :                     loc_146E:				; DATA XREF: ROM:00000DAAo
    1600/     E82 : 1818                		move.b	(a0)+,d4
    1601/     E84 : 1C18                		move.b	(a0)+,d6
    1602/     E86 : E14E                		lsl.w	#8,d6
    1603/     E88 : 1C04                		move.b	d4,d6
    1604/     E8A : DC41                		add.w	d1,d6
    1605/     E8C : 5332 6000           		subq.b	#1,(a2,d6.w)
    1606/     E90 : 40C5                		move	sr,d5
    1607/     E92 : 0245 000C           		andi.w	#$C,d5
    1608/     E96 : 0203 00F3           		andi.b	#$F3,d3
    1609/     E9A : 8645                		or.w	d5,d3
    1610/     E9C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1611/     EA2 :                     ; ----------------------------------------------------------------
    1612/     EA2 :                     
    1613/     EA2 :                     loc_148C:				; DATA XREF: ROM:00000D5Ao
    1614/     EA2 : 5301                		subq.b	#1,d1
    1615/     EA4 : 40C5                		move	sr,d5
    1616/     EA6 : 0245 000C           		andi.w	#$C,d5
    1617/     EAA : 0203 00F3           		andi.b	#$F3,d3
    1618/     EAE : 8645                		or.w	d5,d3
    1619/     EB0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1620/     EB6 :                     ; ----------------------------------------------------------------
    1621/     EB6 :                     
    1622/     EB6 :                     loc_149E:
    1623/     EB6 : 5302                		subq.b	#1,d2
    1624/     EB8 : 40C5                		move	sr,d5
    1625/     EBA : 0245 000C           		andi.w	#$C,d5
    1626/     EBE : 0203 00F3           		andi.b	#$F3,d3
    1627/     EC2 : 8645                		or.w	d5,d3
    1628/     EC4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1629/     ECA :                     ; ----------------------------------------------------------------
    1630/     ECA :                     
    1631/     ECA :                     loc_14B0:				; DATA XREF: ROM:00000B56o
    1632/     ECA : 1E18                		move.b	(a0)+,d7
    1633/     ECC : BF00                		eor.b	d7,d0
    1634/     ECE : 40C5                		move	sr,d5
    1635/     ED0 : 0245 000C           		andi.w	#$C,d5
    1636/     ED4 : 0203 00F3           		andi.b	#$F3,d3
    1637/     ED8 : 8645                		or.w	d5,d3
    1638/     EDA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1639/     EE0 :                     ; ----------------------------------------------------------------
    1640/     EE0 :                     
    1641/     EE0 :                     loc_14C4:				; DATA XREF: ROM:00000B46o
    1642/     EE0 : 4246                		clr.w	d6
    1643/     EE2 : 1C18                		move.b	(a0)+,d6
    1644/     EE4 : 1E32 6000           		move.b	(a2,d6.w),d7
    1645/     EE8 : BF00                		eor.b	d7,d0
    1646/     EEA : 40C5                		move	sr,d5
    1647/     EEC : 0245 000C           		andi.w	#$C,d5
    1648/     EF0 : 0203 00F3           		andi.b	#$F3,d3
    1649/     EF4 : 8645                		or.w	d5,d3
    1650/     EF6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1651/     EFC :                     ; ----------------------------------------------------------------
    1652/     EFC :                     
    1653/     EFC :                     loc_14DE:				; DATA XREF: ROM:00000B86o
    1654/     EFC : 4246                		clr.w	d6
    1655/     EFE : 1C18                		move.b	(a0)+,d6
    1656/     F00 : DC01                		add.b	d1,d6
    1657/     F02 : 1E32 6000           		move.b	(a2,d6.w),d7
    1658/     F06 : BF00                		eor.b	d7,d0
    1659/     F08 : 40C5                		move	sr,d5
    1660/     F0A : 0245 000C           		andi.w	#$C,d5
    1661/     F0E : 0203 00F3           		andi.b	#$F3,d3
    1662/     F12 : 8645                		or.w	d5,d3
    1663/     F14 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1664/     F1A :                     ; ----------------------------------------------------------------
    1665/     F1A :                     
    1666/     F1A :                     loc_14FA:				; DATA XREF: ROM:00000B66o
    1667/     F1A : 4244                		clr.w	d4
    1668/     F1C : 1818                		move.b	(a0)+,d4
    1669/     F1E : 4246                		clr.w	d6
    1670/     F20 : 1C18                		move.b	(a0)+,d6
    1671/     F22 : 6100 0AF0           		bsr	addr_Read
    1672/     F26 : BF00                		eor.b	d7,d0
    1673/     F28 : 40C5                		move	sr,d5
    1674/     F2A : 0245 000C           		andi.w	#$C,d5
    1675/     F2E : 0203 00F3           		andi.b	#$F3,d3
    1676/     F32 : 8645                		or.w	d5,d3
    1677/     F34 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1678/     F3A :                     ; ----------------------------------------------------------------
    1679/     F3A :                     
    1680/     F3A :                     loc_151A:				; DATA XREF: ROM:00000BA6o
    1681/     F3A : 4244                		clr.w	d4
    1682/     F3C : 1818                		move.b	(a0)+,d4
    1683/     F3E : 4246                		clr.w	d6
    1684/     F40 : 1C18                		move.b	(a0)+,d6
    1685/     F42 : 4207                		clr.b	d7
    1686/     F44 : D801                		add.b	d1,d4
    1687/     F46 : DD07                		addx.b	d7,d6
    1688/     F48 : 6100 0ACA           		bsr	addr_Read
    1689/     F4C : BF00                		eor.b	d7,d0
    1690/     F4E : 40C5                		move	sr,d5
    1691/     F50 : 0245 000C           		andi.w	#$C,d5
    1692/     F54 : 0203 00F3           		andi.b	#$F3,d3
    1693/     F58 : 8645                		or.w	d5,d3
    1694/     F5A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1695/     F60 :                     ; ----------------------------------------------------------------
    1696/     F60 :                     
    1697/     F60 :                     loc_1540:				; DATA XREF: ROM:00000B96o
    1698/     F60 : 4244                		clr.w	d4
    1699/     F62 : 1818                		move.b	(a0)+,d4
    1700/     F64 : 4246                		clr.w	d6
    1701/     F66 : 1C18                		move.b	(a0)+,d6
    1702/     F68 : 4207                		clr.b	d7
    1703/     F6A : D802                		add.b	d2,d4
    1704/     F6C : DD07                		addx.b	d7,d6
    1705/     F6E : 6100 0AA4           		bsr	addr_Read
    1706/     F72 : BF00                		eor.b	d7,d0
    1707/     F74 : 40C5                		move	sr,d5
    1708/     F76 : 0245 000C           		andi.w	#$C,d5
    1709/     F7A : 0203 00F3           		andi.b	#$F3,d3
    1710/     F7E : 8645                		or.w	d5,d3
    1711/     F80 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1712/     F86 :                     ; ----------------------------------------------------------------
    1713/     F86 :                     
    1714/     F86 :                     loc_1566:
    1715/     F86 : 4244                		clr.w	d4
    1716/     F88 : 4245                		clr.w	d5
    1717/     F8A : 4246                		clr.w	d6
    1718/     F8C : 1A18                		move.b	(a0)+,d5
    1719/     F8E : DA01                		add.b	d1,d5
    1720/     F90 : 1832 5000           		move.b	(a2,d5.w),d4
    1721/     F94 : DA3C 0001           		add.b	#1,d5
    1722/     F98 : 1C32 5000           		move.b	(a2,d5.w),d6
    1723/     F9C : 6100 0A76           		bsr	addr_Read
    1724/     FA0 : BF00                		eor.b	d7,d0
    1725/     FA2 : 40C5                		move	sr,d5
    1726/     FA4 : 0245 000C           		andi.w	#$C,d5
    1727/     FA8 : 0203 00F3           		andi.b	#$F3,d3
    1728/     FAC : 8645                		or.w	d5,d3
    1729/     FAE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1730/     FB4 :                     ; ----------------------------------------------------------------
    1731/     FB4 :                     
    1732/     FB4 :                     loc_1590:
    1733/     FB4 : 4244                		clr.w	d4
    1734/     FB6 : 4245                		clr.w	d5
    1735/     FB8 : 4246                		clr.w	d6
    1736/     FBA : 1A18                		move.b	(a0)+,d5
    1737/     FBC : 1832 5000           		move.b	(a2,d5.w),d4
    1738/     FC0 : DA3C 0001           		add.b	#1,d5
    1739/     FC4 : 1C32 5000           		move.b	(a2,d5.w),d6
    1740/     FC8 : 4207                		clr.b	d7
    1741/     FCA : D802                		add.b	d2,d4
    1742/     FCC : DD07                		addx.b	d7,d6
    1743/     FCE : 6100 0A44           		bsr	addr_Read
    1744/     FD2 : BF00                		eor.b	d7,d0
    1745/     FD4 : 40C5                		move	sr,d5
    1746/     FD6 : 0245 000C           		andi.w	#$C,d5
    1747/     FDA : 0203 00F3           		andi.b	#$F3,d3
    1748/     FDE : 8645                		or.w	d5,d3
    1749/     FE0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1750/     FE6 :                     ; ----------------------------------------------------------------
    1751/     FE6 :                     
    1752/     FE6 :                     loc_15BE:
    1753/     FE6 : 4246                		clr.w	d6
    1754/     FE8 : 1C18                		move.b	(a0)+,d6
    1755/     FEA : 5232 6000           		addq.b	#1,(a2,d6.w)
    1756/     FEE : 40C5                		move	sr,d5
    1757/     FF0 : 0245 000C           		andi.w	#$C,d5
    1758/     FF4 : 0203 00F3           		andi.b	#$F3,d3
    1759/     FF8 : 8645                		or.w	d5,d3
    1760/     FFA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1761/    1000 :                     ; ----------------------------------------------------------------
    1762/    1000 :                     
    1763/    1000 :                     loc_15d3:
    1764/    1000 : 4246                		clr.w	d6
    1765/    1002 : 1C18                		move.b	(a0)+,d6
    1766/    1004 : DC01                		add.b	d1,d6
    1767/    1006 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1768/    100A : 40C5                		move	sr,d5
    1769/    100C : 0245 000C           		andi.w	#$C,d5
    1770/    1010 : 0203 00F3           		andi.b	#$F3,d3
    1771/    1014 : 8645                		or.w	d5,d3
    1772/    1016 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1773/    101C :                     ; ----------------------------------------------------------------
    1774/    101C :                     
    1775/    101C :                     loc_15F0:
    1776/    101C : 1818                		move.b	(a0)+,d4
    1777/    101E : 1C18                		move.b	(a0)+,d6
    1778/    1020 : E14E                		lsl.w	#8,d6
    1779/    1022 : 1C04                		move.b	d4,d6
    1780/    1024 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1781/    1028 : 40C5                		move	sr,d5
    1782/    102A : 0245 000C           		andi.w	#$C,d5
    1783/    102E : 0203 00F3           		andi.b	#$F3,d3
    1784/    1032 : 8645                		or.w	d5,d3
    1785/    1034 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1786/    103A :                     ; ----------------------------------------------------------------
    1787/    103A :                     
    1788/    103A :                     loc_160C:
    1789/    103A : 1818                		move.b	(a0)+,d4
    1790/    103C : 1C18                		move.b	(a0)+,d6
    1791/    103E : E14E                		lsl.w	#8,d6
    1792/    1040 : 1C04                		move.b	d4,d6
    1793/    1042 : DC41                		add.w	d1,d6
    1794/    1044 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1795/    1048 : 40C5                		move	sr,d5
    1796/    104A : 0245 000C           		andi.w	#$C,d5
    1797/    104E : 0203 00F3           		andi.b	#$F3,d3
    1798/    1052 : 8645                		or.w	d5,d3
    1799/    1054 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1800/    105A :                     ; ----------------------------------------------------------------
    1801/    105A :                     
    1802/    105A :                     loc_162A:
    1803/    105A : 5201                		addq.b	#1,d1
    1804/    105C : 40C5                		move	sr,d5
    1805/    105E : 0245 000C           		andi.w	#$C,d5
    1806/    1062 : 0203 00F3           		andi.b	#$F3,d3
    1807/    1066 : 8645                		or.w	d5,d3
    1808/    1068 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1809/    106E :                     ; ----------------------------------------------------------------
    1810/    106E :                     
    1811/    106E :                     loc_163C:
    1812/    106E : 5202                		addq.b	#1,d2
    1813/    1070 : 40C5                		move	sr,d5
    1814/    1072 : 0245 000C           		andi.w	#$C,d5
    1815/    1076 : 0203 00F3           		andi.b	#$F3,d3
    1816/    107A : 8645                		or.w	d5,d3
    1817/    107C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1818/    1082 :                     ; ----------------------------------------------------------------
    1819/    1082 :                     ; $4C - JMP $xxxx
    1820/    1082 :                     ; ----------------------------------------------------------------
    1821/    1082 :                     
    1822/    1082 :                     loc_164E:
    1823/    1082 : 7C00                		moveq	#0,d6
    1824/    1084 : 1C28 0001           		move.b	1(a0),d6
    1825/    1088 : E14E                		lsl.w	#8,d6
    1826/    108A : 1C10                		move.b	(a0),d6
    1827/    108C : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1828/    1092 : 2049                		movea.l a1,a0
    1829/    1094 : D1C6                		add.l 	d6,a0
    1830/    1096 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1831/    109C :                     
    1832/    109C :                     ; ----------------------------------------------------------------
    1833/    109C :                     ; $6C - JMP ($xxxx)
    1834/    109C :                     ; ----------------------------------------------------------------
    1835/    109C :                     
    1836/    109C :                     loc_1660:
    1837/    109C : 7800                		moveq	#0,d4
    1838/    109E : 1C28 0001           		move.b	1(a0),d6
    1839/    10A2 : E14E                		lsl.w	#8,d6
    1840/    10A4 : 1C10                		move.b	(a0),d6
    1841/    10A6 : 1832 6000           		move.b	(a2,d6.w),d4
    1842/    10AA : DC3C 0001           		add.b	#1,d6
    1843/    10AE : 1C32 6000           		move.b	(a2,d6.w),d6
    1844/    10B2 : E14E                		lsl.w	#8,d6
    1845/    10B4 : 8C04                		or.b	d4,d6
    1846/    10B6 :                     
    1847/    10B6 :                     	; TODO: Check for more jump locations
    1848/    10B6 : 4A46                		tst.w	d6
    1849/    10B8 : 6B0A                		bmi.s	.to_rom
    1850/    10BA : 204A                		move.l	a2,a0
    1851/    10BC : D0C6                		adda	d6,a0
    1852/    10BE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1853/    10C4 :                     .to_rom:
    1854/    10C4 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1855/    10CA : 2049                		movea.l a1,a0
    1856/    10CC : D1C6                		add.l 	d6,a0
    1857/    10CE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1858/    10D4 :                     
    1859/    10D4 :                     ; ----------------------------------------------------------------
    1860/    10D4 :                     ; $6C - JSR $xxxx
    1861/    10D4 :                     ; ----------------------------------------------------------------
    1862/    10D4 :                     
    1863/    10D4 :                     loc_167C:
    1864/    10D4 : 7C00                		moveq	#0,d6
    1865/    10D6 : 1818                		move.b	(a0)+,d4
    1866/    10D8 : 1C10                		move.b	(a0),d6
    1867/    10DA : E14E                		lsl.w	#8,d6
    1868/    10DC : 1C04                		move.b	d4,d6
    1869/    10DE :                     
    1870/    10DE :                     loc_1686:
    1871/    10DE : 4843                		swap	d3
    1872/    10E0 : 3808                		move.w	a0,d4
    1873/    10E2 : 1A04                		move.b	d4,d5
    1874/    10E4 : E04C                		lsr.w	#8,d4
    1875/    10E6 : 883C 0080           		or.b	#$80,d4
    1876/    10EA : 1584 3000           		move.b	d4,(a2,d3.w)
    1877/    10EE : 5303                		subq.b	#1,d3
    1878/    10F0 : 1585 3000           		move.b	d5,(a2,d3.w)
    1879/    10F4 : 5303                		subq.b	#1,d3
    1880/    10F6 : 4843                		swap	d3
    1881/    10F8 :                     		
    1882/    10F8 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1883/    10FE : 2049                		movea.l a1,a0
    1884/    1100 : D1C6                		add.l 	d6,a0
    1885/    1102 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1886/    1108 :                     ; ----------------------------------------------------------------
    1887/    1108 :                     ; $A9 - LDA #$xx
    1888/    1108 :                     ; ----------------------------------------------------------------
    1889/    1108 :                     
    1890/    1108 :                     loc_16A4:
    1891/    1108 : 1018                		move.b	(a0)+,d0
    1892/    110A : 40C5                		move	sr,d5
    1893/    110C : 0245 000C           		andi.w	#$C,d5
    1894/    1110 : 0203 00F3           		andi.b	#$F3,d3
    1895/    1114 : 8645                		or.w	d5,d3
    1896/    1116 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1897/    111C :                     ; ----------------------------------------------------------------
    1898/    111C :                     
    1899/    111C :                     loc_16B6:
    1900/    111C : 4246                		clr.w	d6
    1901/    111E : 1C18                		move.b	(a0)+,d6
    1902/    1120 : 1032 6000           		move.b	(a2,d6.w),d0
    1903/    1124 : 40C5                		move	sr,d5
    1904/    1126 : 0245 000C           		andi.w	#$C,d5
    1905/    112A : 0203 00F3           		andi.b	#$F3,d3
    1906/    112E : 8645                		or.w	d5,d3
    1907/    1130 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1908/    1136 :                     ; ----------------------------------------------------------------
    1909/    1136 :                     
    1910/    1136 :                     loc_16CE:				; DATA XREF: ROM:00000D06o
    1911/    1136 : 4246                		clr.w	d6
    1912/    1138 : 1C18                		move.b	(a0)+,d6
    1913/    113A : DC01                		add.b	d1,d6
    1914/    113C : 1032 6000           		move.b	(a2,d6.w),d0
    1915/    1140 : 40C5                		move	sr,d5
    1916/    1142 : 0245 000C           		andi.w	#$C,d5
    1917/    1146 : 0203 00F3           		andi.b	#$F3,d3
    1918/    114A : 8645                		or.w	d5,d3
    1919/    114C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1920/    1152 :                     ; ----------------------------------------------------------------
    1921/    1152 :                     
    1922/    1152 :                     loc_16E8:
    1923/    1152 : 4244                		clr.w	d4
    1924/    1154 : 4246                		clr.w	d6
    1925/    1156 : 1818                		move.b	(a0)+,d4
    1926/    1158 : 1C18                		move.b	(a0)+,d6
    1927/    115A : 6100 08B8           		bsr	addr_Read
    1928/    115E : 1007                		move.b	d7,d0
    1929/    1160 : 40C5                		move	sr,d5
    1930/    1162 : 0245 000C           		andi.w	#$C,d5
    1931/    1166 : 0203 00F3           		andi.b	#$F3,d3
    1932/    116A : 8645                		or.w	d5,d3
    1933/    116C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1934/    1172 :                     ; ----------------------------------------------------------------
    1935/    1172 :                     
    1936/    1172 :                     loc_1708:				; DATA XREF: ROM:00000D26o
    1937/    1172 : 4244                		clr.w	d4
    1938/    1174 : 1818                		move.b	(a0)+,d4
    1939/    1176 : 4246                		clr.w	d6
    1940/    1178 : 1C18                		move.b	(a0)+,d6
    1941/    117A : 4207                		clr.b	d7
    1942/    117C : D801                		add.b	d1,d4
    1943/    117E : DD07                		addx.b	d7,d6
    1944/    1180 : 6100 0892           		bsr	addr_Read
    1945/    1184 : 1007                		move.b	d7,d0
    1946/    1186 : 40C5                		move	sr,d5
    1947/    1188 : 0245 000C           		andi.w	#$C,d5
    1948/    118C : 0203 00F3           		andi.b	#$F3,d3
    1949/    1190 : 8645                		or.w	d5,d3
    1950/    1192 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1951/    1198 :                     ; ----------------------------------------------------------------
    1952/    1198 :                     
    1953/    1198 :                     loc_172E:				; DATA XREF: ROM:00000D16o
    1954/    1198 : 4244                		clr.w	d4
    1955/    119A : 1818                		move.b	(a0)+,d4
    1956/    119C : 4246                		clr.w	d6
    1957/    119E : 1C18                		move.b	(a0)+,d6
    1958/    11A0 : 4207                		clr.b	d7
    1959/    11A2 : D802                		add.b	d2,d4
    1960/    11A4 : DD07                		addx.b	d7,d6
    1961/    11A6 : 6100 086C           		bsr	addr_Read
    1962/    11AA : 1007                		move.b	d7,d0
    1963/    11AC : 40C5                		move	sr,d5
    1964/    11AE : 0245 000C           		andi.w	#$C,d5
    1965/    11B2 : 0203 00F3           		andi.b	#$F3,d3
    1966/    11B6 : 8645                		or.w	d5,d3
    1967/    11B8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1968/    11BE :                     ; ----------------------------------------------------------------
    1969/    11BE :                     ; LDA (oper,X)
    1970/    11BE :                     
    1971/    11BE :                     loc_1754:
    1972/    11BE : 4244                		clr.w	d4
    1973/    11C0 : 4245                		clr.w	d5
    1974/    11C2 : 4246                		clr.w	d6
    1975/    11C4 : 1A18                		move.b	(a0)+,d5
    1976/    11C6 : DA01                		add.b	d1,d5
    1977/    11C8 : 1832 5000           		move.b	(a2,d5.w),d4
    1978/    11CC : DA3C 0001           		add.b	#1,d5
    1979/    11D0 : 1C32 5000           		move.b	(a2,d5.w),d6
    1980/    11D4 : 6100 083E           		bsr	addr_Read
    1981/    11D8 : 1007                		move.b	d7,d0
    1982/    11DA : 40C5                		move	sr,d5
    1983/    11DC : 0245 000C           		andi.w	#$C,d5
    1984/    11E0 : 0203 00F3           		andi.b	#$F3,d3
    1985/    11E4 : 8645                		or.w	d5,d3
    1986/    11E6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1987/    11EC :                     ; ----------------------------------------------------------------
    1988/    11EC :                     
    1989/    11EC :                     loc_177E:
    1990/    11EC : 4244                		clr.w	d4
    1991/    11EE : 4245                		clr.w	d5
    1992/    11F0 : 4246                		clr.w	d6
    1993/    11F2 : 1A18                		move.b	(a0)+,d5
    1994/    11F4 : 1832 5000           		move.b	(a2,d5.w),d4
    1995/    11F8 : DA3C 0001           		add.b	#1,d5
    1996/    11FC : 1C32 5000           		move.b	(a2,d5.w),d6
    1997/    1200 : 4207                		clr.b	d7
    1998/    1202 : D802                		add.b	d2,d4
    1999/    1204 : DD07                		addx.b	d7,d6
    2000/    1206 : 6100 080C           		bsr	addr_Read
    2001/    120A : 1007                		move.b	d7,d0
    2002/    120C : 40C5                		move	sr,d5
    2003/    120E : 0245 000C           		andi.w	#$C,d5
    2004/    1212 : 0203 00F3           		andi.b	#$F3,d3
    2005/    1216 : 8645                		or.w	d5,d3
    2006/    1218 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2007/    121E :                     ; ----------------------------------------------------------------
    2008/    121E :                     
    2009/    121E :                     loc_17AC:				; DATA XREF: ROM:00000CBAo
    2010/    121E : 1218                		move.b	(a0)+,d1
    2011/    1220 : 40C5                		move	sr,d5
    2012/    1222 : 0245 000C           		andi.w	#$C,d5
    2013/    1226 : 0203 00F3           		andi.b	#$F3,d3
    2014/    122A : 8645                		or.w	d5,d3
    2015/    122C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2016/    1232 :                     ; ----------------------------------------------------------------
    2017/    1232 :                     
    2018/    1232 :                     loc_17BE:				; DATA XREF: ROM:00000CCAo
    2019/    1232 : 4246                		clr.w	d6
    2020/    1234 : 1C18                		move.b	(a0)+,d6
    2021/    1236 : 1232 6000           		move.b	(a2,d6.w),d1
    2022/    123A : 40C5                		move	sr,d5
    2023/    123C : 0245 000C           		andi.w	#$C,d5
    2024/    1240 : 0203 00F3           		andi.b	#$F3,d3
    2025/    1244 : 8645                		or.w	d5,d3
    2026/    1246 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2027/    124C :                     ; ----------------------------------------------------------------
    2028/    124C :                     
    2029/    124C :                     loc_17d3:				; DATA XREF: ROM:00000D0Ao
    2030/    124C : 4246                		clr.w	d6
    2031/    124E : 1C18                		move.b	(a0)+,d6
    2032/    1250 : DC02                		add.b	d2,d6
    2033/    1252 : 1232 6000           		move.b	(a2,d6.w),d1
    2034/    1256 : 40C5                		move	sr,d5
    2035/    1258 : 0245 000C           		andi.w	#$C,d5
    2036/    125C : 0203 00F3           		andi.b	#$F3,d3
    2037/    1260 : 8645                		or.w	d5,d3
    2038/    1262 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2039/    1268 :                     ; ----------------------------------------------------------------
    2040/    1268 :                     
    2041/    1268 :                     loc_17F0:				; DATA XREF: ROM:00000CEAo
    2042/    1268 : 4244                		clr.w	d4
    2043/    126A : 1818                		move.b	(a0)+,d4
    2044/    126C : 4246                		clr.w	d6
    2045/    126E : 1C18                		move.b	(a0)+,d6
    2046/    1270 : 6100 07A2           		bsr	addr_Read
    2047/    1274 : 1207                		move.b	d7,d1
    2048/    1276 : 40C5                		move	sr,d5
    2049/    1278 : 0245 000C           		andi.w	#$C,d5
    2050/    127C : 0203 00F3           		andi.b	#$F3,d3
    2051/    1280 : 8645                		or.w	d5,d3
    2052/    1282 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2053/    1288 :                     ; ----------------------------------------------------------------
    2054/    1288 :                     
    2055/    1288 :                     loc_1810:				; DATA XREF: ROM:00000D2Ao
    2056/    1288 : 4244                		clr.w	d4
    2057/    128A : 1818                		move.b	(a0)+,d4
    2058/    128C : 4246                		clr.w	d6
    2059/    128E : 1C18                		move.b	(a0)+,d6
    2060/    1290 : 4207                		clr.b	d7
    2061/    1292 : D802                		add.b	d2,d4
    2062/    1294 : DD07                		addx.b	d7,d6
    2063/    1296 : 6100 077C           		bsr	addr_Read
    2064/    129A : 1207                		move.b	d7,d1
    2065/    129C : 40C5                		move	sr,d5
    2066/    129E : 0245 000C           		andi.w	#$C,d5
    2067/    12A2 : 0203 00F3           		andi.b	#$F3,d3
    2068/    12A6 : 8645                		or.w	d5,d3
    2069/    12A8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2070/    12AE :                     ; ----------------------------------------------------------------
    2071/    12AE :                     
    2072/    12AE :                     loc_1836:				; DATA XREF: ROM:00000CB2o
    2073/    12AE : 1418                		move.b	(a0)+,d2
    2074/    12B0 : 40C5                		move	sr,d5
    2075/    12B2 : 0245 000C           		andi.w	#$C,d5
    2076/    12B6 : 0203 00F3           		andi.b	#$F3,d3
    2077/    12BA : 8645                		or.w	d5,d3
    2078/    12BC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2079/    12C2 :                     ; ----------------------------------------------------------------
    2080/    12C2 :                     
    2081/    12C2 :                     loc_1848:				; DATA XREF: ROM:00000CC2o
    2082/    12C2 : 4246                		clr.w	d6
    2083/    12C4 : 1C18                		move.b	(a0)+,d6
    2084/    12C6 : 1432 6000           		move.b	(a2,d6.w),d2
    2085/    12CA : 40C5                		move	sr,d5
    2086/    12CC : 0245 000C           		andi.w	#$C,d5
    2087/    12D0 : 0203 00F3           		andi.b	#$F3,d3
    2088/    12D4 : 8645                		or.w	d5,d3
    2089/    12D6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2090/    12DC :                     ; ----------------------------------------------------------------
    2091/    12DC :                     
    2092/    12DC :                     loc_1860:				; DATA XREF: ROM:00000D02o
    2093/    12DC : 4246                		clr.w	d6
    2094/    12DE : 1C18                		move.b	(a0)+,d6
    2095/    12E0 : DC01                		add.b	d1,d6
    2096/    12E2 : 1432 6000           		move.b	(a2,d6.w),d2
    2097/    12E6 : 40C5                		move	sr,d5
    2098/    12E8 : 0245 000C           		andi.w	#$C,d5
    2099/    12EC : 0203 00F3           		andi.b	#$F3,d3
    2100/    12F0 : 8645                		or.w	d5,d3
    2101/    12F2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2102/    12F8 :                     ; ----------------------------------------------------------------
    2103/    12F8 :                     
    2104/    12F8 :                     loc_187A:				; DATA XREF: ROM:00000CE2o
    2105/    12F8 : 4244                		clr.w	d4
    2106/    12FA : 1818                		move.b	(a0)+,d4
    2107/    12FC : 4246                		clr.w	d6
    2108/    12FE : 1C18                		move.b	(a0)+,d6
    2109/    1300 : 6100 0712           		bsr	addr_Read
    2110/    1304 : 1407                		move.b	d7,d2
    2111/    1306 : 40C5                		move	sr,d5
    2112/    1308 : 0245 000C           		andi.w	#$C,d5
    2113/    130C : 0203 00F3           		andi.b	#$F3,d3
    2114/    1310 : 8645                		or.w	d5,d3
    2115/    1312 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2116/    1318 :                     ; ----------------------------------------------------------------
    2117/    1318 :                     
    2118/    1318 :                     loc_189A:				; DATA XREF: ROM:00000D22o
    2119/    1318 : 4244                		clr.w	d4
    2120/    131A : 1818                		move.b	(a0)+,d4
    2121/    131C : 4246                		clr.w	d6
    2122/    131E : 1C18                		move.b	(a0)+,d6
    2123/    1320 : 4207                		clr.b	d7
    2124/    1322 : D801                		add.b	d1,d4
    2125/    1324 : DD07                		addx.b	d7,d6
    2126/    1326 : 6100 06EC           		bsr	addr_Read
    2127/    132A : 1407                		move.b	d7,d2
    2128/    132C : 40C5                		move	sr,d5
    2129/    132E : 0245 000C           		andi.w	#$C,d5
    2130/    1332 : 0203 00F3           		andi.b	#$F3,d3
    2131/    1336 : 8645                		or.w	d5,d3
    2132/    1338 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2133/    133E :                     ; ----------------------------------------------------------------
    2134/    133E :                     
    2135/    133E :                     loc_18C0:				; DATA XREF: ROM:00000B5Ao
    2136/    133E : E208                		lsr.b	#1,d0
    2137/    1340 : 40C5                		move	sr,d5
    2138/    1342 : 0245 001D           		andi.w	#$1D,d5
    2139/    1346 : 0203 00E2           		andi.b	#$E2,d3
    2140/    134A : 8645                		or.w	d5,d3
    2141/    134C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2142/    1352 :                     ; ----------------------------------------------------------------
    2143/    1352 :                     
    2144/    1352 :                     loc_18D2:				; DATA XREF: ROM:00000B4Ao
    2145/    1352 : 4246                		clr.w	d6
    2146/    1354 : 1C18                		move.b	(a0)+,d6
    2147/    1356 : 1E32 6000           		move.b	(a2,d6.w),d7
    2148/    135A : E20F                		lsr.b	#1,d7
    2149/    135C : 40C5                		move	sr,d5
    2150/    135E : 0245 001D           		andi.w	#$1D,d5
    2151/    1362 : 0203 00E2           		andi.b	#$E2,d3
    2152/    1366 : 8645                		or.w	d5,d3
    2153/    1368 : 1587 6000           		move.b	d7,(a2,d6.w)
    2154/    136C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2155/    1372 :                     ; ----------------------------------------------------------------
    2156/    1372 :                     
    2157/    1372 :                     loc_18F0:				; DATA XREF: ROM:00000B8Ao
    2158/    1372 : 4246                		clr.w	d6
    2159/    1374 : 1C18                		move.b	(a0)+,d6
    2160/    1376 : DC01                		add.b	d1,d6
    2161/    1378 : 1E32 6000           		move.b	(a2,d6.w),d7
    2162/    137C : E20F                		lsr.b	#1,d7
    2163/    137E : 40C5                		move	sr,d5
    2164/    1380 : 0245 001D           		andi.w	#$1D,d5
    2165/    1384 : 0203 00E2           		andi.b	#$E2,d3
    2166/    1388 : 8645                		or.w	d5,d3
    2167/    138A : 1587 6000           		move.b	d7,(a2,d6.w)
    2168/    138E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2169/    1394 :                     ; ----------------------------------------------------------------
    2170/    1394 :                     
    2171/    1394 :                     loc_1910:				; DATA XREF: ROM:00000B6Ao
    2172/    1394 : 1818                		move.b	(a0)+,d4
    2173/    1396 : 1C18                		move.b	(a0)+,d6
    2174/    1398 : E14E                		lsl.w	#8,d6
    2175/    139A : 1C04                		move.b	d4,d6
    2176/    139C : 1E32 6000           		move.b	(a2,d6.w),d7
    2177/    13A0 : E20F                		lsr.b	#1,d7
    2178/    13A2 : 40C5                		move	sr,d5
    2179/    13A4 : 0245 001D           		andi.w	#$1D,d5
    2180/    13A8 : 0203 00E2           		andi.b	#$E2,d3
    2181/    13AC : 8645                		or.w	d5,d3
    2182/    13AE : 1587 6000           		move.b	d7,(a2,d6.w)
    2183/    13B2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2184/    13B8 :                     ; ----------------------------------------------------------------
    2185/    13B8 :                     
    2186/    13B8 :                     loc_1932:				; DATA XREF: ROM:00000BAAo
    2187/    13B8 : 1818                		move.b	(a0)+,d4
    2188/    13BA : 1C18                		move.b	(a0)+,d6
    2189/    13BC : E14E                		lsl.w	#8,d6
    2190/    13BE : 1C04                		move.b	d4,d6
    2191/    13C0 : DC41                		add.w	d1,d6
    2192/    13C2 : 1E32 6000           		move.b	(a2,d6.w),d7
    2193/    13C6 : E20F                		lsr.b	#1,d7
    2194/    13C8 : 40C5                		move	sr,d5
    2195/    13CA : 0245 001D           		andi.w	#$1D,d5
    2196/    13CE : 0203 00E2           		andi.b	#$E2,d3
    2197/    13D2 : 8645                		or.w	d5,d3
    2198/    13D4 : 1587 6000           		move.b	d7,(a2,d6.w)
    2199/    13D8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2200/    13DE :                     ; ----------------------------------------------------------------
    2201/    13DE :                     ; $EA - nop
    2202/    13DE :                     
    2203/    13DE :                     loc_1956:
    2204/    13DE : 4E71                		nop
    2205/    13E0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2206/    13E6 :                     ; ----------------------------------------------------------------
    2207/    13E6 :                     
    2208/    13E6 :                     loc_195C:				; DATA XREF: ROM:00000A56o
    2209/    13E6 : 1E18                		move.b	(a0)+,d7
    2210/    13E8 : 8007                		or.b	d7,d0
    2211/    13EA : 40C5                		move	sr,d5
    2212/    13EC : 0245 000C           		andi.w	#$C,d5
    2213/    13F0 : 0203 00F3           		andi.b	#$F3,d3
    2214/    13F4 : 8645                		or.w	d5,d3
    2215/    13F6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2216/    13FC :                     ; ----------------------------------------------------------------
    2217/    13FC :                     
    2218/    13FC :                     loc_1970:				; DATA XREF: ROM:00000A46o
    2219/    13FC : 4246                		clr.w	d6
    2220/    13FE : 1C18                		move.b	(a0)+,d6
    2221/    1400 : 1E32 6000           		move.b	(a2,d6.w),d7
    2222/    1404 : 8007                		or.b	d7,d0
    2223/    1406 : 40C5                		move	sr,d5
    2224/    1408 : 0245 000C           		andi.w	#$C,d5
    2225/    140C : 0203 00F3           		andi.b	#$F3,d3
    2226/    1410 : 8645                		or.w	d5,d3
    2227/    1412 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2228/    1418 :                     ; ----------------------------------------------------------------
    2229/    1418 :                     
    2230/    1418 :                     loc_198A:				; DATA XREF: ROM:00000A86o
    2231/    1418 : 4246                		clr.w	d6
    2232/    141A : 1C18                		move.b	(a0)+,d6
    2233/    141C : DC01                		add.b	d1,d6
    2234/    141E : 1E32 6000           		move.b	(a2,d6.w),d7
    2235/    1422 : 8007                		or.b	d7,d0
    2236/    1424 : 40C5                		move	sr,d5
    2237/    1426 : 0245 000C           		andi.w	#$C,d5
    2238/    142A : 0203 00F3           		andi.b	#$F3,d3
    2239/    142E : 8645                		or.w	d5,d3
    2240/    1430 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2241/    1436 :                     ; ----------------------------------------------------------------
    2242/    1436 :                     
    2243/    1436 :                     loc_19A6:				; DATA XREF: ROM:00000A66o
    2244/    1436 : 4244                		clr.w	d4
    2245/    1438 : 1818                		move.b	(a0)+,d4
    2246/    143A : 4246                		clr.w	d6
    2247/    143C : 1C18                		move.b	(a0)+,d6
    2248/    143E : 6100 05D4           		bsr	addr_Read
    2249/    1442 : 8007                		or.b	d7,d0
    2250/    1444 : 40C5                		move	sr,d5
    2251/    1446 : 0245 000C           		andi.w	#$C,d5
    2252/    144A : 0203 00F3           		andi.b	#$F3,d3
    2253/    144E : 8645                		or.w	d5,d3
    2254/    1450 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2255/    1456 :                     ; ----------------------------------------------------------------
    2256/    1456 :                     
    2257/    1456 :                     loc_19C6:				; DATA XREF: ROM:00000AA6o
    2258/    1456 : 4244                		clr.w	d4
    2259/    1458 : 1818                		move.b	(a0)+,d4
    2260/    145A : 4246                		clr.w	d6
    2261/    145C : 1C18                		move.b	(a0)+,d6
    2262/    145E : 4207                		clr.b	d7
    2263/    1460 : D801                		add.b	d1,d4
    2264/    1462 : DD07                		addx.b	d7,d6
    2265/    1464 : 6100 05AE           		bsr	addr_Read
    2266/    1468 : 8007                		or.b	d7,d0
    2267/    146A : 40C5                		move	sr,d5
    2268/    146C : 0245 000C           		andi.w	#$C,d5
    2269/    1470 : 0203 00F3           		andi.b	#$F3,d3
    2270/    1474 : 8645                		or.w	d5,d3
    2271/    1476 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2272/    147C :                     ; ----------------------------------------------------------------
    2273/    147C :                     
    2274/    147C :                     loc_19EC:				; DATA XREF: ROM:00000A96o
    2275/    147C : 4244                		clr.w	d4
    2276/    147E : 1818                		move.b	(a0)+,d4
    2277/    1480 : 4246                		clr.w	d6
    2278/    1482 : 1C18                		move.b	(a0)+,d6
    2279/    1484 : 4207                		clr.b	d7
    2280/    1486 : D802                		add.b	d2,d4
    2281/    1488 : DD07                		addx.b	d7,d6
    2282/    148A : 6100 0588           		bsr	addr_Read
    2283/    148E : 8007                		or.b	d7,d0
    2284/    1490 : 40C5                		move	sr,d5
    2285/    1492 : 0245 000C           		andi.w	#$C,d5
    2286/    1496 : 0203 00F3           		andi.b	#$F3,d3
    2287/    149A : 8645                		or.w	d5,d3
    2288/    149C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2289/    14A2 :                     ; ----------------------------------------------------------------
    2290/    14A2 :                     
    2291/    14A2 :                     loc_1A12:
    2292/    14A2 : 4244                		clr.w	d4
    2293/    14A4 : 4245                		clr.w	d5
    2294/    14A6 : 4246                		clr.w	d6
    2295/    14A8 : 1A18                		move.b	(a0)+,d5
    2296/    14AA : DA01                		add.b	d1,d5
    2297/    14AC : 1832 5000           		move.b	(a2,d5.w),d4
    2298/    14B0 : DA3C 0001           		add.b	#1,d5
    2299/    14B4 : 1C32 5000           		move.b	(a2,d5.w),d6
    2300/    14B8 : 6100 055A           		bsr	addr_Read
    2301/    14BC : 8007                		or.b	d7,d0
    2302/    14BE : 40C5                		move	sr,d5
    2303/    14C0 : 0245 000C           		andi.w	#$C,d5
    2304/    14C4 : 0203 00F3           		andi.b	#$F3,d3
    2305/    14C8 : 8645                		or.w	d5,d3
    2306/    14CA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2307/    14D0 :                     ; ----------------------------------------------------------------
    2308/    14D0 :                     
    2309/    14D0 :                     loc_1A3C:
    2310/    14D0 : 4244                		clr.w	d4
    2311/    14D2 : 4245                		clr.w	d5
    2312/    14D4 : 4246                		clr.w	d6
    2313/    14D6 : 1A18                		move.b	(a0)+,d5
    2314/    14D8 : 1832 5000           		move.b	(a2,d5.w),d4
    2315/    14DC : DA3C 0001           		add.b	#1,d5
    2316/    14E0 : 1C32 5000           		move.b	(a2,d5.w),d6
    2317/    14E4 : 4207                		clr.b	d7
    2318/    14E6 : D802                		add.b	d2,d4
    2319/    14E8 : DD07                		addx.b	d7,d6
    2320/    14EA : 6100 0528           		bsr	addr_Read
    2321/    14EE : 8007                		or.b	d7,d0
    2322/    14F0 : 40C5                		move	sr,d5
    2323/    14F2 : 0245 000C           		andi.w	#$C,d5
    2324/    14F6 : 0203 00F3           		andi.b	#$F3,d3
    2325/    14FA : 8645                		or.w	d5,d3
    2326/    14FC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2327/    1502 :                     ; ----------------------------------------------------------------
    2328/    1502 :                     
    2329/    1502 :                     loc_1A6A:				; DATA XREF: ROM:00000B52o
    2330/    1502 : 4843                		swap	d3
    2331/    1504 : 1580 3000           		move.b	d0,(a2,d3.w)
    2332/    1508 : 5303                		subq.b	#1,d3
    2333/    150A : 4843                		swap	d3
    2334/    150C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2335/    1512 :                     
    2336/    1512 :                     ; ----------------------------------------------------------------
    2337/    1512 :                     ; $08 - PHP
    2338/    1512 :                     ; ----------------------------------------------------------------
    2339/    1512 :                     
    2340/    1512 :                     loc_1A78:
    2341/    1512 : 3A03                		move.w	d3,d5
    2342/    1514 : 4843                		swap	d3
    2343/    1516 : 1585 3000           		move.b	d5,(a2,d3.w)
    2344/    151A : 967C 0001           		sub.w	#1,d3
    2345/    151E : 4843                		swap	d3
    2346/    1520 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2347/    1526 :                     ; ----------------------------------------------------------------
    2348/    1526 :                     
    2349/    1526 :                     loc_1A88:
    2350/    1526 : 0683 0001 0000      		addi.l	#$10000,d3
    2351/    152C : 2A03                		move.l	d3,d5
    2352/    152E : 4845                		swap	d5
    2353/    1530 : 1032 5000           		move.b	(a2,d5.w),d0
    2354/    1534 : 40C5                		move	sr,d5
    2355/    1536 : 0245 000C           		andi.w	#$C,d5
    2356/    153A : 0203 00F3           		andi.b	#$F3,d3
    2357/    153E : 8645                		or.w	d5,d3
    2358/    1540 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2359/    1546 :                     
    2360/    1546 :                     ; ----------------------------------------------------------------
    2361/    1546 :                     ; $28 - PLP
    2362/    1546 :                     ; ----------------------------------------------------------------
    2363/    1546 :                     
    2364/    1546 :                     loc_1AA6:
    2365/    1546 : 4843                		swap	d3
    2366/    1548 : D67C 0001           		add.w	#1,d3
    2367/    154C : 1A32 3000           		move.b	(a2,d3.w),d5
    2368/    1550 : 4843                		swap	d3
    2369/    1552 : 1605                		move.b	d5,d3
    2370/    1554 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2371/    155A :                     ; ----------------------------------------------------------------
    2372/    155A :                     
    2373/    155A :                     loc_1AB6:
    2374/    155A : 46C3                		move	d3,sr
    2375/    155C : E310                		roxl.b	#1,d0
    2376/    155E : 40C5                		move	sr,d5
    2377/    1560 : 0245 001D           		andi.w	#$1D,d5
    2378/    1564 : 0203 00E2           		andi.b	#$E2,d3
    2379/    1568 : 8645                		or.w	d5,d3
    2380/    156A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2381/    1570 :                     ; ----------------------------------------------------------------
    2382/    1570 :                     
    2383/    1570 :                     loc_1ACA:				; DATA XREF: ROM:00000ACAo
    2384/    1570 : 4246                		clr.w	d6
    2385/    1572 : 1C18                		move.b	(a0)+,d6
    2386/    1574 : 1E32 6000           		move.b	(a2,d6.w),d7
    2387/    1578 : 46C3                		move	d3,sr
    2388/    157A : E317                		roxl.b	#1,d7
    2389/    157C : 40C5                		move	sr,d5
    2390/    157E : 0245 001D           		andi.w	#$1D,d5
    2391/    1582 : 0203 00E2           		andi.b	#$E2,d3
    2392/    1586 : 8645                		or.w	d5,d3
    2393/    1588 : 1587 6000           		move.b	d7,(a2,d6.w)
    2394/    158C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2395/    1592 :                     ; ----------------------------------------------------------------
    2396/    1592 :                     
    2397/    1592 :                     loc_1AEA:				; DATA XREF: ROM:00000B0Ao
    2398/    1592 : 4246                		clr.w	d6
    2399/    1594 : 1C18                		move.b	(a0)+,d6
    2400/    1596 : DC01                		add.b	d1,d6
    2401/    1598 : 1E32 6000           		move.b	(a2,d6.w),d7
    2402/    159C : 46C3                		move	d3,sr
    2403/    159E : E317                		roxl.b	#1,d7
    2404/    15A0 : 40C5                		move	sr,d5
    2405/    15A2 : 0245 001D           		andi.w	#$1D,d5
    2406/    15A6 : 0203 00E2           		andi.b	#$E2,d3
    2407/    15AA : 8645                		or.w	d5,d3
    2408/    15AC : 1587 6000           		move.b	d7,(a2,d6.w)
    2409/    15B0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2410/    15B6 :                     ; ----------------------------------------------------------------
    2411/    15B6 :                     
    2412/    15B6 :                     loc_1B0C:				; DATA XREF: ROM:00000AEAo
    2413/    15B6 : 1818                		move.b	(a0)+,d4
    2414/    15B8 : 1C18                		move.b	(a0)+,d6
    2415/    15BA : E14E                		lsl.w	#8,d6
    2416/    15BC : 1C04                		move.b	d4,d6
    2417/    15BE : 1E32 6000           		move.b	(a2,d6.w),d7
    2418/    15C2 : 46C3                		move	d3,sr
    2419/    15C4 : E317                		roxl.b	#1,d7
    2420/    15C6 : 40C5                		move	sr,d5
    2421/    15C8 : 0245 001D           		andi.w	#$1D,d5
    2422/    15CC : 0203 00E2           		andi.b	#$E2,d3
    2423/    15D0 : 8645                		or.w	d5,d3
    2424/    15D2 : 1587 6000           		move.b	d7,(a2,d6.w)
    2425/    15D6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2426/    15DC :                     ; ----------------------------------------------------------------
    2427/    15DC :                     
    2428/    15DC :                     loc_1B30:
    2429/    15DC : 1818                		move.b	(a0)+,d4
    2430/    15DE : 1C18                		move.b	(a0)+,d6
    2431/    15E0 : E14E                		lsl.w	#8,d6
    2432/    15E2 : 1C04                		move.b	d4,d6
    2433/    15E4 : DC41                		add.w	d1,d6
    2434/    15E6 : 1E32 6000           		move.b	(a2,d6.w),d7
    2435/    15EA : 46C3                		move	d3,sr
    2436/    15EC : E317                		roxl.b	#1,d7
    2437/    15EE : 40C5                		move	sr,d5
    2438/    15F0 : 0245 001D           		andi.w	#$1D,d5
    2439/    15F4 : 0203 00E2           		andi.b	#$E2,d3
    2440/    15F8 : 8645                		or.w	d5,d3
    2441/    15FA : 1587 6000           		move.b	d7,(a2,d6.w)
    2442/    15FE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2443/    1604 :                     ; ----------------------------------------------------------------
    2444/    1604 :                     
    2445/    1604 :                     loc_1B56:
    2446/    1604 : 46C3                		move	d3,sr
    2447/    1606 : E210                		roxr.b	#1,d0
    2448/    1608 : 40C5                		move	sr,d5
    2449/    160A : 0245 001D           		andi.w	#$1D,d5
    2450/    160E : 0203 00E2           		andi.b	#$E2,d3
    2451/    1612 : 8645                		or.w	d5,d3
    2452/    1614 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2453/    161A :                     ; ----------------------------------------------------------------
    2454/    161A :                     
    2455/    161A :                     loc_1B6A:
    2456/    161A : 4246                		clr.w	d6
    2457/    161C : 1C18                		move.b	(a0)+,d6
    2458/    161E : 1E32 6000           		move.b	(a2,d6.w),d7
    2459/    1622 : 46C3                		move	d3,sr
    2460/    1624 : E217                		roxr.b	#1,d7
    2461/    1626 : 40C5                		move	sr,d5
    2462/    1628 : 0245 001D           		andi.w	#$1D,d5
    2463/    162C : 0203 00E2           		andi.b	#$E2,d3
    2464/    1630 : 8645                		or.w	d5,d3
    2465/    1632 : 1587 6000           		move.b	d7,(a2,d6.w)
    2466/    1636 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2467/    163C :                     ; ----------------------------------------------------------------
    2468/    163C :                     
    2469/    163C :                     loc_1B8A:				; DATA XREF: ROM:00000C0Ao
    2470/    163C : 4246                		clr.w	d6
    2471/    163E : 1C18                		move.b	(a0)+,d6
    2472/    1640 : DC01                		add.b	d1,d6
    2473/    1642 : 1E32 6000           		move.b	(a2,d6.w),d7
    2474/    1646 : 46C3                		move	d3,sr
    2475/    1648 : E217                		roxr.b	#1,d7
    2476/    164A : 40C5                		move	sr,d5
    2477/    164C : 0245 001D           		andi.w	#$1D,d5
    2478/    1650 : 0203 00E2           		andi.b	#$E2,d3
    2479/    1654 : 8645                		or.w	d5,d3
    2480/    1656 : 1587 6000           		move.b	d7,(a2,d6.w)
    2481/    165A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2482/    1660 :                     ; ----------------------------------------------------------------
    2483/    1660 :                     
    2484/    1660 :                     loc_1BAC:				; DATA XREF: ROM:00000BEAo
    2485/    1660 : 1818                		move.b	(a0)+,d4
    2486/    1662 : 1C18                		move.b	(a0)+,d6
    2487/    1664 : E14E                		lsl.w	#8,d6
    2488/    1666 : 1C04                		move.b	d4,d6
    2489/    1668 : 1E32 6000           		move.b	(a2,d6.w),d7
    2490/    166C : 46C3                		move	d3,sr
    2491/    166E : E217                		roxr.b	#1,d7
    2492/    1670 : 40C5                		move	sr,d5
    2493/    1672 : 0245 001D           		andi.w	#$1D,d5
    2494/    1676 : 0203 00E2           		andi.b	#$E2,d3
    2495/    167A : 8645                		or.w	d5,d3
    2496/    167C : 1587 6000           		move.b	d7,(a2,d6.w)
    2497/    1680 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2498/    1686 :                     ; ----------------------------------------------------------------
    2499/    1686 :                     
    2500/    1686 :                     loc_1BD0:				; DATA XREF: ROM:00000C2Ao
    2501/    1686 : 1818                		move.b	(a0)+,d4
    2502/    1688 : 1C18                		move.b	(a0)+,d6
    2503/    168A : E14E                		lsl.w	#8,d6
    2504/    168C : 1C04                		move.b	d4,d6
    2505/    168E : DC41                		add.w	d1,d6
    2506/    1690 : 1E32 6000           		move.b	(a2,d6.w),d7
    2507/    1694 : 46C3                		move	d3,sr
    2508/    1696 : E217                		roxr.b	#1,d7
    2509/    1698 : 40C5                		move	sr,d5
    2510/    169A : 0245 001D           		andi.w	#$1D,d5
    2511/    169E : 0203 00E2           		andi.b	#$E2,d3
    2512/    16A2 : 8645                		or.w	d5,d3
    2513/    16A4 : 1587 6000           		move.b	d7,(a2,d6.w)
    2514/    16A8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2515/    16AE :                     
    2516/    16AE :                     ; ----------------------------------------------------------------
    2517/    16AE :                     ; $40 - RTI
    2518/    16AE :                     ; 
    2519/    16AE :                     ; NOTE: Interrupt exit
    2520/    16AE :                     ; ----------------------------------------------------------------
    2521/    16AE :                     
    2522/    16AE :                     loc_1BF6:
    2523/    16AE : 4A6C 0034           		tst.w	cpuFamiVint(a4)
    2524/    16B2 : 673E                		beq.s	.nonint
    2525/    16B4 :                     		
    2526/    16B4 : 4843                		swap	d3			; Restore SR, PC
    2527/    16B6 : 7C00                		moveq	#0,d6
    2528/    16B8 : 5203                		addq.b	#1,d3
    2529/    16BA : 1A32 3000           		move.b	(a2,d3.w),d5
    2530/    16BE : 5203                		addq.b	#1,d3
    2531/    16C0 : 1832 3000           		move.b	(a2,d3.w),d4
    2532/    16C4 : 5203                		addq.b	#1,d3
    2533/    16C6 : 1C32 3000           		move.b	(a2,d3.w),d6
    2534/    16CA : E14E                		lsl.w	#8,d6
    2535/    16CC : 1C04                		move.b	d4,d6
    2536/    16CE : 4843                		swap	d3
    2537/    16D0 : 1605                		move.b	d5,d3
    2538/    16D2 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2539/    16D8 : 2049                		movea.l a1,a0
    2540/    16DA : D1C6                		add.l 	d6,a0
    2541/    16DC :                     
    2542/    16DC : 23FC 0000 055E FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
    2543/    16E6 : 397C 0000 0034      		move.w	#0,cpuFamiVint(a4)
    2544/    16EC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2545/    16F2 :                     
    2546/    16F2 :                     .nonint:
    2547/    16F2 : 4843                		swap	d3
    2548/    16F4 : 7C00                		moveq	#0,d6
    2549/    16F6 : 5203                		addq.b	#1,d3
    2550/    16F8 : 1A32 3000           		move.b	(a2,d3.w),d5
    2551/    16FC : 5203                		addq.b	#1,d3
    2552/    16FE : 1832 3000           		move.b	(a2,d3.w),d4
    2553/    1702 : 5203                		addq.b	#1,d3
    2554/    1704 : 1C32 3000           		move.b	(a2,d3.w),d6
    2555/    1708 : E14E                		lsl.w	#8,d6
    2556/    170A : 1C04                		move.b	d4,d6
    2557/    170C : 4843                		swap	d3
    2558/    170E : 1605                		move.b	d5,d3
    2559/    1710 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2560/    1716 : 2049                		movea.l a1,a0
    2561/    1718 : D1C6                		add.l 	d6,a0
    2562/    171A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2563/    1720 :                     
    2564/    1720 :                     ; ----------------------------------------------------------------
    2565/    1720 :                     ; $60 - RTS
    2566/    1720 :                     ; ----------------------------------------------------------------
    2567/    1720 :                     
    2568/    1720 :                     loc_1C32:
    2569/    1720 : 4843                		swap	d3
    2570/    1722 : 7C00                		moveq	#0,d6
    2571/    1724 : 5203                		addq.b	#1,d3
    2572/    1726 : 1832 3000           		move.b	(a2,d3.w),d4
    2573/    172A : 5203                		addq.b	#1,d3
    2574/    172C : 1C32 3000           		move.b	(a2,d3.w),d6
    2575/    1730 : E14E                		lsl.w	#8,d6
    2576/    1732 : 1C04                		move.b	d4,d6
    2577/    1734 : 4843                		swap	d3
    2578/    1736 : 5246                		addq.w	#1,d6
    2579/    1738 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2580/    173E : 2049                		movea.l a1,a0
    2581/    1740 : D1C6                		add.l 	d6,a0
    2582/    1742 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2583/    1748 :                     ; ----------------------------------------------------------------
    2584/    1748 :                     
    2585/    1748 :                     loc_1C52:
    2586/    1748 : 1E18                		move.b	(a0)+,d7
    2587/    174A : 0A03 0011           		eori.b	#$11,d3
    2588/    174E : 0003 0004           		ori.b	#4,d3
    2589/    1752 : 46C3                		move	d3,sr
    2590/    1754 : 9107                		subx.b	d7,d0
    2591/    1756 : 40C3                		move	sr,d3
    2592/    1758 : 0A03 0011           		eori.b	#$11,d3
    2593/    175C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2594/    1762 :                     ; ----------------------------------------------------------------
    2595/    1762 :                     
    2596/    1762 :                     loc_1C6A:
    2597/    1762 : 4246                		clr.w	d6
    2598/    1764 : 1C18                		move.b	(a0)+,d6
    2599/    1766 : 1E32 6000           		move.b	(a2,d6.w),d7
    2600/    176A : 0A03 0011           		eori.b	#$11,d3
    2601/    176E : 0003 0004           		ori.b	#4,d3
    2602/    1772 : 46C3                		move	d3,sr
    2603/    1774 : 9107                		subx.b	d7,d0
    2604/    1776 : 40C3                		move	sr,d3
    2605/    1778 : 0A03 0011           		eori.b	#$11,d3
    2606/    177C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2607/    1782 :                     ; ----------------------------------------------------------------
    2608/    1782 :                     
    2609/    1782 :                     loc_1C88:				; DATA XREF: ROM:00000E06o
    2610/    1782 : 4246                		clr.w	d6
    2611/    1784 : 1C18                		move.b	(a0)+,d6
    2612/    1786 : DC01                		add.b	d1,d6
    2613/    1788 : 1E32 6000           		move.b	(a2,d6.w),d7
    2614/    178C : 0A03 0011           		eori.b	#$11,d3
    2615/    1790 : 0003 0004           		ori.b	#4,d3
    2616/    1794 : 46C3                		move	d3,sr
    2617/    1796 : 9107                		subx.b	d7,d0
    2618/    1798 : 40C3                		move	sr,d3
    2619/    179A : 0A03 0011           		eori.b	#$11,d3
    2620/    179E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2621/    17A4 :                     ; ----------------------------------------------------------------
    2622/    17A4 :                     
    2623/    17A4 :                     loc_1CA8:				; DATA XREF: ROM:00000DE6o
    2624/    17A4 : 4244                		clr.w	d4
    2625/    17A6 : 1818                		move.b	(a0)+,d4
    2626/    17A8 : 4246                		clr.w	d6
    2627/    17AA : 1C18                		move.b	(a0)+,d6
    2628/    17AC : 6100 0266           		bsr	addr_Read
    2629/    17B0 : 0A03 0011           		eori.b	#$11,d3
    2630/    17B4 : 0003 0004           		ori.b	#4,d3
    2631/    17B8 : 46C3                		move	d3,sr
    2632/    17BA : 9107                		subx.b	d7,d0
    2633/    17BC : 40C3                		move	sr,d3
    2634/    17BE : 0A03 0011           		eori.b	#$11,d3
    2635/    17C2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2636/    17C8 :                     ; ----------------------------------------------------------------
    2637/    17C8 :                     
    2638/    17C8 :                     loc_1CCC:				; DATA XREF: ROM:00000E26o
    2639/    17C8 : 4244                		clr.w	d4
    2640/    17CA : 1818                		move.b	(a0)+,d4
    2641/    17CC : 4246                		clr.w	d6
    2642/    17CE : 1C18                		move.b	(a0)+,d6
    2643/    17D0 : 4207                		clr.b	d7
    2644/    17D2 : D801                		add.b	d1,d4
    2645/    17D4 : DD07                		addx.b	d7,d6
    2646/    17D6 : 6100 023C           		bsr	addr_Read
    2647/    17DA : 0A03 0011           		eori.b	#$11,d3
    2648/    17DE : 0003 0004           		ori.b	#4,d3
    2649/    17E2 : 46C3                		move	d3,sr
    2650/    17E4 : 9107                		subx.b	d7,d0
    2651/    17E6 : 40C3                		move	sr,d3
    2652/    17E8 : 0A03 0011           		eori.b	#$11,d3
    2653/    17EC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2654/    17F2 :                     ; ----------------------------------------------------------------
    2655/    17F2 :                     
    2656/    17F2 :                     loc_1CF6:
    2657/    17F2 : 4244                		clr.w	d4
    2658/    17F4 : 4245                		clr.w	d5
    2659/    17F6 : 4207                		clr.b	d7
    2660/    17F8 : 1818                		move.b	(a0)+,d4
    2661/    17FA : 1C18                		move.b	(a0)+,d6
    2662/    17FC : D802                		add.b	d2,d4
    2663/    17FE : DD07                		addx.b	d7,d6
    2664/    1800 : 6100 0212           		bsr	addr_Read
    2665/    1804 : 0A03 0011           		eori.b	#$11,d3
    2666/    1808 : 0003 0004           		ori.b	#4,d3
    2667/    180C : 46C3                		move	d3,sr
    2668/    180E : 9107                		subx.b	d7,d0
    2669/    1810 : 40C3                		move	sr,d3
    2670/    1812 : 0A03 0011           		eori.b	#$11,d3
    2671/    1816 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2672/    181C :                     ; ----------------------------------------------------------------
    2673/    181C :                     
    2674/    181C :                     loc_1D20:
    2675/    181C : 4244                		clr.w	d4
    2676/    181E : 4245                		clr.w	d5
    2677/    1820 : 4246                		clr.w	d6
    2678/    1822 : 1A18                		move.b	(a0)+,d5
    2679/    1824 : DA01                		add.b	d1,d5
    2680/    1826 : 1832 5000           		move.b	(a2,d5.w),d4
    2681/    182A : DA3C 0001           		add.b	#1,d5
    2682/    182E : 1C32 5000           		move.b	(a2,d5.w),d6
    2683/    1832 :                     
    2684/    1832 : 6100 01E0           		bsr	addr_Read
    2685/    1836 : 0A03 0011           		eori.b	#$11,d3
    2686/    183A : 0003 0004           		ori.b	#4,d3
    2687/    183E : 46C3                		move	d3,sr
    2688/    1840 : 9107                		subx.b	d7,d0
    2689/    1842 : 40C3                		move	sr,d3
    2690/    1844 : 0A03 0011           		eori.b	#$11,d3
    2691/    1848 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2692/    184E :                     ; ----------------------------------------------------------------
    2693/    184E :                     
    2694/    184E :                     loc_1D4E:
    2695/    184E : 4244                		clr.w	d4
    2696/    1850 : 4245                		clr.w	d5
    2697/    1852 : 4246                		clr.w	d6
    2698/    1854 : 1A18                		move.b	(a0)+,d5
    2699/    1856 : 1832 5000           		move.b	(a2,d5.w),d4
    2700/    185A : DA3C 0001           		add.b	#1,d5
    2701/    185E : 1C32 5000           		move.b	(a2,d5.w),d6
    2702/    1862 : 4207                		clr.b	d7
    2703/    1864 : D802                		add.b	d2,d4
    2704/    1866 : DD07                		addx.b	d7,d6
    2705/    1868 : 6100 01AA           		bsr	addr_Read
    2706/    186C : 0A03 0011           		eori.b	#$11,d3
    2707/    1870 : 0003 0004           		ori.b	#4,d3
    2708/    1874 : 46C3                		move	d3,sr
    2709/    1876 : 9107                		subx.b	d7,d0
    2710/    1878 : 40C3                		move	sr,d3
    2711/    187A : 0A03 0011           		eori.b	#$11,d3
    2712/    187E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2713/    1884 :                     ; ----------------------------------------------------------------
    2714/    1884 :                     
    2715/    1884 :                     loc_1D80:
    2716/    1884 : 0003 0011           		ori.b	#$11,d3
    2717/    1888 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2718/    188E :                     
    2719/    188E :                     ; ----------------------------------------------------------------
    2720/    188E :                     ; SED - Set Decimal mode
    2721/    188E :                     ; ----------------------------------------------------------------
    2722/    188E :                     
    2723/    188E :                     loc_1D88:
    2724/    188E : 397C 0001 003A      		move.w	#1,cpuModeDec(a4)
    2725/    1894 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2726/    189A :                     
    2727/    189A :                     ; ----------------------------------------------------------------
    2728/    189A :                     ; SEI - Set Interrupt disable
    2729/    189A :                     ; ----------------------------------------------------------------
    2730/    189A :                     
    2731/    189A :                     loc_1D92:
    2732/    189A : 397C 0001 003E      		move.w	#1,cpuModeIntDis(a4)
    2733/    18A0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2734/    18A6 :                     
    2735/    18A6 :                     ; ----------------------------------------------------------------
    2736/    18A6 :                     
    2737/    18A6 :                     loc_1D9C:
    2738/    18A6 : 4244                		clr.w	d4
    2739/    18A8 : 1818                		move.b	(a0)+,d4
    2740/    18AA : 1580 4000           		move.b	d0,(a2,d4.w)
    2741/    18AE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2742/    18B4 :                     ; ----------------------------------------------------------------
    2743/    18B4 :                     
    2744/    18B4 :                     loc_1DA8:
    2745/    18B4 : 4244                		clr.w	d4
    2746/    18B6 : 1818                		move.b	(a0)+,d4
    2747/    18B8 : D801                		add.b	d1,d4
    2748/    18BA : 1580 4000           		move.b	d0,(a2,d4.w)
    2749/    18BE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2750/    18C4 :                     ; ----------------------------------------------------------------
    2751/    18C4 :                     
    2752/    18C4 :                     loc_1DB6:				; DATA XREF: ROM:00000C66o
    2753/    18C4 : 4244                		clr.w	d4
    2754/    18C6 : 1818                		move.b	(a0)+,d4
    2755/    18C8 : 4246                		clr.w	d6
    2756/    18CA : 1C18                		move.b	(a0)+,d6
    2757/    18CC : 1E00                		move.b	d0,d7
    2758/    18CE : 6000 0224           		bra	addr_Write
    2759/    18D2 :                     ; ----------------------------------------------------------------
    2760/    18D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2761/    18D8 :                     ; ----------------------------------------------------------------
    2762/    18D8 :                     
    2763/    18D8 :                     loc_1DCA:
    2764/    18D8 : 4244                		clr.w	d4
    2765/    18DA : 1818                		move.b	(a0)+,d4
    2766/    18DC : 4246                		clr.w	d6
    2767/    18DE : 1C18                		move.b	(a0)+,d6
    2768/    18E0 : 4207                		clr.b	d7
    2769/    18E2 : D801                		add.b	d1,d4
    2770/    18E4 : DD07                		addx.b	d7,d6
    2771/    18E6 : 1E00                		move.b	d0,d7
    2772/    18E8 : 6000 020A           		bra	addr_Write
    2773/    18EC :                     ; ----------------------------------------------------------------
    2774/    18EC :                     
    2775/    18EC :                     loc_1DE0:
    2776/    18EC : 4244                		clr.w	d4
    2777/    18EE : 1818                		move.b	(a0)+,d4
    2778/    18F0 : 4246                		clr.w	d6
    2779/    18F2 : 1C18                		move.b	(a0)+,d6
    2780/    18F4 : 4207                		clr.b	d7
    2781/    18F6 : D802                		add.b	d2,d4
    2782/    18F8 : DD07                		addx.b	d7,d6
    2783/    18FA : 1E00                		move.b	d0,d7
    2784/    18FC : 6000 01F6           		bra	addr_Write
    2785/    1900 :                     ; ----------------------------------------------------------------
    2786/    1900 :                     ; STA (oper,X)
    2787/    1900 :                     
    2788/    1900 :                     loc_1DF6:
    2789/    1900 : 4245                		clr.w	d5
    2790/    1902 : 4244                		clr.w	d4
    2791/    1904 : 4246                		clr.w	d6
    2792/    1906 : 1A18                		move.b	(a0)+,d5
    2793/    1908 : DA01                		add.b	d1,d5
    2794/    190A : 1832 5000           		move.b	(a2,d5.w),d4
    2795/    190E : DA3C 0001           		add.b	#1,d5
    2796/    1912 : 1C32 5000           		move.b	(a2,d5.w),d6
    2797/    1916 : 1E00                		move.b	d0,d7
    2798/    1918 : 6000 01DA           		bra	addr_Write
    2799/    191C :                     ; ----------------------------------------------------------------
    2800/    191C :                     
    2801/    191C :                     loc_1E10:
    2802/    191C : 4244                		clr.w	d4
    2803/    191E : 4245                		clr.w	d5
    2804/    1920 : 4246                		clr.w	d6
    2805/    1922 : 1A18                		move.b	(a0)+,d5
    2806/    1924 : 1832 5000           		move.b	(a2,d5.w),d4
    2807/    1928 : DA3C 0001           		add.b	#1,d5
    2808/    192C : 1C32 5000           		move.b	(a2,d5.w),d6
    2809/    1930 : 4207                		clr.b	d7
    2810/    1932 : D802                		add.b	d2,d4
    2811/    1934 : DD07                		addx.b	d7,d6
    2812/    1936 : 1E00                		move.b	d0,d7
    2813/    1938 : 6000 01BA           		bra	addr_Write
    2814/    193C :                     ; ----------------------------------------------------------------
    2815/    193C :                     
    2816/    193C :                     loc_1E2E:
    2817/    193C : 4244                		clr.w	d4
    2818/    193E : 1818                		move.b	(a0)+,d4
    2819/    1940 : 1581 4000           		move.b	d1,(a2,d4.w)
    2820/    1944 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2821/    194A :                     ; ----------------------------------------------------------------
    2822/    194A :                     
    2823/    194A :                     loc_1E3A:
    2824/    194A : 4244                		clr.w	d4
    2825/    194C : 1818                		move.b	(a0)+,d4
    2826/    194E : D802                		add.b	d2,d4
    2827/    1950 : 1581 4000           		move.b	d1,(a2,d4.w)
    2828/    1954 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2829/    195A :                     ; ----------------------------------------------------------------
    2830/    195A :                     
    2831/    195A :                     loc_1E48:
    2832/    195A : 4244                		clr.w	d4
    2833/    195C : 1818                		move.b	(a0)+,d4
    2834/    195E : 4246                		clr.w	d6
    2835/    1960 : 1C18                		move.b	(a0)+,d6
    2836/    1962 : 1E01                		move.b	d1,d7
    2837/    1964 : 6000 018E           		bra	addr_Write
    2838/    1968 :                     ; ----------------------------------------------------------------
    2839/    1968 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2840/    196E :                     ; ----------------------------------------------------------------
    2841/    196E :                     
    2842/    196E :                     loc_1E5C:
    2843/    196E : 4244                		clr.w	d4
    2844/    1970 : 1818                		move.b	(a0)+,d4
    2845/    1972 : 1582 4000           		move.b	d2,(a2,d4.w)
    2846/    1976 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2847/    197C :                     ; ----------------------------------------------------------------
    2848/    197C :                     
    2849/    197C :                     loc_1E68:
    2850/    197C : 4244                		clr.w	d4
    2851/    197E : 1818                		move.b	(a0)+,d4
    2852/    1980 : D801                		add.b	d1,d4
    2853/    1982 : 1582 4000           		move.b	d2,(a2,d4.w)
    2854/    1986 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2855/    198C :                     ; ----------------------------------------------------------------
    2856/    198C :                     
    2857/    198C :                     loc_1E76:
    2858/    198C : 4244                		clr.w	d4
    2859/    198E : 1818                		move.b	(a0)+,d4
    2860/    1990 : 4246                		clr.w	d6
    2861/    1992 : 1C18                		move.b	(a0)+,d6
    2862/    1994 : 1E02                		move.b	d2,d7
    2863/    1996 : 6000 015C           		bra	addr_Write
    2864/    199A :                     ; ----------------------------------------------------------------
    2865/    199A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2866/    19A0 :                     ; ----------------------------------------------------------------
    2867/    19A0 :                     
    2868/    19A0 :                     loc_1E8A:
    2869/    19A0 : 1200                		move.b	d0,d1
    2870/    19A2 : 40C5                		move	sr,d5
    2871/    19A4 : 0245 000C           		andi.w	#$C,d5
    2872/    19A8 : 0203 00F3           		andi.b	#$F3,d3
    2873/    19AC : 8645                		or.w	d5,d3
    2874/    19AE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2875/    19B4 :                     ; ----------------------------------------------------------------
    2876/    19B4 :                     
    2877/    19B4 :                     loc_1E9C:
    2878/    19B4 : 1400                		move.b	d0,d2
    2879/    19B6 : 40C5                		move	sr,d5
    2880/    19B8 : 0245 000C           		andi.w	#$C,d5
    2881/    19BC : 0203 00F3           		andi.b	#$F3,d3
    2882/    19C0 : 8645                		or.w	d5,d3
    2883/    19C2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2884/    19C8 :                     ; ----------------------------------------------------------------
    2885/    19C8 :                     ; TSX
    2886/    19C8 :                     
    2887/    19C8 :                     loc_1EAE:
    2888/    19C8 : 4843                		swap	d3
    2889/    19CA : 1203                		move.b	d3,d1
    2890/    19CC : 4843                		swap	d3
    2891/    19CE : 40C5                		move	sr,d5
    2892/    19D0 : 0245 000C           		andi.w	#$C,d5
    2893/    19D4 : 0203 00F3           		andi.b	#$F3,d3
    2894/    19D8 : 8645                		or.w	d5,d3
    2895/    19DA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2896/    19E0 :                     ; ----------------------------------------------------------------
    2897/    19E0 :                     
    2898/    19E0 :                     loc_1EC4:
    2899/    19E0 : 1001                		move.b	d1,d0
    2900/    19E2 : 40C5                		move	sr,d5
    2901/    19E4 : 0245 000C           		andi.w	#$C,d5
    2902/    19E8 : 0203 00F3           		andi.b	#$F3,d3
    2903/    19EC : 8645                		or.w	d5,d3
    2904/    19EE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2905/    19F4 :                     ; ----------------------------------------------------------------
    2906/    19F4 :                     
    2907/    19F4 :                     loc_1Ed3:
    2908/    19F4 : 4843                		swap	d3
    2909/    19F6 : 1601                		move.b	d1,d3
    2910/    19F8 : 4843                		swap	d3
    2911/    19FA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2912/    1A00 :                     ; ----------------------------------------------------------------
    2913/    1A00 :                     
    2914/    1A00 :                     loc_1EE0:
    2915/    1A00 : 1002                		move.b	d2,d0
    2916/    1A02 : 40C5                		move	sr,d5
    2917/    1A04 : 0245 000C           		andi.w	#$C,d5
    2918/    1A08 : 0203 00F3           		andi.b	#$F3,d3
    2919/    1A0C : 8645                		or.w	d5,d3
    2920/    1A0E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2921/    1A14 :                     
    2922/    1A14 :                     ; ====================================================================
    2923/    1A14 :                     ; ----------------------------------------------------------------
    2924/    1A14 :                     ; Read request
    2925/    1A14 :                     ; 
    2926/    1A14 :                     ; d6 - XX00
    2927/    1A14 :                     ; d4 - 00XX
    2928/    1A14 :                     ; ----------------------------------------------------------------
    2929/    1A14 :                     
    2930/    1A14 :                     addr_Read:
    2931/    1A14 : 4A06                		tst.b	d6		; $8000
    2932/    1A16 : 6B1A                		bmi	rdFrom_PRG
    2933/    1A18 :                     	; TODO: $6000-$7FFF
    2934/    1A18 : BC3C 0040           		cmp.b	#$40,d6		; $4000
    2935/    1A1C : 6C22                		bge	rdFrom_APU
    2936/    1A1E : BC3C 0020           		cmp.b	#$20,d6		; $2000
    2937/    1A22 : 6C52                		bge	rdFrom_PPU
    2938/    1A24 :                     
    2939/    1A24 :                     ; ----------------------------------------------------------------
    2940/    1A24 :                     
    2941/    1A24 :                     rdFrom_RAM:
    2942/    1A24 : E14E                		lsl.w	#8,d6
    2943/    1A26 : 1C04                		move.b	d4,d6
    2944/    1A28 : 0246 07FF           		andi.w	#$7FF,d6
    2945/    1A2C : 1E32 6000           		move.b	(a2,d6.w),d7
    2946/    1A30 : 4E75                		rts
    2947/    1A32 :                     ; ----------------------------------------------------------------
    2948/    1A32 :                     
    2949/    1A32 :                     rdFrom_PRG:
    2950/    1A32 : E14E                		lsl.w	#8,d6
    2951/    1A34 : 1C04                		move.b	d4,d6
    2952/    1A36 : 0246 7FFF           		andi.w	#$7FFF,d6
    2953/    1A3A : 1E31 6000           		move.b	(a1,d6.w),d7
    2954/    1A3E : 4E75                		rts
    2955/    1A40 :                     ; ----------------------------------------------------------------
    2956/    1A40 :                     
    2957/    1A40 :                     rdFrom_APU:
    2958/    1A40 : 0C04 001F           		cmpi.b	#$1F,d4
    2959/    1A44 : 6200 0010           		bhi.w	loc_23A6
    2960/    1A48 :                     
    2961/    1A48 : B83C 0016           		cmp.b	#$16,d4		; $4016
    2962/    1A4C : 670C                		beq.s	APU_Input_1
    2963/    1A4E : B83C 0017           		cmp.b	#$17,d4		; $4017
    2964/    1A52 : 6714                		beq.s	APU_Input_2
    2965/    1A54 :                     
    2966/    1A54 :                     ; ----------------------------------------------------------------
    2967/    1A54 :                     
    2968/    1A54 :                     APU_Rd_Null:
    2969/    1A54 : 4E75                		rts
    2970/    1A56 :                     
    2971/    1A56 :                     ; ----------------------------------------------------------------
    2972/    1A56 :                     
    2973/    1A56 :                     loc_23A6:
    2974/    1A56 : 3E03                		move.w	d3,d7
    2975/    1A58 : 4E75                		rts
    2976/    1A5A :                     
    2977/    1A5A :                     ; ----------------------------------------------------------------
    2978/    1A5A :                     
    2979/    1A5A :                     APU_Input_1:
    2980/    1A5A : 3E2C 0036           		move.w	cpuInputData(a4),d7
    2981/    1A5E : 0247 0001           		andi.w	#1,d7
    2982/    1A62 : E2EC 0036           		lsr	cpuInputData(a4)
    2983/    1A66 : 4E75                		rts
    2984/    1A68 :                     ; ----------------------------------------------------------------
    2985/    1A68 :                     
    2986/    1A68 :                     APU_Input_2:
    2987/    1A68 : 3E2C 0038           		move.w	cpuInputData+2(a4),d7
    2988/    1A6C : 0247 0001           		andi.w	#1,d7
    2989/    1A70 : E2EC 0038           		lsr	cpuInputData+2(a4)
    2990/    1A74 : 4E75                		rts
    2991/    1A76 :                     ; ----------------------------------------------------------------
    2992/    1A76 :                     
    2993/    1A76 :                     rdFrom_PPU:
    2994/    1A76 : 0244 0007           		andi.w	#7,d4
    2995/    1A7A : D844                		add.w	d4,d4
    2996/    1A7C : 383B 4006           		move.w	off_23D4(pc,d4.w),d4
    2997/    1A80 : 4EFB 4002           		jmp	off_23D4(pc,d4.w)
    2998/    1A84 :                     ; ----------------------------------------------------------------
    2999/    1A84 : 0010                off_23D4:	dc.w loc_23F4-off_23D4		; $2000
    3000/    1A86 : 0010                		dc.w loc_23F4-off_23D4		; $2001
    3001/    1A88 : 0016                		dc.w rdPPU_Status-off_23D4	; $2002
    3002/    1A8A : 0010                		dc.w loc_23F4-off_23D4		; $2003
    3003/    1A8C : 0056                		dc.w return_241A-off_23D4	; $2004
    3004/    1A8E : 0010                		dc.w loc_23F4-off_23D4		; $2005
    3005/    1A90 : 0010                		dc.w loc_23F4-off_23D4		; $2006
    3006/    1A92 : 0058                		dc.w rdPPU_Data-off_23D4	; $2007
    3007/    1A94 :                     ; ----------------------------------------------------------------
    3008/    1A94 :                     
    3009/    1A94 :                     loc_23F4:
    3010/    1A94 : 3E31 3000           		move.w	(a1,d3.w),d7
    3011/    1A98 : 4E75                		rts
    3012/    1A9A :                     ; ----------------------------------------------------------------
    3013/    1A9A :                     
    3014/    1A9A :                     rdPPU_Status:
    3015/    1A9A : 397C 0000 0050      		move.w	#0,ppuAddrLatch(a4)
    3016/    1AA0 : 3E2C 0056           		move.w	ppuStatus(a4),d7
    3017/    1AA4 : 397C 0000 0056      		move.w	#0,ppuStatus(a4)
    3018/    1AAA :                     
    3019/    1AAA :                     	; sprite 0 beam hit
    3020/    1AAA : 46FC 2700           		move.w	#$2700,sr
    3021/    1AAE : 382C 004E           		move.w	ppuSp0Ypos(a4),d4
    3022/    1AB2 : B87C 00E0           		cmp.w	#$E0,d4
    3023/    1AB6 : 6C0A                		bge.s	.setspron
    3024/    1AB8 : 3A2E 0008           		move.w	8(a6),d5
    3025/    1ABC : E04D                		lsr.w	#8,d5
    3026/    1ABE : B805                		cmp.b	d5,d4
    3027/    1AC0 : 6604                		bne.s	return_2418
    3028/    1AC2 :                     .setspron:
    3029/    1AC2 : 0047 0040           		ori.w	#$40,d7
    3030/    1AC6 :                     return_2418:
    3031/    1AC6 :                     
    3032/    1AC6 : 4A6C 005C           		tst.w	FamiPPUVint(a4)
    3033/    1ACA : 6708                		beq.s	.novflag
    3034/    1ACC : 426C 005C           		clr.w	FamiPPUVint(a4)
    3035/    1AD0 :                     		
    3036/    1AD0 :                     ; 		move.w	(vdp_ctrl),d4
    3037/    1AD0 :                     ; 		btst	#bitVint,d4
    3038/    1AD0 :                     ; 		beq.s	.novflag
    3039/    1AD0 : 0047 0080           		ori.w	#$80,d7
    3040/    1AD4 :                     .novflag:
    3041/    1AD4 : 46FC 2000           		move.w	#$2000,sr
    3042/    1AD8 : 4E75                		rts
    3043/    1ADA :                     ; ----------------------------------------------------------------
    3044/    1ADA :                     
    3045/    1ADA :                     return_241A:				; DATA XREF: ROM:000023E4o
    3046/    1ADA : 4E75                		rts
    3047/    1ADC :                     ; ----------------------------------------------------------------
    3048/    1ADC :                     
    3049/    1ADC :                     rdPPU_Data:
    3050/    1ADC : 3E2C 004A           		move.w	ppuDataLast(a4),d7
    3051/    1AE0 : 382C 0048           		move.w	ppuAddrBase(a4),d4
    3052/    1AE4 : 1973 4000 004B      		move.b	(a3,d4.w),ppuDataLast+1(a4)
    3053/    1AEA : 382C 0046           		move.w	ppuAddrIncr(a4),d4
    3054/    1AEE : D96C 0048           		add.w	d4,ppuAddrBase(a4)
    3055/    1AF2 : 4E75                		rts
    3056/    1AF4 :                     
    3057/    1AF4 :                     ; ====================================================================
    3058/    1AF4 :                     ; ----------------------------------------------------------------
    3059/    1AF4 :                     ; Write request
    3060/    1AF4 :                     ; 
    3061/    1AF4 :                     ; d6 - XX00
    3062/    1AF4 :                     ; d4 - 00XX
    3063/    1AF4 :                     ; d7 - data
    3064/    1AF4 :                     ; ----------------------------------------------------------------
    3065/    1AF4 :                     
    3066/    1AF4 :                     addr_Write:
    3067/    1AF4 : 4A06                		tst.b	d6		; $8000
    3068/    1AF6 : 6B20                		bmi	wrTo_PRG
    3069/    1AF8 :                     	; TODO: $6000-$7FFF
    3070/    1AF8 : BC3C 0040           		cmp.b	#$40,d6		; $4000
    3071/    1AFC : 6C52                		bge	wrTo_APU
    3072/    1AFE : BC3C 0020           		cmp.b	#$20,d6		; $2000
    3073/    1B02 : 6C00 016C           		bge	wrTo_PPU
    3074/    1B06 :                     
    3075/    1B06 :                     ; ====================================================================
    3076/    1B06 :                     ; ----------------------------------------------------------------
    3077/    1B06 :                     ; WRITE request to RAM
    3078/    1B06 :                     ; ----------------------------------------------------------------
    3079/    1B06 :                     
    3080/    1B06 :                     wrTo_RAM:
    3081/    1B06 : E14E                		lsl.w	#8,d6
    3082/    1B08 : 1C04                		move.b	d4,d6
    3083/    1B0A : 0246 07FF           		andi.w	#$7FF,d6
    3084/    1B0E : 1587 6000           		move.b	d7,(a2,d6.w)
    3085/    1B12 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3086/    1B18 :                     
    3087/    1B18 :                     ; ====================================================================
    3088/    1B18 :                     ; ----------------------------------------------------------------
    3089/    1B18 :                     ; WRITE request to ROM area, mappers
    3090/    1B18 :                     ; ----------------------------------------------------------------
    3091/    1B18 :                     
    3092/    1B18 :                     wrTo_PRG:
    3093/    1B18 : 0C6C 0003 0032      		cmp.w	#3,cpuMapper(a4)
    3094/    1B1E : 6706                		beq.s	.mapper_3
    3095/    1B20 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3096/    1B26 :                     
    3097/    1B26 :                     ; --------------------------------------------------------
    3098/    1B26 :                     ; Mapper $03, CNROM
    3099/    1B26 :                     ; 
    3100/    1B26 :                     ; Bank select ($8000-$FFFF)
    3101/    1B26 :                     ; 
    3102/    1B26 :                     ; 7  bit  0
    3103/    1B26 :                     ; ---- ----
    3104/    1B26 :                     ; xxDD xxCC
    3105/    1B26 :                     ;   ||   ||
    3106/    1B26 :                     ;   ||   ++- Select 8 KB CHR ROM bank for PPU $0000-$1FFF
    3107/    1B26 :                     ;   ++------ Security diodes config
    3108/    1B26 :                     ; --------------------------------------------------------
    3109/    1B26 :                     
    3110/    1B26 :                     .mapper_3:
    3111/    1B26 : 2F0C                		move.l	a4,-(sp)
    3112/    1B28 : 2A6C 0004           		movea.l	emuChrRom(a4),a5
    3113/    1B2C : 3807                		move.w	d7,d4
    3114/    1B2E : C87C 0003           		and.w	#%11,d4
    3115/    1B32 : E14C                		lsl.w	#8,d4
    3116/    1B34 : EB4C                		lsl.w	#5,d4
    3117/    1B36 : DAC4                		adda	d4,a5
    3118/    1B38 : 284B                		move.l	a3,a4
    3119/    1B3A : 383C 07FE           		move.w	#($1FFF/4)-1,d4
    3120/    1B3E :                     .copychr:
    3121/    1B3E : 28DD                		move.l	(a5)+,(a4)+
    3122/    1B40 : 51CC FFFC           		dbf	d4,.copychr
    3123/    1B44 : 285F                		move.l	(sp)+,a4
    3124/    1B46 : 6100 05DE           		bsr	Nemul_LoadChr
    3125/    1B4A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3126/    1B50 :                     
    3127/    1B50 :                     ; ====================================================================
    3128/    1B50 :                     ; ----------------------------------------------------------------
    3129/    1B50 :                     ; WRITE to APU
    3130/    1B50 :                     ; ----------------------------------------------------------------
    3131/    1B50 :                     
    3132/    1B50 :                     wrTo_APU:
    3133/    1B50 : 0C04 001F           		cmpi.b	#$1F,d4
    3134/    1B54 : 624A                		bhi.s	APU_Null
    3135/    1B56 : D844                		add.w	d4,d4
    3136/    1B58 : 383B 4006           		move.w	off_2866(pc,d4.w),d4
    3137/    1B5C : 4EFB 4002           		jmp	off_2866(pc,d4.w)
    3138/    1B60 :                     
    3139/    1B60 :                     ; ----------------------------------------------------------------
    3140/    1B60 : 0040                off_2866:	dc.w APU_Null-off_2866
    3141/    1B62 : 0040                		dc.w APU_Null-off_2866
    3142/    1B64 : 0040                		dc.w APU_Null-off_2866
    3143/    1B66 : 0040                		dc.w APU_Null-off_2866
    3144/    1B68 : 0040                		dc.w APU_Null-off_2866
    3145/    1B6A : 0040                		dc.w APU_Null-off_2866
    3146/    1B6C : 0040                		dc.w APU_Null-off_2866
    3147/    1B6E : 0040                		dc.w APU_Null-off_2866
    3148/    1B70 : 0040                		dc.w APU_Null-off_2866
    3149/    1B72 : 0040                		dc.w APU_Null-off_2866
    3150/    1B74 : 0040                		dc.w APU_Null-off_2866
    3151/    1B76 : 0040                		dc.w APU_Null-off_2866
    3152/    1B78 : 0040                		dc.w APU_Null-off_2866
    3153/    1B7A : 0040                		dc.w APU_Null-off_2866
    3154/    1B7C : 0040                		dc.w APU_Null-off_2866
    3155/    1B7E : 0040                		dc.w APU_Null-off_2866
    3156/    1B80 : 0040                		dc.w APU_Null-off_2866
    3157/    1B82 : 0040                		dc.w APU_Null-off_2866
    3158/    1B84 : 0040                		dc.w APU_Null-off_2866
    3159/    1B86 : 0040                		dc.w APU_Null-off_2866
    3160/    1B88 : 00A6                		dc.w APU_OAMDMA-off_2866
    3161/    1B8A : 0040                		dc.w APU_Null-off_2866
    3162/    1B8C : 0046                		dc.w APU_Input-off_2866
    3163/    1B8E : 0040                		dc.w APU_Null-off_2866
    3164/    1B90 : 0040                		dc.w APU_Null-off_2866
    3165/    1B92 : 0040                		dc.w APU_Null-off_2866
    3166/    1B94 : 0040                		dc.w APU_Null-off_2866
    3167/    1B96 : 0040                		dc.w APU_Null-off_2866
    3168/    1B98 : 0040                		dc.w APU_Null-off_2866
    3169/    1B9A : 0040                		dc.w APU_Null-off_2866
    3170/    1B9C : 0040                		dc.w APU_Null-off_2866
    3171/    1B9E : 0040                		dc.w APU_Null-off_2866
    3172/    1BA0 :                     
    3173/    1BA0 :                     APU_Null:
    3174/    1BA0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3175/    1BA6 :                     
    3176/    1BA6 :                     ; =============== S U B	R O U T	I N E =======================================
    3177/    1BA6 :                     
    3178/    1BA6 :                     
    3179/    1BA6 :                     APU_Input:				; DATA XREF: ROM:000028BEo
    3180/    1BA6 : 4A07                		tst.b	d7
    3181/    1BA8 : 67F6                		beq.s	APU_Null
    3182/    1BAA : 6106                		bsr	readInput
    3183/    1BAC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3184/    1BB2 :                     
    3185/    1BB2 :                     ; =============== S U B	R O U T	I N E =======================================
    3186/    1BB2 :                     
    3187/    1BB2 :                     
    3188/    1BB2 :                     readInput:
    3189/    1BB2 : 2F0B                		move.l	a3,-(sp)
    3190/    1BB4 : 47F9 00A1 0003      		lea	($A10003).l,a3
    3191/    1BBA : 4BEC 0036           		lea	cpuInputData(a4),a5
    3192/    1BBE : 6108                		bsr	.this_pad
    3193/    1BC0 : 544B                		addq.w	#2,a3
    3194/    1BC2 : 6104                		bsr	.this_pad		
    3195/    1BC4 : 265F                		move.l	(sp)+,a3
    3196/    1BC6 : 4E75                		rts
    3197/    1BC8 :                     		
    3198/    1BC8 :                     .this_pad:
    3199/    1BC8 : 16BC 0000           		move.b	#0,(a3)
    3200/    1BCC : 4E71                		nop
    3201/    1BCE : 4E71                		nop
    3202/    1BD0 : 1A13                		move.b	(a3),d5
    3203/    1BD2 : E50D                		lsl.b	#2,d5
    3204/    1BD4 : 0205 00C0           		andi.b	#$C0,d5
    3205/    1BD8 : 16BC 0040           		move.b	#$40,(a3)
    3206/    1BDC : 4E71                		nop
    3207/    1BDE : 4E71                		nop
    3208/    1BE0 : 1813                		move.b	(a3),d4
    3209/    1BE2 : 0204 003F           		andi.b	#$3F,d4
    3210/    1BE6 : 8A04                		or.b	d4,d5
    3211/    1BE8 : 4605                		not.b	d5
    3212/    1BEA : 4244                		clr.w	d4
    3213/    1BEC : E30D                		lsl.b	#1,d5
    3214/    1BEE : D904                		addx.b	d4,d4
    3215/    1BF0 : E34D                		lsl.w	#1,d5
    3216/    1BF2 : E30D                		lsl.b	#1,d5
    3217/    1BF4 : D904                		addx.b	d4,d4
    3218/    1BF6 : E24D                		lsr.w	#1,d5
    3219/    1BF8 : E30D                		lsl.b	#1,d5
    3220/    1BFA : D904                		addx.b	d4,d4
    3221/    1BFC : E30D                		lsl.b	#1,d5
    3222/    1BFE : D904                		addx.b	d4,d4
    3223/    1C00 : 8805                		or.b	d5,d4
    3224/    1C02 : 3AC4                		move.w	d4,(a5)+
    3225/    1C04 : 4E75                		rts
    3226/    1C06 :                     
    3227/    1C06 :                     
    3228/    1C06 :                     ; =============== S U B	R O U T	I N E =======================================
    3229/    1C06 :                     
    3230/    1C06 :                     
    3231/    1C06 :                     APU_OAMDMA:
    3232/    1C06 : 2F07                		move.l	d7,-(sp)
    3233/    1C08 : 2F0B                		move.l	a3,-(sp)
    3234/    1C0A :                     		
    3235/    1C0A : E14F                		lsl.w	#8,d7
    3236/    1C0C : 3C2C 0052           		move.w	ppuOamUnk(a4),d6
    3237/    1C10 : 0A46 0001           		eori.w	#1,d6
    3238/    1C14 : 1E34 6044           		move.b	ppuOamAddr(a4,d6.w),d7
    3239/    1C18 : 4BF2 7000           		lea	(a2,d7.w),a5
    3240/    1C1C : 1947 004F           		move.b	d7,ppuSp0Ypos+1(a4)		; sprite 0 ypos
    3241/    1C20 :                     
    3242/    1C20 : 47EC 00E6           		lea 	vdpSprData(a4),a3
    3243/    1C24 : 7A3F                		moveq	#$3F,d5
    3244/    1C26 : 7E00                		moveq	#0,d7
    3245/    1C28 :                     .lp_sprnormal:
    3246/    1C28 : 1E1D                		move.b	(a5)+,d7
    3247/    1C2A : 3C07                		move.w	d7,d6
    3248/    1C2C : 0646 0079           		addi.w	#$79,d6
    3249/    1C30 : 36C6                		move.w	d6,(a3)+
    3250/    1C32 :                     
    3251/    1C32 : 7C40                		moveq	#64,d6
    3252/    1C34 : 9C05                		sub.b	d5,d6
    3253/    1C36 : 8C6C 004C           		or.w	ppuSprWide(a4),d6
    3254/    1C3A : 36C6                		move.w	d6,(a3)+
    3255/    1C3C :                     		
    3256/    1C3C : 1E1D                		move.b	(a5)+,d7
    3257/    1C3E : 3C07                		move.w	d7,d6
    3258/    1C40 : 0046 0100           		ori.w	#$100,d6
    3259/    1C44 :                     
    3260/    1C44 : 1E1D                		move.b	(a5)+,d7
    3261/    1C46 : 3807                		move.w	d7,d4
    3262/    1C48 : E51C                		rol.b	#2,d4
    3263/    1C4A : E34C                		lsl.w	#1,d4
    3264/    1C4C : E70C                		lsl.b	#3,d4
    3265/    1C4E : EF4C                		lsl.w	#7,d4
    3266/    1C50 : 8846                		or.w	d6,d4
    3267/    1C52 : 0A44 8000           		eori.w	#$8000,d4
    3268/    1C56 : 36C4                		move.w	d4,(a3)+
    3269/    1C58 :                     
    3270/    1C58 : 1E1D                		move.b	(a5)+,d7
    3271/    1C5A : 3C07                		move.w	d7,d6
    3272/    1C5C : 0646 0080           		addi.w	#$80,d6
    3273/    1C60 : 36C6                		move.w	d6,(a3)+
    3274/    1C62 :                     
    3275/    1C62 : 51CD FFC4           		dbf	d5,.lp_sprnormal
    3276/    1C66 : 265F                		move.l	(sp)+,a3
    3277/    1C68 : 2E1F                		move.l	(sp)+,d7
    3278/    1C6A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3279/    1C70 :                     
    3280/    1C70 :                     
    3281/    1C70 :                     ; =============== S U B	R O U T	I N E =======================================
    3282/    1C70 :                     
    3283/    1C70 :                     
    3284/    1C70 :                     wrTo_PPU:
    3285/    1C70 : 0244 0007           		andi.w	#7,d4
    3286/    1C74 : D844                		add.w	d4,d4
    3287/    1C76 : 383B 4006           		move.w	off_29F6(pc,d4.w),d4
    3288/    1C7A : 4EFB 4002           		jmp	off_29F6(pc,d4.w)
    3289/    1C7E :                     
    3290/    1C7E :                     ; ----------------------------------------------------------------
    3291/    1C7E : 0010                off_29F6:	dc.w loc_2A16-off_29F6 ; $2000
    3292/    1C80 : 005A                		dc.w loc_2A5E-off_29F6 ; $2001
    3293/    1C82 : 0104                		dc.w loc_2ACC-off_29F6 ; $2002
    3294/    1C84 : 010A                		dc.w loc_2AD0-off_29F6 ; $2003
    3295/    1C86 : 011E                		dc.w loc_2AE2-off_29F6 ; $2004
    3296/    1C88 : 00B0                		dc.w wrPPU_Scroll-off_29F6 ; $2005
    3297/    1C8A : 0124                		dc.w loc_2AE6-off_29F6 ; $2006
    3298/    1C8C : 0138                		dc.w wrPPU_Data-off_29F6 ; $2007
    3299/    1C8E :                     
    3300/    1C8E :                     ; ----------------------------------------------------------------
    3301/    1C8E :                     ; $2000
    3302/    1C8E :                     ; ----------------------------------------------------------------
    3303/    1C8E :                     
    3304/    1C8E :                     loc_2A16:
    3305/    1C8E :                     
    3306/    1C8E :                     	; NMI on/off
    3307/    1C8E : 4246                		clr.w	d6
    3308/    1C90 : E30F                		lsl.b	#1,d7			; $80
    3309/    1C92 : 6404                		bcc.s	.noVintFlag
    3310/    1C94 : 1C3C 0080           		move.b	#$80,d6			; NMI ON
    3311/    1C98 :                     .noVintFlag:
    3312/    1C98 : 3946 0054           		move.w	d6,ppuNmiFlag(a4)
    3313/    1C9C :                     		
    3314/    1C9C :                     	; 8x8 or 8x16 sprites
    3315/    1C9C : 4246                		clr.w	d6
    3316/    1C9E : E50F                		lsl.b	#2,d7
    3317/    1CA0 : 6404                		bcc.s	loc_2A2C
    3318/    1CA2 : 3C3C 0100           		move.w	#$100,d6
    3319/    1CA6 :                     loc_2A2C:
    3320/    1CA6 : 3946 004C           		move.w	d6,ppuSprWide(a4)
    3321/    1CAA :                     		
    3322/    1CAA :                     	; PPU VRAM BG bank/Sprites bank
    3323/    1CAA : 1C07                		move.b	d7,d6
    3324/    1CAC : 0246 00C0           		andi.w	#$C0,d6
    3325/    1CB0 : BC6C 0042           		cmp.w	ppuChrBank(a4),d6
    3326/    1CB4 : 6708                		beq.s	.no_reload
    3327/    1CB6 : 3946 0042           		move.w	d6,ppuChrBank(a4)
    3328/    1CBA : 6100 046A           		bsr	Nemul_LoadChr
    3329/    1CBE :                     .no_reload:
    3330/    1CBE :                     
    3331/    1CBE :                     	; PPU VRAM increment
    3332/    1CBE : 7C01                		moveq	#1,d6
    3333/    1CC0 : E70F                		lsl.b	#3,d7
    3334/    1CC2 : 6402                		bcc.s	.nrml_incr
    3335/    1CC4 : 7C20                		moveq	#$20,d6
    3336/    1CC6 :                     .nrml_incr:
    3337/    1CC6 : 3946 0046           		move.w	d6,ppuAddrIncr(a4)
    3338/    1CCA :                     
    3339/    1CCA :                     	; PPU Name table base
    3340/    1CCA : 0247 00C0           		andi.w	#$C0,d7
    3341/    1CCE : 3947 0040           		move.w	d7,ppuNTblBase(a4)
    3342/    1CD2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3343/    1CD8 :                     
    3344/    1CD8 :                     ; ----------------------------------------------------------------
    3345/    1CD8 :                     ; $2002 - PPU MASK
    3346/    1CD8 :                     ; ----------------------------------------------------------------
    3347/    1CD8 :                     
    3348/    1CD8 :                     loc_2A5E:
    3349/    1CD8 : 46FC 2700           		move.w	#$2700,sr
    3350/    1CDC :                     
    3351/    1CDC :                     	; Hide sprites and BG
    3352/    1CDC : 3C3C 8550           		move.w	#$8500+(($A000)>>9),d6
    3353/    1CE0 : 4846                		swap	d6
    3354/    1CE2 : 3C2C 002E           		move.w	vdpReg01(a4),d6		; REGISTER 81
    3355/    1CE6 : CC3C 00BF           		and.b	#$BF,d6
    3356/    1CEA : 0807 0003           		btst	#3,d7
    3357/    1CEE : 6704                		beq.s	.hidebg
    3358/    1CF0 : 0006 0040           		ori.b	#$40,d6
    3359/    1CF4 :                     .hidebg:
    3360/    1CF4 : 4846                		swap	d6
    3361/    1CF6 : 0807 0004           		btst	#4,d7
    3362/    1CFA : 6704                		beq.s	.hidesp
    3363/    1CFC : 3C3C 855E           		move.w	#$8500+(($BC00)>>9),d6
    3364/    1D00 :                     .hidesp:
    3365/    1D00 : 2D46 0004           		move.l	d6,4(a6)
    3366/    1D04 : 4846                		swap	d6
    3367/    1D06 : 3946 002E           		move.w	d6,vdpReg01(a4)
    3368/    1D0A :                     
    3369/    1D0A : 3C2C 002C           		move.w	vdpReg00(a4),d6
    3370/    1D0E : 08C6 0005           		bset	#5,d6
    3371/    1D12 : 0807 0001           		btst	#1,d7
    3372/    1D16 : 6704                		beq.s	.hide_bg
    3373/    1D18 : 0886 0005           		bclr	#5,d6
    3374/    1D1C :                     .hide_bg:
    3375/    1D1C : 3D46 0004           		move.w	d6,4(a6)
    3376/    1D20 : 3946 002C           		move.w	d6,vdpReg00(a4)
    3377/    1D24 : 46FC 2000           		move.w	#$2000,sr
    3378/    1D28 :                     
    3379/    1D28 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3380/    1D2E :                     
    3381/    1D2E :                     ; ----------------------------------------------------------------
    3382/    1D2E :                     ; $2005 - PPU SCROLL
    3383/    1D2E :                     ; -----------------------------------------------------------------
    3384/    1D2E :                     
    3385/    1D2E :                     wrPPU_Scroll:
    3386/    1D2E : 3807                		move.w	d7,d4
    3387/    1D30 : 0244 00FF           		andi.w	#$FF,d4
    3388/    1D34 : 3C2C 0040           		move.w	ppuNTblBase(a4),d6
    3389/    1D38 : 0A6C 0001 0050      		eori.w	#1,ppuAddrLatch(a4)
    3390/    1D3E : 6718                		beq.s	loc_2AA4
    3391/    1D40 : CC7C 0001           		and.w	#1,d6
    3392/    1D44 : E14E                		lsl.w	#8,d6
    3393/    1D46 : D846                		add.w	d6,d4
    3394/    1D48 : 4444                		neg.w	d4
    3395/    1D4A : 3944 005E           		move.w	d4,vdpScrlX(a4)
    3396/    1D4E : 3944 0060           		move.w	d4,vdpScrlX+2(a4)
    3397/    1D52 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3398/    1D58 :                     
    3399/    1D58 :                     ; --------------------------------------------------------
    3400/    1D58 :                     ; Vertical
    3401/    1D58 :                     ; --------------------------------------------------------
    3402/    1D58 :                     
    3403/    1D58 :                     loc_2AA4:
    3404/    1D58 : 5044                		addq.w	#8,d4
    3405/    1D5A : E30E                		lsl.b	#1,d6
    3406/    1D5C : 6512                		bcs.s	loc_2ABE
    3407/    1D5E : 3944 0062           		move.w	d4,vdpScrlY(a4)
    3408/    1D62 : D87C 0110           		add.w	#$110,d4
    3409/    1D66 : 3944 0064           		move.w	d4,vdpScrlY+2(a4)
    3410/    1D6A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3411/    1D70 :                     loc_2ABE:
    3412/    1D70 : 3944 0064           		move.w	d4,vdpScrlY+2(a4)
    3413/    1D74 : D87C 0110           		add.w	#$110,d4
    3414/    1D78 : 3944 0062           		move.w	d4,vdpScrlY(a4)
    3415/    1D7C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3416/    1D82 :                     
    3417/    1D82 :                     ; ----------------------------------------------------------------
    3418/    1D82 :                     
    3419/    1D82 :                     loc_2ACC:				; DATA XREF: ROM:000029FEo
    3420/    1D82 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3421/    1D88 :                     ; ----------------------------------------------------------------
    3422/    1D88 :                     
    3423/    1D88 :                     loc_2AD0:
    3424/    1D88 : 382C 0052           		move.w	ppuOamUnk(a4),d4
    3425/    1D8C : 1987 4044           		move.b	d7,ppuOamAddr(a4,d4.w)
    3426/    1D90 : 0A6C 0001 0052      		eori.w	#1,ppuOamUnk(a4)
    3427/    1D96 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3428/    1D9C :                     ; ----------------------------------------------------------------
    3429/    1D9C :                     
    3430/    1D9C :                     loc_2AE2:
    3431/    1D9C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3432/    1DA2 :                     ; ----------------------------------------------------------------
    3433/    1DA2 :                     
    3434/    1DA2 :                     loc_2AE6:
    3435/    1DA2 : 382C 0050           		move.w	ppuAddrLatch(a4),d4
    3436/    1DA6 : 1987 4048           		move.b	d7,ppuAddrBase(a4,d4.w)
    3437/    1DAA : 0A6C 0001 0050      		eori.w	#1,ppuAddrLatch(a4)
    3438/    1DB0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3439/    1DB6 :                     ; ----------------------------------------------------------------
    3440/    1DB6 :                     
    3441/    1DB6 :                     wrPPU_Data:
    3442/    1DB6 : 382C 0048           		move.w	ppuAddrBase(a4),d4
    3443/    1DBA : 3C2C 0046           		move.w	ppuAddrIncr(a4),d6
    3444/    1DBE : DD6C 0048           		add.w	d6,ppuAddrBase(a4)
    3445/    1DC2 : 0244 3FFF           		andi.w	#$3FFF,d4
    3446/    1DC6 : 1787 4000           		move.b	d7,(a3,d4.w)
    3447/    1DCA : 0C44 3F00           		cmpi.w	#$3F00,d4
    3448/    1DCE : 6452                		bcc.s	ppuSetColor
    3449/    1DD0 : 3A04                		move.w	d4,d5
    3450/    1DD2 : 0245 03C0           		andi.w	#$3C0,d5
    3451/    1DD6 : 0C45 03C0           		cmpi.w	#$3C0,d5
    3452/    1DDA : 6600 00F6           		bne.w	ppuDrwCell
    3453/    1DDE : 6000 01BE           		bra.w	ppuDrwCellPal
    3454/    1DE2 :                     ; ----------------------------------------------------------------
    3455/    1DE2 :                     
    3456/    1DE2 :                     ppuVdpIndex:
    3457/    1DE2 : 0000 0002 0004 0006 		dc.w $0000,$0002,$0004,$0006
    3458/    1DEA : 0020 0022 0024 0026 		dc.w $0020,$0022,$0024,$0026
    3459/    1DF2 : 0040 0042 0044 0046 		dc.w $0040,$0042,$0044,$0046
    3460/    1DFA : 0060 0062 0064 0066 		dc.w $0060,$0062,$0064,$0066
    3461/    1E02 : 0010 0012 0014 0016 		dc.w $0010,$0012,$0014,$0016
    3462/    1E0A : 0030 0032 0034 0036 		dc.w $0030,$0032,$0034,$0036
    3463/    1E12 : 0050 0052 0054 0056 		dc.w $0050,$0052,$0054,$0056
    3464/    1E1A : 0070 0072 0074 0076 		dc.w $0070,$0072,$0074,$0076
    3465/    1E22 :                     		align 2
    3466/    1E22 :                     
    3467/    1E22 :                     ppuSetColor:
    3468/    1E22 : 0244 001F           		andi.w	#$1F,d4
    3469/    1E26 : D844                		add.w	d4,d4
    3470/    1E28 : 383B 40B8           		move.w	ppuVdpIndex(pc,d4.w),d4
    3471/    1E2C : 3C04                		move.w	d4,d6
    3472/    1E2E : 3A07                		move.w	d7,d5
    3473/    1E30 : 0205 003F           		andi.b	#$3F,d5
    3474/    1E34 : DA45                		add.w	d5,d5
    3475/    1E36 : 39BB 501A 4066      		move.w	ppuVdpColors(pc,d5.w),vdpPalette(a4,d4.w)
    3476/    1E3C : CC7C 000F           		and.w	#$F,d6
    3477/    1E40 : 660A                		bne.s	.no_bgpal
    3478/    1E42 : 0844 0004           		bchg	#4,d4
    3479/    1E46 : 39BB 500A 4066      		move.w	ppuVdpColors(pc,d5.w),vdpPalette(a4,d4.w)
    3480/    1E4C :                     		
    3481/    1E4C :                     .no_bgpal:
    3482/    1E4C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3483/    1E52 :                     ; ----------------------------------------------------------------
    3484/    1E52 :                     
    3485/    1E52 : 0666                ppuVdpColors:	dc.w $666
    3486/    1E54 : 0820                		dc.w $820
    3487/    1E56 : 0A00                		dc.w $A00
    3488/    1E58 : 0A04                		dc.w $A04
    3489/    1E5A : 0806                		dc.w $806
    3490/    1E5C : 0406                		dc.w $406
    3491/    1E5E : 0006                		dc.w 6
    3492/    1E60 : 0026                		dc.w $26
    3493/    1E62 : 0044                		dc.w $44
    3494/    1E64 : 0040                		dc.w $40
    3495/    1E66 : 0060                		dc.w $60
    3496/    1E68 : 0040                		dc.w $40
    3497/    1E6A : 0440                		dc.w $440
    3498/    1E6C : 0000                		dc.w 0
    3499/    1E6E : 0000                		dc.w 0
    3500/    1E70 : 0000                		dc.w 0
    3501/    1E72 : 0AAA                		dc.w $AAA
    3502/    1E74 : 0E60                		dc.w $E60
    3503/    1E76 : 0E40                		dc.w $E40
    3504/    1E78 : 0E28                		dc.w $E28
    3505/    1E7A : 0C2A                		dc.w $C2A
    3506/    1E7C : 082C                		dc.w $82C
    3507/    1E7E : 024C                		dc.w $24C
    3508/    1E80 : 004A                		dc.w $4A
    3509/    1E82 : 0066                		dc.w $66
    3510/    1E84 : 0084                		dc.w $84
    3511/    1E86 : 00A0                		dc.w $A0
    3512/    1E88 : 0480                		dc.w $480
    3513/    1E8A : 0880                		dc.w $880
    3514/    1E8C : 0000                		dc.w 0
    3515/    1E8E : 0000                		dc.w 0
    3516/    1E90 : 0000                		dc.w 0
    3517/    1E92 : 0EEE                		dc.w $EEE
    3518/    1E94 : 0EC6                		dc.w $EC6
    3519/    1E96 : 0EAA                		dc.w $EAA
    3520/    1E98 : 0E8C                		dc.w $E8C
    3521/    1E9A : 0E6E                		dc.w $E6E
    3522/    1E9C : 0C6E                		dc.w $C6E
    3523/    1E9E : 088E                		dc.w $88E
    3524/    1EA0 : 02AE                		dc.w $2AE
    3525/    1EA2 : 00CC                		dc.w $CC
    3526/    1EA4 : 00E8                		dc.w $E8
    3527/    1EA6 : 04E6                		dc.w $4E6
    3528/    1EA8 : 08E4                		dc.w $8E4
    3529/    1EAA : 0EC4                		dc.w $EC4
    3530/    1EAC : 0444                		dc.w $444
    3531/    1EAE : 0000                		dc.w 0
    3532/    1EB0 : 0000                		dc.w 0
    3533/    1EB2 : 0EEE                		dc.w $EEE
    3534/    1EB4 : 0EEC                		dc.w $EEC
    3535/    1EB6 : 0ECC                		dc.w $ECC
    3536/    1EB8 : 0ECE                		dc.w $ECE
    3537/    1EBA : 0ECE                		dc.w $ECE
    3538/    1EBC : 0ECE                		dc.w $ECE
    3539/    1EBE : 0CCE                		dc.w $CCE
    3540/    1EC0 : 0AEE                		dc.w $AEE
    3541/    1EC2 : 08EE                		dc.w $8EE
    3542/    1EC4 : 0AEC                		dc.w $AEC
    3543/    1EC6 : 08EC                		dc.w $8EC
    3544/    1EC8 : 0CEC                		dc.w $CEC
    3545/    1ECA : 0EEC                		dc.w $EEC
    3546/    1ECC : 0CCC                		dc.w $CCC
    3547/    1ECE : 0000                		dc.w 0
    3548/    1ED0 : 0000                		dc.w 0
    3549/    1ED2 :                     ; ----------------------------------------------------------------
    3550/    1ED2 :                     ; Set Cell character
    3551/    1ED2 :                     
    3552/    1ED2 :                     ppuDrwCell:
    3553/    1ED2 :                     	; d4 - ppu address
    3554/    1ED2 :                     	; d5 - X pos
    3555/    1ED2 :                     	; d6 - Y pos
    3556/    1ED2 :                     	; d7 - cell 0-255
    3557/    1ED2 :                     
    3558/    1ED2 : 3A04                		move.w	d4,d5
    3559/    1ED4 : 3C04                		move.w	d4,d6
    3560/    1ED6 : CA7C 001F           		and.w	#$1F,d5
    3561/    1EDA : CC7C 03E0           		and.w	#$3E0,d6
    3562/    1EDE : DA45                		add.w	d5,d5
    3563/    1EE0 : E54E                		lsl.w	#2,d6
    3564/    1EE2 : DC45                		add.w	d5,d6
    3565/    1EE4 :                     
    3566/    1EE4 : 3A04                		move.w	d4,d5
    3567/    1EE6 : E04D                		lsr.w	#8,d5
    3568/    1EE8 : E44D                		lsr.w	#2,d5
    3569/    1EEA : 0805 0001           		btst	#1,d5
    3570/    1EEE : 6704                		beq.s	.top_lyr
    3571/    1EF0 : DC7C 2000           		add.w	#$2000,d6
    3572/    1EF4 :                     .top_lyr:
    3573/    1EF4 : 0805 0000           		btst	#0,d5
    3574/    1EF8 : 6704                		beq.s	.left_pg
    3575/    1EFA : DC7C 0040           		add.w	#$40,d6
    3576/    1EFE :                     .left_pg:
    3577/    1EFE : CE7C 00FF           		and.w	#$FF,d7
    3578/    1F02 : 8E7C 8000           		or.w	#$8000,d7
    3579/    1F06 :                     		
    3580/    1F06 : 46FC 2700           		move.w	#$2700,sr
    3581/    1F0A : 3D46 0004           		move.w	d6,4(a6)
    3582/    1F0E : 3D7C 0003 0004      		move.w	#3,4(a6)
    3583/    1F14 : 3816                		move.w	(a6),d4
    3584/    1F16 : C87C E000           		and.w	#$E000,d4
    3585/    1F1A : 8847                		or.w	d7,d4
    3586/    1F1C : 8C7C 4000           		or.w	#$4000,d6
    3587/    1F20 : 3D46 0004           		move.w	d6,4(a6)
    3588/    1F24 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3589/    1F2A : 3C84                		move.w	d4,(a6)
    3590/    1F2C : C87C 3FFF           		and.w	#$3FFF,d4
    3591/    1F30 :                     
    3592/    1F30 : 4A6C 0030           		tst.w	ppuMirror(a4)		; check horizontal mirror
    3593/    1F34 : 6634                		bne.s	.vermirror
    3594/    1F36 :                     
    3595/    1F36 : CC7C 3FFF           		and.w	#$3FFF,d6
    3596/    1F3A : 0846 0006           		bchg	#6,d6
    3597/    1F3E : 3D46 0004           		move.w	d6,4(a6)
    3598/    1F42 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3599/    1F48 : 3816                		move.w	(a6),d4
    3600/    1F4A : C87C E000           		and.w	#$E000,d4
    3601/    1F4E : 8847                		or.w	d7,d4
    3602/    1F50 : 8C7C 4000           		or.w	#$4000,d6
    3603/    1F54 : 3D46 0004           		move.w	d6,4(a6)
    3604/    1F58 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3605/    1F5E : 3C84                		move.w	d4,(a6)
    3606/    1F60 : 46FC 2000           		move.w	#$2000,sr
    3607/    1F64 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3608/    1F6A :                     .vermirror:
    3609/    1F6A : CC7C 3FFF           		and.w	#$3FFF,d6
    3610/    1F6E : DC7C 2000           		add.w	#$2000,d6
    3611/    1F72 : 3D46 0004           		move.w	d6,4(a6)
    3612/    1F76 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3613/    1F7C : 3816                		move.w	(a6),d4
    3614/    1F7E : C87C E000           		and.w	#$E000,d4
    3615/    1F82 : 8847                		or.w	d7,d4
    3616/    1F84 : 8C7C 4000           		or.w	#$4000,d6
    3617/    1F88 : 3D46 0004           		move.w	d6,4(a6)
    3618/    1F8C : 3D7C 0003 0004      		move.w	#3,4(a6)
    3619/    1F92 : 3C84                		move.w	d4,(a6)
    3620/    1F94 :                     
    3621/    1F94 : 46FC 2000           		move.w	#$2000,sr
    3622/    1F98 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3623/    1F9E :                     
    3624/    1F9E :                     ; ----------------------------------------------------------------
    3625/    1F9E :                     ; Pick Tile 16x16 color
    3626/    1F9E :                     
    3627/    1F9E :                     ppuDrwCellPal:
    3628/    1F9E :                     	; d4 - Page
    3629/    1F9E :                     	; d5 - X pos
    3630/    1F9E :                     	; d6 - Y pos
    3631/    1F9E :                     	; d7 - attr
    3632/    1F9E : 3A04                		move.w	d4,d5
    3633/    1FA0 : 3C04                		move.w	d4,d6
    3634/    1FA2 : CA7C 0007           		and.w	#%111,d5
    3635/    1FA6 : E74D                		lsl.w	#3,d5
    3636/    1FA8 : CC7C 0038           		and.w	#%111000,d6
    3637/    1FAC : ED4E                		lsl.w	#6,d6
    3638/    1FAE : 4847                		swap	d7
    3639/    1FB0 : 3E04                		move.w	d4,d7
    3640/    1FB2 : CE7C 0C00           		and.w	#$C00,d7
    3641/    1FB6 : E04F                		lsr.w	#8,d7
    3642/    1FB8 : E44F                		lsr.w	#2,d7
    3643/    1FBA : 0807 0001           		btst	#1,d7
    3644/    1FBE : 6704                		beq.s	.top_lyr
    3645/    1FC0 : DC7C 2000           		add.w	#$2000,d6
    3646/    1FC4 :                     .top_lyr:
    3647/    1FC4 : 0807 0000           		btst	#0,d7
    3648/    1FC8 : 6704                		beq.s	.left_pg
    3649/    1FCA : DC7C 0040           		add.w	#$40,d6
    3650/    1FCE :                     .left_pg:
    3651/    1FCE : 4847                		swap	d7
    3652/    1FD0 : 383C 0000           		move.w	#$0000,d4
    3653/    1FD4 : D846                		add.w	d6,d4
    3654/    1FD6 : D845                		add.w	d5,d4
    3655/    1FD8 :                     
    3656/    1FD8 :                     	; d4 - VDP address
    3657/    1FD8 :                     	; d5 - Palette bits
    3658/    1FD8 : 4847                		swap	d7
    3659/    1FDA : 3E04                		move.w	d4,d7
    3660/    1FDC : 4847                		swap	d7
    3661/    1FDE : 612A                		bsr.s	.make_attr
    3662/    1FE0 : 4A6C 0030           		tst.w	ppuMirror(a4)		; check horizontal mirror
    3663/    1FE4 : 6612                		bne	.vert_mirr
    3664/    1FE6 : 4847                		swap	d7
    3665/    1FE8 : 3807                		move.w	d7,d4
    3666/    1FEA : 4847                		swap	d7
    3667/    1FEC : D87C 0040           		add.w	#$40,d4
    3668/    1FF0 : 6118                		bsr.s	.make_attr
    3669/    1FF2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3670/    1FF8 :                     .vert_mirr:
    3671/    1FF8 : 4847                		swap	d7
    3672/    1FFA : 3807                		move.w	d7,d4
    3673/    1FFC : 4847                		swap	d7
    3674/    1FFE : D87C 2000           		add.w	#$2000,d4
    3675/    2002 : 6106                		bsr.s	.make_attr
    3676/    2004 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3677/    200A :                     
    3678/    200A :                     ; ----------------------------------------------------------------
    3679/    200A :                     ; d4 - VDP plane pos
    3680/    200A :                     ; d7 - pal bits
    3681/    200A :                     
    3682/    200A :                     .make_attr:
    3683/    200A : 7A00                		moveq	#0,d5			; TL
    3684/    200C : 1A07                		move.b	d7,d5
    3685/    200E : CA7C 0003           		and.w	#%11,d5
    3686/    2012 : E14D                		lsl.w	#8,d5
    3687/    2014 : EB4D                		lsl.w	#5,d5
    3688/    2016 : 4845                		swap	d5
    3689/    2018 : 1A07                		move.b	d7,d5
    3690/    201A : CA7C 0003           		and.w	#%11,d5
    3691/    201E : E14D                		lsl.w	#8,d5
    3692/    2020 : EB4D                		lsl.w	#5,d5
    3693/    2022 : 6158                		bsr	.pick_color
    3694/    2024 : D87C 0004           		add.w	#4,d4			; TR
    3695/    2028 : 7A00                		moveq	#0,d5
    3696/    202A : 1A07                		move.b	d7,d5
    3697/    202C : CA7C 000C           		and.w	#%1100,d5
    3698/    2030 : E14D                		lsl.w	#8,d5
    3699/    2032 : E74D                		lsl.w	#3,d5
    3700/    2034 : 4845                		swap	d5
    3701/    2036 : 1A07                		move.b	d7,d5
    3702/    2038 : CA7C 000C           		and.w	#%1100,d5
    3703/    203C : E14D                		lsl.w	#8,d5
    3704/    203E : E74D                		lsl.w	#3,d5
    3705/    2040 : 613A                		bsr	.pick_color
    3706/    2042 : 987C 0004           		sub.w	#4,d4			; BL
    3707/    2046 : D87C 0100           		add.w	#$100,d4
    3708/    204A : 7A00                		moveq	#0,d5
    3709/    204C : 1A07                		move.b	d7,d5
    3710/    204E : CA7C 0030           		and.w	#%110000,d5
    3711/    2052 : E14D                		lsl.w	#8,d5
    3712/    2054 : E34D                		lsl.w	#1,d5
    3713/    2056 : 4845                		swap	d5
    3714/    2058 : 1A07                		move.b	d7,d5
    3715/    205A : CA7C 0030           		and.w	#%110000,d5
    3716/    205E : E14D                		lsl.w	#8,d5
    3717/    2060 : E34D                		lsl.w	#1,d5
    3718/    2062 : 6118                		bsr	.pick_color
    3719/    2064 : D87C 0004           		add.w	#4,d4			; BR
    3720/    2068 : 7A00                		moveq	#0,d5
    3721/    206A : 1A07                		move.b	d7,d5
    3722/    206C : CA7C 00C0           		and.w	#%11000000,d5
    3723/    2070 : EF4D                		lsl.w	#7,d5
    3724/    2072 : 4845                		swap	d5
    3725/    2074 : 1A07                		move.b	d7,d5
    3726/    2076 : CA7C 00C0           		and.w	#%11000000,d5
    3727/    207A : EF4D                		lsl.w	#7,d5
    3728/    207C :                     ; 		bsr	.pick_color
    3729/    207C :                     
    3730/    207C :                     .pick_color:
    3731/    207C : 46FC 2700           		move.w	#$2700,sr
    3732/    2080 : 3D44 0004           		move.w	d4,4(a6)
    3733/    2084 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3734/    208A : 2C16                		move.l	(a6),d6
    3735/    208C : CCBC 9FFF 9FFF      		and.l	#$9FFF9FFF,d6
    3736/    2092 : 8C85                		or.l	d5,d6
    3737/    2094 : 887C 4000           		or.w	#$4000,d4
    3738/    2098 : 3D44 0004           		move.w	d4,4(a6)
    3739/    209C : 3D7C 0003 0004      		move.w	#3,4(a6)
    3740/    20A2 : 2C86                		move.l	d6,(a6)
    3741/    20A4 : C87C 3FFF           		and.w	#$3FFF,d4
    3742/    20A8 : D87C 0080           		add.w	#$80,d4
    3743/    20AC : 3D44 0004           		move.w	d4,4(a6)
    3744/    20B0 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3745/    20B6 : 2C16                		move.l	(a6),d6
    3746/    20B8 : CCBC 9FFF 9FFF      		and.l	#$9FFF9FFF,d6
    3747/    20BE : 8C85                		or.l	d5,d6
    3748/    20C0 : 887C 4000           		or.w	#$4000,d4
    3749/    20C4 : 3D44 0004           		move.w	d4,4(a6)
    3750/    20C8 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3751/    20CE : 2C86                		move.l	d6,(a6)
    3752/    20D0 : C87C 3FFF           		and.w	#$3FFF,d4
    3753/    20D4 : 987C 0080           		sub.w	#$80,d4
    3754/    20D8 : 46FC 2000           		move.w	#$2000,sr
    3755/    20DC : 4E75                		rts
    3756/    20DE :                     
    3757/    20DE :                     ; =============== S U B	R O U T	I N E =======================================
    3758/    20DE :                     
    3759/    20DE :                     
    3760/    20DE :                     romGrabPrg:
    3761/    20DE : 49E8 0010           		lea	$10(a0),a4
    3762/    20E2 : 0C07 0001           		cmpi.b	#1,d7
    3763/    20E6 : 6700 000C           		beq.w	loc_29C0
    3764/    20EA : 0C07 0002           		cmpi.b	#2,d7
    3765/    20EE : 6700 0022           		beq.w	loc_29D8
    3766/    20F2 : 4E42                		trap	#2
    3767/    20F4 :                     ; ----------------------------------------------------------------
    3768/    20F4 :                     loc_29C0:
    3769/    20F4 : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3770/    20FA : 47F9 FFFF 4000      		lea	(RAM_Fami_ROM+$4000).l,a3
    3771/    2100 : 2E3C 0000 0FFF      		move.l	#$FFF,d7
    3772/    2106 :                     .rom_1:
    3773/    2106 : 261C                		move.l	(a4)+,d3
    3774/    2108 : 2AC3                		move.l	d3,(a5)+
    3775/    210A : 26C3                		move.l	d3,(a3)+
    3776/    210C : 51CF FFF8           		dbf	d7,.rom_1
    3777/    2110 : 4E75                		rts
    3778/    2112 :                     ; ----------------------------------------------------------------
    3779/    2112 :                     
    3780/    2112 :                     loc_29D8:
    3781/    2112 : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3782/    2118 : 2E3C 0000 1FFF      		move.l	#$1FFF,d7
    3783/    211E :                     loc_29E2:
    3784/    211E : 2ADC                		move.l	(a4)+,(a5)+
    3785/    2120 : 51CF FFFC           		dbf	d7,loc_29E2
    3786/    2124 : 4E75                		rts
    3787/    2126 :                     
    3788/    2126 :                     ; =============== S U B	R O U T	I N E =======================================
    3789/    2126 :                     
    3790/    2126 :                     ; a6 - $C00000
    3791/    2126 :                     ; a4 - RAM_Fami_Emu
    3792/    2126 :                     
    3793/    2126 :                     Nemul_LoadChr:
    3794/    2126 : 46FC 2700           		move.w	#$2700,sr
    3795/    212A : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
    3796/    2130 : 2D7C 4000 0000 0004 		move.l	#$40000000,4(a6)
    3797/    2138 : 7A00                		moveq	#0,d5
    3798/    213A : 3C2C 0042           		move.w	ppuChrBank(a4),d6
    3799/    213E : 6100 0014           		bsr.w	.make_chr
    3800/    2142 : 7A08                		moveq	#8,d5
    3801/    2144 : 3C2C 0042           		move.w	ppuChrBank(a4),d6
    3802/    2148 : E30E                		lsl.b	#1,d6
    3803/    214A : 6100 0008           		bsr.w	.make_chr
    3804/    214E : 46FC 2000           		move.w	#$2000,sr
    3805/    2152 : 4E75                		rts
    3806/    2154 :                     
    3807/    2154 :                     .make_chr:
    3808/    2154 : 2A4B                		movea.l	a3,a5
    3809/    2156 : E30E                		lsl.b	#1,d6
    3810/    2158 : 6406                		bcc.s	loc_8DBA
    3811/    215A : DBFC 0000 1000      		adda.l	#$1000,a5
    3812/    2160 :                     loc_8DBA:
    3813/    2160 : 48E7 FF00           		movem.l	d0-d2/d3-d7,-(sp)
    3814/    2164 : 2E3C 0000 00FF      		move.l	#$FF,d7
    3815/    216A :                     loc_8DC4:
    3816/    216A : 7607                		moveq	#7,d3
    3817/    216C :                     loc_8DC6:
    3818/    216C : 1215                		move.b	(a5),d1
    3819/    216E : 142D 0008           		move.b	8(a5),d2
    3820/    2172 : 7000                		moveq	#0,d0
    3821/    2174 : 7C07                		moveq	#7,d6
    3822/    2176 :                     loc_8DD0:
    3823/    2176 : D402                		add.b	d2,d2
    3824/    2178 : D140                		addx.w	d0,d0
    3825/    217A : D201                		add.b	d1,d1
    3826/    217C : D140                		addx.w	d0,d0
    3827/    217E : 51CE FFF6           		dbf	d6,loc_8DD0
    3828/    2182 : 7800                		moveq	#0,d4
    3829/    2184 : 7C07                		moveq	#7,d6
    3830/    2186 :                     loc_8DE0:
    3831/    2186 : 1200                		move.b	d0,d1
    3832/    2188 : E448                		lsr.w	#2,d0
    3833/    218A : 0281 0000 0003      		andi.l	#3,d1
    3834/    2190 : 6702                		beq.s	loc_8DEE
    3835/    2192 : 8205                		or.b	d5,d1
    3836/    2194 :                     loc_8DEE:
    3837/    2194 : 8801                		or.b	d1,d4
    3838/    2196 : E89C                		ror.l	#4,d4
    3839/    2198 : 51CE FFEC           		dbf	d6,loc_8DE0
    3840/    219C : 2C84                		move.l	d4,(a6)
    3841/    219E : 528D                		addq.l	#1,a5
    3842/    21A0 : 51CB FFCA           		dbf	d3,loc_8DC6
    3843/    21A4 : 508D                		addq.l	#8,a5
    3844/    21A6 : 51CF FFC2           		dbf	d7,loc_8DC4
    3845/    21AA : 4CDF 00FF           		movem.l	(sp)+,d0-d2/d3-d7
    3846/    21AE :                     return_8E08:
    3847/    21AE : 4E75                		rts
    3848/    21B0 :                     
    3849/    21B0 :                     ; ====================================================================
    3850/    21B0 :                     
    3851/    21B0 :                     		align $8000
    3852/    8000 :                     EndOfRom:
    3853/    8000 :                     
    3854/    8000 :                     ; ====================================================================
    3855/    8000 :                     ; ----------------------------------------------------------------
    3856/    8000 :                     ; ROM are here
    3857/    8000 :                     ; ----------------------------------------------------------------
    3858/    8000 :                     
    3859/    8000 :                     ROM_FILE:	binclude "roms/nestest.nes"
    3860/    E010 :                     
 AS V1.42 Beta [Bld 118] - source file md.asm - page 2 - 4/13/2021 19:48:59


  symbol table (* = unused):
  ------------------------

 ADDR_READ :                   1A14 C |  ADDR_WRITE :                  1AF4 C |
 APU_INPUT :                   1BA6 C |  APU_INPUT_1 :                 1A5A C |
 APU_INPUT_2 :                 1A68 C |  APU_NULL :                    1BA0 C |
 APU_OAMDMA :                  1C06 C |  APU_OAMDMA.LP_SPRNORMAL :     1C28 C |
*APU_RD_NULL :                 1A54 C |
*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BITDISPENBL :                    6 - |
*BITDMA :                         1 - | *BITDMAENBL :                     4 - |
*BITHINT :                        2 - | *BITHINTENBL :                    4 - |
*BITHVSTOP :                      1 - | *BITJOYA :                        6 - |
*BITJOYB :                        4 - | *BITJOYC :                        5 - |
*BITJOYDOWN :                     1 - | *BITJOYLEFT :                     2 - |
*BITJOYMODE :                     3 - | *BITJOYRIGHT :                    3 - |
*BITJOYSTART :                    7 - | *BITJOYUP :                       0 - |
*BITJOYX :                        2 - | *BITJOYY :                        1 - |
*BITJOYZ :                        0 - | *BITV30 :                         3 - |
*BITVINT :                        3 - | *BITVINTENBL :                    5 - |
*BRANCHEXT :                      0 - |  BYTE_910 :                     34E C |
*CASESENSITIVE :                  0 - |  CLRSTACK :                     244 C |
*CONSTPI :        3.141592653589793 - |  CPUENTRY :                    7FFC - |
 CPUFAMIVINT :                   34 C |  CPUFLAG2 :                      3C C |
 CPUINPUTDATA :                  36 C |  CPUIRQ :                      7FFE - |
 CPUMAPPER :                     32 C |  CPUMODEDEC :                    3A C |
 CPUMODEINTDIS :                 3E C |  CPUNMI :                      7FFA - |
*CPUSPRHINT :                    2A C | *DATE :                   4/13/2021 - |
*DISPENBL :                      40 - | *DMAENBL :                       10 - |
*DOTTEDSTRUCTS :                  0 - | *DOVINT :                       588 C |
 EMUCHRROM :                      4 C |  EMULOOP :                      55E C |
 EMUPRGROM :                      0 C |  EMUSTART :                     4E6 C |
 EMUSTART.CLRRAM :              4F0 C |  EMUVINT :                      564 C |
 ENDOFROM :                    8000 C | *FALSE :                          0 - |
 FAMIMDVINT :                    5A C |  FAMIPPUVINT :                   5C C |
 FAMIVINT :                     572 C | *FAMIVINTSAVE :                   8 C |
*FAMIVINTSAVE2 :                 28 C |  FAMI_INITVIDEO :               2B6 C |
 FAMI_INITVIDEO.LOOPBG :        2DC C |  FAMI_INITVIDEO.LOOPFG :        2C8 C |
 FAMI_LOADROM :                 454 C |  FAMI_LOADROM.CLRRAM :          46A C |
 FAMI_LOADROM.CLRVRAM :         47C C | *FULLPMMU :                       1 - |
 GLBL_LASTORG :                   0 - |  GLBL_LASTPC :                    0 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*HINTENBL :                      10 - | *HVSTOP :                         2 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - | *JOYA :                          40 - |
*JOYB :                          10 - | *JOYC :                          20 - |
*JOYDOWN :                        2 - | *JOYLEFT :                        4 - |
*JOYMODE :                      800 - | *JOYRIGHT :                       8 - |
*JOYSTART :                      80 - | *JOYUP :                          1 - |
*JOYX :                         400 - | *JOYY :                         200 - |
*JOYZ :                         100 - | *LISTON :                         3 - |
 LIST_INITREGS :                26E C |  LOC_1002 :                     9C8 C |
 LOC_1030 :                     9FA C |  LOC_1042 :                     A0E C |
 LOC_1060 :                     A2E C |  LOC_1080 :                     A50 C |
 LOC_10A2 :                     A74 C |  LOC_10C6 :                     A9A C |
 LOC_10D0 :                     AA4 C |  LOC_10D4 :                     AAA C |
 LOC_10DE :                     AB4 C |  LOC_10E2 :                     ABA C |
 LOC_10EC :                     AC4 C |  LOC_10F0 :                     ACA C |
 LOC_1106 :                     AE0 C |  LOC_110E :                     AE8 C |
 LOC_1116 :                     AF0 C |  LOC_111A :                     AF6 C |
 LOC_1136 :                     B10 C |  LOC_113E :                     B18 C |
 LOC_1146 :                     B20 C |  LOC_114A :                     B26 C |
 LOC_1154 :                     B30 C |  LOC_1158 :                     B36 C |
 LOC_1162 :                     B40 C |  LOC_1166 :                     B46 C |
 LOC_1170 :                     B50 C |  LOC_118E :                     B7A C |
 LOC_1198 :                     B84 C |  LOC_119C :                     B8A C |
 LOC_11A6 :                     B94 C |  LOC_11AA :                     B9A C |
 LOC_11B2 :                     BA4 C |  LOC_11BC :                     BB0 C |
 LOC_11C6 :                     BBC C |  LOC_11CE :                     BC6 C |
 LOC_11EE :                     BE8 C |  LOC_1214 :                     C10 C |
 LOC_123C :                     C3A C |  LOC_1268 :                     C66 C |
 LOC_129A :                     C98 C |  LOC_12CC :                     CCA C |
 LOC_1302 :                     D04 C |  LOC_133C :                     D42 C |
 LOC_135C :                     D64 C |  LOC_1382 :                     D8C C |
 LOC_13AE :                     DB8 C |  LOC_13CE :                     DDA C |
 LOC_13F4 :                     E02 C |  LOC_1420 :                     E2E C |
 LOC_1438 :                     E48 C |  LOC_1452 :                     E64 C |
 LOC_146E :                     E82 C |  LOC_148C :                     EA2 C |
 LOC_149E :                     EB6 C |  LOC_14B0 :                     ECA C |
 LOC_14C4 :                     EE0 C |  LOC_14DE :                     EFC C |
 LOC_14FA :                     F1A C |  LOC_151A :                     F3A C |
 LOC_1540 :                     F60 C |  LOC_1566 :                     F86 C |
 LOC_1590 :                     FB4 C |  LOC_15BE :                     FE6 C |
 LOC_15D3 :                    1000 C |  LOC_15F0 :                    101C C |
 LOC_160C :                    103A C |  LOC_162A :                    105A C |
 LOC_163C :                    106E C |  LOC_164E :                    1082 C |
 LOC_1660 :                    109C C |  LOC_1660.TO_ROM :             10C4 C |
 LOC_167C :                    10D4 C |  LOC_1686 :                    10DE C |
 LOC_16A4 :                    1108 C |  LOC_16B6 :                    111C C |
 LOC_16CE :                    1136 C |  LOC_16E8 :                    1152 C |
 LOC_1708 :                    1172 C |  LOC_172E :                    1198 C |
 LOC_1754 :                    11BE C |  LOC_177E :                    11EC C |
 LOC_17AC :                    121E C |  LOC_17BE :                    1232 C |
 LOC_17D3 :                    124C C |  LOC_17F0 :                    1268 C |
 LOC_1810 :                    1288 C |  LOC_1836 :                    12AE C |
 LOC_1848 :                    12C2 C |  LOC_1860 :                    12DC C |
 LOC_187A :                    12F8 C |  LOC_189A :                    1318 C |
 LOC_18C0 :                    133E C |  LOC_18D2 :                    1352 C |
 LOC_18F0 :                    1372 C |  LOC_1910 :                    1394 C |
 LOC_1932 :                    13B8 C |  LOC_1956 :                    13DE C |
 LOC_195C :                    13E6 C |  LOC_1970 :                    13FC C |
 LOC_198A :                    1418 C |  LOC_19A6 :                    1436 C |
 LOC_19C6 :                    1456 C |  LOC_19EC :                    147C C |
 LOC_1A12 :                    14A2 C |  LOC_1A3C :                    14D0 C |
 LOC_1A6A :                    1502 C |  LOC_1A78 :                    1512 C |
 LOC_1A88 :                    1526 C |  LOC_1AA6 :                    1546 C |
 LOC_1AB6 :                    155A C |  LOC_1ACA :                    1570 C |
 LOC_1AEA :                    1592 C |  LOC_1B0C :                    15B6 C |
 LOC_1B30 :                    15DC C |  LOC_1B56 :                    1604 C |
 LOC_1B6A :                    161A C |  LOC_1B8A :                    163C C |
 LOC_1BAC :                    1660 C |  LOC_1BD0 :                    1686 C |
 LOC_1BF6 :                    16AE C |  LOC_1BF6.NONINT :             16F2 C |
 LOC_1C32 :                    1720 C |  LOC_1C52 :                    1748 C |
 LOC_1C6A :                    1762 C |  LOC_1C88 :                    1782 C |
 LOC_1CA8 :                    17A4 C |  LOC_1CCC :                    17C8 C |
 LOC_1CF6 :                    17F2 C |  LOC_1D20 :                    181C C |
 LOC_1D4E :                    184E C |  LOC_1D80 :                    1884 C |
 LOC_1D88 :                    188E C |  LOC_1D92 :                    189A C |
 LOC_1D9C :                    18A6 C |  LOC_1DA8 :                    18B4 C |
 LOC_1DB6 :                    18C4 C |  LOC_1DCA :                    18D8 C |
 LOC_1DE0 :                    18EC C |  LOC_1DF6 :                    1900 C |
 LOC_1E10 :                    191C C |  LOC_1E2E :                    193C C |
 LOC_1E3A :                    194A C |  LOC_1E48 :                    195A C |
 LOC_1E5C :                    196E C |  LOC_1E68 :                    197C C |
 LOC_1E76 :                    198C C |  LOC_1E8A :                    19A0 C |
 LOC_1E9C :                    19B4 C |  LOC_1EAE :                    19C8 C |
 LOC_1EC4 :                    19E0 C |  LOC_1ED3 :                    19F4 C |
 LOC_1EE0 :                    1A00 C |  LOC_210 :                      214 C |
 LOC_23A6 :                    1A56 C |  LOC_23F4 :                    1A94 C |
 LOC_270 :                      26A C |  LOC_29C0 :                    20F4 C |
 LOC_29C0.ROM_1 :              2106 C |  LOC_29D8 :                    2112 C |
 LOC_29E2 :                    211E C |  LOC_2A16 :                    1C8E C |
 LOC_2A16.NOVINTFLAG :         1C98 C |  LOC_2A2C :                    1CA6 C |
 LOC_2A2C.NO_RELOAD :          1CBE C |  LOC_2A2C.NRML_INCR :          1CC6 C |
 LOC_2A5E :                    1CD8 C |  LOC_2A5E.HIDEBG :             1CF4 C |
 LOC_2A5E.HIDESP :             1D00 C |  LOC_2A5E.HIDE_BG :            1D1C C |
 LOC_2AA4 :                    1D58 C |  LOC_2ABE :                    1D70 C |
 LOC_2ACC :                    1D82 C |  LOC_2AD0 :                    1D88 C |
 LOC_2AE2 :                    1D9C C |  LOC_2AE6 :                    1DA2 C |
 LOC_51E :                      30A C |  LOC_8DA :                      318 C |
 LOC_8DBA :                    2160 C |  LOC_8DC4 :                    216A C |
 LOC_8DC6 :                    216C C |  LOC_8DD0 :                    2176 C |
 LOC_8DE0 :                    2186 C |  LOC_8DEE :                    2194 C |
 LOC_8E0 :                      31E C |  LOC_8F0 :                      32E C |
 LOC_904 :                      342 C |  LOC_9F4 :                      4C4 C |
 LOC_A10 :                      4D8 C |  LOC_E34 :                      7E2 C |
 LOC_E44 :                      7F4 C |  LOC_E5A :                      80C C |
 LOC_E72 :                      826 C |  LOC_E8E :                      842 C |
 LOC_EB0 :                      864 C |  LOC_ED2 :                      886 C |
 LOC_EF8 :                      8B0 C |  LOC_F22 :                      8DE C |
 LOC_F36 :                      8F4 C |  LOC_F50 :                      910 C |
 LOC_F6C :                      92E C |  LOC_F8C :                      94E C |
 LOC_FB2 :                      974 C |  LOC_FD8 :                      99A C |
*MACEXP :                         7 - | *MARS :                           0 - |
*MARSCD :                         0 - | *MCD :                            0 - |
*MD_BANK_SRAM :              A130F1 - |  MD_ENTRY :                     202 C |
 MD_ERROR :                     200 C |  MD_HINT :                      452 C |
 MD_INIT :                      362 C |  MD_INIT.WAIT :                 382 C |
*MD_MARS_ID :                A130EC - |  MD_VINT :                      3AE C |
 MD_VINT.WAIT :                 3F8 C |  MD_VINT.WAIT2 :                42E C |
*MOMCPU :                     68000 - | *MOMCPUNAME :                 68000 - |
 MOSCPU :                       5DE C |  MOS_BRK :                      B56 C |
 MOS_NULL :                     7DE C |  NEMUL_LOADCHR :               2126 C |
 NEMUL_LOADCHR.MAKE_CHR :      2154 C | *NESTMAX :                      100 - |
 OFF_23D4 :                    1A84 C |  OFF_2866 :                    1B60 C |
 OFF_29F6 :                    1C7E C |  OLD_MD :                       23E C |
*PACKING :                        0 - | *PADDING :                        0 - |
*PADDINGSOFAR :                   0 - |  PPUADDRBASE :                   48 C |
 PPUADDRINCR :                   46 C |  PPUADDRLATCH :                  50 C |
 PPUCHRBANK :                    42 C |  PPUDATALAST :                   4A C |
 PPUDRWCELL :                  1ED2 C |  PPUDRWCELL.LEFT_PG :          1EFE C |
 PPUDRWCELL.TOP_LYR :          1EF4 C |  PPUDRWCELL.VERMIRROR :        1F6A C |
 PPUDRWCELLPAL :               1F9E C |  PPUDRWCELLPAL.LEFT_PG :       1FCE C |
 PPUDRWCELLPAL.MAKE_ATTR :     200A C |  PPUDRWCELLPAL.PICK_COLOR :    207C C |
 PPUDRWCELLPAL.TOP_LYR :       1FC4 C |  PPUDRWCELLPAL.VERT_MIRR :     1FF8 C |
 PPUMIRROR :                     30 C |  PPUNMIFLAG :                    54 C |
 PPUNTBLBASE :                   40 C |  PPUOAMADDR :                    44 C |
 PPUOAMUNK :                     52 C |  PPUSETCOLOR :                 1E22 C |
 PPUSETCOLOR.NO_BGPAL :        1E4C C |  PPUSP0YPOS :                    4E C |
 PPUSPRWIDE :                    4C C |  PPUSTATUS :                     56 C |
 PPUVDPCOLORS :                1E52 C |  PPUVDPINDEX :                 1DE2 C |
*PSG_CTRL :                  C00011 - |  RAM_EMULOOP :     FFFFFFFFFFFF8FF0 C |
 RAM_FAMI_EMU :            FFFF8000 - |  RAM_FAMI_PPU :            FFFFA000 - |
 RAM_FAMI_RAM :            FFFF9000 - |  RAM_FAMI_ROM :            FFFF0000 - |
 RDFROM_APU :                  1A40 C |  RDFROM_PPU :                  1A76 C |
 RDFROM_PRG :                  1A32 C | *RDFROM_RAM :                  1A24 C |
 RDPPU_DATA :                  1ADC C |  RDPPU_STATUS :                1A9A C |
 RDPPU_STATUS.SETSPRON :       1AC2 C |  READINPUT :                   1BB2 C |
 READINPUT.THIS_PAD :          1BC8 C | *RELAXED :                        0 - |
 RETURN_2418 :                 1AC6 C |  RETURN_2418.NOVFLAG :         1AD4 C |
 RETURN_241A :                 1ADA C | *RETURN_8E08 :                 21AE C |
 ROMGRABPRG :                  20DE C |  ROM_FILE :                    8000 C |
 SOUND_LOADZ80 :                314 C |  SOUND_PSGINIT :                32C C |
*SYSCD_ARGS_M :              A12010 - | *SYSCD_ARGS_S :              A12020 - |
*SYSCD_BUS :                 A12000 - | *SYSCD_CDCHOST :             A12008 - |
*SYSCD_CDCMODE :             A12004 - | *SYSCD_COMM_M :              A1200E - |
*SYSCD_COMM_S :              A1200F - | *SYSCD_HINT :                A12006 - |
*SYSCD_MEMORY :              A12003 - | *SYSCD_PRGRAM :               20000 - |
*SYSCD_STOPWTCH :            A12008 - | *SYSCD_WORDRAM :             200000 - |
*SYS_CTRL_1 :                A10009 - | *SYS_CTRL_2 :                A1000B - |
*SYS_CTRL_3 :                A1000D - | *SYS_DATA_1 :                A10003 - |
*SYS_DATA_2 :                A10005 - | *SYS_DATA_3 :                A10007 - |
*SYS_EXRAM :                 200000 - | *SYS_IO :                    A10001 - |
*SYS_TMSS :                  A14000 - | *TIME :                    19:48:59 - |
*TRUE :                           1 - | *VARNULLVRAM :                  7FF - |
 VDPHINTSP0 :                    58 C |  VDPPALETTE :                    66 C |
 VDPREG00 :                      2C C |  VDPREG01 :                      2E C |
 VDPSCRLX :                      5E C |  VDPSCRLY :                      62 C |
 VDPSPRDATA :                    E6 C | *VDP_CTRL :                  C00004 - |
*VDP_DATA :                  C00000 - | *VDP_PALETTE :             C0000000 - |
*VDP_VSRAM :               40000010 - | *VERSION :                     142F - |
 VIDEO_INIT :                   33A C | *VINTENBL :                      20 - |
 WRPPU_DATA :                  1DB6 C |  WRPPU_SCROLL :                1D2E C |
 WRTO_APU :                    1B50 C |  WRTO_PPU :                    1C70 C |
 WRTO_PRG :                    1B18 C |  WRTO_PRG.COPYCHR :            1B3E C |
 WRTO_PRG.MAPPER_3 :           1B26 C | *WRTO_RAM :                    1B06 C |
*YM_CTRL_1 :                 A04000 - | *YM_CTRL_2 :                 A04002 - |
*YM_DATA_1 :                 A04001 - | *YM_DATA_2 :                 A04003 - |
 Z80_BUS :                   A11100 - | *Z80_CPU :                   A00000 - |
 Z80_RESET :                 A11200 - | *ZBANK :                       6000 - |
*ZPSG_CTRL :                   7F11 - | *ZVDP_CTRL :                   7F04 - |
*ZVDP_DATA :                   7F00 - | *ZYM_CTRL_1 :                  4000 - |
*ZYM_CTRL_2 :                  4002 - | *ZYM_DATA_1 :                  4001 - |
*ZYM_DATA_2 :                  4003 - |

    443 symbols
    121 unused symbols

 AS V1.42 Beta [Bld 118] - source file md.asm - page 3 - 4/13/2021 19:48:59


  defined macros:
  ---------------

FINISH                                | ISO_FILE                             
ISO_SETFS                             | ORG                                  
ROMPAD                                | STRUCT                               

      6 macros

 AS V1.42 Beta [Bld 118] - source file md.asm - page 4 - 4/13/2021 19:48:59


  defined functions:
  ------------------

NOTZ80                                | LOCATE                               
MAPSIZE                               | DOUBLEWORD                           
M68K_ADDR                             |

 AS V1.42 Beta [Bld 118] - source file md.asm - page 5 - 4/13/2021 19:48:59


  codepages:
  ----------

STANDARD (0 changed characters)


0.02 seconds assembly time

   4169 lines source file
   4181 lines incl. macro expansions
      3 passes
      0 errors
      0 warnings
