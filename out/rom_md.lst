 AS V1.42 Beta [Bld 118] - source file md.asm - page 1 - 10/12/2020 19:48:25


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; FamiDrive beta
       4/       0 :                     ; 
       5/       0 :                     ; A Modification of Nemul by Mairtrus
       6/       0 :                     ; (credit him for his original attempt)
       7/       0 :                     ; 
       8/       0 :                     ; Fixed stuff, now works on real hardware
       9/       0 :                     ; +-----------------------------------------------------------------+
      10/       0 :                     
      11/       0 :                     		include	"system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; --------------------------------------------------------
(1)    7/       0 :                     ; AS Main settings
(1)    8/       0 :                     ; --------------------------------------------------------
(1)    9/       0 :                     
(1)   10/       0 :                     		!org 0				; Start at 0
(1)   11/       0 :                     		cpu 		68000		; BASE CPU is 68k (manually changed later)
(1)   12/       0 :                     		padding		off		; Dont pad dc.b
(1)   13/       0 :                     		listing 	purecode	; Want listing file, but only the final code in expanded macros
(1)   14/       0 :                     		supmode 	on 		; Supervisor mode
(1)   15/       0 :                     		dottedstructs	off		; If needed
(1)   16/       0 :                     		page 		0
(1)   17/       0 :                     
(1)   18/       0 :                     ; ====================================================================
(1)   19/       0 :                     ; ---------------------------------------------
(1)   20/       0 :                     ; Functions
(1)   21/       0 :                     ; ---------------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     ; Fix (address).w
(1)   24/       0 :                     m68k_addr 	function x,-(-x)&$FFFFFFFF					; Allow usage of negative addresses as .w
(1)   25/       0 :                     doubleword 	function l,r,(l<<16&$FFFF0000|r&$FFFF)				; LLLL RRRR
(1)   26/       0 :                     
(1)   27/       0 :                     mapsize		function l,r,( ((l-1)/8)<<16&$FFFF0000|((r-1)/8)&$FFFF )	; for cell w/h use doubleword
(1)   28/       0 :                     locate		function a,b,c,(c&$FF)|(b<<8&$FF00)|(a<<16&$FF0000)		; Layer|X pos|Y pos for some video routines
(1)   29/       0 :                     
(1)   30/       0 :                     ; ====================================================================
(1)   31/       0 :                     ; ---------------------------------------------
(1)   32/       0 :                     ; Macros
(1)   33/       0 :                     ; ---------------------------------------------
(1)   34/       0 :                     
(1)   35/       0 :                     ; -------------------------------------
(1)   36/       0 :                     ; Reserve memory space
(1)   37/       0 :                     ; -------------------------------------
(1)   38/       0 :                     
(1)   39/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   40/       0 :                     GLBL_LASTPC	set *
(1)   41/       0 :                     		dephase
(1)   42/       0 :                     GLBL_LASTORG	set *
(1)   43/       0 :                     		phase thisinput
(1)   44/       0 :                     		endm
(1)   45/       0 :                     		
(1)   46/       0 :                     ; -------------------------------------
(1)   47/       0 :                     ; Finish
(1)   48/       0 :                     ; -------------------------------------
(1)   49/       0 :                     
(1)   50/       0 :                     finish		macro				; Then finish
(1)   51/       0 :                     		!org GLBL_LASTORG
(1)   52/       0 :                     		phase GLBL_LASTPC
(1)   53/       0 :                     		endm
(1)   54/       0 :                     
(1)   55/       0 :                     ; -------------------------------------
(1)   56/       0 :                     ; ZERO Fill padding
(1)   57/       0 :                     ; -------------------------------------
(1)   58/       0 :                     
(1)   59/       0 :                     rompad		macro address			; Zero fill
(1)   60/       0 :                     diff := address - *
(1)   61/       0 :                     		if diff < 0
(1)   62/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   63/       0 :                     		else
(1)   64/       0 :                     			while diff > 1024
(1)   65/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   66/       0 :                     				dc.b [1024]0
(1)   67/       0 :                     diff := diff - 1024
(1)   68/       0 :                     			endm
(1)   69/       0 :                     			dc.b [diff]0
(1)   70/       0 :                     		endif
(1)   71/       0 :                     	endm
(1)   72/       0 :                     	
(1)   73/       0 :                     ; -------------------------------------
(1)   74/       0 :                     ; ORG
(1)   75/       0 :                     ;
(1)   76/       0 :                     ; (from s2disasm)
(1)   77/       0 :                     ; -------------------------------------
(1)   78/       0 :                     
(1)   79/       0 : =$0                 paddingSoFar set 0
(1)   80/       0 :                     ; 128 = 80h = z80, 32988 = 80DCh = z80unDoC 
(1)   81/       0 :                     notZ80 function cpu,(cpu<>128)&&(cpu<>32988)
(1)   82/       0 :                     
(1)   83/       0 :                     ; make org safer (impossible to overwrite previously assembled bytes) and count padding
(1)   84/       0 :                     ; and also make it work in Z80 code without creating a new segment
(1)   85/       0 :                     org macro address
(1)   86/       0 :                     	if notZ80(MOMCPU)
(1)   87/       0 :                     		if address < *
(1)   88/       0 :                     			error "too much stuff before org $\{address} ($\{(*-address)} bytes)"
(1)   89/       0 :                     		elseif address > *
(1)   90/       0 :                     paddingSoFar	set paddingSoFar + address - *
(1)   91/       0 :                     			!org address
(1)   92/       0 :                     		endif
(1)   93/       0 :                     	else
(1)   94/       0 :                     		if address < $
(1)   95/       0 :                     			error "too much stuff before org 0\{address}h (0\{($-address)}h bytes)"
(1)   96/       0 :                     		else
(1)   97/       0 :                     			while address > $
(1)   98/       0 :                     				db 0
(1)   99/       0 :                     			endm
(1)  100/       0 :                     		endif
(1)  101/       0 :                     	endif
(1)  102/       0 :                         endm
(1)  103/       0 :                     
(1)  104/       0 :                     ; ====================================================================
(1)  105/       0 :                     ; ---------------------------------------------
(1)  106/       0 :                     ; Mega CD only
(1)  107/       0 :                     ; ---------------------------------------------
(1)  108/       0 :                     
(1)  109/       0 :                     ; Set a ISO file
(1)  110/       0 :                     ; NOTE: a valid ISO head is required ($8000 to $B7FF)
(1)  111/       0 :                     
(1)  112/       0 :                     iso_setfs	macro type,start,end
(1)  113/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  114/       0 :                     		dc.b 0						; zero
(1)  115/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  116/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  117/       0 :                     		dc.l start>>11					; Start sector, big
(1)  118/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  119/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  120/       0 :                     		dc.l end-start					; Filesize, big
(1)  121/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  122/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  123/       0 :                     		dc.b 2						; File flags
(1)  124/       0 :                     		dc.b 0,0
(1)  125/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  126/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  127/       0 :                     		dc.b 1,type
(1)  128/       0 :                     .fend:
(1)  129/       0 :                     		endm
(1)  130/       0 :                     		
(1)  131/       0 :                     iso_file	macro filename,start,end
(1)  132/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  133/       0 :                     		dc.b 0						; zero
(1)  134/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  135/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  136/       0 :                     		dc.l start>>11					; Start sector, big
(1)  137/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  138/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  139/       0 :                     		dc.l end-start					; Filesize, big
(1)  140/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  141/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  142/       0 :                     		dc.b 0						; File flags
(1)  143/       0 :                     		dc.b 0,0
(1)  144/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  145/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  146/       0 :                     		dc.b .flend-.flen
(1)  147/       0 :                     .flen:		dc.b filename,";1"
(1)  148/       0 :                     .flend:		dc.b 0
(1)  149/       0 :                     .fend:
(1)  150/       0 :                     		endm
(1)  151/       0 :                     		
(1)  152/       0 :                     ; ====================================================================
(1)  153/       0 :                     ; ---------------------------------------------
(1)  154/       0 :                     ; 32X only
(1)  155/       0 :                     ; ---------------------------------------------
(1)  156/       0 :                     
      12/       0 :                     		include	"system/md/const.asm"	; RAM / Variables are here
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Engine settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; MDRAM_START	equ	$FFFF9000
(1)    7/       0 :                     ; MAX_MDERAM	equ 	$200		; MAX RAM for Game modes
(1)    8/       0 :                     
(1)    9/       0 :                     ; ====================================================================
(1)   10/       0 :                     ; ----------------------------------------------------------------
(1)   11/       0 :                     ; Aliases
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     
(1)   14/       0 :                     ; Controller_1	equ RAM_InputData
(1)   15/       0 :                     ; Controller_2	equ RAM_InputData+sizeof_input
(1)   16/       0 :                     
(1)   17/       0 : =$C0000000          Vdp_palette	equ $C0000000		; Palette
(1)   18/       0 : =$40000010          Vdp_vsram	equ $40000010		; Vertical scroll
(1)   19/       0 :                     
(1)   20/       0 :                     ; ====================================================================
(1)   21/       0 :                     ; ----------------------------------------------------------------
(1)   22/       0 :                     ; Variables
(1)   23/       0 :                     ; ----------------------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 :                     ; --------------------------------------------------------
(1)   26/       0 :                     ; controller
(1)   27/       0 :                     ; --------------------------------------------------------
(1)   28/       0 :                     
(1)   29/       0 : =$1                 JoyUp		equ $0001
(1)   30/       0 : =$2                 JoyDown		equ $0002
(1)   31/       0 : =$4                 JoyLeft		equ $0004
(1)   32/       0 : =$8                 JoyRight	equ $0008
(1)   33/       0 : =$10                JoyB		equ $0010
(1)   34/       0 : =$20                JoyC		equ $0020
(1)   35/       0 : =$40                JoyA		equ $0040
(1)   36/       0 : =$80                JoyStart	equ $0080
(1)   37/       0 : =$100               JoyZ		equ $0100
(1)   38/       0 : =$200               JoyY		equ $0200
(1)   39/       0 : =$400               JoyX		equ $0400
(1)   40/       0 : =$800               JoyMode		equ $0800
(1)   41/       0 :                     
(1)   42/       0 :                     ; right byte only
(1)   43/       0 : =$0                 bitJoyUp	equ 0
(1)   44/       0 : =$1                 bitJoyDown	equ 1
(1)   45/       0 : =$2                 bitJoyLeft	equ 2
(1)   46/       0 : =$3                 bitJoyRight	equ 3
(1)   47/       0 : =$4                 bitJoyB		equ 4
(1)   48/       0 : =$5                 bitJoyC		equ 5
(1)   49/       0 : =$6                 bitJoyA		equ 6
(1)   50/       0 : =$7                 bitJoyStart	equ 7
(1)   51/       0 :                     
(1)   52/       0 :                     ; left byte only
(1)   53/       0 : =$0                 bitJoyZ		equ 0
(1)   54/       0 : =$1                 bitJoyY		equ 1
(1)   55/       0 : =$2                 bitJoyX		equ 2
(1)   56/       0 : =$3                 bitJoyMode	equ 3
(1)   57/       0 :                     
(1)   58/       0 :                     ; --------------------------------------------------------
(1)   59/       0 :                     ; vdp_ctrl READ bits
(1)   60/       0 :                     ; --------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 : =$2                 bitHint		equ 2
(1)   63/       0 : =$3                 bitVint		equ 3
(1)   64/       0 : =$1                 bitDma		equ 1
(1)   65/       0 :                     
(1)   66/       0 :                     ; --------------------------------------------------------
(1)   67/       0 :                     ; VDP register vars
(1)   68/       0 :                     ; --------------------------------------------------------
(1)   69/       0 :                     
(1)   70/       0 :                     ; Register $80
(1)   71/       0 : =$2                 HVStop		equ $02
(1)   72/       0 : =$10                HintEnbl	equ $10
(1)   73/       0 : =$1                 bitHVStop	equ 1
(1)   74/       0 : =$4                 bitHintEnbl	equ 4
(1)   75/       0 :                     
(1)   76/       0 :                     ; Register $81
(1)   77/       0 : =$40                DispEnbl 	equ $40
(1)   78/       0 : =$20                VintEnbl 	equ $20
(1)   79/       0 : =$10                DmaEnbl		equ $10
(1)   80/       0 : =$6                 bitDispEnbl	equ 6
(1)   81/       0 : =$5                 bitVintEnbl	equ 5
(1)   82/       0 : =$4                 bitDmaEnbl	equ 4
(1)   83/       0 : =$3                 bitV30		equ 3
(1)   84/       0 :                     
(1)   85/       0 :                     ; --------------------------------------------------------
(1)   86/       0 :                     ; Misc
(1)   87/       0 :                     ; --------------------------------------------------------
(1)   88/       0 :                     
(1)   89/       0 : =$7FF               varNullVram	equ $7FF
(1)   90/       0 :                     
      13/       0 :                     		include	"system/md/map.asm"	; Genesis hardware map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Genesis / Mega drive 68k map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =$200000            sys_exram	equ	$200000		; External RAM
(1)    7/       0 : =$A00000            z80_cpu		equ	$A00000		; Z80 CPU, size: $2000
(1)    8/       0 : =$A04000            ym_ctrl_1	equ	$A04000		; YM2612 reg 1
(1)    9/       0 : =$A04001            ym_data_1	equ	$A04001		; YM2612 reg 2
(1)   10/       0 : =$A04002            ym_ctrl_2	equ	$A04002		; YM2612 reg 1
(1)   11/       0 : =$A04003            ym_data_2	equ	$A04003		; YM2612 reg 2
(1)   12/       0 : =$A10001            sys_io		equ	$A10001		; bits: OVRSEAS(7)|PAL(6)|DISK(5)|VER(3-0)
(1)   13/       0 : =$A10003            sys_data_1	equ	$A10003		; Port 1 DATA
(1)   14/       0 : =$A10005            sys_data_2	equ	$A10005		; Port 2 DATA
(1)   15/       0 : =$A10007            sys_data_3	equ	$A10007		; Modem DATA
(1)   16/       0 : =$A10009            sys_ctrl_1	equ	$A10009		; Port 1 CTRL
(1)   17/       0 : =$A1000B            sys_ctrl_2	equ	$A1000B		; Port 2 CTRL
(1)   18/       0 : =$A1000D            sys_ctrl_3	equ	$A1000D		; Modem CTRL
(1)   19/       0 : =$A14000            sys_tmss	equ	$A14000		; write "SEGA" here for ver > 0
(1)   20/       0 : =$A11100            z80_bus 	equ	$A11100		; only use bit 0 (bit 8 as WORD)
(1)   21/       0 : =$A11200            z80_reset	equ	$A11200		; WRITE only ($0000 reset/$0100 cancel)
(1)   22/       0 : =$A130EC            md_mars_id	equ	$A130EC		; MARS ID "MARS"
(1)   23/       0 : =$A130F1            md_bank_sram	equ	$A130F1		; Make SRAM visible at $200000
(1)   24/       0 : =$C00000            vdp_data	equ	$C00000		; video data port
(1)   25/       0 : =$C00004            vdp_ctrl	equ	$C00004		; video control port
(1)   26/       0 : =$C00011            psg_ctrl	equ	$C00011		; PSG control
(1)   27/       0 :                     
(1)   28/       0 :                     ; ----------------------------------------------------------------
(1)   29/       0 :                     ; Genesis / Mega drive Z80 map
(1)   30/       0 :                     ; ----------------------------------------------------------------
(1)   31/       0 :                     
(1)   32/       0 : =$4000              zym_ctrl_1	equ	$4000		; YM2612 reg 1
(1)   33/       0 : =$4001              zym_data_1	equ	$4001		; YM2612 reg 2
(1)   34/       0 : =$4002              zym_ctrl_2	equ	$4002		; YM2612 reg 1
(1)   35/       0 : =$4003              zym_data_2	equ	$4003		; YM2612 reg 2
(1)   36/       0 : =$6000              zbank		equ	$6000		; ROM BANK 24bits %XXXXXXXX X0000000 00000000
(1)   37/       0 : =$7F00              zvdp_data	equ	$7F00		; video data port
(1)   38/       0 : =$7F04              zvdp_ctrl	equ	$7F04		; video control port
(1)   39/       0 : =$7F11              zpsg_ctrl	equ	$7F11		; PSG control
(1)   40/       0 :                     
(1)   41/       0 :                     ; ----------------------------------------------------------------
(1)   42/       0 :                     ; If a SEGA CD is attached
(1)   43/       0 :                     ; ----------------------------------------------------------------
(1)   44/       0 :                     
(1)   45/       0 : =$20000             syscd_prgram	equ	$020000		; SubCPU PRG-RAM, up to $1FFFF, banked
(1)   46/       0 : =$200000            syscd_wordram	equ	$200000		; WORD-RAM seen in MAIN-CPU
(1)   47/       0 : =$A12000            syscd_bus	equ	$A12000		; WORD | Sub-CPU BUS/RESET
(1)   48/       0 : =$A12003            syscd_memory	equ	$A12003		; BYTE | Sub-CPU memory mode
(1)   49/       0 : =$A12004            syscd_cdcmode	equ	$A12004		; WORD | CDC Mode
(1)   50/       0 : =$A12006            syscd_hint	equ	$A12006		; WORD | VDP HBlank jump ($FFxxxx)
(1)   51/       0 : =$A12008            syscd_cdchost	equ	$A12008		; WORD | CDC Host
(1)   52/       0 : =$A12008            syscd_stopwtch	equ	$A12008		; WORD | Stopwatch
(1)   53/       0 : =$A1200E            syscd_comm_m	equ	$A1200E		; BYTE | MainCPU R/W comm byte
(1)   54/       0 : =$A1200F            syscd_comm_s	equ	$A1200F		; BYTE | Sub-CPU Read comm byte
(1)   55/       0 : =$A12010            syscd_args_m	equ	$A12010		; DATA | comm R/W list, max size: $E
(1)   56/       0 : =$A12020            syscd_args_s	equ	$A12020		; DATA | comm Read list, max size: $E
(1)   57/       0 :                     
(1)   58/       0 :                     ; ----------------------------------------------------------------
(1)   59/       0 :                     ; If a 32X is attached
(1)   60/       0 :                     ; ----------------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 :                     ; TODO
(1)   63/       0 :                     
      14/       0 :                     
      15/       0 :                     ; ====================================================================
      16/       0 :                     ; ----------------------------------------------------------------
      17/       0 :                     ; Emulator variables
      18/       0 :                     ; ----------------------------------------------------------------
      19/       0 :                     
      20/       0 :                     ; ------------------------------------------------
      21/       0 :                     ; RAM
      22/       0 :                     ; ------------------------------------------------
      23/       0 :                     
      24/       0 : =$FFFF0000          RAM_Fami_ROM	equ $FFFF0000		; PRG-ROM
      25/       0 : =$FFFF8000          RAM_Fami_Emu	equ $FFFF8000		; Emulator buffer
      26/       0 : =$FFFF9000          RAM_Fami_RAM	equ $FFFF9000		; RAM size: $800
      27/       0 : =$FFFFA000          RAM_Fami_PPU	equ $FFFFA000		; PPU size: $3EF8 (TODO: still uses negative variables)
      28/       0 :                     
      29/       0 :                     ; ----------------------------------------------------------------
      30/       0 :                     ; CPU
      31/       0 :                     ; ----------------------------------------------------------------
      32/       0 :                     
      33/       0 : =$7FFA              cpuNMI		equ $7FFA
      34/       0 : =$7FFC              cpuEntry	equ $7FFC
      35/       0 : =$7FFE              cpuIRQ		equ $7FFE
      36/       0 :                     
      37/       0 :                     ; ----------------------------------------------------------------
      38/       0 :                     ; Emulator
      39/       0 :                     ; ---------------------------------------------------------------
      40/       0 :                     
      41/       0 : (MACRO)             		struct RAM_Fami_Emu+$FF0
      41/       0 : =$0                 GLBL_LASTPC     set *
      41/       0 :                                     dephase
      41/       0 : =$0                 GLBL_LASTORG    set *
      41/FFFFFFFFFFFF8FF0 :                                     phase RAM_FAMI_EMU+$FF0
      42/FFFFFFFFFFFF8FF0 :                     RAM_EmuLoop	ds.w 3
      43/FFFFFFFFFFFF8FF6 : (MACRO)             		finish
      43/FFFFFFFFFFFF8FF0 :                                     !org GLBL_LASTORG
      43/       0 :                                     phase GLBL_LASTPC
      44/       0 :                     
      45/       0 :                     ; ----------------------------------------------------------------
      46/       0 :                     ; Unsorted
      47/       0 :                     ; ----------------------------------------------------------------
      48/       0 :                     
      49/       0 : (MACRO)             		struct 0
      49/       0 : =$0                 GLBL_LASTPC     set *
      49/       0 :                                     dephase
      49/       0 : =$0                 GLBL_LASTORG    set *
      49/       0 :                                     phase 0
      50/       0 :                     emuPrgRom	ds.l 1
      51/       4 :                     emuChrRom	ds.l 1
      52/       8 :                     cpuSprHint	ds.w 1;equ -$38
      53/       A :                     vdpReg01	ds.w 1;equ -$36
      54/       C :                     ppuMirror	ds.w 1;equ -$34
      55/       E :                     cpuMapper	ds.w 1;equ -$32
      56/      10 :                     cpuFamiVint	ds.w 1;equ -$30
      57/      12 :                     cpuInputData	ds.w 2;equ -$28
      58/      16 :                     cpuModeDec	ds.w 1;equ -$22
      59/      18 :                     cpuFlag2	ds.w 1;equ -$20
      60/      1A :                     cpuModeIntDis	ds.w 1;equ -$1E
      61/      1C :                     ppuNTblBase	ds.w 1;equ -$1A
      62/      1E :                     ppuChrBank	ds.w 1;equ -$18
      63/      20 :                     ppuOamAddr	ds.w 1;equ -$16
      64/      22 :                     ppuAddrIncr	ds.w 1;equ -$14
      65/      24 :                     ppuAddrBase	ds.w 1;equ -$12
      66/      26 :                     ppuDataLast	ds.w 1;equ -$10
      67/      28 :                     ppuSprWide	ds.w 1;equ -$E
      68/      2A :                     ppuSp0Ypos	ds.w 1;equ -$C
      69/      2C :                     ppuAddrLatch	ds.w 1;equ -$A
      70/      2E :                     ppuOamUnk	ds.w 1;equ -6
      71/      30 :                     ppuNmiFlag	ds.w 1;equ -4
      72/      32 :                     ppuStatus	ds.w 1;equ -2
      73/      34 :                     vdpHintSp0	ds.w 1
      74/      36 :                     FamiMdVint	ds.w 1
      75/      38 :                     vdpScrlX	ds.l 1
      76/      3C :                     vdpScrlY	ds.l 1
      77/      40 :                     vdpPalette	ds.w 64
      78/      C0 :                     oamSprData	ds.w 8*70
      79/     520 : (MACRO)             		finish
      79/       0 :                                     !org GLBL_LASTORG
      79/       0 :                                     phase GLBL_LASTPC
      80/       0 :                     
      81/       0 :                     ; ====================================================================
      82/       0 :                     ; Header
      83/       0 :                     ; ====================================================================
      84/       0 :                     
      85/       0 : 0000 0000           		dc.l 0
      86/       4 : 0000 0202           		dc.l MD_Entry
      87/       8 : 0000 0200           		dc.l MD_Error
      88/       C : 0000 0200           		dc.l MD_Error
      89/      10 : 0000 0200           		dc.l MD_Error
      90/      14 : 0000 0200           		dc.l MD_Error
      91/      18 : 0000 0200           		dc.l MD_Error
      92/      1C : 0000 0200           		dc.l MD_Error
      93/      20 : 0000 0200           		dc.l MD_Error
      94/      24 : 0000 0200           		dc.l MD_Error
      95/      28 : 0000 0200           		dc.l MD_Error
      96/      2C : 0000 0200           		dc.l MD_Error
      97/      30 : 0000 0200           		dc.l MD_Error
      98/      34 : 0000 0200           		dc.l MD_Error
      99/      38 : 0000 0200           		dc.l MD_Error
     100/      3C : 0000 0200           		dc.l MD_Error
     101/      40 : 0000 0200           		dc.l MD_Error
     102/      44 : 0000 0200           		dc.l MD_Error
     103/      48 : 0000 0200           		dc.l MD_Error
     104/      4C : 0000 0200           		dc.l MD_Error
     105/      50 : 0000 0200           		dc.l MD_Error
     106/      54 : 0000 0200           		dc.l MD_Error
     107/      58 : 0000 0200           		dc.l MD_Error
     108/      5C : 0000 0200           		dc.l MD_Error
     109/      60 : 0000 0200           		dc.l MD_Error
     110/      64 : 0000 0200           		dc.l MD_Error
     111/      68 : 0000 0200           		dc.l MD_Error
     112/      6C : 0000 0200           		dc.l MD_Error
     113/      70 : 0000 0458           		dc.l MD_Hint
     114/      74 : 0000 0200           		dc.l MD_Error
     115/      78 : 0000 03BA           		dc.l MD_Vint
     116/      7C : 0000 0200           		dc.l MD_Error
     117/      80 : 0000 0200           		dc.l MD_Error
     118/      84 : 0000 0200           		dc.l MD_Error
     119/      88 : 0000 0200           		dc.l MD_Error
     120/      8C : 0000 0200           		dc.l MD_Error
     121/      90 : 0000 0200           		dc.l MD_Error
     122/      94 : 0000 0200           		dc.l MD_Error
     123/      98 : 0000 0200           		dc.l MD_Error
     124/      9C : 0000 0200           		dc.l MD_Error
     125/      A0 : 0000 0200           		dc.l MD_Error
     126/      A4 : 0000 0200           		dc.l MD_Error
     127/      A8 : 0000 0200           		dc.l MD_Error
     128/      AC : 0000 0200           		dc.l MD_Error
     129/      B0 : 0000 0200           		dc.l MD_Error
     130/      B4 : 0000 0200           		dc.l MD_Error
     131/      B8 : 0000 0200           		dc.l MD_Error
     132/      BC : 0000 0200           		dc.l MD_Error
     133/      C0 : 0000 0202           		dc.l MD_Entry
     134/      C4 : 0000 0202           		dc.l MD_Entry
     135/      C8 : 0000 0202           		dc.l MD_Entry
     136/      CC : 0000 0202           		dc.l MD_Entry
     137/      D0 : 0000 0202           		dc.l MD_Entry
     138/      D4 : 0000 0202           		dc.l MD_Entry
     139/      D8 : 0000 0202           		dc.l MD_Entry
     140/      DC : 0000 0202           		dc.l MD_Entry
     141/      E0 : 0000 0202           		dc.l MD_Entry
     142/      E4 : 0000 0202           		dc.l MD_Entry
     143/      E8 : 0000 0202           		dc.l MD_Entry
     144/      EC : 0000 0202           		dc.l MD_Entry
     145/      F0 : 0000 0202           		dc.l MD_Entry
     146/      F4 : 0000 0202           		dc.l MD_Entry
     147/      F8 : 0000 0202           		dc.l MD_Entry
     148/      FC : 0000 0202           		dc.l MD_Entry
     149/     100 : 5345 4741 204D 4547 		dc.b "SEGA MEGA DRIVE "
                    4120 4452 4956 4520 
     150/     110 : 2843 2947 4636 3420 		dc.b "(C)GF64 20??.???"
                    3230 3F3F 2E3F 3F3F 
     151/     120 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     152/     150 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     153/     180 : 474D 204B 452D 3030 		dc.b "GM KE-00000-00"
                    3030 302D 3030      
     154/     18E : 0000                		dc.w 0
     155/     190 : 0000                		dc.w 0
     156/     192 : 2020 2020 2020 2020 		dc.b "              "
                    2020 2020 2020      
     157/     1A0 : 0000 0000           		dc.l 0
     158/     1A4 : 0000 7FFF           		dc.l EndOfRom-1
     159/     1A8 : 00FF 0000           		dc.l $FF0000
     160/     1AC : 00FF FFFF           		dc.l $FFFFFF
     161/     1B0 : 2020 2020           		dc.l $20202020
     162/     1B4 : 2020 2020           		dc.l $20202020
     163/     1B8 : 2020 2020           		dc.l $20202020
     164/     1BC : 2020 2020 2020 2020 		dc.b "                                                    "
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020           
     165/     1F0 : 4A55 4520 2020 2020 		dc.b "JUE             "
                    2020 2020 2020 2020 
     166/     200 :                     
     167/     200 :                     ; ====================================================================
     168/     200 :                     ; ----------------------------------------------------------------
     169/     200 :                     ; Error
     170/     200 :                     ; ----------------------------------------------------------------
     171/     200 :                     
     172/     200 :                     MD_Error:
     173/     200 : 60FE                		bra.s	MD_Error
     174/     202 :                     
     175/     202 :                     ; ====================================================================
     176/     202 :                     ; ----------------------------------------------------------------
     177/     202 :                     ; Entry
     178/     202 :                     ; ----------------------------------------------------------------
     179/     202 :                     
     180/     202 :                     MD_Entry:
     181/     202 : 46FC 2700           		move	#$2700,sr
     182/     206 : 4AB9 00A1 0008      		tst.l	($A10008).l
     183/     20C : 6606                		bne.s	loc_210
     184/     20E : 4A79 00A1 000C      		tst.w	($A1000C).l
     185/     214 :                     loc_210:
     186/     214 : 6600 0054           		bne.w	loc_270
     187/     218 : 4BF9 0000 026E      		lea	(list_InitRegs).l,a5
     188/     21E : 4C9D 00E0           		movem.w	(a5)+,d5-d7
     189/     222 : 4CDD 1F00           		movem.l	(a5)+,a0-a4
     190/     226 : 1039 00A1 0001      		move.b	($A10001).l,d0
     191/     22C : 0200 000F           		andi.b	#$F,d0
     192/     230 : 6700 000C           		beq.w	old_md
     193/     234 : 23FC 5345 4741 00A1 		move.l	#"SEGA",($A14000).l
                    4000                
     194/     23E :                     old_md:
     195/     23E : 4280                		clr.l	d0
     196/     240 : 2C40                		movea.l	d0,a6
     197/     242 : 4E66                		move	a6,usp
     198/     244 :                     clrstack:
     199/     244 : 2D00                		move.l	d0,-(a6)
     200/     246 : 51CE FFFC           		dbf	d6,clrstack
     201/     24A : 6100 00D4           		bsr	Sound_LoadZ80
     202/     24E : 6100 00E8           		bsr	Sound_PsgInit
     203/     252 : 6100 00F2           		bsr	Video_Init
     204/     256 : 4CD6 7FFF           		movem.l	(a6),d0-a6
     205/     25A : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     206/     262 : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     207/     26A :                     loc_270:
     208/     26A : 6000 0102           		bra.w	MD_Init
     209/     26E :                     ; ----------------------------------------------------------------
     210/     26E : 8000                list_InitRegs:	dc.w $8000		; d5
     211/     270 : 3FFF                		dc.w $3FFF		; d6
     212/     272 : 0100                		dc.w $100		; d7
     213/     274 : 00A0 0000           		dc.l $A00000		; a0
     214/     278 : 00A1 1100           		dc.l $A11100		; a1
     215/     27C : 00A1 1200           		dc.l $A11200		; a2
     216/     280 : 00C0 0000           		dc.l $C00000		; a3
     217/     284 : 00C0 0004           		dc.l $C00004		; a4
     218/     288 : AF01 D91F 1127 0021 		dc.b $AF, 1, $D9, $1F, $11, $27, 0, $21, $26, 0, $F9, $77
                    2600 F977           
     219/     294 : EDB0 DDE1 FDE1 ED47 		dc.b $ED, $B0, $DD, $E1, $FD, $E1, $ED,	$47, $ED, $4F
                    ED4F                
     220/     29E : D1E1 F108 D9C1 D1E1 		dc.b $D1, $E1, $F1, 8, $D9, $C1, $D1, $E1, $F1,	$F9, $F3
                    F1F9 F3             
     221/     2A9 : ED56 36E9 E981 048F 		dc.b $ED, $56, $36, $E9, $E9, $81, 4, $8F, 1
                    01                  
     222/     2B2 : 9F                  		dc.b $9F
     223/     2B3 : BF                  		dc.b $BF
     224/     2B4 : DF                  		dc.b $DF
     225/     2B5 : FF                  		dc.b $FF
     226/     2B6 :                     ; ----------------------------------------------------------------
     227/     2B6 :                     
     228/     2B6 :                     ; =============== S U B	R O U T	I N E =======================================
     229/     2B6 :                     
     230/     2B6 :                     
     231/     2B6 :                     Fami_InitVideo:
     232/     2B6 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     233/     2BC : 3E3C 0FFF           		move.w	#$FFF,d7
     234/     2C0 : 2D7C 4000 0003 0004 		move.l	#$40000003,4(a6)
     235/     2C8 :                     .loopfg:
     236/     2C8 : 3CBC 0200           		move.w	#$200,(a6)
     237/     2CC : 51CF FFFA           		dbf	d7,.loopfg
     238/     2D0 : 3E3C 0FFF           		move.w	#$FFF,d7
     239/     2D4 : 2D7C 6000 0003 0004 		move.l	#$60000003,4(a6)
     240/     2DC :                     .loopbg:
     241/     2DC : 3CBC 0200           		move.w	#$200,(a6)
     242/     2E0 : 51CF FFFA           		dbf	d7,.loopbg		
     243/     2E4 :                     
     244/     2E4 : 2D7C 6800 0002 0004 		move.l	#$68000002,4(a6)
     245/     2EC : 2CBC 0000 0000      		move.l	#0,(a6)
     246/     2F2 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     247/     2FA : 2CBC 0000 0000      		move.l	#0,(a6)
     248/     300 : 7E3F                		moveq	#$3F,d7
     249/     302 : 2D7C C000 0000 0004 		move.l	#$C0000000,4(a6)
     250/     30A :                     
     251/     30A :                     loc_51E:
     252/     30A : 3CBC 0000           		move.w	#0,(a6)
     253/     30E : 51CF FFFA           		dbf	d7,loc_51E
     254/     312 : 2D7C C002 0000 0004 		move.l	#$C0020000,4(a6)
     255/     31A : 3CBC 0EEE           		move.w	#$EEE,(a6)
     256/     31E : 4E75                		rts
     257/     320 :                     
     258/     320 :                     ; =============== S U B	R O U T	I N E =======================================
     259/     320 :                     
     260/     320 :                     
     261/     320 :                     Sound_LoadZ80:
     262/     320 : 3287                		move.w	d7,(a1)
     263/     322 : 3487                		move.w	d7,(a2)
     264/     324 :                     
     265/     324 :                     loc_8DA:
     266/     324 : 0111                		btst	d0,(a1)
     267/     326 : 66FC                		bne.s	loc_8DA
     268/     328 : 7425                		moveq	#$25,d2
     269/     32A :                     loc_8E0:
     270/     32A : 10DD                		move.b	(a5)+,(a0)+
     271/     32C : 51CA FFFC           		dbf	d2,loc_8E0
     272/     330 : 3480                		move.w	d0,(a2)
     273/     332 : 3280                		move.w	d0,(a1)
     274/     334 : 3487                		move.w	d7,(a2)
     275/     336 : 4E75                		rts
     276/     338 :                     ; End of function Sound_LoadZ80
     277/     338 :                     
     278/     338 :                     
     279/     338 :                     ; =============== S U B	R O U T	I N E =======================================
     280/     338 :                     
     281/     338 :                     
     282/     338 :                     Sound_PsgInit:
     283/     338 : 7203                		moveq	#3,d1
     284/     33A :                     
     285/     33A :                     loc_8F0:
     286/     33A : 175D 0011           		move.b	(a5)+,$11(a3)
     287/     33E : 51C9 FFFA           		dbf	d1,loc_8F0
     288/     342 : 3480                		move.w	d0,(a2)
     289/     344 : 4E75                		rts
     290/     346 :                     ; End of function Sound_PsgInit
     291/     346 :                     
     292/     346 :                     
     293/     346 :                     ; =============== S U B	R O U T	I N E =======================================
     294/     346 :                     
     295/     346 :                     
     296/     346 :                     Video_Init:
     297/     346 : 7017                		moveq	#$17,d0
     298/     348 : 41F9 0000 035A      		lea	(byte_910).l,a0
     299/     34E :                     loc_904:
     300/     34E : 1A18                		move.b	(a0)+,d5
     301/     350 : 3885                		move.w	d5,(a4)
     302/     352 : DA47                		add.w	d7,d5
     303/     354 : 51C8 FFF8           		dbf	d0,loc_904
     304/     358 : 4E75                		rts
     305/     35A :                     
     306/     35A :                     ; ----------------------------------------------------------------
     307/     35A :                     byte_910:
     308/     35A : 14                  		dc.b $14			; HBlank int on, HV Counter on
     309/     35B : 64                  		dc.b $64			; Display ON, VBlank int on
     310/     35C : 30                  		dc.b (($C000)>>10)		; ForeGrd at VRAM $C000 (%00xxx000)
     311/     35D : 34                  		dc.b (($D000)>>10)		; Window  at VRAM $D000 (%00xxxxy0)
     312/     35E : 07                  		dc.b (($E000)>>13)		; BackGrd at VRAM $E000 (%00000xxx)
     313/     35F : 5E                  		dc.b (($BC00)>>9)		; Sprites at VRAM $BC00 (%0xxxxxxy)
     314/     360 : 00                  		dc.b $00			; Nothing
     315/     361 : 00                  		dc.b $00			; Background color
     316/     362 : 00                  		dc.b $00			; Nothing
     317/     363 : 00                  		dc.b $00			; Nothing
     318/     364 : DF                  		dc.b $DF			; HInt value
     319/     365 : 00                  		dc.b (%000|%00)			; No ExtInt, Scroll: VSCR:full HSCR:full
     320/     366 : 00                  		dc.b $00			; H40, No shadow mode, Normal resolution
     321/     367 : 2E                  		dc.b (($B800)>>10)		; HScroll at VRAM $B800 (%00xxxxxx)
     322/     368 : 00                  		dc.b $00			; Nothing
     323/     369 : 02                  		dc.b $02			; VDP Auto increment by $02
     324/     36A : 11                  		dc.b (%01<<4)|%01		; Layer size: V32 H64
     325/     36B : 00                  		dc.b $00
     326/     36C : 00                  		dc.b $00
     327/     36D :                     		align 2
     328/     36E :                     
     329/     36E :                     ; ====================================================================
     330/     36E :                     
     331/     36E :                     MD_Init:
     332/     36E : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     333/     376 : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     334/     37E : 33FC 0100 00A1 1100 		move.w	#$100,(z80_bus).l		; Stop Z80
     335/     386 : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     336/     38E :                     .wait:
     337/     38E : 0839 0000 00A1 1100 		btst	#0,(z80_bus).l			; Wait bus
     338/     396 : 66F6                		bne.s	.wait
     339/     398 :                     
     340/     398 : 33FC 0000 00A1 1200 		move.w	#0,(z80_reset).l		; Reset request
     341/     3A0 : 4E71                		nop
     342/     3A2 : 4E71                		nop
     343/     3A4 : 4E71                		nop
     344/     3A6 : 33FC 0000 00A1 1100 		move.w	#0,(z80_bus).l			; Start Z80
     345/     3AE : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     346/     3B6 :                     		
     347/     3B6 : 6000 015C           		bra	emuStart
     348/     3BA :                     
     349/     3BA :                     ; ====================================================================
     350/     3BA :                     ; ----------------------------------------------------------------
     351/     3BA :                     ; VBlank
     352/     3BA :                     ; ----------------------------------------------------------------
     353/     3BA :                     
     354/     3BA :                     MD_Vint:
     355/     3BA : 48E7 FFFE           		movem.l	d0-d7/a0-a6,-(sp)
     356/     3BE :                     
     357/     3BE : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     358/     3C4 : 2D7C 7800 0002 0004 		move.l	#$78000002,4(a6)
     359/     3CC : 2CAC 0038           		move.l	vdpScrlX(a4),(a6)
     360/     3D0 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     361/     3D8 : 2CAC 003C           		move.l	vdpScrlY(a4),(a6)
     362/     3DC : 2D7C 9401 9318 0004 		move.l	#$94019318,4(a6)
     363/     3E4 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     364/     3EC : 2D7C 96C0 9560 0004 		move.l	#$96009500+(((RAM_Fami_Emu+oamSprData)<<7)&$FF0000)|(((RAM_Fami_Emu+oamSprData)>>1)&$FF),4(a6)
     365/     3F4 : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+oamSprData)>>17)&$7F),4(a6)
     366/     3FA : 3D7C 7C00 0004      		move.w	#$7C00,4(a6)
     367/     400 : 3F3C 0082           		move.w	#$0002|$80,-(sp)
     368/     404 : 0839 0000 00A1 1100 .wait:		btst	#0,(z80_bus).l
     369/     40C : 66F6                		bne.s	.wait
     370/     40E : 3D5F 0004           		move.w	(sp)+,4(a6)
     371/     412 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     372/     41A : 2D7C 9400 9340 0004 		move.l	#$94009340,4(a6)
     373/     422 : 2D7C 96C0 9520 0004 		move.l	#$96009500+(((RAM_Fami_Emu+vdpPalette)<<7)&$FF0000)|(((RAM_Fami_Emu+vdpPalette)>>1)&$FF),4(a6)
     374/     42A : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+vdpPalette)>>17)&$7F),4(a6)
     375/     430 : 3D7C C000 0004      		move.w	#$C000,4(a6)
     376/     436 : 3F3C 0080           		move.w	#$0000|$80,-(sp)
     377/     43A : 0839 0000 00A1 1100 .wait2:		btst	#0,(z80_bus).l
     378/     442 : 66F6                		bne.s	.wait2
     379/     444 : 3D5F 0004           		move.w	(sp)+,4(a6)
     380/     448 :                     
     381/     448 : 426C 0034           		clr.w	vdpHintSp0(a4)
     382/     44C : 397C 0001 0036      		move.w	#1,FamiMdVint(a4)
     383/     452 : 4CDF 7FFF           		movem.l	(sp)+,d0-d7/a0-a6
     384/     456 : 4E73                		rte
     385/     458 :                     
     386/     458 :                     ; ====================================================================
     387/     458 :                     ; ----------------------------------------------------------------
     388/     458 :                     ; HBlank
     389/     458 :                     ; ----------------------------------------------------------------
     390/     458 :                     
     391/     458 :                     MD_Hint:
     392/     458 : 46FC 2700           		move.w	#$2700,sr
     393/     45C : 3D7C 8ADF 0004      		move.w	#$8ADF,4(a6)
     394/     462 : 397C 0001 0034      		move.w	#1,vdpHintSp0(a4)
     395/     468 :                     ; 		move.l	#$C0080000,4(a6)		; for TESTING only
     396/     468 :                     ; 		move.w	#0,(a6)
     397/     468 : 2D7C 7800 0002 0004 		move.l	#$78000002,4(a6)
     398/     470 : 2CAC 0038           		move.l	vdpScrlX(a4),(a6)
     399/     474 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     400/     47C : 2CAC 003C           		move.l	vdpScrlY(a4),(a6)
     401/     480 : 4E73                		rte
     402/     482 :                     
     403/     482 :                     ; ====================================================================
     404/     482 :                     ; ----------------------------------------------------------------
     405/     482 :                     ; Load ROM
     406/     482 :                     ; ----------------------------------------------------------------
     407/     482 :                     
     408/     482 :                     Fami_LoadRom:
     409/     482 : 2010                		move.l	(a0),d0		; Read and Load	Fami ROM
     410/     484 : 0C80 4E45 531A      		cmpi.l	#$4E45531A,d0
     411/     48A : 66FE                		bne.s	*
     412/     48C :                     
     413/     48C : 4BF9 FFFF 9000      		lea	(RAM_Fami_RAM).l,a5
     414/     492 : 7000                		moveq	#0,d0
     415/     494 : 323C 01FF           		move.w	#$7FF/4,d1
     416/     498 :                     .clrram:
     417/     498 : 2AC0                		move.l	d0,(a5)+
     418/     49A : 51C9 FFFC           		dbf	d1,.clrram
     419/     49E : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     420/     4A4 : 7000                		moveq	#0,d0
     421/     4A6 : 323C 1000           		move.w	#$4000/4,d1
     422/     4AA :                     .clrvram:
     423/     4AA : 2AC0                		move.l	d0,(a5)+
     424/     4AC : 51C9 FFFC           		dbf	d1,.clrvram
     425/     4B0 : 4DF9 00C0 0000      		lea 	($C00000),a6
     426/     4B6 : 6100 FDFE           		bsr	Fami_InitVideo
     427/     4BA :                     
     428/     4BA : 47F9 FFFF 8000      		lea	(RAM_Fami_Emu).l,a3
     429/     4C0 : 7E00                		moveq	#0,d7			; PRG-ROM copy
     430/     4C2 : 1E28 0004           		move.b	4(a0),d7
     431/     4C6 : 6100 199C           		bsr	romGrabPrg
     432/     4CA : 1E28 0006           		move.b	6(a0),d7		; PPU mirroring
     433/     4CE : 1C28 0007           		move.b	7(a0),d6
     434/     4D2 : CE7C 00F0           		and.w	#%11110000,d7
     435/     4D6 : CC7C 00F0           		and.w	#%11110000,d6
     436/     4DA : E84F                		lsr.w	#4,d7
     437/     4DC : 8E46                		or.w	d6,d7
     438/     4DE : 3747 000E           		move.w	d7,cpuMapper(a3)
     439/     4E2 :                     	
     440/     4E2 :                     	; Mirror check
     441/     4E2 : 3E3C 0000           		move.w	#0,d7			; 0 - horizontal
     442/     4E6 : 0828 0000 0006      		btst	#0,6(a0)		; PPU mirroring
     443/     4EC : 6704                		beq.s	loc_9F4
     444/     4EE : 3E3C 0001           		move.w	#1,d7			; 1 - vertical
     445/     4F2 :                     loc_9F4:
     446/     4F2 : 3747 000C           		move.w	d7,ppuMirror(a3)
     447/     4F6 :                     		
     448/     4F6 :                     	; COPY CHR-ROM TO RAM
     449/     4F6 : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     450/     4FC : 274C 0004           		move.l	a4,emuChrRom(a3)
     451/     500 : 2E3C 0000 07FF      		move.l	#$7FF,d7
     452/     506 :                     loc_A10:
     453/     506 : 2ADC                		move.l	(a4)+,(a5)+
     454/     508 : 51CF FFFC           		dbf	d7,loc_A10
     455/     50C : D0FC 0010           		adda	#$10,a0
     456/     510 : 2688                		move.l	a0,emuPrgRom(a3)
     457/     512 : 4E75                		rts
     458/     514 :                     
     459/     514 :                     ; ====================================================================
     460/     514 :                     ; ----------------------------------------------------------------
     461/     514 :                     ; Emulator start
     462/     514 :                     ; ----------------------------------------------------------------
     463/     514 :                     
     464/     514 :                     emuStart:
     465/     514 : 41F9 0000 8000      		lea	(ROM_FILE).l,a0
     466/     51A : 6100 FF66           		bsr	Fami_LoadRom
     467/     51E :                     		
     468/     51E : 4DF9 00C0 0000      		lea	($C00000).l,a6
     469/     524 : 49F8 8000           		lea 	(RAM_Fami_Emu),a4
     470/     528 : 47F8 A000           		lea	(RAM_Fami_PPU).w,a3
     471/     52C : 45F8 9000           		lea	(RAM_Fami_RAM).w,a2
     472/     530 : 43F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a1	; PRG base
     473/     536 : 2049                		movea.l	a1,a0
     474/     538 : 303C 7FFC           		move.w	#cpuEntry,d0		; go to Entry
     475/     53C : D0C0                		add.w	d0,a0
     476/     53E : 1028 0001           		move.b	1(a0),d0
     477/     542 : E148                		lsl.w	#8,d0
     478/     544 : 1010                		move.b	(a0),d0
     479/     546 : C07C 7FFF           		and.w	#$7FFF,d0
     480/     54A : 2049                		movea.l	a1,a0
     481/     54C : D0C0                		adda	d0,a0
     482/     54E : 397C 8174 000A      		move.w	#$8174,vdpReg01(a4)
     483/     554 : 33FC 4EF9 FFFF 8FF0 		move.w	#$4EF9,(RAM_EmuLoop).l
     484/     55C : 23FC 0000 0572 FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
     485/     566 :                     
     486/     566 : 7000                		moveq	#0,d0
     487/     568 : 7200                		moveq	#0,d1
     488/     56A : 7400                		moveq	#0,d2
     489/     56C : 263C 0100 2000      		move.l	#$01002000,d3
     490/     572 :                     
     491/     572 :                     ; --------------------------------------------------------
     492/     572 :                     ; a0 - Fami CPU current PC
     493/     572 :                     ; a1 - Fami PRG address
     494/     572 :                     ; a2 - Fami RAM address (for zero addressing)
     495/     572 :                     ; a3 - Fami PPU Buffer
     496/     572 :                     ; a4 - Fami EMU Buffer
     497/     572 :                     ; a5 - Used on temporal tasks
     498/     572 :                     ; a6 - VDP data point
     499/     572 :                     ; 
     500/     572 :                     ; d0 - A register
     501/     572 :                     ; d1 - X register
     502/     572 :                     ; d2 - Y register
     503/     572 :                     ; d3 - Fami STACK Point | MD current sr
     504/     572 :                     ; d4 - free
     505/     572 :                     ; d5 - free
     506/     572 :                     ; d6 - free
     507/     572 :                     ; d7 - emu temporal input/output
     508/     572 :                     ; --------------------------------------------------------
     509/     572 :                     
     510/     572 :                     ; ------------------------------------------------
     511/     572 :                     ; Main Loop
     512/     572 :                     ; ------------------------------------------------
     513/     572 :                     
     514/     572 :                     emuLoop:
     515/     572 : 4A6C 0036           		tst.w	FamiMdVint(a4)
     516/     576 : 660E                		bne.s	famiVInt
     517/     578 :                     emuVint:
     518/     578 : 4244                		clr.w	d4
     519/     57A : 1818                		move.b	(a0)+,d4
     520/     57C : D844                		add.w	d4,d4
     521/     57E : 383B 4050           		move.w	mosCpu(pc,d4.w),d4
     522/     582 : 4EFB 404C           		jmp	mosCpu(pc,d4.w)
     523/     586 :                     
     524/     586 :                     ; ------------------------------------------------
     525/     586 :                     ; VBlank
     526/     586 :                     ; ------------------------------------------------
     527/     586 :                     
     528/     586 :                     famiVInt:
     529/     586 : 426C 0036           		clr.w	FamiMdVint(a4)
     530/     58A : 397C 0080 0032      		move.w	#$80,ppuStatus(a4)
     531/     590 : 4A6C 0010           		tst.w	cpuFamiVint(a4)
     532/     594 : 66E2                		bne.s	emuVint
     533/     596 : 4A6C 0030           		tst.w	ppuNmiFlag(a4)
     534/     59A : 67DC                		beq.s	emuVint
     535/     59C :                     
     536/     59C :                     ; ------------------------------------------------
     537/     59C :                     doVint:
     538/     59C : 23FC 0000 0578 FFFF 		move.l	#emuVint,(RAM_EmuLoop+2).l
                    8FF2                
     539/     5A6 : 397C 0001 0010      		move.w	#1,cpuFamiVint(a4)
     540/     5AC :                     
     541/     5AC : 48E7 0884           		movem.l	d4/a0/a5,-(sp)
     542/     5B0 : 3F03                		move.w	d3,-(sp)
     543/     5B2 : 41F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a0	; PRG base
     544/     5B8 : 3C3C 7FFA           		move.w	#cpuNMI,d6		; go to NMI
     545/     5BC : D0C6                		add.w	d6,a0
     546/     5BE : 1C28 0001           		move.b	1(a0),d6
     547/     5C2 : E14E                		lsl.w	#8,d6
     548/     5C4 : 1C10                		move.b	(a0),d6
     549/     5C6 : CC7C 7FFF           		and.w	#$7FFF,d6
     550/     5CA : 2049                		movea.l	a1,a0
     551/     5CC : D0C6                		add.w	d6,a0
     552/     5CE : 60A8                		bra	emuVint
     553/     5D0 :                     		
     554/     5D0 :                     ; ----------------------------------------------------------------
     555/     5D0 : 0566                mosCpu:		dc.w mos_BRK-mosCpu	; $00
     556/     5D2 : 0E86                		dc.w loc_1A12-mosCpu
     557/     5D4 : 0200                		dc.w mos_Null-mosCpu
     558/     5D6 : 0200                		dc.w mos_Null-mosCpu
     559/     5D8 : 0200                		dc.w mos_Null-mosCpu
     560/     5DA : 0DE0                		dc.w loc_1970-mosCpu
     561/     5DC : 041E                		dc.w loc_1042-mosCpu
     562/     5DE : 0200                		dc.w mos_Null-mosCpu
     563/     5E0 : 0EEE                		dc.w loc_1A78-mosCpu	; $08
     564/     5E2 : 0DCA                		dc.w loc_195C-mosCpu	; $09 - ORA #$xx
     565/     5E4 : 040A                		dc.w loc_1030-mosCpu
     566/     5E6 : 0200                		dc.w mos_Null-mosCpu
     567/     5E8 : 0200                		dc.w mos_Null-mosCpu
     568/     5EA : 0E1A                		dc.w loc_19A6-mosCpu
     569/     5EC : 0460                		dc.w loc_1080-mosCpu
     570/     5EE : 0200                		dc.w mos_Null-mosCpu
     571/     5F0 : 0556                		dc.w loc_1166-mosCpu	; $10
     572/     5F2 : 0EB0                		dc.w loc_1A3C-mosCpu
     573/     5F4 : 0200                		dc.w mos_Null-mosCpu
     574/     5F6 : 0200                		dc.w mos_Null-mosCpu
     575/     5F8 : 0200                		dc.w mos_Null-mosCpu
     576/     5FA : 0DFC                		dc.w loc_198A-mosCpu
     577/     5FC : 043E                		dc.w loc_1060-mosCpu
     578/     5FE : 0200                		dc.w mos_Null-mosCpu
     579/     600 : 05AA                		dc.w loc_11AA-mosCpu	; $18
     580/     602 : 0E60                		dc.w loc_19EC-mosCpu
     581/     604 : 0200                		dc.w mos_Null-mosCpu
     582/     606 : 0200                		dc.w mos_Null-mosCpu
     583/     608 : 0200                		dc.w mos_Null-mosCpu
     584/     60A : 0E3A                		dc.w loc_19C6-mosCpu
     585/     60C : 0484                		dc.w loc_10A2-mosCpu
     586/     60E : 0200                		dc.w mos_Null-mosCpu
     587/     610 : 0AC0                		dc.w loc_167C-mosCpu	; $20
     588/     612 : 03B2                		dc.w loc_FD8-mosCpu
     589/     614 : 0200                		dc.w mos_Null-mosCpu
     590/     616 : 0200                		dc.w mos_Null-mosCpu
     591/     618 : 04DA                		dc.w loc_10F0-mosCpu
     592/     61A : 030C                		dc.w loc_F36-mosCpu
     593/     61C : 0F48                		dc.w loc_1ACA-mosCpu
     594/     61E : 0200                		dc.w mos_Null-mosCpu
     595/     620 : 0F20                		dc.w loc_1AA6-mosCpu	; $28
     596/     622 : 02F6                		dc.w loc_F22-mosCpu
     597/     624 : 0F32                		dc.w loc_1AB6-mosCpu
     598/     626 : 0200                		dc.w mos_Null-mosCpu
     599/     628 : 0506                		dc.w loc_111A-mosCpu
     600/     62A : 0346                		dc.w loc_F6C-mosCpu
     601/     62C : 0F8E                		dc.w loc_1B0C-mosCpu
     602/     62E : 0200                		dc.w mos_Null-mosCpu
     603/     630 : 0536                		dc.w loc_114A-mosCpu	; $30
     604/     632 : 03DC                		dc.w loc_1002-mosCpu
     605/     634 : 0200                		dc.w mos_Null-mosCpu
     606/     636 : 0200                		dc.w mos_Null-mosCpu
     607/     638 : 0200                		dc.w mos_Null-mosCpu
     608/     63A : 0328                		dc.w loc_F50-mosCpu
     609/     63C : 0F6A                		dc.w loc_1AEA-mosCpu
     610/     63E : 0200                		dc.w mos_Null-mosCpu
     611/     640 : 11FE                		dc.w loc_1D80-mosCpu	; $38
     612/     642 : 038C                		dc.w loc_FB2-mosCpu
     613/     644 : 0200                		dc.w mos_Null-mosCpu
     614/     646 : 0200                		dc.w mos_Null-mosCpu
     615/     648 : 0200                		dc.w mos_Null-mosCpu
     616/     64A : 0366                		dc.w loc_F8C-mosCpu
     617/     64C : 0FB4                		dc.w loc_1B30-mosCpu
     618/     64E : 0200                		dc.w mos_Null-mosCpu
     619/     650 : 1086                		dc.w loc_1BF6-mosCpu	; $40 - RTI
     620/     652 : 098E                		dc.w loc_1566-mosCpu
     621/     654 : 0200                		dc.w mos_Null-mosCpu
     622/     656 : 0200                		dc.w mos_Null-mosCpu
     623/     658 : 0200                		dc.w mos_Null-mosCpu
     624/     65A : 08E8                		dc.w loc_14C4-mosCpu
     625/     65C : 0D36                		dc.w loc_18D2-mosCpu
     626/     65E : 0200                		dc.w mos_Null-mosCpu
     627/     660 : 0EDE                		dc.w loc_1A6A-mosCpu	; $48
     628/     662 : 08D2                		dc.w loc_14B0-mosCpu
     629/     664 : 0D22                		dc.w loc_18C0-mosCpu
     630/     666 : 0200                		dc.w mos_Null-mosCpu
     631/     668 : 0A82                		dc.w loc_164E-mosCpu	; $4C - JMP $xxxx
     632/     66A : 0922                		dc.w loc_14FA-mosCpu
     633/     66C : 0D78                		dc.w loc_1910-mosCpu
     634/     66E : 0200                		dc.w mos_Null-mosCpu
     635/     670 : 058A                		dc.w loc_118E-mosCpu	; $50
     636/     672 : 09B8                		dc.w loc_1590-mosCpu
     637/     674 : 0200                		dc.w mos_Null-mosCpu
     638/     676 : 0200                		dc.w mos_Null-mosCpu
     639/     678 : 0200                		dc.w mos_Null-mosCpu
     640/     67A : 0904                		dc.w loc_14DE-mosCpu
     641/     67C : 0D56                		dc.w loc_18F0-mosCpu
     642/     67E : 0200                		dc.w mos_Null-mosCpu
     643/     680 : 05C0                		dc.w loc_11BC-mosCpu	; $58
     644/     682 : 0968                		dc.w loc_1540-mosCpu
     645/     684 : 0200                		dc.w mos_Null-mosCpu
     646/     686 : 0200                		dc.w mos_Null-mosCpu
     647/     688 : 0200                		dc.w mos_Null-mosCpu
     648/     68A : 0942                		dc.w loc_151A-mosCpu
     649/     68C : 0D9C                		dc.w loc_1932-mosCpu
     650/     68E : 0200                		dc.w mos_Null-mosCpu
     651/     690 : 10A2                		dc.w loc_1C32-mosCpu	; $60 - RTS
     652/     692 : 02A6                		dc.w loc_ED2-mosCpu
     653/     694 : 0200                		dc.w mos_Null-mosCpu
     654/     696 : 0200                		dc.w mos_Null-mosCpu
     655/     698 : 0200                		dc.w mos_Null-mosCpu
     656/     69A : 0214                		dc.w loc_E44-mosCpu
     657/     69C : 0FF2                		dc.w loc_1B6A-mosCpu
     658/     69E : 0200                		dc.w mos_Null-mosCpu
     659/     6A0 : 0F00                		dc.w loc_1A88-mosCpu	; $68
     660/     6A2 : 0202                		dc.w loc_E34-mosCpu
     661/     6A4 : 0FDC                		dc.w loc_1B56-mosCpu
     662/     6A6 : 0200                		dc.w mos_Null-mosCpu
     663/     6A8 : 0A9C                		dc.w loc_1660-mosCpu	; $6C - JMP ($xxxx)
     664/     6AA : 0246                		dc.w loc_E72-mosCpu
     665/     6AC : 1038                		dc.w loc_1BAC-mosCpu
     666/     6AE : 0200                		dc.w mos_Null-mosCpu
     667/     6B0 : 059A                		dc.w loc_119C-mosCpu	; $70
     668/     6B2 : 02CC                		dc.w loc_EF8-mosCpu
     669/     6B4 : 0200                		dc.w mos_Null-mosCpu
     670/     6B6 : 0200                		dc.w mos_Null-mosCpu
     671/     6B8 : 0200                		dc.w mos_Null-mosCpu
     672/     6BA : 022C                		dc.w loc_E5A-mosCpu
     673/     6BC : 1014                		dc.w loc_1B8A-mosCpu
     674/     6BE : 0200                		dc.w mos_Null-mosCpu
     675/     6C0 : 1214                		dc.w loc_1D92-mosCpu	; $78
     676/     6C2 : 0284                		dc.w loc_EB0-mosCpu
     677/     6C4 : 0200                		dc.w mos_Null-mosCpu
     678/     6C6 : 0200                		dc.w mos_Null-mosCpu
     679/     6C8 : 0200                		dc.w mos_Null-mosCpu
     680/     6CA : 0262                		dc.w loc_E8E-mosCpu
     681/     6CC : 105E                		dc.w loc_1BD0-mosCpu
     682/     6CE : 0200                		dc.w mos_Null-mosCpu
     683/     6D0 : 0200                		dc.w mos_Null-mosCpu	; $80
     684/     6D2 : 127A                		dc.w loc_1DF6-mosCpu
     685/     6D4 : 0200                		dc.w mos_Null-mosCpu
     686/     6D6 : 0200                		dc.w mos_Null-mosCpu
     687/     6D8 : 12E0                		dc.w loc_1E5C-mosCpu
     688/     6DA : 1220                		dc.w loc_1D9C-mosCpu
     689/     6DC : 12AE                		dc.w loc_1E2E-mosCpu
     690/     6DE : 0200                		dc.w mos_Null-mosCpu
     691/     6E0 : 08BE                		dc.w loc_149E-mosCpu	; $88
     692/     6E2 : 0200                		dc.w mos_Null-mosCpu
     693/     6E4 : 1352                		dc.w loc_1EC4-mosCpu
     694/     6E6 : 0200                		dc.w mos_Null-mosCpu
     695/     6E8 : 12FE                		dc.w loc_1E76-mosCpu
     696/     6EA : 123E                		dc.w loc_1DB6-mosCpu
     697/     6EC : 12CC                		dc.w loc_1E48-mosCpu
     698/     6EE : 0200                		dc.w mos_Null-mosCpu
     699/     6F0 : 04AA                		dc.w loc_10C6-mosCpu	; $90
     700/     6F2 : 1292                		dc.w loc_1E10-mosCpu
     701/     6F4 : 0200                		dc.w mos_Null-mosCpu
     702/     6F6 : 0200                		dc.w mos_Null-mosCpu
     703/     6F8 : 12EE                		dc.w loc_1E68-mosCpu
     704/     6FA : 122E                		dc.w loc_1DA8-mosCpu
     705/     6FC : 12BC                		dc.w loc_1E3A-mosCpu
     706/     6FE : 0200                		dc.w mos_Null-mosCpu
     707/     700 : 1372                		dc.w loc_1EE0-mosCpu	; $98
     708/     702 : 1266                		dc.w loc_1DE0-mosCpu
     709/     704 : 1366                		dc.w loc_1Ed3-mosCpu
     710/     706 : 0200                		dc.w mos_Null-mosCpu
     711/     708 : 0200                		dc.w mos_Null-mosCpu
     712/     70A : 1252                		dc.w loc_1DCA-mosCpu
     713/     70C : 0200                		dc.w mos_Null-mosCpu
     714/     70E : 0200                		dc.w mos_Null-mosCpu
     715/     710 : 0C92                		dc.w loc_1836-mosCpu	; $A0
     716/     712 : 0BAA                		dc.w loc_1754-mosCpu
     717/     714 : 0C02                		dc.w loc_17AC-mosCpu
     718/     716 : 0200                		dc.w mos_Null-mosCpu
     719/     718 : 0CA6                		dc.w loc_1848-mosCpu
     720/     71A : 0B08                		dc.w loc_16B6-mosCpu
     721/     71C : 0C16                		dc.w loc_17BE-mosCpu
     722/     71E : 0200                		dc.w mos_Null-mosCpu
     723/     720 : 1326                		dc.w loc_1E9C-mosCpu	; $A8
     724/     722 : 0AF4                		dc.w loc_16A4-mosCpu	; $A9 - LDA #$xx
     725/     724 : 1312                		dc.w loc_1E8A-mosCpu
     726/     726 : 0200                		dc.w mos_Null-mosCpu
     727/     728 : 0CDC                		dc.w loc_187A-mosCpu
     728/     72A : 0B3E                		dc.w loc_16E8-mosCpu
     729/     72C : 0C4C                		dc.w loc_17F0-mosCpu
     730/     72E : 0200                		dc.w mos_Null-mosCpu
     731/     730 : 04BA                		dc.w loc_10D4-mosCpu
     732/     732 : 0BD4                		dc.w loc_177E-mosCpu
     733/     734 : 0200                		dc.w mos_Null-mosCpu
     734/     736 : 0200                		dc.w mos_Null-mosCpu
     735/     738 : 0CC0                		dc.w loc_1860-mosCpu
     736/     73A : 0B22                		dc.w loc_16CE-mosCpu
     737/     73C : 0C30                		dc.w loc_17d3-mosCpu
     738/     73E : 0200                		dc.w mos_Null-mosCpu
     739/     740 : 05CC                		dc.w loc_11C6-mosCpu
     740/     742 : 0B84                		dc.w loc_172E-mosCpu
     741/     744 : 133A                		dc.w loc_1EAE-mosCpu
     742/     746 : 0200                		dc.w mos_Null-mosCpu
     743/     748 : 0CFC                		dc.w loc_189A-mosCpu
     744/     74A : 0B5E                		dc.w loc_1708-mosCpu
     745/     74C : 0C6C                		dc.w loc_1810-mosCpu
     746/     74E : 0200                		dc.w mos_Null-mosCpu
     747/     750 : 07C0                		dc.w loc_13AE-mosCpu
     748/     752 : 06DA                		dc.w loc_12CC-mosCpu
     749/     754 : 0200                		dc.w mos_Null-mosCpu
     750/     756 : 0200                		dc.w mos_Null-mosCpu
     751/     758 : 07E2                		dc.w loc_13CE-mosCpu
     752/     75A : 05F8                		dc.w loc_11EE-mosCpu
     753/     75C : 0836                		dc.w loc_1420-mosCpu
     754/     75E : 0200                		dc.w mos_Null-mosCpu
     755/     760 : 0A6E                		dc.w loc_163C-mosCpu
     756/     762 : 05D6                		dc.w loc_11CE-mosCpu
     757/     764 : 08AA                		dc.w loc_148C-mosCpu
     758/     766 : 0200                		dc.w mos_Null-mosCpu
     759/     768 : 080A                		dc.w loc_13F4-mosCpu
     760/     76A : 064A                		dc.w loc_123C-mosCpu
     761/     76C : 086C                		dc.w loc_1452-mosCpu
     762/     76E : 0200                		dc.w mos_Null-mosCpu
     763/     770 : 0546                		dc.w loc_1158-mosCpu
     764/     772 : 0710                		dc.w loc_1302-mosCpu
     765/     774 : 0200                		dc.w mos_Null-mosCpu
     766/     776 : 0200                		dc.w mos_Null-mosCpu
     767/     778 : 0200                		dc.w mos_Null-mosCpu
     768/     77A : 0620                		dc.w loc_1214-mosCpu
     769/     77C : 0850                		dc.w loc_1438-mosCpu
     770/     77E : 0200                		dc.w mos_Null-mosCpu
     771/     780 : 05B4                		dc.w loc_11B2-mosCpu
     772/     782 : 06A8                		dc.w loc_129A-mosCpu
     773/     784 : 0200                		dc.w mos_Null-mosCpu
     774/     786 : 0200                		dc.w mos_Null-mosCpu
     775/     788 : 0200                		dc.w mos_Null-mosCpu
     776/     78A : 0676                		dc.w loc_1268-mosCpu
     777/     78C : 088A                		dc.w loc_146E-mosCpu
     778/     78E : 0200                		dc.w mos_Null-mosCpu
     779/     790 : 074A                		dc.w loc_133C-mosCpu
     780/     792 : 119E                		dc.w loc_1D20-mosCpu
     781/     794 : 0200                		dc.w mos_Null-mosCpu
     782/     796 : 0200                		dc.w mos_Null-mosCpu
     783/     798 : 076C                		dc.w loc_135C-mosCpu
     784/     79A : 10E4                		dc.w loc_1C6A-mosCpu
     785/     79C : 09E6                		dc.w loc_15BE-mosCpu
     786/     79E : 0200                		dc.w mos_Null-mosCpu
     787/     7A0 : 0A5A                		dc.w loc_162A-mosCpu
     788/     7A2 : 10CA                		dc.w loc_1C52-mosCpu
     789/     7A4 : 0DC2                		dc.w loc_1956-mosCpu
     790/     7A6 : 0200                		dc.w mos_Null-mosCpu
     791/     7A8 : 0794                		dc.w loc_1382-mosCpu
     792/     7AA : 1126                		dc.w loc_1CA8-mosCpu
     793/     7AC : 0A1C                		dc.w loc_15F0-mosCpu
     794/     7AE : 0200                		dc.w mos_Null-mosCpu
     795/     7B0 : 04CA                		dc.w loc_10E2-mosCpu
     796/     7B2 : 11CC                		dc.w loc_1D4E-mosCpu
     797/     7B4 : 0200                		dc.w mos_Null-mosCpu
     798/     7B6 : 0200                		dc.w mos_Null-mosCpu
     799/     7B8 : 0200                		dc.w mos_Null-mosCpu
     800/     7BA : 1104                		dc.w loc_1C88-mosCpu
     801/     7BC : 0A00                		dc.w loc_15d3-mosCpu
     802/     7BE : 0200                		dc.w mos_Null-mosCpu
     803/     7C0 : 1208                		dc.w loc_1D88-mosCpu
     804/     7C2 : 1174                		dc.w loc_1CF6-mosCpu
     805/     7C4 : 0200                		dc.w mos_Null-mosCpu
     806/     7C6 : 0200                		dc.w mos_Null-mosCpu
     807/     7C8 : 0200                		dc.w mos_Null-mosCpu
     808/     7CA : 114A                		dc.w loc_1CCC-mosCpu
     809/     7CC : 0A3A                		dc.w loc_160C-mosCpu
     810/     7CE : 0200                		dc.w mos_Null-mosCpu
     811/     7D0 :                     ; ----------------------------------------------------------------
     812/     7D0 :                     
     813/     7D0 :                     mos_Null:
     814/     7D0 : 60FE                		bra.s	*
     815/     7D2 :                     
     816/     7D2 :                     ; ----------------------------------------------------------------
     817/     7D2 :                     
     818/     7D2 :                     loc_E34:
     819/     7D2 : 1E18                		move.b	(a0)+,d7
     820/     7D4 : 0003 0004           		ori.b	#4,d3
     821/     7D8 : 46C3                		move	d3,sr
     822/     7DA : D107                		addx.b	d7,d0
     823/     7DC : 40C3                		move	sr,d3
     824/     7DE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     825/     7E4 :                     ; ----------------------------------------------------------------
     826/     7E4 :                     
     827/     7E4 :                     loc_E44:
     828/     7E4 : 4246                		clr.w	d6
     829/     7E6 : 1C18                		move.b	(a0)+,d6
     830/     7E8 : 1E32 6000           		move.b	(a2,d6.w),d7
     831/     7EC : 0003 0004           		ori.b	#4,d3
     832/     7F0 : 46C3                		move	d3,sr
     833/     7F2 : D107                		addx.b	d7,d0
     834/     7F4 : 40C3                		move	sr,d3
     835/     7F6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     836/     7FC :                     ; ----------------------------------------------------------------
     837/     7FC :                     
     838/     7FC :                     loc_E5A:
     839/     7FC : 4246                		clr.w	d6
     840/     7FE : 1C18                		move.b	(a0)+,d6
     841/     800 : DC01                		add.b	d1,d6
     842/     802 : 1E32 6000           		move.b	(a2,d6.w),d7
     843/     806 : 0003 0004           		ori.b	#4,d3
     844/     80A : 46C3                		move	d3,sr
     845/     80C : D107                		addx.b	d7,d0
     846/     80E : 40C3                		move	sr,d3
     847/     810 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     848/     816 :                     ; ----------------------------------------------------------------
     849/     816 :                     
     850/     816 :                     loc_E72:				; DATA XREF: ROM:00000BE6o
     851/     816 : 4244                		clr.w	d4
     852/     818 : 1818                		move.b	(a0)+,d4
     853/     81A : 4246                		clr.w	d6
     854/     81C : 1C18                		move.b	(a0)+,d6
     855/     81E : 6100 1136           		bsr	addr_Read
     856/     822 : 0003 0004           		ori.b	#4,d3
     857/     826 : 46C3                		move	d3,sr
     858/     828 : D107                		addx.b	d7,d0
     859/     82A : 40C3                		move	sr,d3
     860/     82C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     861/     832 :                     ; ----------------------------------------------------------------
     862/     832 :                     
     863/     832 :                     loc_E8E:				; DATA XREF: ROM:00000C26o
     864/     832 : 4244                		clr.w	d4
     865/     834 : 1818                		move.b	(a0)+,d4
     866/     836 : 4246                		clr.w	d6
     867/     838 : 1C18                		move.b	(a0)+,d6
     868/     83A : 4207                		clr.b	d7
     869/     83C : D801                		add.b	d1,d4
     870/     83E : DD07                		addx.b	d7,d6
     871/     840 : 6100 1114           		bsr	addr_Read
     872/     844 : 0003 0004           		ori.b	#4,d3
     873/     848 : 46C3                		move	d3,sr
     874/     84A : D107                		addx.b	d7,d0
     875/     84C : 40C3                		move	sr,d3
     876/     84E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     877/     854 :                     ; ----------------------------------------------------------------
     878/     854 :                     
     879/     854 :                     loc_EB0:				; DATA XREF: ROM:00000C16o
     880/     854 : 4244                		clr.w	d4
     881/     856 : 1818                		move.b	(a0)+,d4
     882/     858 : 4246                		clr.w	d6
     883/     85A : 1C18                		move.b	(a0)+,d6
     884/     85C : 4207                		clr.b	d7
     885/     85E : D802                		add.b	d2,d4
     886/     860 : DD07                		addx.b	d7,d6
     887/     862 : 6100 10F2           		bsr	addr_Read
     888/     866 : 0003 0004           		ori.b	#4,d3
     889/     86A : 46C3                		move	d3,sr
     890/     86C : D107                		addx.b	d7,d0
     891/     86E : 40C3                		move	sr,d3
     892/     870 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     893/     876 :                     ; ----------------------------------------------------------------
     894/     876 :                     
     895/     876 :                     loc_ED2:				; DATA XREF: ROM:00000BB6o
     896/     876 : 4245                		clr.w	d5
     897/     878 : 1A18                		move.b	(a0)+,d5
     898/     87A : DA01                		add.b	d1,d5
     899/     87C : 4244                		clr.w	d4
     900/     87E : 1832 5000           		move.b	(a2,d5.w),d4
     901/     882 : 4246                		clr.w	d6
     902/     884 : 1C32 5001           		move.b	1(a2,d5.w),d6
     903/     888 : 6100 10CC           		bsr	addr_Read
     904/     88C : 0003 0004           		ori.b	#4,d3
     905/     890 : 46C3                		move	d3,sr
     906/     892 : D107                		addx.b	d7,d0
     907/     894 : 40C3                		move	sr,d3
     908/     896 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     909/     89C :                     ; ----------------------------------------------------------------
     910/     89C :                     
     911/     89C :                     loc_EF8:				; DATA XREF: ROM:00000BF6o
     912/     89C : 4245                		clr.w	d5
     913/     89E : 1A18                		move.b	(a0)+,d5
     914/     8A0 : 4244                		clr.w	d4
     915/     8A2 : 1832 5000           		move.b	(a2,d5.w),d4
     916/     8A6 : 4246                		clr.w	d6
     917/     8A8 : 1C32 5001           		move.b	1(a2,d5.w),d6
     918/     8AC : 4207                		clr.b	d7
     919/     8AE : D802                		add.b	d2,d4
     920/     8B0 : DD07                		addx.b	d7,d6
     921/     8B2 : 6100 10A2           		bsr	addr_Read
     922/     8B6 : 0003 0004           		ori.b	#4,d3
     923/     8BA : 46C3                		move	d3,sr
     924/     8BC : D107                		addx.b	d7,d0
     925/     8BE : 40C3                		move	sr,d3
     926/     8C0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     927/     8C6 :                     ; ----------------------------------------------------------------
     928/     8C6 :                     
     929/     8C6 :                     loc_F22:				; DATA XREF: ROM:00000Ad3o
     930/     8C6 : 1E18                		move.b	(a0)+,d7
     931/     8C8 : C007                		and.b	d7,d0
     932/     8CA : 40C5                		move	sr,d5
     933/     8CC : 0245 000C           		andi.w	#$C,d5
     934/     8D0 : 0203 00F3           		andi.b	#$F3,d3
     935/     8D4 : 8645                		or.w	d5,d3
     936/     8D6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     937/     8DC :                     ; ----------------------------------------------------------------
     938/     8DC :                     
     939/     8DC :                     loc_F36:				; DATA XREF: ROM:00000AC6o
     940/     8DC : 4246                		clr.w	d6
     941/     8DE : 1C18                		move.b	(a0)+,d6
     942/     8E0 : 1E32 6000           		move.b	(a2,d6.w),d7
     943/     8E4 : C007                		and.b	d7,d0
     944/     8E6 : 40C5                		move	sr,d5
     945/     8E8 : 0245 000C           		andi.w	#$C,d5
     946/     8EC : 0203 00F3           		andi.b	#$F3,d3
     947/     8F0 : 8645                		or.w	d5,d3
     948/     8F2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     949/     8F8 :                     ; ----------------------------------------------------------------
     950/     8F8 :                     
     951/     8F8 :                     loc_F50:				; DATA XREF: ROM:00000B06o
     952/     8F8 : 4246                		clr.w	d6
     953/     8FA : 1C18                		move.b	(a0)+,d6
     954/     8FC : DC01                		add.b	d1,d6
     955/     8FE : 1E32 6000           		move.b	(a2,d6.w),d7
     956/     902 : C007                		and.b	d7,d0
     957/     904 : 40C5                		move	sr,d5
     958/     906 : 0245 000C           		andi.w	#$C,d5
     959/     90A : 0203 00F3           		andi.b	#$F3,d3
     960/     90E : 8645                		or.w	d5,d3
     961/     910 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     962/     916 :                     ; ----------------------------------------------------------------
     963/     916 :                     
     964/     916 :                     loc_F6C:
     965/     916 : 4244                		clr.w	d4
     966/     918 : 1818                		move.b	(a0)+,d4
     967/     91A : 4246                		clr.w	d6
     968/     91C : 1C18                		move.b	(a0)+,d6
     969/     91E : 6100 1036           		bsr	addr_Read
     970/     922 : C007                		and.b	d7,d0
     971/     924 : 40C5                		move	sr,d5
     972/     926 : 0245 000C           		andi.w	#$C,d5
     973/     92A : 0203 00F3           		andi.b	#$F3,d3
     974/     92E : 8645                		or.w	d5,d3
     975/     930 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     976/     936 :                     ; ----------------------------------------------------------------
     977/     936 :                     
     978/     936 :                     loc_F8C:
     979/     936 : 4244                		clr.w	d4
     980/     938 : 1818                		move.b	(a0)+,d4
     981/     93A : 4246                		clr.w	d6
     982/     93C : 1C18                		move.b	(a0)+,d6
     983/     93E : 4207                		clr.b	d7
     984/     940 : D801                		add.b	d1,d4
     985/     942 : DD07                		addx.b	d7,d6
     986/     944 : 6100 1010           		bsr	addr_Read
     987/     948 : C007                		and.b	d7,d0
     988/     94A : 40C5                		move	sr,d5
     989/     94C : 0245 000C           		andi.w	#$C,d5
     990/     950 : 0203 00F3           		andi.b	#$F3,d3
     991/     954 : 8645                		or.w	d5,d3
     992/     956 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     993/     95C :                     ; ----------------------------------------------------------------
     994/     95C :                     
     995/     95C :                     loc_FB2:				; DATA XREF: ROM:00000B16o
     996/     95C : 4244                		clr.w	d4
     997/     95E : 1818                		move.b	(a0)+,d4
     998/     960 : 4246                		clr.w	d6
     999/     962 : 1C18                		move.b	(a0)+,d6
    1000/     964 : 4207                		clr.b	d7
    1001/     966 : D802                		add.b	d2,d4
    1002/     968 : DD07                		addx.b	d7,d6
    1003/     96A : 6100 0FEA           		bsr	addr_Read
    1004/     96E : C007                		and.b	d7,d0
    1005/     970 : 40C5                		move	sr,d5
    1006/     972 : 0245 000C           		andi.w	#$C,d5
    1007/     976 : 0203 00F3           		andi.b	#$F3,d3
    1008/     97A : 8645                		or.w	d5,d3
    1009/     97C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1010/     982 :                     ; ----------------------------------------------------------------
    1011/     982 :                     
    1012/     982 :                     loc_FD8:				; DATA XREF: ROM:00000AB6o
    1013/     982 : 4245                		clr.w	d5
    1014/     984 : 1A18                		move.b	(a0)+,d5
    1015/     986 : DA01                		add.b	d1,d5
    1016/     988 : 4244                		clr.w	d4
    1017/     98A : 1832 5000           		move.b	(a2,d5.w),d4
    1018/     98E : 4246                		clr.w	d6
    1019/     990 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1020/     994 : 6100 0FC0           		bsr	addr_Read
    1021/     998 : C007                		and.b	d7,d0
    1022/     99A : 40C5                		move	sr,d5
    1023/     99C : 0245 000C           		andi.w	#$C,d5
    1024/     9A0 : 0203 00F3           		andi.b	#$F3,d3
    1025/     9A4 : 8645                		or.w	d5,d3
    1026/     9A6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1027/     9AC :                     ; ----------------------------------------------------------------
    1028/     9AC :                     
    1029/     9AC :                     loc_1002:				; DATA XREF: ROM:00000AF6o
    1030/     9AC : 4245                		clr.w	d5
    1031/     9AE : 1A18                		move.b	(a0)+,d5
    1032/     9B0 : 4244                		clr.w	d4
    1033/     9B2 : 1832 5000           		move.b	(a2,d5.w),d4
    1034/     9B6 : 4246                		clr.w	d6
    1035/     9B8 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1036/     9BC : 4207                		clr.b	d7
    1037/     9BE : D802                		add.b	d2,d4
    1038/     9C0 : DD07                		addx.b	d7,d6
    1039/     9C2 : 6100 0F92           		bsr	addr_Read
    1040/     9C6 : C007                		and.b	d7,d0
    1041/     9C8 : 40C5                		move	sr,d5
    1042/     9CA : 0245 000C           		andi.w	#$C,d5
    1043/     9CE : 0203 00F3           		andi.b	#$F3,d3
    1044/     9D2 : 8645                		or.w	d5,d3
    1045/     9D4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1046/     9DA :                     ; ----------------------------------------------------------------
    1047/     9DA :                     
    1048/     9DA :                     loc_1030:				; DATA XREF: ROM:00000A5Ao
    1049/     9DA : E308                		lsl.b	#1,d0
    1050/     9DC : 40C5                		move	sr,d5
    1051/     9DE : 0245 001D           		andi.w	#$1D,d5
    1052/     9E2 : 0203 00E2           		andi.b	#$E2,d3
    1053/     9E6 : 8645                		or.w	d5,d3
    1054/     9E8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1055/     9EE :                     ; ----------------------------------------------------------------
    1056/     9EE :                     
    1057/     9EE :                     loc_1042:
    1058/     9EE : 4246                		clr.w	d6
    1059/     9F0 : 1C18                		move.b	(a0)+,d6
    1060/     9F2 : 1E32 6000           		move.b	(a2,d6.w),d7
    1061/     9F6 : E30F                		lsl.b	#1,d7
    1062/     9F8 : 40C5                		move	sr,d5
    1063/     9FA : 0245 001D           		andi.w	#$1D,d5
    1064/     9FE : 0203 00E2           		andi.b	#$E2,d3
    1065/     A02 : 8645                		or.w	d5,d3
    1066/     A04 : 1587 6000           		move.b	d7,(a2,d6.w)
    1067/     A08 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1068/     A0E :                     ; ----------------------------------------------------------------
    1069/     A0E :                     
    1070/     A0E :                     loc_1060:
    1071/     A0E : 4246                		clr.w	d6
    1072/     A10 : 1C18                		move.b	(a0)+,d6
    1073/     A12 : DC01                		add.b	d1,d6
    1074/     A14 : 1E32 6000           		move.b	(a2,d6.w),d7
    1075/     A18 : E30F                		lsl.b	#1,d7
    1076/     A1A : 40C5                		move	sr,d5
    1077/     A1C : 0245 001D           		andi.w	#$1D,d5
    1078/     A20 : 0203 00E2           		andi.b	#$E2,d3
    1079/     A24 : 8645                		or.w	d5,d3
    1080/     A26 : 1587 6000           		move.b	d7,(a2,d6.w)
    1081/     A2A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1082/     A30 :                     ; ----------------------------------------------------------------
    1083/     A30 :                     
    1084/     A30 :                     loc_1080:
    1085/     A30 : 1818                		move.b	(a0)+,d4
    1086/     A32 : 1C18                		move.b	(a0)+,d6
    1087/     A34 : E14E                		lsl.w	#8,d6
    1088/     A36 : 1C04                		move.b	d4,d6
    1089/     A38 : 1E32 6000           		move.b	(a2,d6.w),d7
    1090/     A3C : E30F                		lsl.b	#1,d7
    1091/     A3E : 40C5                		move	sr,d5
    1092/     A40 : 0245 001D           		andi.w	#$1D,d5
    1093/     A44 : 0203 00E2           		andi.b	#$E2,d3
    1094/     A48 : 8645                		or.w	d5,d3
    1095/     A4A : 1587 6000           		move.b	d7,(a2,d6.w)
    1096/     A4E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1097/     A54 :                     ; ----------------------------------------------------------------
    1098/     A54 :                     
    1099/     A54 :                     loc_10A2:				; DATA XREF: ROM:00000AAAo
    1100/     A54 : 1818                		move.b	(a0)+,d4
    1101/     A56 : 1C18                		move.b	(a0)+,d6
    1102/     A58 : E14E                		lsl.w	#8,d6
    1103/     A5A : 1C04                		move.b	d4,d6
    1104/     A5C : DC41                		add.w	d1,d6
    1105/     A5E : 1E32 6000           		move.b	(a2,d6.w),d7
    1106/     A62 : E30F                		lsl.b	#1,d7
    1107/     A64 : 40C5                		move	sr,d5
    1108/     A66 : 0245 001D           		andi.w	#$1D,d5
    1109/     A6A : 0203 00E2           		andi.b	#$E2,d3
    1110/     A6E : 8645                		or.w	d5,d3
    1111/     A70 : 1587 6000           		move.b	d7,(a2,d6.w)
    1112/     A74 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1113/     A7A :                     ; ----------------------------------------------------------------
    1114/     A7A :                     
    1115/     A7A :                     loc_10C6:
    1116/     A7A : 1C18                		move.b	(a0)+,d6
    1117/     A7C : 46C3                		move	d3,sr
    1118/     A7E : 6504                		bcs.s	loc_10D0
    1119/     A80 : 4886                		ext.w	d6
    1120/     A82 : D0C6                		adda.w	d6,a0
    1121/     A84 :                     loc_10D0:
    1122/     A84 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1123/     A8A :                     ; ----------------------------------------------------------------
    1124/     A8A :                     
    1125/     A8A :                     loc_10D4:
    1126/     A8A : 1C18                		move.b	(a0)+,d6
    1127/     A8C : 46C3                		move	d3,sr
    1128/     A8E : 6404                		bcc.s	loc_10DE
    1129/     A90 : 4886                		ext.w	d6
    1130/     A92 : D0C6                		adda.w	d6,a0
    1131/     A94 :                     loc_10DE:
    1132/     A94 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1133/     A9A :                     ; ----------------------------------------------------------------
    1134/     A9A :                     
    1135/     A9A :                     loc_10E2:
    1136/     A9A : 1C18                		move.b	(a0)+,d6
    1137/     A9C : 46C3                		move	d3,sr
    1138/     A9E : 6604                		bne.s	loc_10EC
    1139/     AA0 : 4886                		ext.w	d6
    1140/     AA2 : D0C6                		adda.w	d6,a0
    1141/     AA4 :                     loc_10EC:
    1142/     AA4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1143/     AAA :                     ; ----------------------------------------------------------------
    1144/     AAA :                     
    1145/     AAA :                     loc_10F0:
    1146/     AAA : 4246                		clr.w	d6
    1147/     AAC : 1C18                		move.b	(a0)+,d6
    1148/     AAE : 1E32 6000           		move.b	(a2,d6.w),d7
    1149/     AB2 : 1807                		move.b	d7,d4
    1150/     AB4 : 0203 00F1           		andi.b	#$F1,d3
    1151/     AB8 : E30F                		lsl.b	#1,d7
    1152/     ABA : 6404                		bcc.s	loc_1106
    1153/     ABC : 0003 0008           		ori.b	#8,d3
    1154/     AC0 :                     loc_1106:
    1155/     AC0 : E30F                		lsl.b	#1,d7
    1156/     AC2 : 6404                		bcc.s	loc_110E
    1157/     AC4 : 0003 0002           		ori.b	#2,d3
    1158/     AC8 :                     loc_110E:
    1159/     AC8 : C800                		and.b	d0,d4
    1160/     ACA : 6604                		bne.s	loc_1116
    1161/     ACC : 0003 0004           		ori.b	#4,d3
    1162/     AD0 :                     loc_1116:
    1163/     AD0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1164/     AD6 :                     ; ----------------------------------------------------------------
    1165/     AD6 :                     
    1166/     AD6 :                     loc_111A:
    1167/     AD6 : 4244                		clr.w	d4
    1168/     AD8 : 1818                		move.b	(a0)+,d4
    1169/     ADA : 4246                		clr.w	d6
    1170/     ADC : 1C18                		move.b	(a0)+,d6
    1171/     ADE : 6100 0E76           		bsr	addr_Read
    1172/     AE2 : 1807                		move.b	d7,d4
    1173/     AE4 : 0203 00F1           		andi.b	#$F1,d3
    1174/     AE8 : E30F                		lsl.b	#1,d7
    1175/     AEA : 6404                		bcc.s	loc_1136
    1176/     AEC : 0003 0008           		ori.b	#8,d3
    1177/     AF0 :                     
    1178/     AF0 :                     loc_1136:
    1179/     AF0 : E30F                		lsl.b	#1,d7
    1180/     AF2 : 6404                		bcc.s	loc_113E
    1181/     AF4 : 0003 0002           		ori.b	#2,d3
    1182/     AF8 :                     
    1183/     AF8 :                     loc_113E:
    1184/     AF8 : C800                		and.b	d0,d4
    1185/     AFA : 6604                		bne.s	loc_1146
    1186/     AFC : 0003 0004           		ori.b	#4,d3
    1187/     B00 :                     
    1188/     B00 :                     loc_1146:
    1189/     B00 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1190/     B06 :                     ; ----------------------------------------------------------------
    1191/     B06 :                     
    1192/     B06 :                     loc_114A:				; DATA XREF: ROM:00000AF2o
    1193/     B06 : 1C18                		move.b	(a0)+,d6
    1194/     B08 : 46C3                		move	d3,sr
    1195/     B0A : 6A04                		bpl.s	loc_1154
    1196/     B0C : 4886                		ext.w	d6
    1197/     B0E : D0C6                		adda.w	d6,a0
    1198/     B10 :                     
    1199/     B10 :                     loc_1154:				; CODE XREF: ROM:0000114Ej
    1200/     B10 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1201/     B16 :                     ; ----------------------------------------------------------------
    1202/     B16 :                     
    1203/     B16 :                     loc_1158:				; DATA XREF: ROM:00000D72o
    1204/     B16 : 1C18                		move.b	(a0)+,d6
    1205/     B18 : 46C3                		move	d3,sr
    1206/     B1A : 6704                		beq.s	loc_1162
    1207/     B1C : 4886                		ext.w	d6
    1208/     B1E : D0C6                		adda.w	d6,a0
    1209/     B20 :                     
    1210/     B20 :                     loc_1162:				; CODE XREF: ROM:0000115Cj
    1211/     B20 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1212/     B26 :                     ; ----------------------------------------------------------------
    1213/     B26 :                     
    1214/     B26 :                     loc_1166:
    1215/     B26 : 1C18                		move.b	(a0)+,d6
    1216/     B28 : 46C3                		move	d3,sr
    1217/     B2A : 6B04                		bmi.s	loc_1170
    1218/     B2C : 4886                		ext.w	d6
    1219/     B2E : D0C6                		adda.w	d6,a0
    1220/     B30 :                     
    1221/     B30 :                     loc_1170:
    1222/     B30 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1223/     B36 :                     
    1224/     B36 :                     ; ----------------------------------------------------------------
    1225/     B36 :                     ; $00 - BRK
    1226/     B36 :                     ; ----------------------------------------------------------------
    1227/     B36 :                     
    1228/     B36 :                     mos_BRK:
    1229/     B36 : 4BF9 FFFF 0000      		lea 	(RAM_Fami_ROM),a5
    1230/     B3C : 3C3C 7FFE           		move.w	#cpuIRQ,d6		; go to IRQ
    1231/     B40 : DAC6                		add.w	d6,a5
    1232/     B42 : 1C2D 0001           		move.b	1(a5),d6
    1233/     B46 : E14E                		lsl.w	#8,d6
    1234/     B48 : 1C15                		move.b	(a5),d6
    1235/     B4A :                     
    1236/     B4A : 397C 0001 001A      		move.w	#1,cpuModeIntDis(a4)
    1237/     B50 : 397C 0001 0018      		move.w	#1,cpuFlag2(a4)
    1238/     B56 : 6000 0542           		bra.w	loc_1686
    1239/     B5A :                     ; ----------------------------------------------------------------
    1240/     B5A :                     
    1241/     B5A :                     loc_118E:
    1242/     B5A : 1C18                		move.b	(a0)+,d6
    1243/     B5C : 46C3                		move	d3,sr
    1244/     B5E : 6904                		bvs.s	loc_1198
    1245/     B60 : 4886                		ext.w	d6
    1246/     B62 : D0C6                		adda.w	d6,a0
    1247/     B64 :                     
    1248/     B64 :                     loc_1198:
    1249/     B64 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1250/     B6A :                     ; ----------------------------------------------------------------
    1251/     B6A :                     
    1252/     B6A :                     loc_119C:
    1253/     B6A : 1C18                		move.b	(a0)+,d6
    1254/     B6C : 46C3                		move	d3,sr
    1255/     B6E : 6804                		bvc.s	loc_11A6
    1256/     B70 : 4886                		ext.w	d6
    1257/     B72 : D0C6                		adda.w	d6,a0
    1258/     B74 :                     
    1259/     B74 :                     loc_11A6:				; CODE XREF: ROM:000011A0j
    1260/     B74 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1261/     B7A :                     ; ----------------------------------------------------------------
    1262/     B7A :                     
    1263/     B7A :                     loc_11AA:				; DATA XREF: ROM:00000A92o
    1264/     B7A : 0203 00EE           		andi.b	#$EE,d3
    1265/     B7E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1266/     B84 :                     
    1267/     B84 :                     ; ----------------------------------------------------------------
    1268/     B84 :                     ; CLD - Clear Decimal mode
    1269/     B84 :                     ; ----------------------------------------------------------------
    1270/     B84 :                     
    1271/     B84 :                     loc_11B2:
    1272/     B84 : 397C 0000 0016      		move.w	#0,cpuModeDec(a4)
    1273/     B8A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1274/     B90 :                     
    1275/     B90 :                     ; ----------------------------------------------------------------
    1276/     B90 :                     ; CLI - Clear Interrupt disable
    1277/     B90 :                     ; ----------------------------------------------------------------
    1278/     B90 :                     
    1279/     B90 :                     loc_11BC:
    1280/     B90 : 397C 0000 001A      		move.w	#0,cpuModeIntDis(a4)
    1281/     B96 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1282/     B9C :                     
    1283/     B9C :                     ; ----------------------------------------------------------------
    1284/     B9C :                     
    1285/     B9C :                     loc_11C6:				; DATA XREF: ROM:00000D12o
    1286/     B9C : 0203 00FD           		andi.b	#$FD,d3
    1287/     BA0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1288/     BA6 :                     ; ----------------------------------------------------------------
    1289/     BA6 :                     
    1290/     BA6 :                     loc_11CE:				; DATA XREF: ROM:00000D56o
    1291/     BA6 : 1E18                		move.b	(a0)+,d7
    1292/     BA8 : B007                		cmp.b	d7,d0
    1293/     BAA : 40C5                		move	sr,d5
    1294/     BAC : 0245 000D           		andi.w	#$D,d5
    1295/     BB0 : 0A05 0001           		eori.b	#1,d5
    1296/     BB4 : 0203 0002           		andi.b	#2,d3
    1297/     BB8 : 8605                		or.b	d5,d3
    1298/     BBA : 0205 0001           		andi.b	#1,d5
    1299/     BBE : E90D                		lsl.b	#4,d5
    1300/     BC0 : 8605                		or.b	d5,d3
    1301/     BC2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1302/     BC8 :                     ; ----------------------------------------------------------------
    1303/     BC8 :                     
    1304/     BC8 :                     loc_11EE:				; DATA XREF: ROM:00000D46o
    1305/     BC8 : 4246                		clr.w	d6
    1306/     BCA : 1C18                		move.b	(a0)+,d6
    1307/     BCC : 1E32 6000           		move.b	(a2,d6.w),d7
    1308/     BD0 : B007                		cmp.b	d7,d0
    1309/     BD2 : 40C5                		move	sr,d5
    1310/     BD4 : 0245 000D           		andi.w	#$D,d5
    1311/     BD8 : 0A05 0001           		eori.b	#1,d5
    1312/     BDC : 0203 0002           		andi.b	#2,d3
    1313/     BE0 : 8605                		or.b	d5,d3
    1314/     BE2 : 0205 0001           		andi.b	#1,d5
    1315/     BE6 : E90D                		lsl.b	#4,d5
    1316/     BE8 : 8605                		or.b	d5,d3
    1317/     BEA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1318/     BF0 :                     ; ----------------------------------------------------------------
    1319/     BF0 :                     
    1320/     BF0 :                     loc_1214:				; DATA XREF: ROM:00000D86o
    1321/     BF0 : 4246                		clr.w	d6
    1322/     BF2 : 1C18                		move.b	(a0)+,d6
    1323/     BF4 : DC01                		add.b	d1,d6
    1324/     BF6 : 1E32 6000           		move.b	(a2,d6.w),d7
    1325/     BFA : B007                		cmp.b	d7,d0
    1326/     BFC : 40C5                		move	sr,d5
    1327/     BFE : 0245 000D           		andi.w	#$D,d5
    1328/     C02 : 0A05 0001           		eori.b	#1,d5
    1329/     C06 : 0203 0002           		andi.b	#2,d3
    1330/     C0A : 8605                		or.b	d5,d3
    1331/     C0C : 0205 0001           		andi.b	#1,d5
    1332/     C10 : E90D                		lsl.b	#4,d5
    1333/     C12 : 8605                		or.b	d5,d3
    1334/     C14 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1335/     C1A :                     ; ----------------------------------------------------------------
    1336/     C1A :                     
    1337/     C1A :                     loc_123C:				; DATA XREF: ROM:00000d36o
    1338/     C1A : 4244                		clr.w	d4
    1339/     C1C : 1818                		move.b	(a0)+,d4
    1340/     C1E : 4246                		clr.w	d6
    1341/     C20 : 1C18                		move.b	(a0)+,d6
    1342/     C22 : 6100 0D32           		bsr	addr_Read
    1343/     C26 : B007                		cmp.b	d7,d0
    1344/     C28 : 40C5                		move	sr,d5
    1345/     C2A : 0245 000D           		andi.w	#$D,d5
    1346/     C2E : 0A05 0001           		eori.b	#1,d5
    1347/     C32 : 0203 0002           		andi.b	#2,d3
    1348/     C36 : 8605                		or.b	d5,d3
    1349/     C38 : 0205 0001           		andi.b	#1,d5
    1350/     C3C : E90D                		lsl.b	#4,d5
    1351/     C3E : 8605                		or.b	d5,d3
    1352/     C40 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1353/     C46 :                     ; ----------------------------------------------------------------
    1354/     C46 :                     
    1355/     C46 :                     loc_1268:				; DATA XREF: ROM:00000DA6o
    1356/     C46 : 4244                		clr.w	d4
    1357/     C48 : 1818                		move.b	(a0)+,d4
    1358/     C4A : 4246                		clr.w	d6
    1359/     C4C : 1C18                		move.b	(a0)+,d6
    1360/     C4E : 4207                		clr.b	d7
    1361/     C50 : D801                		add.b	d1,d4
    1362/     C52 : DD07                		addx.b	d7,d6
    1363/     C54 : 6100 0D00           		bsr	addr_Read
    1364/     C58 : B007                		cmp.b	d7,d0
    1365/     C5A : 40C5                		move	sr,d5
    1366/     C5C : 0245 000D           		andi.w	#$D,d5
    1367/     C60 : 0A05 0001           		eori.b	#1,d5
    1368/     C64 : 0203 0002           		andi.b	#2,d3
    1369/     C68 : 8605                		or.b	d5,d3
    1370/     C6A : 0205 0001           		andi.b	#1,d5
    1371/     C6E : E90D                		lsl.b	#4,d5
    1372/     C70 : 8605                		or.b	d5,d3
    1373/     C72 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1374/     C78 :                     ; ----------------------------------------------------------------
    1375/     C78 :                     
    1376/     C78 :                     loc_129A:				; DATA XREF: ROM:00000D96o
    1377/     C78 : 4244                		clr.w	d4
    1378/     C7A : 1818                		move.b	(a0)+,d4
    1379/     C7C : 4246                		clr.w	d6
    1380/     C7E : 1C18                		move.b	(a0)+,d6
    1381/     C80 : 4207                		clr.b	d7
    1382/     C82 : D802                		add.b	d2,d4
    1383/     C84 : DD07                		addx.b	d7,d6
    1384/     C86 : 6100 0CCE           		bsr	addr_Read
    1385/     C8A : B007                		cmp.b	d7,d0
    1386/     C8C : 40C5                		move	sr,d5
    1387/     C8E : 0245 000D           		andi.w	#$D,d5
    1388/     C92 : 0A05 0001           		eori.b	#1,d5
    1389/     C96 : 0203 0002           		andi.b	#2,d3
    1390/     C9A : 8605                		or.b	d5,d3
    1391/     C9C : 0205 0001           		andi.b	#1,d5
    1392/     CA0 : E90D                		lsl.b	#4,d5
    1393/     CA2 : 8605                		or.b	d5,d3
    1394/     CA4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1395/     CAA :                     ; ----------------------------------------------------------------
    1396/     CAA :                     
    1397/     CAA :                     loc_12CC:				; DATA XREF: ROM:00000d63o
    1398/     CAA : 4245                		clr.w	d5
    1399/     CAC : 1A18                		move.b	(a0)+,d5
    1400/     CAE : DA01                		add.b	d1,d5
    1401/     CB0 : 4244                		clr.w	d4
    1402/     CB2 : 1832 5000           		move.b	(a2,d5.w),d4
    1403/     CB6 : 4246                		clr.w	d6
    1404/     CB8 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1405/     CBC : 6100 0C98           		bsr	addr_Read
    1406/     CC0 : B007                		cmp.b	d7,d0
    1407/     CC2 : 40C5                		move	sr,d5
    1408/     CC4 : 0245 000D           		andi.w	#$D,d5
    1409/     CC8 : 0A05 0001           		eori.b	#1,d5
    1410/     CCC : 0203 0002           		andi.b	#2,d3
    1411/     CD0 : 8605                		or.b	d5,d3
    1412/     CD2 : 0205 0001           		andi.b	#1,d5
    1413/     CD6 : E90D                		lsl.b	#4,d5
    1414/     CD8 : 8605                		or.b	d5,d3
    1415/     CDA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1416/     CE0 :                     ; ----------------------------------------------------------------
    1417/     CE0 :                     
    1418/     CE0 :                     loc_1302:				; DATA XREF: ROM:00000D76o
    1419/     CE0 : 4245                		clr.w	d5
    1420/     CE2 : 1A18                		move.b	(a0)+,d5
    1421/     CE4 : 4244                		clr.w	d4
    1422/     CE6 : 1832 5000           		move.b	(a2,d5.w),d4
    1423/     CEA : 4246                		clr.w	d6
    1424/     CEC : 1C32 5001           		move.b	1(a2,d5.w),d6
    1425/     CF0 : 4207                		clr.b	d7
    1426/     CF2 : D802                		add.b	d2,d4
    1427/     CF4 : DD07                		addx.b	d7,d6
    1428/     CF6 : 6100 0C5E           		bsr	addr_Read
    1429/     CFA : B007                		cmp.b	d7,d0
    1430/     CFC : 40C5                		move	sr,d5
    1431/     CFE : 0245 000D           		andi.w	#$D,d5
    1432/     D02 : 0A05 0001           		eori.b	#1,d5
    1433/     D06 : 0203 0002           		andi.b	#2,d3
    1434/     D0A : 8605                		or.b	d5,d3
    1435/     D0C : 0205 0001           		andi.b	#1,d5
    1436/     D10 : E90D                		lsl.b	#4,d5
    1437/     D12 : 8605                		or.b	d5,d3
    1438/     D14 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1439/     D1A :                     ; ----------------------------------------------------------------
    1440/     D1A :                     
    1441/     D1A :                     loc_133C:				; DATA XREF: ROM:00000DB2o
    1442/     D1A : 1E18                		move.b	(a0)+,d7
    1443/     D1C : B207                		cmp.b	d7,d1
    1444/     D1E : 40C5                		move	sr,d5
    1445/     D20 : 0245 000D           		andi.w	#$D,d5
    1446/     D24 : 0A05 0001           		eori.b	#1,d5
    1447/     D28 : 0203 0002           		andi.b	#2,d3
    1448/     D2C : 8605                		or.b	d5,d3
    1449/     D2E : 0205 0001           		andi.b	#1,d5
    1450/     D32 : E90D                		lsl.b	#4,d5
    1451/     D34 : 8605                		or.b	d5,d3
    1452/     D36 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1453/     D3C :                     ; ----------------------------------------------------------------
    1454/     D3C :                     
    1455/     D3C :                     loc_135C:				; DATA XREF: ROM:00000DC2o
    1456/     D3C : 4246                		clr.w	d6
    1457/     D3E : 1C18                		move.b	(a0)+,d6
    1458/     D40 : 1E32 6000           		move.b	(a2,d6.w),d7
    1459/     D44 : B207                		cmp.b	d7,d1
    1460/     D46 : 40C5                		move	sr,d5
    1461/     D48 : 0245 000D           		andi.w	#$D,d5
    1462/     D4C : 0A05 0001           		eori.b	#1,d5
    1463/     D50 : 0203 0002           		andi.b	#2,d3
    1464/     D54 : 8605                		or.b	d5,d3
    1465/     D56 : 0205 0001           		andi.b	#1,d5
    1466/     D5A : E90D                		lsl.b	#4,d5
    1467/     D5C : 8605                		or.b	d5,d3
    1468/     D5E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1469/     D64 :                     ; ----------------------------------------------------------------
    1470/     D64 :                     
    1471/     D64 :                     loc_1382:				; DATA XREF: ROM:00000DE2o
    1472/     D64 : 4244                		clr.w	d4
    1473/     D66 : 1818                		move.b	(a0)+,d4
    1474/     D68 : 4246                		clr.w	d6
    1475/     D6A : 1C18                		move.b	(a0)+,d6
    1476/     D6C : 6100 0BE8           		bsr	addr_Read
    1477/     D70 : B207                		cmp.b	d7,d1
    1478/     D72 : 40C5                		move	sr,d5
    1479/     D74 : 0245 000D           		andi.w	#$D,d5
    1480/     D78 : 0A05 0001           		eori.b	#1,d5
    1481/     D7C : 0203 0002           		andi.b	#2,d3
    1482/     D80 : 8605                		or.b	d5,d3
    1483/     D82 : 0205 0001           		andi.b	#1,d5
    1484/     D86 : E90D                		lsl.b	#4,d5
    1485/     D88 : 8605                		or.b	d5,d3
    1486/     D8A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1487/     D90 :                     ; ----------------------------------------------------------------
    1488/     D90 :                     
    1489/     D90 :                     loc_13AE:				; DATA XREF: ROM:00000d62o
    1490/     D90 : 1E18                		move.b	(a0)+,d7
    1491/     D92 : B407                		cmp.b	d7,d2
    1492/     D94 : 40C5                		move	sr,d5
    1493/     D96 : 0245 000D           		andi.w	#$D,d5
    1494/     D9A : 0A05 0001           		eori.b	#1,d5
    1495/     D9E : 0203 0002           		andi.b	#2,d3
    1496/     DA2 : 8605                		or.b	d5,d3
    1497/     DA4 : 0205 0001           		andi.b	#1,d5
    1498/     DA8 : E90D                		lsl.b	#4,d5
    1499/     DAA : 8605                		or.b	d5,d3
    1500/     DAC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1501/     DB2 :                     ; ----------------------------------------------------------------
    1502/     DB2 :                     
    1503/     DB2 :                     loc_13CE:				; DATA XREF: ROM:00000D42o
    1504/     DB2 : 4246                		clr.w	d6
    1505/     DB4 : 1C18                		move.b	(a0)+,d6
    1506/     DB6 : 1E32 6000           		move.b	(a2,d6.w),d7
    1507/     DBA : B407                		cmp.b	d7,d2
    1508/     DBC : 40C5                		move	sr,d5
    1509/     DBE : 0245 000D           		andi.w	#$D,d5
    1510/     DC2 : 0A05 0001           		eori.b	#1,d5
    1511/     DC6 : 0203 0002           		andi.b	#2,d3
    1512/     DCA : 8605                		or.b	d5,d3
    1513/     DCC : 0205 0001           		andi.b	#1,d5
    1514/     DD0 : E90D                		lsl.b	#4,d5
    1515/     DD2 : 8605                		or.b	d5,d3
    1516/     DD4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1517/     DDA :                     ; ----------------------------------------------------------------
    1518/     DDA :                     
    1519/     DDA :                     loc_13F4:				; DATA XREF: ROM:00000d32o
    1520/     DDA : 4244                		clr.w	d4
    1521/     DDC : 1818                		move.b	(a0)+,d4
    1522/     DDE : 4246                		clr.w	d6
    1523/     DE0 : 1C18                		move.b	(a0)+,d6
    1524/     DE2 : 6100 0B72           		bsr	addr_Read
    1525/     DE6 : B407                		cmp.b	d7,d2
    1526/     DE8 : 40C5                		move	sr,d5
    1527/     DEA : 0245 000D           		andi.w	#$D,d5
    1528/     DEE : 0A05 0001           		eori.b	#1,d5
    1529/     DF2 : 0203 0002           		andi.b	#2,d3
    1530/     DF6 : 8605                		or.b	d5,d3
    1531/     DF8 : 0205 0001           		andi.b	#1,d5
    1532/     DFC : E90D                		lsl.b	#4,d5
    1533/     DFE : 8605                		or.b	d5,d3
    1534/     E00 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1535/     E06 :                     ; ----------------------------------------------------------------
    1536/     E06 :                     
    1537/     E06 :                     loc_1420:				; DATA XREF: ROM:00000D4Ao
    1538/     E06 : 4246                		clr.w	d6
    1539/     E08 : 1C18                		move.b	(a0)+,d6
    1540/     E0A : 5332 6000           		subq.b	#1,(a2,d6.w)
    1541/     E0E : 40C5                		move	sr,d5
    1542/     E10 : 0245 000C           		andi.w	#$C,d5
    1543/     E14 : 0203 00F3           		andi.b	#$F3,d3
    1544/     E18 : 8645                		or.w	d5,d3
    1545/     E1A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1546/     E20 :                     ; ----------------------------------------------------------------
    1547/     E20 :                     
    1548/     E20 :                     loc_1438:				; DATA XREF: ROM:00000D8Ao
    1549/     E20 : 4246                		clr.w	d6
    1550/     E22 : 1C18                		move.b	(a0)+,d6
    1551/     E24 : DC01                		add.b	d1,d6
    1552/     E26 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1553/     E2A : 40C5                		move	sr,d5
    1554/     E2C : 0245 000C           		andi.w	#$C,d5
    1555/     E30 : 0203 00F3           		andi.b	#$F3,d3
    1556/     E34 : 8645                		or.w	d5,d3
    1557/     E36 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1558/     E3C :                     ; ----------------------------------------------------------------
    1559/     E3C :                     
    1560/     E3C :                     loc_1452:				; DATA XREF: ROM:00000d3Ao
    1561/     E3C : 1818                		move.b	(a0)+,d4
    1562/     E3E : 1C18                		move.b	(a0)+,d6
    1563/     E40 : E14E                		lsl.w	#8,d6
    1564/     E42 : 1C04                		move.b	d4,d6
    1565/     E44 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1566/     E48 : 40C5                		move	sr,d5
    1567/     E4A : 0245 000C           		andi.w	#$C,d5
    1568/     E4E : 0203 00F3           		andi.b	#$F3,d3
    1569/     E52 : 8645                		or.w	d5,d3
    1570/     E54 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1571/     E5A :                     ; ----------------------------------------------------------------
    1572/     E5A :                     
    1573/     E5A :                     loc_146E:				; DATA XREF: ROM:00000DAAo
    1574/     E5A : 1818                		move.b	(a0)+,d4
    1575/     E5C : 1C18                		move.b	(a0)+,d6
    1576/     E5E : E14E                		lsl.w	#8,d6
    1577/     E60 : 1C04                		move.b	d4,d6
    1578/     E62 : DC41                		add.w	d1,d6
    1579/     E64 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1580/     E68 : 40C5                		move	sr,d5
    1581/     E6A : 0245 000C           		andi.w	#$C,d5
    1582/     E6E : 0203 00F3           		andi.b	#$F3,d3
    1583/     E72 : 8645                		or.w	d5,d3
    1584/     E74 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1585/     E7A :                     ; ----------------------------------------------------------------
    1586/     E7A :                     
    1587/     E7A :                     loc_148C:				; DATA XREF: ROM:00000D5Ao
    1588/     E7A : 5301                		subq.b	#1,d1
    1589/     E7C : 40C5                		move	sr,d5
    1590/     E7E : 0245 000C           		andi.w	#$C,d5
    1591/     E82 : 0203 00F3           		andi.b	#$F3,d3
    1592/     E86 : 8645                		or.w	d5,d3
    1593/     E88 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1594/     E8E :                     ; ----------------------------------------------------------------
    1595/     E8E :                     
    1596/     E8E :                     loc_149E:				; DATA XREF: ROM:00000C52o
    1597/     E8E : 5302                		subq.b	#1,d2
    1598/     E90 : 40C5                		move	sr,d5
    1599/     E92 : 0245 000C           		andi.w	#$C,d5
    1600/     E96 : 0203 00F3           		andi.b	#$F3,d3
    1601/     E9A : 8645                		or.w	d5,d3
    1602/     E9C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1603/     EA2 :                     ; ----------------------------------------------------------------
    1604/     EA2 :                     
    1605/     EA2 :                     loc_14B0:				; DATA XREF: ROM:00000B56o
    1606/     EA2 : 1E18                		move.b	(a0)+,d7
    1607/     EA4 : BF00                		eor.b	d7,d0
    1608/     EA6 : 40C5                		move	sr,d5
    1609/     EA8 : 0245 000C           		andi.w	#$C,d5
    1610/     EAC : 0203 00F3           		andi.b	#$F3,d3
    1611/     EB0 : 8645                		or.w	d5,d3
    1612/     EB2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1613/     EB8 :                     ; ----------------------------------------------------------------
    1614/     EB8 :                     
    1615/     EB8 :                     loc_14C4:				; DATA XREF: ROM:00000B46o
    1616/     EB8 : 4246                		clr.w	d6
    1617/     EBA : 1C18                		move.b	(a0)+,d6
    1618/     EBC : 1E32 6000           		move.b	(a2,d6.w),d7
    1619/     EC0 : BF00                		eor.b	d7,d0
    1620/     EC2 : 40C5                		move	sr,d5
    1621/     EC4 : 0245 000C           		andi.w	#$C,d5
    1622/     EC8 : 0203 00F3           		andi.b	#$F3,d3
    1623/     ECC : 8645                		or.w	d5,d3
    1624/     ECE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1625/     ED4 :                     ; ----------------------------------------------------------------
    1626/     ED4 :                     
    1627/     ED4 :                     loc_14DE:				; DATA XREF: ROM:00000B86o
    1628/     ED4 : 4246                		clr.w	d6
    1629/     ED6 : 1C18                		move.b	(a0)+,d6
    1630/     ED8 : DC01                		add.b	d1,d6
    1631/     EDA : 1E32 6000           		move.b	(a2,d6.w),d7
    1632/     EDE : BF00                		eor.b	d7,d0
    1633/     EE0 : 40C5                		move	sr,d5
    1634/     EE2 : 0245 000C           		andi.w	#$C,d5
    1635/     EE6 : 0203 00F3           		andi.b	#$F3,d3
    1636/     EEA : 8645                		or.w	d5,d3
    1637/     EEC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1638/     EF2 :                     ; ----------------------------------------------------------------
    1639/     EF2 :                     
    1640/     EF2 :                     loc_14FA:				; DATA XREF: ROM:00000B66o
    1641/     EF2 : 4244                		clr.w	d4
    1642/     EF4 : 1818                		move.b	(a0)+,d4
    1643/     EF6 : 4246                		clr.w	d6
    1644/     EF8 : 1C18                		move.b	(a0)+,d6
    1645/     EFA : 6100 0A5A           		bsr	addr_Read
    1646/     EFE : BF00                		eor.b	d7,d0
    1647/     F00 : 40C5                		move	sr,d5
    1648/     F02 : 0245 000C           		andi.w	#$C,d5
    1649/     F06 : 0203 00F3           		andi.b	#$F3,d3
    1650/     F0A : 8645                		or.w	d5,d3
    1651/     F0C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1652/     F12 :                     ; ----------------------------------------------------------------
    1653/     F12 :                     
    1654/     F12 :                     loc_151A:				; DATA XREF: ROM:00000BA6o
    1655/     F12 : 4244                		clr.w	d4
    1656/     F14 : 1818                		move.b	(a0)+,d4
    1657/     F16 : 4246                		clr.w	d6
    1658/     F18 : 1C18                		move.b	(a0)+,d6
    1659/     F1A : 4207                		clr.b	d7
    1660/     F1C : D801                		add.b	d1,d4
    1661/     F1E : DD07                		addx.b	d7,d6
    1662/     F20 : 6100 0A34           		bsr	addr_Read
    1663/     F24 : BF00                		eor.b	d7,d0
    1664/     F26 : 40C5                		move	sr,d5
    1665/     F28 : 0245 000C           		andi.w	#$C,d5
    1666/     F2C : 0203 00F3           		andi.b	#$F3,d3
    1667/     F30 : 8645                		or.w	d5,d3
    1668/     F32 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1669/     F38 :                     ; ----------------------------------------------------------------
    1670/     F38 :                     
    1671/     F38 :                     loc_1540:				; DATA XREF: ROM:00000B96o
    1672/     F38 : 4244                		clr.w	d4
    1673/     F3A : 1818                		move.b	(a0)+,d4
    1674/     F3C : 4246                		clr.w	d6
    1675/     F3E : 1C18                		move.b	(a0)+,d6
    1676/     F40 : 4207                		clr.b	d7
    1677/     F42 : D802                		add.b	d2,d4
    1678/     F44 : DD07                		addx.b	d7,d6
    1679/     F46 : 6100 0A0E           		bsr	addr_Read
    1680/     F4A : BF00                		eor.b	d7,d0
    1681/     F4C : 40C5                		move	sr,d5
    1682/     F4E : 0245 000C           		andi.w	#$C,d5
    1683/     F52 : 0203 00F3           		andi.b	#$F3,d3
    1684/     F56 : 8645                		or.w	d5,d3
    1685/     F58 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1686/     F5E :                     ; ----------------------------------------------------------------
    1687/     F5E :                     
    1688/     F5E :                     loc_1566:				; DATA XREF: ROM:00000B36o
    1689/     F5E : 4245                		clr.w	d5
    1690/     F60 : 1A18                		move.b	(a0)+,d5
    1691/     F62 : DA01                		add.b	d1,d5
    1692/     F64 : 4244                		clr.w	d4
    1693/     F66 : 1832 5000           		move.b	(a2,d5.w),d4
    1694/     F6A : 4246                		clr.w	d6
    1695/     F6C : 1C32 5001           		move.b	1(a2,d5.w),d6
    1696/     F70 : 6100 09E4           		bsr	addr_Read
    1697/     F74 : BF00                		eor.b	d7,d0
    1698/     F76 : 40C5                		move	sr,d5
    1699/     F78 : 0245 000C           		andi.w	#$C,d5
    1700/     F7C : 0203 00F3           		andi.b	#$F3,d3
    1701/     F80 : 8645                		or.w	d5,d3
    1702/     F82 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1703/     F88 :                     ; ----------------------------------------------------------------
    1704/     F88 :                     
    1705/     F88 :                     loc_1590:
    1706/     F88 : 4245                		clr.w	d5
    1707/     F8A : 1A18                		move.b	(a0)+,d5
    1708/     F8C : 4244                		clr.w	d4
    1709/     F8E : 1832 5000           		move.b	(a2,d5.w),d4
    1710/     F92 : 4246                		clr.w	d6
    1711/     F94 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1712/     F98 : 4207                		clr.b	d7
    1713/     F9A : D802                		add.b	d2,d4
    1714/     F9C : DD07                		addx.b	d7,d6
    1715/     F9E : 6100 09B6           		bsr	addr_Read
    1716/     FA2 : BF00                		eor.b	d7,d0
    1717/     FA4 : 40C5                		move	sr,d5
    1718/     FA6 : 0245 000C           		andi.w	#$C,d5
    1719/     FAA : 0203 00F3           		andi.b	#$F3,d3
    1720/     FAE : 8645                		or.w	d5,d3
    1721/     FB0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1722/     FB6 :                     ; ----------------------------------------------------------------
    1723/     FB6 :                     
    1724/     FB6 :                     loc_15BE:
    1725/     FB6 : 4246                		clr.w	d6
    1726/     FB8 : 1C18                		move.b	(a0)+,d6
    1727/     FBA : 5232 6000           		addq.b	#1,(a2,d6.w)
    1728/     FBE : 40C5                		move	sr,d5
    1729/     FC0 : 0245 000C           		andi.w	#$C,d5
    1730/     FC4 : 0203 00F3           		andi.b	#$F3,d3
    1731/     FC8 : 8645                		or.w	d5,d3
    1732/     FCA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1733/     FD0 :                     ; ----------------------------------------------------------------
    1734/     FD0 :                     
    1735/     FD0 :                     loc_15d3:
    1736/     FD0 : 4246                		clr.w	d6
    1737/     FD2 : 1C18                		move.b	(a0)+,d6
    1738/     FD4 : DC01                		add.b	d1,d6
    1739/     FD6 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1740/     FDA : 40C5                		move	sr,d5
    1741/     FDC : 0245 000C           		andi.w	#$C,d5
    1742/     FE0 : 0203 00F3           		andi.b	#$F3,d3
    1743/     FE4 : 8645                		or.w	d5,d3
    1744/     FE6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1745/     FEC :                     ; ----------------------------------------------------------------
    1746/     FEC :                     
    1747/     FEC :                     loc_15F0:
    1748/     FEC : 1818                		move.b	(a0)+,d4
    1749/     FEE : 1C18                		move.b	(a0)+,d6
    1750/     FF0 : E14E                		lsl.w	#8,d6
    1751/     FF2 : 1C04                		move.b	d4,d6
    1752/     FF4 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1753/     FF8 : 40C5                		move	sr,d5
    1754/     FFA : 0245 000C           		andi.w	#$C,d5
    1755/     FFE : 0203 00F3           		andi.b	#$F3,d3
    1756/    1002 : 8645                		or.w	d5,d3
    1757/    1004 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1758/    100A :                     ; ----------------------------------------------------------------
    1759/    100A :                     
    1760/    100A :                     loc_160C:
    1761/    100A : 1818                		move.b	(a0)+,d4
    1762/    100C : 1C18                		move.b	(a0)+,d6
    1763/    100E : E14E                		lsl.w	#8,d6
    1764/    1010 : 1C04                		move.b	d4,d6
    1765/    1012 : DC41                		add.w	d1,d6
    1766/    1014 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1767/    1018 : 40C5                		move	sr,d5
    1768/    101A : 0245 000C           		andi.w	#$C,d5
    1769/    101E : 0203 00F3           		andi.b	#$F3,d3
    1770/    1022 : 8645                		or.w	d5,d3
    1771/    1024 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1772/    102A :                     ; ----------------------------------------------------------------
    1773/    102A :                     
    1774/    102A :                     loc_162A:
    1775/    102A : 5201                		addq.b	#1,d1
    1776/    102C : 40C5                		move	sr,d5
    1777/    102E : 0245 000C           		andi.w	#$C,d5
    1778/    1032 : 0203 00F3           		andi.b	#$F3,d3
    1779/    1036 : 8645                		or.w	d5,d3
    1780/    1038 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1781/    103E :                     ; ----------------------------------------------------------------
    1782/    103E :                     
    1783/    103E :                     loc_163C:
    1784/    103E : 5202                		addq.b	#1,d2
    1785/    1040 : 40C5                		move	sr,d5
    1786/    1042 : 0245 000C           		andi.w	#$C,d5
    1787/    1046 : 0203 00F3           		andi.b	#$F3,d3
    1788/    104A : 8645                		or.w	d5,d3
    1789/    104C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1790/    1052 :                     ; ----------------------------------------------------------------
    1791/    1052 :                     ; $4C - JMP $xxxx
    1792/    1052 :                     ; ----------------------------------------------------------------
    1793/    1052 :                     
    1794/    1052 :                     loc_164E:
    1795/    1052 : 7C00                		moveq	#0,d6
    1796/    1054 : 1C28 0001           		move.b	1(a0),d6
    1797/    1058 : E14E                		lsl.w	#8,d6
    1798/    105A : 1C10                		move.b	(a0),d6
    1799/    105C :                     ; 		lea	(a2,d6.l),a0
    1800/    105C :                     		
    1801/    105C : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1802/    1062 : 2049                		movea.l a1,a0
    1803/    1064 : D1C6                		add.l 	d6,a0
    1804/    1066 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1805/    106C :                     
    1806/    106C :                     ; ----------------------------------------------------------------
    1807/    106C :                     ; $6C - JMP ($xxxx)
    1808/    106C :                     ; ----------------------------------------------------------------
    1809/    106C :                     
    1810/    106C :                     loc_1660:
    1811/    106C : 7800                		moveq	#0,d4
    1812/    106E : 1C28 0001           		move.b	1(a0),d6
    1813/    1072 : E14E                		lsl.w	#8,d6
    1814/    1074 : 1C10                		move.b	(a0),d6
    1815/    1076 : 1832 6001           		move.b	1(a2,d6.w),d4
    1816/    107A : E14C                		lsl.w	#8,d4
    1817/    107C : 1832 6000           		move.b	(a2,d6.w),d4
    1818/    1080 :                     		
    1819/    1080 :                     ; 		lea	(a2,d4.l),a0
    1820/    1080 : C8BC 0000 7FFF      		and.l	#$7FFF,d4
    1821/    1086 : 2049                		movea.l a1,a0
    1822/    1088 : D1C4                		add.l 	d4,a0
    1823/    108A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1824/    1090 :                     
    1825/    1090 :                     ; ----------------------------------------------------------------
    1826/    1090 :                     ; $6C - JSR $xxxx
    1827/    1090 :                     ; ----------------------------------------------------------------
    1828/    1090 :                     
    1829/    1090 :                     loc_167C:
    1830/    1090 : 7C00                		moveq	#0,d6
    1831/    1092 : 1818                		move.b	(a0)+,d4
    1832/    1094 : 1C10                		move.b	(a0),d6
    1833/    1096 : E14E                		lsl.w	#8,d6
    1834/    1098 : 1C04                		move.b	d4,d6
    1835/    109A :                     
    1836/    109A :                     loc_1686:
    1837/    109A : 4843                		swap	d3
    1838/    109C : 3808                		move.w	a0,d4
    1839/    109E : 1A04                		move.b	d4,d5
    1840/    10A0 : E04C                		lsr.w	#8,d4
    1841/    10A2 : 883C 0080           		or.b	#$80,d4
    1842/    10A6 : 1584 3000           		move.b	d4,(a2,d3.w)
    1843/    10AA : 5303                		subq.b	#1,d3
    1844/    10AC : 1585 3000           		move.b	d5,(a2,d3.w)
    1845/    10B0 : 5303                		subq.b	#1,d3
    1846/    10B2 : 4843                		swap	d3
    1847/    10B4 :                     ; 		lea	(a2,d6.l),a0
    1848/    10B4 :                     
    1849/    10B4 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1850/    10BA : 2049                		movea.l a1,a0
    1851/    10BC : D1C6                		add.l 	d6,a0
    1852/    10BE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1853/    10C4 :                     ; ----------------------------------------------------------------
    1854/    10C4 :                     ; $A9 - LDA #$xx
    1855/    10C4 :                     ; ----------------------------------------------------------------
    1856/    10C4 :                     
    1857/    10C4 :                     loc_16A4:
    1858/    10C4 : 1018                		move.b	(a0)+,d0
    1859/    10C6 : 40C5                		move	sr,d5
    1860/    10C8 : 0245 000C           		andi.w	#$C,d5
    1861/    10CC : 0203 00F3           		andi.b	#$F3,d3
    1862/    10D0 : 8645                		or.w	d5,d3
    1863/    10D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1864/    10D8 :                     ; ----------------------------------------------------------------
    1865/    10D8 :                     
    1866/    10D8 :                     loc_16B6:
    1867/    10D8 : 4246                		clr.w	d6
    1868/    10DA : 1C18                		move.b	(a0)+,d6
    1869/    10DC : 1032 6000           		move.b	(a2,d6.w),d0
    1870/    10E0 : 40C5                		move	sr,d5
    1871/    10E2 : 0245 000C           		andi.w	#$C,d5
    1872/    10E6 : 0203 00F3           		andi.b	#$F3,d3
    1873/    10EA : 8645                		or.w	d5,d3
    1874/    10EC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1875/    10F2 :                     ; ----------------------------------------------------------------
    1876/    10F2 :                     
    1877/    10F2 :                     loc_16CE:				; DATA XREF: ROM:00000D06o
    1878/    10F2 : 4246                		clr.w	d6
    1879/    10F4 : 1C18                		move.b	(a0)+,d6
    1880/    10F6 : DC01                		add.b	d1,d6
    1881/    10F8 : 1032 6000           		move.b	(a2,d6.w),d0
    1882/    10FC : 40C5                		move	sr,d5
    1883/    10FE : 0245 000C           		andi.w	#$C,d5
    1884/    1102 : 0203 00F3           		andi.b	#$F3,d3
    1885/    1106 : 8645                		or.w	d5,d3
    1886/    1108 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1887/    110E :                     ; ----------------------------------------------------------------
    1888/    110E :                     
    1889/    110E :                     loc_16E8:				; DATA XREF: ROM:00000CE6o
    1890/    110E : 4244                		clr.w	d4
    1891/    1110 : 1818                		move.b	(a0)+,d4
    1892/    1112 : 4246                		clr.w	d6
    1893/    1114 : 1C18                		move.b	(a0)+,d6
    1894/    1116 : 6100 083E           		bsr	addr_Read
    1895/    111A : 1007                		move.b	d7,d0
    1896/    111C : 40C5                		move	sr,d5
    1897/    111E : 0245 000C           		andi.w	#$C,d5
    1898/    1122 : 0203 00F3           		andi.b	#$F3,d3
    1899/    1126 : 8645                		or.w	d5,d3
    1900/    1128 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1901/    112E :                     ; ----------------------------------------------------------------
    1902/    112E :                     
    1903/    112E :                     loc_1708:				; DATA XREF: ROM:00000D26o
    1904/    112E : 4244                		clr.w	d4
    1905/    1130 : 1818                		move.b	(a0)+,d4
    1906/    1132 : 4246                		clr.w	d6
    1907/    1134 : 1C18                		move.b	(a0)+,d6
    1908/    1136 : 4207                		clr.b	d7
    1909/    1138 : D801                		add.b	d1,d4
    1910/    113A : DD07                		addx.b	d7,d6
    1911/    113C : 6100 0818           		bsr	addr_Read
    1912/    1140 : 1007                		move.b	d7,d0
    1913/    1142 : 40C5                		move	sr,d5
    1914/    1144 : 0245 000C           		andi.w	#$C,d5
    1915/    1148 : 0203 00F3           		andi.b	#$F3,d3
    1916/    114C : 8645                		or.w	d5,d3
    1917/    114E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1918/    1154 :                     ; ----------------------------------------------------------------
    1919/    1154 :                     
    1920/    1154 :                     loc_172E:				; DATA XREF: ROM:00000D16o
    1921/    1154 : 4244                		clr.w	d4
    1922/    1156 : 1818                		move.b	(a0)+,d4
    1923/    1158 : 4246                		clr.w	d6
    1924/    115A : 1C18                		move.b	(a0)+,d6
    1925/    115C : 4207                		clr.b	d7
    1926/    115E : D802                		add.b	d2,d4
    1927/    1160 : DD07                		addx.b	d7,d6
    1928/    1162 : 6100 07F2           		bsr	addr_Read
    1929/    1166 : 1007                		move.b	d7,d0
    1930/    1168 : 40C5                		move	sr,d5
    1931/    116A : 0245 000C           		andi.w	#$C,d5
    1932/    116E : 0203 00F3           		andi.b	#$F3,d3
    1933/    1172 : 8645                		or.w	d5,d3
    1934/    1174 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1935/    117A :                     ; ----------------------------------------------------------------
    1936/    117A :                     
    1937/    117A :                     loc_1754:				; DATA XREF: ROM:00000CB6o
    1938/    117A : 4245                		clr.w	d5
    1939/    117C : 1A18                		move.b	(a0)+,d5
    1940/    117E : DA01                		add.b	d1,d5
    1941/    1180 : 4244                		clr.w	d4
    1942/    1182 : 1832 5000           		move.b	(a2,d5.w),d4
    1943/    1186 : 4246                		clr.w	d6
    1944/    1188 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1945/    118C : 6100 07C8           		bsr	addr_Read
    1946/    1190 : 1007                		move.b	d7,d0
    1947/    1192 : 40C5                		move	sr,d5
    1948/    1194 : 0245 000C           		andi.w	#$C,d5
    1949/    1198 : 0203 00F3           		andi.b	#$F3,d3
    1950/    119C : 8645                		or.w	d5,d3
    1951/    119E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1952/    11A4 :                     ; ----------------------------------------------------------------
    1953/    11A4 :                     
    1954/    11A4 :                     loc_177E:				; DATA XREF: ROM:00000CF6o
    1955/    11A4 : 4245                		clr.w	d5
    1956/    11A6 : 1A18                		move.b	(a0)+,d5
    1957/    11A8 : 4244                		clr.w	d4
    1958/    11AA : 1832 5000           		move.b	(a2,d5.w),d4
    1959/    11AE : 4246                		clr.w	d6
    1960/    11B0 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1961/    11B4 : 4207                		clr.b	d7
    1962/    11B6 : D802                		add.b	d2,d4
    1963/    11B8 : DD07                		addx.b	d7,d6
    1964/    11BA : 6100 079A           		bsr	addr_Read
    1965/    11BE : 1007                		move.b	d7,d0
    1966/    11C0 : 40C5                		move	sr,d5
    1967/    11C2 : 0245 000C           		andi.w	#$C,d5
    1968/    11C6 : 0203 00F3           		andi.b	#$F3,d3
    1969/    11CA : 8645                		or.w	d5,d3
    1970/    11CC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1971/    11D2 :                     ; ----------------------------------------------------------------
    1972/    11D2 :                     
    1973/    11D2 :                     loc_17AC:				; DATA XREF: ROM:00000CBAo
    1974/    11D2 : 1218                		move.b	(a0)+,d1
    1975/    11D4 : 40C5                		move	sr,d5
    1976/    11D6 : 0245 000C           		andi.w	#$C,d5
    1977/    11DA : 0203 00F3           		andi.b	#$F3,d3
    1978/    11DE : 8645                		or.w	d5,d3
    1979/    11E0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1980/    11E6 :                     ; ----------------------------------------------------------------
    1981/    11E6 :                     
    1982/    11E6 :                     loc_17BE:				; DATA XREF: ROM:00000CCAo
    1983/    11E6 : 4246                		clr.w	d6
    1984/    11E8 : 1C18                		move.b	(a0)+,d6
    1985/    11EA : 1232 6000           		move.b	(a2,d6.w),d1
    1986/    11EE : 40C5                		move	sr,d5
    1987/    11F0 : 0245 000C           		andi.w	#$C,d5
    1988/    11F4 : 0203 00F3           		andi.b	#$F3,d3
    1989/    11F8 : 8645                		or.w	d5,d3
    1990/    11FA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1991/    1200 :                     ; ----------------------------------------------------------------
    1992/    1200 :                     
    1993/    1200 :                     loc_17d3:				; DATA XREF: ROM:00000D0Ao
    1994/    1200 : 4246                		clr.w	d6
    1995/    1202 : 1C18                		move.b	(a0)+,d6
    1996/    1204 : DC02                		add.b	d2,d6
    1997/    1206 : 1232 6000           		move.b	(a2,d6.w),d1
    1998/    120A : 40C5                		move	sr,d5
    1999/    120C : 0245 000C           		andi.w	#$C,d5
    2000/    1210 : 0203 00F3           		andi.b	#$F3,d3
    2001/    1214 : 8645                		or.w	d5,d3
    2002/    1216 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2003/    121C :                     ; ----------------------------------------------------------------
    2004/    121C :                     
    2005/    121C :                     loc_17F0:				; DATA XREF: ROM:00000CEAo
    2006/    121C : 4244                		clr.w	d4
    2007/    121E : 1818                		move.b	(a0)+,d4
    2008/    1220 : 4246                		clr.w	d6
    2009/    1222 : 1C18                		move.b	(a0)+,d6
    2010/    1224 : 6100 0730           		bsr	addr_Read
    2011/    1228 : 1207                		move.b	d7,d1
    2012/    122A : 40C5                		move	sr,d5
    2013/    122C : 0245 000C           		andi.w	#$C,d5
    2014/    1230 : 0203 00F3           		andi.b	#$F3,d3
    2015/    1234 : 8645                		or.w	d5,d3
    2016/    1236 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2017/    123C :                     ; ----------------------------------------------------------------
    2018/    123C :                     
    2019/    123C :                     loc_1810:				; DATA XREF: ROM:00000D2Ao
    2020/    123C : 4244                		clr.w	d4
    2021/    123E : 1818                		move.b	(a0)+,d4
    2022/    1240 : 4246                		clr.w	d6
    2023/    1242 : 1C18                		move.b	(a0)+,d6
    2024/    1244 : 4207                		clr.b	d7
    2025/    1246 : D802                		add.b	d2,d4
    2026/    1248 : DD07                		addx.b	d7,d6
    2027/    124A : 6100 070A           		bsr	addr_Read
    2028/    124E : 1207                		move.b	d7,d1
    2029/    1250 : 40C5                		move	sr,d5
    2030/    1252 : 0245 000C           		andi.w	#$C,d5
    2031/    1256 : 0203 00F3           		andi.b	#$F3,d3
    2032/    125A : 8645                		or.w	d5,d3
    2033/    125C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2034/    1262 :                     ; ----------------------------------------------------------------
    2035/    1262 :                     
    2036/    1262 :                     loc_1836:				; DATA XREF: ROM:00000CB2o
    2037/    1262 : 1418                		move.b	(a0)+,d2
    2038/    1264 : 40C5                		move	sr,d5
    2039/    1266 : 0245 000C           		andi.w	#$C,d5
    2040/    126A : 0203 00F3           		andi.b	#$F3,d3
    2041/    126E : 8645                		or.w	d5,d3
    2042/    1270 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2043/    1276 :                     ; ----------------------------------------------------------------
    2044/    1276 :                     
    2045/    1276 :                     loc_1848:				; DATA XREF: ROM:00000CC2o
    2046/    1276 : 4246                		clr.w	d6
    2047/    1278 : 1C18                		move.b	(a0)+,d6
    2048/    127A : 1432 6000           		move.b	(a2,d6.w),d2
    2049/    127E : 40C5                		move	sr,d5
    2050/    1280 : 0245 000C           		andi.w	#$C,d5
    2051/    1284 : 0203 00F3           		andi.b	#$F3,d3
    2052/    1288 : 8645                		or.w	d5,d3
    2053/    128A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2054/    1290 :                     ; ----------------------------------------------------------------
    2055/    1290 :                     
    2056/    1290 :                     loc_1860:				; DATA XREF: ROM:00000D02o
    2057/    1290 : 4246                		clr.w	d6
    2058/    1292 : 1C18                		move.b	(a0)+,d6
    2059/    1294 : DC01                		add.b	d1,d6
    2060/    1296 : 1432 6000           		move.b	(a2,d6.w),d2
    2061/    129A : 40C5                		move	sr,d5
    2062/    129C : 0245 000C           		andi.w	#$C,d5
    2063/    12A0 : 0203 00F3           		andi.b	#$F3,d3
    2064/    12A4 : 8645                		or.w	d5,d3
    2065/    12A6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2066/    12AC :                     ; ----------------------------------------------------------------
    2067/    12AC :                     
    2068/    12AC :                     loc_187A:				; DATA XREF: ROM:00000CE2o
    2069/    12AC : 4244                		clr.w	d4
    2070/    12AE : 1818                		move.b	(a0)+,d4
    2071/    12B0 : 4246                		clr.w	d6
    2072/    12B2 : 1C18                		move.b	(a0)+,d6
    2073/    12B4 : 6100 06A0           		bsr	addr_Read
    2074/    12B8 : 1407                		move.b	d7,d2
    2075/    12BA : 40C5                		move	sr,d5
    2076/    12BC : 0245 000C           		andi.w	#$C,d5
    2077/    12C0 : 0203 00F3           		andi.b	#$F3,d3
    2078/    12C4 : 8645                		or.w	d5,d3
    2079/    12C6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2080/    12CC :                     ; ----------------------------------------------------------------
    2081/    12CC :                     
    2082/    12CC :                     loc_189A:				; DATA XREF: ROM:00000D22o
    2083/    12CC : 4244                		clr.w	d4
    2084/    12CE : 1818                		move.b	(a0)+,d4
    2085/    12D0 : 4246                		clr.w	d6
    2086/    12D2 : 1C18                		move.b	(a0)+,d6
    2087/    12D4 : 4207                		clr.b	d7
    2088/    12D6 : D801                		add.b	d1,d4
    2089/    12D8 : DD07                		addx.b	d7,d6
    2090/    12DA : 6100 067A           		bsr	addr_Read
    2091/    12DE : 1407                		move.b	d7,d2
    2092/    12E0 : 40C5                		move	sr,d5
    2093/    12E2 : 0245 000C           		andi.w	#$C,d5
    2094/    12E6 : 0203 00F3           		andi.b	#$F3,d3
    2095/    12EA : 8645                		or.w	d5,d3
    2096/    12EC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2097/    12F2 :                     ; ----------------------------------------------------------------
    2098/    12F2 :                     
    2099/    12F2 :                     loc_18C0:				; DATA XREF: ROM:00000B5Ao
    2100/    12F2 : E208                		lsr.b	#1,d0
    2101/    12F4 : 40C5                		move	sr,d5
    2102/    12F6 : 0245 001D           		andi.w	#$1D,d5
    2103/    12FA : 0203 00E2           		andi.b	#$E2,d3
    2104/    12FE : 8645                		or.w	d5,d3
    2105/    1300 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2106/    1306 :                     ; ----------------------------------------------------------------
    2107/    1306 :                     
    2108/    1306 :                     loc_18D2:				; DATA XREF: ROM:00000B4Ao
    2109/    1306 : 4246                		clr.w	d6
    2110/    1308 : 1C18                		move.b	(a0)+,d6
    2111/    130A : 1E32 6000           		move.b	(a2,d6.w),d7
    2112/    130E : E20F                		lsr.b	#1,d7
    2113/    1310 : 40C5                		move	sr,d5
    2114/    1312 : 0245 001D           		andi.w	#$1D,d5
    2115/    1316 : 0203 00E2           		andi.b	#$E2,d3
    2116/    131A : 8645                		or.w	d5,d3
    2117/    131C : 1587 6000           		move.b	d7,(a2,d6.w)
    2118/    1320 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2119/    1326 :                     ; ----------------------------------------------------------------
    2120/    1326 :                     
    2121/    1326 :                     loc_18F0:				; DATA XREF: ROM:00000B8Ao
    2122/    1326 : 4246                		clr.w	d6
    2123/    1328 : 1C18                		move.b	(a0)+,d6
    2124/    132A : DC01                		add.b	d1,d6
    2125/    132C : 1E32 6000           		move.b	(a2,d6.w),d7
    2126/    1330 : E20F                		lsr.b	#1,d7
    2127/    1332 : 40C5                		move	sr,d5
    2128/    1334 : 0245 001D           		andi.w	#$1D,d5
    2129/    1338 : 0203 00E2           		andi.b	#$E2,d3
    2130/    133C : 8645                		or.w	d5,d3
    2131/    133E : 1587 6000           		move.b	d7,(a2,d6.w)
    2132/    1342 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2133/    1348 :                     ; ----------------------------------------------------------------
    2134/    1348 :                     
    2135/    1348 :                     loc_1910:				; DATA XREF: ROM:00000B6Ao
    2136/    1348 : 1818                		move.b	(a0)+,d4
    2137/    134A : 1C18                		move.b	(a0)+,d6
    2138/    134C : E14E                		lsl.w	#8,d6
    2139/    134E : 1C04                		move.b	d4,d6
    2140/    1350 : 1E32 6000           		move.b	(a2,d6.w),d7
    2141/    1354 : E20F                		lsr.b	#1,d7
    2142/    1356 : 40C5                		move	sr,d5
    2143/    1358 : 0245 001D           		andi.w	#$1D,d5
    2144/    135C : 0203 00E2           		andi.b	#$E2,d3
    2145/    1360 : 8645                		or.w	d5,d3
    2146/    1362 : 1587 6000           		move.b	d7,(a2,d6.w)
    2147/    1366 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2148/    136C :                     ; ----------------------------------------------------------------
    2149/    136C :                     
    2150/    136C :                     loc_1932:				; DATA XREF: ROM:00000BAAo
    2151/    136C : 1818                		move.b	(a0)+,d4
    2152/    136E : 1C18                		move.b	(a0)+,d6
    2153/    1370 : E14E                		lsl.w	#8,d6
    2154/    1372 : 1C04                		move.b	d4,d6
    2155/    1374 : DC41                		add.w	d1,d6
    2156/    1376 : 1E32 6000           		move.b	(a2,d6.w),d7
    2157/    137A : E20F                		lsr.b	#1,d7
    2158/    137C : 40C5                		move	sr,d5
    2159/    137E : 0245 001D           		andi.w	#$1D,d5
    2160/    1382 : 0203 00E2           		andi.b	#$E2,d3
    2161/    1386 : 8645                		or.w	d5,d3
    2162/    1388 : 1587 6000           		move.b	d7,(a2,d6.w)
    2163/    138C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2164/    1392 :                     ; ----------------------------------------------------------------
    2165/    1392 :                     
    2166/    1392 :                     loc_1956:				; DATA XREF: ROM:00000DDAo
    2167/    1392 : 4E71                		nop
    2168/    1394 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2169/    139A :                     ; ----------------------------------------------------------------
    2170/    139A :                     
    2171/    139A :                     loc_195C:				; DATA XREF: ROM:00000A56o
    2172/    139A : 1E18                		move.b	(a0)+,d7
    2173/    139C : 8007                		or.b	d7,d0
    2174/    139E : 40C5                		move	sr,d5
    2175/    13A0 : 0245 000C           		andi.w	#$C,d5
    2176/    13A4 : 0203 00F3           		andi.b	#$F3,d3
    2177/    13A8 : 8645                		or.w	d5,d3
    2178/    13AA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2179/    13B0 :                     ; ----------------------------------------------------------------
    2180/    13B0 :                     
    2181/    13B0 :                     loc_1970:				; DATA XREF: ROM:00000A46o
    2182/    13B0 : 4246                		clr.w	d6
    2183/    13B2 : 1C18                		move.b	(a0)+,d6
    2184/    13B4 : 1E32 6000           		move.b	(a2,d6.w),d7
    2185/    13B8 : 8007                		or.b	d7,d0
    2186/    13BA : 40C5                		move	sr,d5
    2187/    13BC : 0245 000C           		andi.w	#$C,d5
    2188/    13C0 : 0203 00F3           		andi.b	#$F3,d3
    2189/    13C4 : 8645                		or.w	d5,d3
    2190/    13C6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2191/    13CC :                     ; ----------------------------------------------------------------
    2192/    13CC :                     
    2193/    13CC :                     loc_198A:				; DATA XREF: ROM:00000A86o
    2194/    13CC : 4246                		clr.w	d6
    2195/    13CE : 1C18                		move.b	(a0)+,d6
    2196/    13D0 : DC01                		add.b	d1,d6
    2197/    13D2 : 1E32 6000           		move.b	(a2,d6.w),d7
    2198/    13D6 : 8007                		or.b	d7,d0
    2199/    13D8 : 40C5                		move	sr,d5
    2200/    13DA : 0245 000C           		andi.w	#$C,d5
    2201/    13DE : 0203 00F3           		andi.b	#$F3,d3
    2202/    13E2 : 8645                		or.w	d5,d3
    2203/    13E4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2204/    13EA :                     ; ----------------------------------------------------------------
    2205/    13EA :                     
    2206/    13EA :                     loc_19A6:				; DATA XREF: ROM:00000A66o
    2207/    13EA : 4244                		clr.w	d4
    2208/    13EC : 1818                		move.b	(a0)+,d4
    2209/    13EE : 4246                		clr.w	d6
    2210/    13F0 : 1C18                		move.b	(a0)+,d6
    2211/    13F2 : 6100 0562           		bsr	addr_Read
    2212/    13F6 : 8007                		or.b	d7,d0
    2213/    13F8 : 40C5                		move	sr,d5
    2214/    13FA : 0245 000C           		andi.w	#$C,d5
    2215/    13FE : 0203 00F3           		andi.b	#$F3,d3
    2216/    1402 : 8645                		or.w	d5,d3
    2217/    1404 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2218/    140A :                     ; ----------------------------------------------------------------
    2219/    140A :                     
    2220/    140A :                     loc_19C6:				; DATA XREF: ROM:00000AA6o
    2221/    140A : 4244                		clr.w	d4
    2222/    140C : 1818                		move.b	(a0)+,d4
    2223/    140E : 4246                		clr.w	d6
    2224/    1410 : 1C18                		move.b	(a0)+,d6
    2225/    1412 : 4207                		clr.b	d7
    2226/    1414 : D801                		add.b	d1,d4
    2227/    1416 : DD07                		addx.b	d7,d6
    2228/    1418 : 6100 053C           		bsr	addr_Read
    2229/    141C : 8007                		or.b	d7,d0
    2230/    141E : 40C5                		move	sr,d5
    2231/    1420 : 0245 000C           		andi.w	#$C,d5
    2232/    1424 : 0203 00F3           		andi.b	#$F3,d3
    2233/    1428 : 8645                		or.w	d5,d3
    2234/    142A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2235/    1430 :                     ; ----------------------------------------------------------------
    2236/    1430 :                     
    2237/    1430 :                     loc_19EC:				; DATA XREF: ROM:00000A96o
    2238/    1430 : 4244                		clr.w	d4
    2239/    1432 : 1818                		move.b	(a0)+,d4
    2240/    1434 : 4246                		clr.w	d6
    2241/    1436 : 1C18                		move.b	(a0)+,d6
    2242/    1438 : 4207                		clr.b	d7
    2243/    143A : D802                		add.b	d2,d4
    2244/    143C : DD07                		addx.b	d7,d6
    2245/    143E : 6100 0516           		bsr	addr_Read
    2246/    1442 : 8007                		or.b	d7,d0
    2247/    1444 : 40C5                		move	sr,d5
    2248/    1446 : 0245 000C           		andi.w	#$C,d5
    2249/    144A : 0203 00F3           		andi.b	#$F3,d3
    2250/    144E : 8645                		or.w	d5,d3
    2251/    1450 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2252/    1456 :                     ; ----------------------------------------------------------------
    2253/    1456 :                     
    2254/    1456 :                     loc_1A12:
    2255/    1456 : 4245                		clr.w	d5
    2256/    1458 : 1A18                		move.b	(a0)+,d5
    2257/    145A : DA01                		add.b	d1,d5
    2258/    145C : 4244                		clr.w	d4
    2259/    145E : 1832 5000           		move.b	(a2,d5.w),d4
    2260/    1462 : 4246                		clr.w	d6
    2261/    1464 : 1C32 5001           		move.b	1(a2,d5.w),d6
    2262/    1468 : 6100 04EC           		bsr	addr_Read
    2263/    146C : 8007                		or.b	d7,d0
    2264/    146E : 40C5                		move	sr,d5
    2265/    1470 : 0245 000C           		andi.w	#$C,d5
    2266/    1474 : 0203 00F3           		andi.b	#$F3,d3
    2267/    1478 : 8645                		or.w	d5,d3
    2268/    147A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2269/    1480 :                     ; ----------------------------------------------------------------
    2270/    1480 :                     
    2271/    1480 :                     loc_1A3C:
    2272/    1480 : 4245                		clr.w	d5
    2273/    1482 : 1A18                		move.b	(a0)+,d5
    2274/    1484 : 4244                		clr.w	d4
    2275/    1486 : 1832 5000           		move.b	(a2,d5.w),d4
    2276/    148A : 4246                		clr.w	d6
    2277/    148C : 1C32 5001           		move.b	1(a2,d5.w),d6
    2278/    1490 : 4207                		clr.b	d7
    2279/    1492 : D802                		add.b	d2,d4
    2280/    1494 : DD07                		addx.b	d7,d6
    2281/    1496 : 6100 04BE           		bsr	addr_Read
    2282/    149A : 8007                		or.b	d7,d0
    2283/    149C : 40C5                		move	sr,d5
    2284/    149E : 0245 000C           		andi.w	#$C,d5
    2285/    14A2 : 0203 00F3           		andi.b	#$F3,d3
    2286/    14A6 : 8645                		or.w	d5,d3
    2287/    14A8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2288/    14AE :                     ; ----------------------------------------------------------------
    2289/    14AE :                     
    2290/    14AE :                     loc_1A6A:				; DATA XREF: ROM:00000B52o
    2291/    14AE : 4843                		swap	d3
    2292/    14B0 : 1580 3000           		move.b	d0,(a2,d3.w)
    2293/    14B4 : 5303                		subq.b	#1,d3
    2294/    14B6 : 4843                		swap	d3
    2295/    14B8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2296/    14BE :                     ; ----------------------------------------------------------------
    2297/    14BE :                     
    2298/    14BE :                     loc_1A78:				; DATA XREF: ROM:00000A52o
    2299/    14BE : 3A03                		move.w	d3,d5
    2300/    14C0 : 4843                		swap	d3
    2301/    14C2 : 1585 3000           		move.b	d5,(a2,d3.w)
    2302/    14C6 : 5303                		subq.b	#1,d3
    2303/    14C8 : 4843                		swap	d3
    2304/    14CA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2305/    14D0 :                     ; ----------------------------------------------------------------
    2306/    14D0 :                     
    2307/    14D0 :                     loc_1A88:				; DATA XREF: ROM:00000BD2o
    2308/    14D0 : 0683 0001 0000      		addi.l	#$10000,d3
    2309/    14D6 : 2A03                		move.l	d3,d5
    2310/    14D8 : 4845                		swap	d5
    2311/    14DA : 1032 5000           		move.b	(a2,d5.w),d0
    2312/    14DE : 40C5                		move	sr,d5
    2313/    14E0 : 0245 000C           		andi.w	#$C,d5
    2314/    14E4 : 0203 00F3           		andi.b	#$F3,d3
    2315/    14E8 : 8645                		or.w	d5,d3
    2316/    14EA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2317/    14F0 :                     ; ----------------------------------------------------------------
    2318/    14F0 :                     
    2319/    14F0 :                     loc_1AA6:				; DATA XREF: ROM:00000AD2o
    2320/    14F0 : 4843                		swap	d3
    2321/    14F2 : 5203                		addq.b	#1,d3
    2322/    14F4 : 1A32 3000           		move.b	(a2,d3.w),d5
    2323/    14F8 : 4843                		swap	d3
    2324/    14FA : 1605                		move.b	d5,d3
    2325/    14FC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2326/    1502 :                     ; ----------------------------------------------------------------
    2327/    1502 :                     
    2328/    1502 :                     loc_1AB6:				; DATA XREF: ROM:00000ADAo
    2329/    1502 : 46C3                		move	d3,sr
    2330/    1504 : E310                		roxl.b	#1,d0
    2331/    1506 : 40C5                		move	sr,d5
    2332/    1508 : 0245 001D           		andi.w	#$1D,d5
    2333/    150C : 0203 00E2           		andi.b	#$E2,d3
    2334/    1510 : 8645                		or.w	d5,d3
    2335/    1512 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2336/    1518 :                     ; ----------------------------------------------------------------
    2337/    1518 :                     
    2338/    1518 :                     loc_1ACA:				; DATA XREF: ROM:00000ACAo
    2339/    1518 : 4246                		clr.w	d6
    2340/    151A : 1C18                		move.b	(a0)+,d6
    2341/    151C : 1E32 6000           		move.b	(a2,d6.w),d7
    2342/    1520 : 46C3                		move	d3,sr
    2343/    1522 : E317                		roxl.b	#1,d7
    2344/    1524 : 40C5                		move	sr,d5
    2345/    1526 : 0245 001D           		andi.w	#$1D,d5
    2346/    152A : 0203 00E2           		andi.b	#$E2,d3
    2347/    152E : 8645                		or.w	d5,d3
    2348/    1530 : 1587 6000           		move.b	d7,(a2,d6.w)
    2349/    1534 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2350/    153A :                     ; ----------------------------------------------------------------
    2351/    153A :                     
    2352/    153A :                     loc_1AEA:				; DATA XREF: ROM:00000B0Ao
    2353/    153A : 4246                		clr.w	d6
    2354/    153C : 1C18                		move.b	(a0)+,d6
    2355/    153E : DC01                		add.b	d1,d6
    2356/    1540 : 1E32 6000           		move.b	(a2,d6.w),d7
    2357/    1544 : 46C3                		move	d3,sr
    2358/    1546 : E317                		roxl.b	#1,d7
    2359/    1548 : 40C5                		move	sr,d5
    2360/    154A : 0245 001D           		andi.w	#$1D,d5
    2361/    154E : 0203 00E2           		andi.b	#$E2,d3
    2362/    1552 : 8645                		or.w	d5,d3
    2363/    1554 : 1587 6000           		move.b	d7,(a2,d6.w)
    2364/    1558 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2365/    155E :                     ; ----------------------------------------------------------------
    2366/    155E :                     
    2367/    155E :                     loc_1B0C:				; DATA XREF: ROM:00000AEAo
    2368/    155E : 1818                		move.b	(a0)+,d4
    2369/    1560 : 1C18                		move.b	(a0)+,d6
    2370/    1562 : E14E                		lsl.w	#8,d6
    2371/    1564 : 1C04                		move.b	d4,d6
    2372/    1566 : 1E32 6000           		move.b	(a2,d6.w),d7
    2373/    156A : 46C3                		move	d3,sr
    2374/    156C : E317                		roxl.b	#1,d7
    2375/    156E : 40C5                		move	sr,d5
    2376/    1570 : 0245 001D           		andi.w	#$1D,d5
    2377/    1574 : 0203 00E2           		andi.b	#$E2,d3
    2378/    1578 : 8645                		or.w	d5,d3
    2379/    157A : 1587 6000           		move.b	d7,(a2,d6.w)
    2380/    157E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2381/    1584 :                     ; ----------------------------------------------------------------
    2382/    1584 :                     
    2383/    1584 :                     loc_1B30:				; DATA XREF: ROM:00000B2Ao
    2384/    1584 : 1818                		move.b	(a0)+,d4
    2385/    1586 : 1C18                		move.b	(a0)+,d6
    2386/    1588 : E14E                		lsl.w	#8,d6
    2387/    158A : 1C04                		move.b	d4,d6
    2388/    158C : DC41                		add.w	d1,d6
    2389/    158E : 1E32 6000           		move.b	(a2,d6.w),d7
    2390/    1592 : 46C3                		move	d3,sr
    2391/    1594 : E317                		roxl.b	#1,d7
    2392/    1596 : 40C5                		move	sr,d5
    2393/    1598 : 0245 001D           		andi.w	#$1D,d5
    2394/    159C : 0203 00E2           		andi.b	#$E2,d3
    2395/    15A0 : 8645                		or.w	d5,d3
    2396/    15A2 : 1587 6000           		move.b	d7,(a2,d6.w)
    2397/    15A6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2398/    15AC :                     ; ----------------------------------------------------------------
    2399/    15AC :                     
    2400/    15AC :                     loc_1B56:				; DATA XREF: ROM:00000BDAo
    2401/    15AC : 46C3                		move	d3,sr
    2402/    15AE : E210                		roxr.b	#1,d0
    2403/    15B0 : 40C5                		move	sr,d5
    2404/    15B2 : 0245 001D           		andi.w	#$1D,d5
    2405/    15B6 : 0203 00E2           		andi.b	#$E2,d3
    2406/    15BA : 8645                		or.w	d5,d3
    2407/    15BC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2408/    15C2 :                     ; ----------------------------------------------------------------
    2409/    15C2 :                     
    2410/    15C2 :                     loc_1B6A:				; DATA XREF: ROM:00000BCAo
    2411/    15C2 : 4246                		clr.w	d6
    2412/    15C4 : 1C18                		move.b	(a0)+,d6
    2413/    15C6 : 1E32 6000           		move.b	(a2,d6.w),d7
    2414/    15CA : 46C3                		move	d3,sr
    2415/    15CC : E217                		roxr.b	#1,d7
    2416/    15CE : 40C5                		move	sr,d5
    2417/    15D0 : 0245 001D           		andi.w	#$1D,d5
    2418/    15D4 : 0203 00E2           		andi.b	#$E2,d3
    2419/    15D8 : 8645                		or.w	d5,d3
    2420/    15DA : 1587 6000           		move.b	d7,(a2,d6.w)
    2421/    15DE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2422/    15E4 :                     ; ----------------------------------------------------------------
    2423/    15E4 :                     
    2424/    15E4 :                     loc_1B8A:				; DATA XREF: ROM:00000C0Ao
    2425/    15E4 : 4246                		clr.w	d6
    2426/    15E6 : 1C18                		move.b	(a0)+,d6
    2427/    15E8 : DC01                		add.b	d1,d6
    2428/    15EA : 1E32 6000           		move.b	(a2,d6.w),d7
    2429/    15EE : 46C3                		move	d3,sr
    2430/    15F0 : E217                		roxr.b	#1,d7
    2431/    15F2 : 40C5                		move	sr,d5
    2432/    15F4 : 0245 001D           		andi.w	#$1D,d5
    2433/    15F8 : 0203 00E2           		andi.b	#$E2,d3
    2434/    15FC : 8645                		or.w	d5,d3
    2435/    15FE : 1587 6000           		move.b	d7,(a2,d6.w)
    2436/    1602 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2437/    1608 :                     ; ----------------------------------------------------------------
    2438/    1608 :                     
    2439/    1608 :                     loc_1BAC:				; DATA XREF: ROM:00000BEAo
    2440/    1608 : 1818                		move.b	(a0)+,d4
    2441/    160A : 1C18                		move.b	(a0)+,d6
    2442/    160C : E14E                		lsl.w	#8,d6
    2443/    160E : 1C04                		move.b	d4,d6
    2444/    1610 : 1E32 6000           		move.b	(a2,d6.w),d7
    2445/    1614 : 46C3                		move	d3,sr
    2446/    1616 : E217                		roxr.b	#1,d7
    2447/    1618 : 40C5                		move	sr,d5
    2448/    161A : 0245 001D           		andi.w	#$1D,d5
    2449/    161E : 0203 00E2           		andi.b	#$E2,d3
    2450/    1622 : 8645                		or.w	d5,d3
    2451/    1624 : 1587 6000           		move.b	d7,(a2,d6.w)
    2452/    1628 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2453/    162E :                     ; ----------------------------------------------------------------
    2454/    162E :                     
    2455/    162E :                     loc_1BD0:				; DATA XREF: ROM:00000C2Ao
    2456/    162E : 1818                		move.b	(a0)+,d4
    2457/    1630 : 1C18                		move.b	(a0)+,d6
    2458/    1632 : E14E                		lsl.w	#8,d6
    2459/    1634 : 1C04                		move.b	d4,d6
    2460/    1636 : DC41                		add.w	d1,d6
    2461/    1638 : 1E32 6000           		move.b	(a2,d6.w),d7
    2462/    163C : 46C3                		move	d3,sr
    2463/    163E : E217                		roxr.b	#1,d7
    2464/    1640 : 40C5                		move	sr,d5
    2465/    1642 : 0245 001D           		andi.w	#$1D,d5
    2466/    1646 : 0203 00E2           		andi.b	#$E2,d3
    2467/    164A : 8645                		or.w	d5,d3
    2468/    164C : 1587 6000           		move.b	d7,(a2,d6.w)
    2469/    1650 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2470/    1656 :                     
    2471/    1656 :                     ; ----------------------------------------------------------------
    2472/    1656 :                     ; $40 - RTI
    2473/    1656 :                     ; 
    2474/    1656 :                     ; NOTE: Interrupt exit
    2475/    1656 :                     ; ----------------------------------------------------------------
    2476/    1656 :                     
    2477/    1656 :                     loc_1BF6:
    2478/    1656 : 361F                		move.w	(sp)+,d3
    2479/    1658 : 4CDF 2110           		movem.l	(sp)+,d4/a0/a5
    2480/    165C :                     
    2481/    165C : 23FC 0000 0572 FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
    2482/    1666 : 397C 0000 0010      		move.w	#0,cpuFamiVint(a4)
    2483/    166C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2484/    1672 :                     
    2485/    1672 :                     ; ----------------------------------------------------------------
    2486/    1672 :                     ; $60 - RTS
    2487/    1672 :                     ; ----------------------------------------------------------------
    2488/    1672 :                     
    2489/    1672 :                     loc_1C32:
    2490/    1672 : 4843                		swap	d3
    2491/    1674 : 7C00                		moveq	#0,d6
    2492/    1676 : 5203                		addq.b	#1,d3
    2493/    1678 : 1832 3000           		move.b	(a2,d3.w),d4
    2494/    167C : 5203                		addq.b	#1,d3
    2495/    167E : 1C32 3000           		move.b	(a2,d3.w),d6
    2496/    1682 : E14E                		lsl.w	#8,d6
    2497/    1684 : 1C04                		move.b	d4,d6
    2498/    1686 : 4843                		swap	d3
    2499/    1688 : 5246                		addq.w	#1,d6
    2500/    168A :                     ; 		lea	(a2,d6.l),a0
    2501/    168A :                     
    2502/    168A : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2503/    1690 : 2049                		movea.l a1,a0
    2504/    1692 : D1C6                		add.l 	d6,a0
    2505/    1694 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2506/    169A :                     ; ----------------------------------------------------------------
    2507/    169A :                     
    2508/    169A :                     loc_1C52:
    2509/    169A : 1E18                		move.b	(a0)+,d7
    2510/    169C : 0A03 0011           		eori.b	#$11,d3
    2511/    16A0 : 0003 0004           		ori.b	#4,d3
    2512/    16A4 : 46C3                		move	d3,sr
    2513/    16A6 : 9107                		subx.b	d7,d0
    2514/    16A8 : 40C3                		move	sr,d3
    2515/    16AA : 0A03 0011           		eori.b	#$11,d3
    2516/    16AE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2517/    16B4 :                     ; ----------------------------------------------------------------
    2518/    16B4 :                     
    2519/    16B4 :                     loc_1C6A:
    2520/    16B4 : 4246                		clr.w	d6
    2521/    16B6 : 1C18                		move.b	(a0)+,d6
    2522/    16B8 : 1E32 6000           		move.b	(a2,d6.w),d7
    2523/    16BC : 0A03 0011           		eori.b	#$11,d3
    2524/    16C0 : 0003 0004           		ori.b	#4,d3
    2525/    16C4 : 46C3                		move	d3,sr
    2526/    16C6 : 9107                		subx.b	d7,d0
    2527/    16C8 : 40C3                		move	sr,d3
    2528/    16CA : 0A03 0011           		eori.b	#$11,d3
    2529/    16CE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2530/    16D4 :                     ; ----------------------------------------------------------------
    2531/    16D4 :                     
    2532/    16D4 :                     loc_1C88:				; DATA XREF: ROM:00000E06o
    2533/    16D4 : 4246                		clr.w	d6
    2534/    16D6 : 1C18                		move.b	(a0)+,d6
    2535/    16D8 : DC01                		add.b	d1,d6
    2536/    16DA : 1E32 6000           		move.b	(a2,d6.w),d7
    2537/    16DE : 0A03 0011           		eori.b	#$11,d3
    2538/    16E2 : 0003 0004           		ori.b	#4,d3
    2539/    16E6 : 46C3                		move	d3,sr
    2540/    16E8 : 9107                		subx.b	d7,d0
    2541/    16EA : 40C3                		move	sr,d3
    2542/    16EC : 0A03 0011           		eori.b	#$11,d3
    2543/    16F0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2544/    16F6 :                     ; ----------------------------------------------------------------
    2545/    16F6 :                     
    2546/    16F6 :                     loc_1CA8:				; DATA XREF: ROM:00000DE6o
    2547/    16F6 : 4244                		clr.w	d4
    2548/    16F8 : 1818                		move.b	(a0)+,d4
    2549/    16FA : 4246                		clr.w	d6
    2550/    16FC : 1C18                		move.b	(a0)+,d6
    2551/    16FE : 6100 0256           		bsr	addr_Read
    2552/    1702 : 0A03 0011           		eori.b	#$11,d3
    2553/    1706 : 0003 0004           		ori.b	#4,d3
    2554/    170A : 46C3                		move	d3,sr
    2555/    170C : 9107                		subx.b	d7,d0
    2556/    170E : 40C3                		move	sr,d3
    2557/    1710 : 0A03 0011           		eori.b	#$11,d3
    2558/    1714 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2559/    171A :                     ; ----------------------------------------------------------------
    2560/    171A :                     
    2561/    171A :                     loc_1CCC:				; DATA XREF: ROM:00000E26o
    2562/    171A : 4244                		clr.w	d4
    2563/    171C : 1818                		move.b	(a0)+,d4
    2564/    171E : 4246                		clr.w	d6
    2565/    1720 : 1C18                		move.b	(a0)+,d6
    2566/    1722 : 4207                		clr.b	d7
    2567/    1724 : D801                		add.b	d1,d4
    2568/    1726 : DD07                		addx.b	d7,d6
    2569/    1728 : 6100 022C           		bsr	addr_Read
    2570/    172C : 0A03 0011           		eori.b	#$11,d3
    2571/    1730 : 0003 0004           		ori.b	#4,d3
    2572/    1734 : 46C3                		move	d3,sr
    2573/    1736 : 9107                		subx.b	d7,d0
    2574/    1738 : 40C3                		move	sr,d3
    2575/    173A : 0A03 0011           		eori.b	#$11,d3
    2576/    173E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2577/    1744 :                     ; ----------------------------------------------------------------
    2578/    1744 :                     
    2579/    1744 :                     loc_1CF6:				; DATA XREF: ROM:00000E16o
    2580/    1744 : 4244                		clr.w	d4
    2581/    1746 : 1818                		move.b	(a0)+,d4
    2582/    1748 : 4246                		clr.w	d6
    2583/    174A : 1C18                		move.b	(a0)+,d6
    2584/    174C : 4207                		clr.b	d7
    2585/    174E : D802                		add.b	d2,d4
    2586/    1750 : DD07                		addx.b	d7,d6
    2587/    1752 : 6100 0202           		bsr	addr_Read
    2588/    1756 : 0A03 0011           		eori.b	#$11,d3
    2589/    175A : 0003 0004           		ori.b	#4,d3
    2590/    175E : 46C3                		move	d3,sr
    2591/    1760 : 9107                		subx.b	d7,d0
    2592/    1762 : 40C3                		move	sr,d3
    2593/    1764 : 0A03 0011           		eori.b	#$11,d3
    2594/    1768 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2595/    176E :                     ; ----------------------------------------------------------------
    2596/    176E :                     
    2597/    176E :                     loc_1D20:				; DATA XREF: ROM:00000DB6o
    2598/    176E : 4245                		clr.w	d5
    2599/    1770 : 1A18                		move.b	(a0)+,d5
    2600/    1772 : DA01                		add.b	d1,d5
    2601/    1774 : 4244                		clr.w	d4
    2602/    1776 : 1832 5000           		move.b	(a2,d5.w),d4
    2603/    177A : 4246                		clr.w	d6
    2604/    177C : 1C32 5001           		move.b	1(a2,d5.w),d6
    2605/    1780 : 6100 01D4           		bsr	addr_Read
    2606/    1784 : 0A03 0011           		eori.b	#$11,d3
    2607/    1788 : 0003 0004           		ori.b	#4,d3
    2608/    178C : 46C3                		move	d3,sr
    2609/    178E : 9107                		subx.b	d7,d0
    2610/    1790 : 40C3                		move	sr,d3
    2611/    1792 : 0A03 0011           		eori.b	#$11,d3
    2612/    1796 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2613/    179C :                     ; ----------------------------------------------------------------
    2614/    179C :                     
    2615/    179C :                     loc_1D4E:				; DATA XREF: ROM:00000DF6o
    2616/    179C : 4245                		clr.w	d5
    2617/    179E : 1A18                		move.b	(a0)+,d5
    2618/    17A0 : 4244                		clr.w	d4
    2619/    17A2 : 1832 5000           		move.b	(a2,d5.w),d4
    2620/    17A6 : 4246                		clr.w	d6
    2621/    17A8 : 1C32 5001           		move.b	1(a2,d5.w),d6
    2622/    17AC : 4207                		clr.b	d7
    2623/    17AE : D802                		add.b	d2,d4
    2624/    17B0 : DD07                		addx.b	d7,d6
    2625/    17B2 : 6100 01A2           		bsr	addr_Read
    2626/    17B6 : 0A03 0011           		eori.b	#$11,d3
    2627/    17BA : 0003 0004           		ori.b	#4,d3
    2628/    17BE : 46C3                		move	d3,sr
    2629/    17C0 : 9107                		subx.b	d7,d0
    2630/    17C2 : 40C3                		move	sr,d3
    2631/    17C4 : 0A03 0011           		eori.b	#$11,d3
    2632/    17C8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2633/    17CE :                     ; ----------------------------------------------------------------
    2634/    17CE :                     
    2635/    17CE :                     loc_1D80:
    2636/    17CE : 0003 0011           		ori.b	#$11,d3
    2637/    17D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2638/    17D8 :                     
    2639/    17D8 :                     ; ----------------------------------------------------------------
    2640/    17D8 :                     ; SED - Set Decimal mode
    2641/    17D8 :                     ; ----------------------------------------------------------------
    2642/    17D8 :                     
    2643/    17D8 :                     loc_1D88:
    2644/    17D8 : 397C 0001 0016      		move.w	#1,cpuModeDec(a4)
    2645/    17DE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2646/    17E4 :                     
    2647/    17E4 :                     ; ----------------------------------------------------------------
    2648/    17E4 :                     ; SEI - Set Interrupt disable
    2649/    17E4 :                     ; ----------------------------------------------------------------
    2650/    17E4 :                     
    2651/    17E4 :                     loc_1D92:
    2652/    17E4 : 397C 0001 001A      		move.w	#1,cpuModeIntDis(a4)
    2653/    17EA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2654/    17F0 :                     
    2655/    17F0 :                     ; ----------------------------------------------------------------
    2656/    17F0 :                     
    2657/    17F0 :                     loc_1D9C:
    2658/    17F0 : 4244                		clr.w	d4
    2659/    17F2 : 1818                		move.b	(a0)+,d4
    2660/    17F4 : 1580 4000           		move.b	d0,(a2,d4.w)
    2661/    17F8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2662/    17FE :                     ; ----------------------------------------------------------------
    2663/    17FE :                     
    2664/    17FE :                     loc_1DA8:
    2665/    17FE : 4244                		clr.w	d4
    2666/    1800 : 1818                		move.b	(a0)+,d4
    2667/    1802 : D801                		add.b	d1,d4
    2668/    1804 : 1580 4000           		move.b	d0,(a2,d4.w)
    2669/    1808 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2670/    180E :                     ; ----------------------------------------------------------------
    2671/    180E :                     
    2672/    180E :                     loc_1DB6:				; DATA XREF: ROM:00000C66o
    2673/    180E : 4244                		clr.w	d4
    2674/    1810 : 1818                		move.b	(a0)+,d4
    2675/    1812 : 4246                		clr.w	d6
    2676/    1814 : 1C18                		move.b	(a0)+,d6
    2677/    1816 : 1E00                		move.b	d0,d7
    2678/    1818 : 6000 0208           		bra	addr_Write
    2679/    181C :                     ; ----------------------------------------------------------------
    2680/    181C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2681/    1822 :                     ; ----------------------------------------------------------------
    2682/    1822 :                     
    2683/    1822 :                     loc_1DCA:
    2684/    1822 : 4244                		clr.w	d4
    2685/    1824 : 1818                		move.b	(a0)+,d4
    2686/    1826 : 4246                		clr.w	d6
    2687/    1828 : 1C18                		move.b	(a0)+,d6
    2688/    182A : 4207                		clr.b	d7
    2689/    182C : D801                		add.b	d1,d4
    2690/    182E : DD07                		addx.b	d7,d6
    2691/    1830 : 1E00                		move.b	d0,d7
    2692/    1832 : 6000 01EE           		bra	addr_Write
    2693/    1836 :                     ; ----------------------------------------------------------------
    2694/    1836 :                     
    2695/    1836 :                     loc_1DE0:
    2696/    1836 : 4244                		clr.w	d4
    2697/    1838 : 1818                		move.b	(a0)+,d4
    2698/    183A : 4246                		clr.w	d6
    2699/    183C : 1C18                		move.b	(a0)+,d6
    2700/    183E : 4207                		clr.b	d7
    2701/    1840 : D802                		add.b	d2,d4
    2702/    1842 : DD07                		addx.b	d7,d6
    2703/    1844 : 1E00                		move.b	d0,d7
    2704/    1846 : 6000 01DA           		bra	addr_Write
    2705/    184A :                     ; ----------------------------------------------------------------
    2706/    184A :                     
    2707/    184A :                     loc_1DF6:
    2708/    184A : 4245                		clr.w	d5
    2709/    184C : 1A18                		move.b	(a0)+,d5
    2710/    184E : DA01                		add.b	d1,d5
    2711/    1850 : 4244                		clr.w	d4
    2712/    1852 : 1832 5000           		move.b	(a2,d5.w),d4
    2713/    1856 : 4246                		clr.w	d6
    2714/    1858 : 1C32 5001           		move.b	1(a2,d5.w),d6
    2715/    185C : 1E00                		move.b	d0,d7
    2716/    185E : 6000 01C2           		bra	addr_Write
    2717/    1862 :                     ; ----------------------------------------------------------------
    2718/    1862 :                     
    2719/    1862 :                     loc_1E10:
    2720/    1862 : 4245                		clr.w	d5
    2721/    1864 : 1A18                		move.b	(a0)+,d5
    2722/    1866 : 4244                		clr.w	d4
    2723/    1868 : 1832 5000           		move.b	(a2,d5.w),d4
    2724/    186C : 4246                		clr.w	d6
    2725/    186E : 1C32 5001           		move.b	1(a2,d5.w),d6
    2726/    1872 : 4207                		clr.b	d7
    2727/    1874 : D802                		add.b	d2,d4
    2728/    1876 : DD07                		addx.b	d7,d6
    2729/    1878 : 1E00                		move.b	d0,d7
    2730/    187A : 6000 01A6           		bra	addr_Write
    2731/    187E :                     ; ----------------------------------------------------------------
    2732/    187E :                     
    2733/    187E :                     loc_1E2E:
    2734/    187E : 4244                		clr.w	d4
    2735/    1880 : 1818                		move.b	(a0)+,d4
    2736/    1882 : 1581 4000           		move.b	d1,(a2,d4.w)
    2737/    1886 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2738/    188C :                     ; ----------------------------------------------------------------
    2739/    188C :                     
    2740/    188C :                     loc_1E3A:
    2741/    188C : 4244                		clr.w	d4
    2742/    188E : 1818                		move.b	(a0)+,d4
    2743/    1890 : D802                		add.b	d2,d4
    2744/    1892 : 1581 4000           		move.b	d1,(a2,d4.w)
    2745/    1896 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2746/    189C :                     ; ----------------------------------------------------------------
    2747/    189C :                     
    2748/    189C :                     loc_1E48:
    2749/    189C : 4244                		clr.w	d4
    2750/    189E : 1818                		move.b	(a0)+,d4
    2751/    18A0 : 4246                		clr.w	d6
    2752/    18A2 : 1C18                		move.b	(a0)+,d6
    2753/    18A4 : 1E01                		move.b	d1,d7
    2754/    18A6 : 6000 017A           		bra	addr_Write
    2755/    18AA :                     ; ----------------------------------------------------------------
    2756/    18AA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2757/    18B0 :                     ; ----------------------------------------------------------------
    2758/    18B0 :                     
    2759/    18B0 :                     loc_1E5C:
    2760/    18B0 : 4244                		clr.w	d4
    2761/    18B2 : 1818                		move.b	(a0)+,d4
    2762/    18B4 : 1582 4000           		move.b	d2,(a2,d4.w)
    2763/    18B8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2764/    18BE :                     ; ----------------------------------------------------------------
    2765/    18BE :                     
    2766/    18BE :                     loc_1E68:
    2767/    18BE : 4244                		clr.w	d4
    2768/    18C0 : 1818                		move.b	(a0)+,d4
    2769/    18C2 : D801                		add.b	d1,d4
    2770/    18C4 : 1582 4000           		move.b	d2,(a2,d4.w)
    2771/    18C8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2772/    18CE :                     ; ----------------------------------------------------------------
    2773/    18CE :                     
    2774/    18CE :                     loc_1E76:
    2775/    18CE : 4244                		clr.w	d4
    2776/    18D0 : 1818                		move.b	(a0)+,d4
    2777/    18D2 : 4246                		clr.w	d6
    2778/    18D4 : 1C18                		move.b	(a0)+,d6
    2779/    18D6 : 1E02                		move.b	d2,d7
    2780/    18D8 : 6000 0148           		bra	addr_Write
    2781/    18DC :                     ; ----------------------------------------------------------------
    2782/    18DC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2783/    18E2 :                     ; ----------------------------------------------------------------
    2784/    18E2 :                     
    2785/    18E2 :                     loc_1E8A:
    2786/    18E2 : 1200                		move.b	d0,d1
    2787/    18E4 : 40C5                		move	sr,d5
    2788/    18E6 : 0245 000C           		andi.w	#$C,d5
    2789/    18EA : 0203 00F3           		andi.b	#$F3,d3
    2790/    18EE : 8645                		or.w	d5,d3
    2791/    18F0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2792/    18F6 :                     ; ----------------------------------------------------------------
    2793/    18F6 :                     
    2794/    18F6 :                     loc_1E9C:
    2795/    18F6 : 1400                		move.b	d0,d2
    2796/    18F8 : 40C5                		move	sr,d5
    2797/    18FA : 0245 000C           		andi.w	#$C,d5
    2798/    18FE : 0203 00F3           		andi.b	#$F3,d3
    2799/    1902 : 8645                		or.w	d5,d3
    2800/    1904 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2801/    190A :                     ; ----------------------------------------------------------------
    2802/    190A :                     
    2803/    190A :                     loc_1EAE:
    2804/    190A : 2A03                		move.l	d3,d5
    2805/    190C : 4845                		swap	d5
    2806/    190E : 1205                		move.b	d5,d1
    2807/    1910 : 40C5                		move	sr,d5
    2808/    1912 : 0245 000C           		andi.w	#$C,d5
    2809/    1916 : 0203 00F3           		andi.b	#$F3,d3
    2810/    191A : 8645                		or.w	d5,d3
    2811/    191C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2812/    1922 :                     ; ----------------------------------------------------------------
    2813/    1922 :                     
    2814/    1922 :                     loc_1EC4:
    2815/    1922 : 1001                		move.b	d1,d0
    2816/    1924 : 40C5                		move	sr,d5
    2817/    1926 : 0245 000C           		andi.w	#$C,d5
    2818/    192A : 0203 00F3           		andi.b	#$F3,d3
    2819/    192E : 8645                		or.w	d5,d3
    2820/    1930 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2821/    1936 :                     ; ----------------------------------------------------------------
    2822/    1936 :                     
    2823/    1936 :                     loc_1Ed3:				; DATA XREF: ROM:00000C9Ao
    2824/    1936 : 4843                		swap	d3
    2825/    1938 : 1601                		move.b	d1,d3
    2826/    193A : 4843                		swap	d3
    2827/    193C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2828/    1942 :                     ; ----------------------------------------------------------------
    2829/    1942 :                     
    2830/    1942 :                     loc_1EE0:				; DATA XREF: ROM:00000C92o
    2831/    1942 : 1002                		move.b	d2,d0
    2832/    1944 : 40C5                		move	sr,d5
    2833/    1946 : 0245 000C           		andi.w	#$C,d5
    2834/    194A : 0203 00F3           		andi.b	#$F3,d3
    2835/    194E : 8645                		or.w	d5,d3
    2836/    1950 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2837/    1956 :                     
    2838/    1956 :                     ; ====================================================================
    2839/    1956 :                     ; ----------------------------------------------------------------
    2840/    1956 :                     ; Read request
    2841/    1956 :                     ; 
    2842/    1956 :                     ; d6 - XX00
    2843/    1956 :                     ; d4 - 00XX
    2844/    1956 :                     ; ----------------------------------------------------------------
    2845/    1956 :                     
    2846/    1956 :                     addr_Read:
    2847/    1956 : 4A06                		tst.b	d6		; $8000
    2848/    1958 : 6B1A                		bmi	rdFrom_PRG
    2849/    195A :                     	; TODO: $6000-$7FFF
    2850/    195A : BC3C 0040           		cmp.b	#$40,d6		; $4000
    2851/    195E : 6C22                		bge	rdFrom_APU
    2852/    1960 : BC3C 0020           		cmp.b	#$20,d6		; $2000
    2853/    1964 : 6C52                		bge	rdFrom_PPU
    2854/    1966 :                     
    2855/    1966 :                     ; ----------------------------------------------------------------
    2856/    1966 :                     
    2857/    1966 :                     rdFrom_RAM:
    2858/    1966 : E14E                		lsl.w	#8,d6
    2859/    1968 : 1C04                		move.b	d4,d6
    2860/    196A : 0246 07FF           		andi.w	#$7FF,d6
    2861/    196E : 1E32 6000           		move.b	(a2,d6.w),d7
    2862/    1972 : 4E75                		rts
    2863/    1974 :                     ; ----------------------------------------------------------------
    2864/    1974 :                     
    2865/    1974 :                     rdFrom_PRG:
    2866/    1974 : E14E                		lsl.w	#8,d6
    2867/    1976 : 1C04                		move.b	d4,d6
    2868/    1978 : 0246 7FFF           		andi.w	#$7FFF,d6
    2869/    197C : 1E31 6000           		move.b	(a1,d6.w),d7
    2870/    1980 : 4E75                		rts
    2871/    1982 :                     ; ----------------------------------------------------------------
    2872/    1982 :                     
    2873/    1982 :                     rdFrom_APU:
    2874/    1982 : 0C04 001F           		cmpi.b	#$1F,d4
    2875/    1986 : 6200 0010           		bhi.w	loc_23A6
    2876/    198A :                     
    2877/    198A : B83C 0016           		cmp.b	#$16,d4		; $4016
    2878/    198E : 670C                		beq.s	APU_Input_1
    2879/    1990 : B83C 0017           		cmp.b	#$17,d4		; $4017
    2880/    1994 : 6714                		beq.s	APU_Input_2
    2881/    1996 :                     
    2882/    1996 :                     ; ----------------------------------------------------------------
    2883/    1996 :                     
    2884/    1996 :                     APU_Rd_Null:
    2885/    1996 : 4E75                		rts
    2886/    1998 :                     
    2887/    1998 :                     ; ----------------------------------------------------------------
    2888/    1998 :                     
    2889/    1998 :                     loc_23A6:
    2890/    1998 : 3E03                		move.w	d3,d7
    2891/    199A : 4E75                		rts
    2892/    199C :                     
    2893/    199C :                     ; ----------------------------------------------------------------
    2894/    199C :                     
    2895/    199C :                     APU_Input_1:
    2896/    199C : 3E2C 0012           		move.w	cpuInputData(a4),d7
    2897/    19A0 : 0247 0001           		andi.w	#1,d7
    2898/    19A4 : E2EC 0012           		lsr	cpuInputData(a4)
    2899/    19A8 : 4E75                		rts
    2900/    19AA :                     ; ----------------------------------------------------------------
    2901/    19AA :                     
    2902/    19AA :                     APU_Input_2:
    2903/    19AA : 3E2C 0014           		move.w	cpuInputData+2(a4),d7
    2904/    19AE : 0247 0001           		andi.w	#1,d7
    2905/    19B2 : E2EC 0014           		lsr	cpuInputData+2(a4)
    2906/    19B6 : 4E75                		rts
    2907/    19B8 :                     ; ----------------------------------------------------------------
    2908/    19B8 :                     
    2909/    19B8 :                     rdFrom_PPU:
    2910/    19B8 : 0244 0007           		andi.w	#7,d4
    2911/    19BC : D844                		add.w	d4,d4
    2912/    19BE : 383B 4006           		move.w	off_23D4(pc,d4.w),d4
    2913/    19C2 : 4EFB 4002           		jmp	off_23D4(pc,d4.w)
    2914/    19C6 :                     ; ----------------------------------------------------------------
    2915/    19C6 : 0010                off_23D4:	dc.w loc_23F4-off_23D4		; $2000
    2916/    19C8 : 0010                		dc.w loc_23F4-off_23D4		; $2001
    2917/    19CA : 0016                		dc.w rdPPU_Status-off_23D4	; $2002
    2918/    19CC : 0010                		dc.w loc_23F4-off_23D4		; $2003
    2919/    19CE : 0042                		dc.w return_241A-off_23D4	; $2004
    2920/    19D0 : 0010                		dc.w loc_23F4-off_23D4		; $2005
    2921/    19D2 : 0010                		dc.w loc_23F4-off_23D4		; $2006
    2922/    19D4 : 0044                		dc.w rdPPU_Data-off_23D4	; $2007
    2923/    19D6 :                     ; ----------------------------------------------------------------
    2924/    19D6 :                     
    2925/    19D6 :                     loc_23F4:
    2926/    19D6 : 3E31 3000           		move.w	(a1,d3.w),d7
    2927/    19DA : 4E75                		rts
    2928/    19DC :                     ; ----------------------------------------------------------------
    2929/    19DC :                     
    2930/    19DC :                     rdPPU_Status:
    2931/    19DC : 397C 0000 002C      		move.w	#0,ppuAddrLatch(a4)
    2932/    19E2 : 3E2C 0032           		move.w	ppuStatus(a4),d7
    2933/    19E6 : 397C 0000 0032      		move.w	#0,ppuStatus(a4)
    2934/    19EC :                     
    2935/    19EC :                     	; sprite 0 beam hit
    2936/    19EC :                     ; 		move.w	ppuSp0Ypos(a4),d4
    2937/    19EC :                     ; 		move.w	8(a6),d5
    2938/    19EC :                     ; 		lsr.w	#8,d5
    2939/    19EC :                     ; 		cmp.b	d5,d4
    2940/    19EC :                     ; 		bcs.s	return_2418
    2941/    19EC :                     ; 		ori.w	#$40,d7
    2942/    19EC :                     ; return_2418:
    2943/    19EC : 382C 0034           		move.w	vdpHintSp0(a4),d4
    2944/    19F0 : 6704                		beq.s	.no_hit
    2945/    19F2 : 0047 0040           		ori.w	#$40,d7
    2946/    19F6 :                     ; 		clr.w	vdpHintSp0(a4)
    2947/    19F6 :                     .no_hit:
    2948/    19F6 : 3839 00C0 0004      		move.w	(vdp_ctrl),d4
    2949/    19FC : 0804 0003           		btst	#bitVint,d4
    2950/    1A00 : 6704                		beq.s	.novflag
    2951/    1A02 : 0047 0080           		ori.w	#$80,d7
    2952/    1A06 :                     .novflag:
    2953/    1A06 : 4E75                		rts
    2954/    1A08 :                     ; ----------------------------------------------------------------
    2955/    1A08 :                     
    2956/    1A08 :                     return_241A:				; DATA XREF: ROM:000023E4o
    2957/    1A08 : 4E75                		rts
    2958/    1A0A :                     ; ----------------------------------------------------------------
    2959/    1A0A :                     
    2960/    1A0A :                     rdPPU_Data:
    2961/    1A0A : 3E2C 0026           		move.w	ppuDataLast(a4),d7
    2962/    1A0E : 382C 0024           		move.w	ppuAddrBase(a4),d4
    2963/    1A12 : 1973 4000 0027      		move.b	(a3,d4.w),ppuDataLast+1(a4)
    2964/    1A18 : 382C 0022           		move.w	ppuAddrIncr(a4),d4
    2965/    1A1C : D96C 0024           		add.w	d4,ppuAddrBase(a4)
    2966/    1A20 : 4E75                		rts
    2967/    1A22 :                     
    2968/    1A22 :                     ; ====================================================================
    2969/    1A22 :                     ; ----------------------------------------------------------------
    2970/    1A22 :                     ; Write request
    2971/    1A22 :                     ; 
    2972/    1A22 :                     ; d6 - XX00
    2973/    1A22 :                     ; d4 - 00XX
    2974/    1A22 :                     ; ----------------------------------------------------------------
    2975/    1A22 :                     
    2976/    1A22 :                     addr_Write:
    2977/    1A22 : 4A06                		tst.b	d6		; $8000
    2978/    1A24 : 6B20                		bmi	wrTo_PRG
    2979/    1A26 :                     	; TODO: $6000-$7FFF
    2980/    1A26 : BC3C 0040           		cmp.b	#$40,d6		; $4000
    2981/    1A2A : 6C50                		bge	wrTo_APU
    2982/    1A2C : BC3C 0020           		cmp.b	#$20,d6		; $2000
    2983/    1A30 : 6C00 0170           		bge	wrTo_PPU
    2984/    1A34 :                     
    2985/    1A34 :                     ; ====================================================================
    2986/    1A34 :                     ; ----------------------------------------------------------------
    2987/    1A34 :                     ; WRITE request to RAM
    2988/    1A34 :                     ; ----------------------------------------------------------------
    2989/    1A34 :                     
    2990/    1A34 :                     wrTo_RAM:
    2991/    1A34 : E14E                		lsl.w	#8,d6
    2992/    1A36 : 1C04                		move.b	d4,d6
    2993/    1A38 : 0246 07FF           		andi.w	#$7FF,d6
    2994/    1A3C : 1587 6000           		move.b	d7,(a2,d6.w)
    2995/    1A40 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2996/    1A46 :                     
    2997/    1A46 :                     ; ====================================================================
    2998/    1A46 :                     ; ----------------------------------------------------------------
    2999/    1A46 :                     ; WRITE request to ROM area, mappers
    3000/    1A46 :                     ; ----------------------------------------------------------------
    3001/    1A46 :                     
    3002/    1A46 :                     wrTo_PRG:
    3003/    1A46 : 0C6C 0003 000E      		cmp.w	#3,cpuMapper(a4)
    3004/    1A4C : 6706                		beq.s	.mapper_3
    3005/    1A4E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3006/    1A54 :                     
    3007/    1A54 :                     ; --------------------------------------------------------
    3008/    1A54 :                     ; Mapper $03, CNROM
    3009/    1A54 :                     ; 
    3010/    1A54 :                     ; Bank select ($8000-$FFFF)
    3011/    1A54 :                     ; 
    3012/    1A54 :                     ; 7  bit  0
    3013/    1A54 :                     ; ---- ----
    3014/    1A54 :                     ; xxDD xxCC
    3015/    1A54 :                     ;   ||   ||
    3016/    1A54 :                     ;   ||   ++- Select 8 KB CHR ROM bank for PPU $0000-$1FFF
    3017/    1A54 :                     ;   ++------ Security diodes config
    3018/    1A54 :                     ; --------------------------------------------------------
    3019/    1A54 :                     
    3020/    1A54 :                     .mapper_3:
    3021/    1A54 : 2F0C                		move.l	a4,-(sp)
    3022/    1A56 : 2A6C 0004           		movea.l	emuChrRom(a4),a5
    3023/    1A5A : CE7C 0003           		and.w	#%11,d7
    3024/    1A5E : E14F                		lsl.w	#8,d7
    3025/    1A60 : EB4F                		lsl.w	#5,d7
    3026/    1A62 : DAC7                		adda	d7,a5
    3027/    1A64 : 284B                		move.l	a3,a4
    3028/    1A66 : 3E3C 07FE           		move.w	#($1FFF/4)-1,d7
    3029/    1A6A :                     .copychr:
    3030/    1A6A : 28DD                		move.l	(a5)+,(a4)+
    3031/    1A6C : 51CF FFFC           		dbf	d7,.copychr
    3032/    1A70 : 285F                		move.l	(sp)+,a4
    3033/    1A72 : 6100 0438           		bsr	Nemul_LoadChr
    3034/    1A76 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3035/    1A7C :                     
    3036/    1A7C :                     ; ====================================================================
    3037/    1A7C :                     ; ----------------------------------------------------------------
    3038/    1A7C :                     ; WRITE to APU
    3039/    1A7C :                     ; ----------------------------------------------------------------
    3040/    1A7C :                     
    3041/    1A7C :                     wrTo_APU:
    3042/    1A7C : 0C04 001F           		cmpi.b	#$1F,d4
    3043/    1A80 : 624A                		bhi.s	APU_Null
    3044/    1A82 : D844                		add.w	d4,d4
    3045/    1A84 : 383B 4006           		move.w	off_2866(pc,d4.w),d4
    3046/    1A88 : 4EFB 4002           		jmp	off_2866(pc,d4.w)
    3047/    1A8C :                     
    3048/    1A8C :                     ; ----------------------------------------------------------------
    3049/    1A8C : 0040                off_2866:	dc.w APU_Null-off_2866
    3050/    1A8E : 0040                		dc.w APU_Null-off_2866
    3051/    1A90 : 0040                		dc.w APU_Null-off_2866
    3052/    1A92 : 0040                		dc.w APU_Null-off_2866
    3053/    1A94 : 0040                		dc.w APU_Null-off_2866
    3054/    1A96 : 0040                		dc.w APU_Null-off_2866
    3055/    1A98 : 0040                		dc.w APU_Null-off_2866
    3056/    1A9A : 0040                		dc.w APU_Null-off_2866
    3057/    1A9C : 0040                		dc.w APU_Null-off_2866
    3058/    1A9E : 0040                		dc.w APU_Null-off_2866
    3059/    1AA0 : 0040                		dc.w APU_Null-off_2866
    3060/    1AA2 : 0040                		dc.w APU_Null-off_2866
    3061/    1AA4 : 0040                		dc.w APU_Null-off_2866
    3062/    1AA6 : 0040                		dc.w APU_Null-off_2866
    3063/    1AA8 : 0040                		dc.w APU_Null-off_2866
    3064/    1AAA : 0040                		dc.w APU_Null-off_2866
    3065/    1AAC : 0040                		dc.w APU_Null-off_2866
    3066/    1AAE : 0040                		dc.w APU_Null-off_2866
    3067/    1AB0 : 0040                		dc.w APU_Null-off_2866
    3068/    1AB2 : 0040                		dc.w APU_Null-off_2866
    3069/    1AB4 : 00A6                		dc.w APU_OAMDMA-off_2866
    3070/    1AB6 : 0040                		dc.w APU_Null-off_2866
    3071/    1AB8 : 0046                		dc.w APU_Input-off_2866
    3072/    1ABA : 0040                		dc.w APU_Null-off_2866
    3073/    1ABC : 0040                		dc.w APU_Null-off_2866
    3074/    1ABE : 0040                		dc.w APU_Null-off_2866
    3075/    1AC0 : 0040                		dc.w APU_Null-off_2866
    3076/    1AC2 : 0040                		dc.w APU_Null-off_2866
    3077/    1AC4 : 0040                		dc.w APU_Null-off_2866
    3078/    1AC6 : 0040                		dc.w APU_Null-off_2866
    3079/    1AC8 : 0040                		dc.w APU_Null-off_2866
    3080/    1ACA : 0040                		dc.w APU_Null-off_2866
    3081/    1ACC :                     
    3082/    1ACC :                     APU_Null:
    3083/    1ACC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3084/    1AD2 :                     
    3085/    1AD2 :                     ; =============== S U B	R O U T	I N E =======================================
    3086/    1AD2 :                     
    3087/    1AD2 :                     
    3088/    1AD2 :                     APU_Input:				; DATA XREF: ROM:000028BEo
    3089/    1AD2 : 4A07                		tst.b	d7
    3090/    1AD4 : 67F6                		beq.s	APU_Null
    3091/    1AD6 : 6106                		bsr	readInput
    3092/    1AD8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3093/    1ADE :                     
    3094/    1ADE :                     ; =============== S U B	R O U T	I N E =======================================
    3095/    1ADE :                     
    3096/    1ADE :                     
    3097/    1ADE :                     readInput:
    3098/    1ADE : 2F0B                		move.l	a3,-(sp)
    3099/    1AE0 : 47F9 00A1 0003      		lea	($A10003).l,a3
    3100/    1AE6 : 4BEC 0012           		lea	cpuInputData(a4),a5
    3101/    1AEA : 6108                		bsr	.this_pad
    3102/    1AEC : 544B                		addq.w	#2,a3
    3103/    1AEE : 6104                		bsr	.this_pad		
    3104/    1AF0 : 265F                		move.l	(sp)+,a3
    3105/    1AF2 : 4E75                		rts
    3106/    1AF4 :                     		
    3107/    1AF4 :                     .this_pad:
    3108/    1AF4 : 16BC 0000           		move.b	#0,(a3)
    3109/    1AF8 : 4E71                		nop
    3110/    1AFA : 4E71                		nop
    3111/    1AFC : 1A13                		move.b	(a3),d5
    3112/    1AFE : E50D                		lsl.b	#2,d5
    3113/    1B00 : 0205 00C0           		andi.b	#$C0,d5
    3114/    1B04 : 16BC 0040           		move.b	#$40,(a3)
    3115/    1B08 : 4E71                		nop
    3116/    1B0A : 4E71                		nop
    3117/    1B0C : 1813                		move.b	(a3),d4
    3118/    1B0E : 0204 003F           		andi.b	#$3F,d4
    3119/    1B12 : 8A04                		or.b	d4,d5
    3120/    1B14 : 4605                		not.b	d5
    3121/    1B16 : 4244                		clr.w	d4
    3122/    1B18 : E30D                		lsl.b	#1,d5
    3123/    1B1A : D904                		addx.b	d4,d4
    3124/    1B1C : E34D                		lsl.w	#1,d5
    3125/    1B1E : E30D                		lsl.b	#1,d5
    3126/    1B20 : D904                		addx.b	d4,d4
    3127/    1B22 : E24D                		lsr.w	#1,d5
    3128/    1B24 : E30D                		lsl.b	#1,d5
    3129/    1B26 : D904                		addx.b	d4,d4
    3130/    1B28 : E30D                		lsl.b	#1,d5
    3131/    1B2A : D904                		addx.b	d4,d4
    3132/    1B2C : 8805                		or.b	d5,d4
    3133/    1B2E : 3AC4                		move.w	d4,(a5)+
    3134/    1B30 : 4E75                		rts
    3135/    1B32 :                     
    3136/    1B32 :                     
    3137/    1B32 :                     ; =============== S U B	R O U T	I N E =======================================
    3138/    1B32 :                     
    3139/    1B32 :                     
    3140/    1B32 :                     APU_OAMDMA:
    3141/    1B32 : E14F                		lsl.w	#8,d7
    3142/    1B34 : 3C2C 002E           		move.w	ppuOamUnk(a4),d6
    3143/    1B38 : 0A46 0001           		eori.w	#1,d6
    3144/    1B3C : 1E34 6020           		move.b	ppuOamAddr(a4,d6.w),d7
    3145/    1B40 : 4BF2 7000           		lea	(a2,d7.w),a5
    3146/    1B44 : 3E3C 8A00           		move.w	#$8A00,d7
    3147/    1B48 : 1E15                		move.b	(a5),d7
    3148/    1B4A : 1947 002B           		move.b	d7,ppuSp0Ypos+1(a4)		; sprite 0 ypos
    3149/    1B4E : 9E7C 0001           		sub.w	#1,d7
    3150/    1B52 : 3D47 0004           		move.w	d7,4(a6)
    3151/    1B56 :                     
    3152/    1B56 : 2F0B                		move.l	a3,-(sp)
    3153/    1B58 : 47EC 00C0           		lea 	oamSprData(a4),a3
    3154/    1B5C : 7A3F                		moveq	#$3F,d5
    3155/    1B5E : 7E00                		moveq	#0,d7
    3156/    1B60 :                     .lp_sprnormal:
    3157/    1B60 : 1E1D                		move.b	(a5)+,d7
    3158/    1B62 : 3C07                		move.w	d7,d6
    3159/    1B64 : 0646 0079           		addi.w	#$79,d6
    3160/    1B68 : 36C6                		move.w	d6,(a3)+
    3161/    1B6A : 7C40                		moveq	#64,d6
    3162/    1B6C : 9C05                		sub.b	d5,d6
    3163/    1B6E : 36C6                		move.w	d6,(a3)+
    3164/    1B70 : 1E1D                		move.b	(a5)+,d7
    3165/    1B72 : 3C07                		move.w	d7,d6
    3166/    1B74 : 0046 0100           		ori.w	#$100,d6
    3167/    1B78 : 1E1D                		move.b	(a5)+,d7
    3168/    1B7A : 3807                		move.w	d7,d4
    3169/    1B7C : E51C                		rol.b	#2,d4
    3170/    1B7E : E34C                		lsl.w	#1,d4
    3171/    1B80 : E70C                		lsl.b	#3,d4
    3172/    1B82 : EF4C                		lsl.w	#7,d4
    3173/    1B84 : 8846                		or.w	d6,d4
    3174/    1B86 : 0A44 8000           		eori.w	#$8000,d4
    3175/    1B8A : 36C4                		move.w	d4,(a3)+
    3176/    1B8C : 1E1D                		move.b	(a5)+,d7
    3177/    1B8E : 3C07                		move.w	d7,d6
    3178/    1B90 : 0646 0080           		addi.w	#$80,d6
    3179/    1B94 : 36C6                		move.w	d6,(a3)+
    3180/    1B96 : 51CD FFC8           		dbf	d5,.lp_sprnormal
    3181/    1B9A : 265F                		move.l	(sp)+,a3
    3182/    1B9C :                     
    3183/    1B9C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3184/    1BA2 :                     
    3185/    1BA2 :                     
    3186/    1BA2 :                     ; =============== S U B	R O U T	I N E =======================================
    3187/    1BA2 :                     
    3188/    1BA2 :                     
    3189/    1BA2 :                     wrTo_PPU:
    3190/    1BA2 : 0244 0007           		andi.w	#7,d4
    3191/    1BA6 : D844                		add.w	d4,d4
    3192/    1BA8 : 383B 4006           		move.w	off_29F6(pc,d4.w),d4
    3193/    1BAC : 4EFB 4002           		jmp	off_29F6(pc,d4.w)
    3194/    1BB0 :                     
    3195/    1BB0 :                     ; ----------------------------------------------------------------
    3196/    1BB0 : 0010                off_29F6:	dc.w loc_2A16-off_29F6 ; $2000
    3197/    1BB2 : 0058                		dc.w loc_2A5E-off_29F6 ; $2001
    3198/    1BB4 : 00E2                		dc.w loc_2ACC-off_29F6 ; $2002
    3199/    1BB6 : 00E8                		dc.w loc_2AD0-off_29F6 ; $2003
    3200/    1BB8 : 00FC                		dc.w loc_2AE2-off_29F6 ; $2004
    3201/    1BBA : 008C                		dc.w wrPPU_Scroll-off_29F6 ; $2005
    3202/    1BBC : 0102                		dc.w loc_2AE6-off_29F6 ; $2006
    3203/    1BBE : 0116                		dc.w wrPPU_Data-off_29F6 ; $2007
    3204/    1BC0 :                     ; ----------------------------------------------------------------
    3205/    1BC0 :                     
    3206/    1BC0 :                     loc_2A16:
    3207/    1BC0 :                     
    3208/    1BC0 :                     	; NMI on/off
    3209/    1BC0 : 4246                		clr.w	d6
    3210/    1BC2 : E30F                		lsl.b	#1,d7			; $80
    3211/    1BC4 : 6404                		bcc.s	.noVintFlag
    3212/    1BC6 : 1C3C 0080           		move.b	#$80,d6			; NMI ON
    3213/    1BCA :                     .noVintFlag:
    3214/    1BCA : 3946 0030           		move.w	d6,ppuNmiFlag(a4)
    3215/    1BCE :                     		
    3216/    1BCE :                     	; 8x8 or 8x16 sprites
    3217/    1BCE : 4246                		clr.w	d6
    3218/    1BD0 : E50F                		lsl.b	#2,d7
    3219/    1BD2 : 6402                		bcc.s	loc_2A2C
    3220/    1BD4 : 7C01                		moveq	#1,d6
    3221/    1BD6 :                     loc_2A2C:
    3222/    1BD6 : 3946 0028           		move.w	d6,ppuSprWide(a4)
    3223/    1BDA :                     		
    3224/    1BDA :                     	; PPU VRAM BG bank/Sprites bank
    3225/    1BDA : 1C07                		move.b	d7,d6
    3226/    1BDC : 0246 00C0           		andi.w	#$C0,d6
    3227/    1BE0 : BC6C 001E           		cmp.w	ppuChrBank(a4),d6
    3228/    1BE4 : 6708                		beq.s	.no_reload
    3229/    1BE6 : 3946 001E           		move.w	d6,ppuChrBank(a4)
    3230/    1BEA : 6100 02C0           		bsr	Nemul_LoadChr
    3231/    1BEE :                     .no_reload:
    3232/    1BEE :                     
    3233/    1BEE :                     	; PPU VRAM increment
    3234/    1BEE : 7C01                		moveq	#1,d6
    3235/    1BF0 : E70F                		lsl.b	#3,d7
    3236/    1BF2 : 6402                		bcc.s	.nrml_incr
    3237/    1BF4 : 7C20                		moveq	#$20,d6
    3238/    1BF6 :                     .nrml_incr:
    3239/    1BF6 : 3946 0022           		move.w	d6,ppuAddrIncr(a4)
    3240/    1BFA :                     
    3241/    1BFA :                     	; PPU Name table base
    3242/    1BFA : 0247 00C0           		andi.w	#$C0,d7
    3243/    1BFE : 3947 001C           		move.w	d7,ppuNTblBase(a4)
    3244/    1C02 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3245/    1C08 :                     
    3246/    1C08 :                     ; ----------------------------------------------------------------
    3247/    1C08 :                     ; $2002 - PPU MASK
    3248/    1C08 :                     ; ----------------------------------------------------------------
    3249/    1C08 :                     
    3250/    1C08 :                     loc_2A5E:
    3251/    1C08 : 3C3C 8550           		move.w	#$8500+(($A000)>>9),d6
    3252/    1C0C : 4846                		swap	d6
    3253/    1C0E : 3C2C 000A           		move.w	vdpReg01(a4),d6		; REGISTER 81
    3254/    1C12 : CC3C 00BF           		and.b	#$BF,d6
    3255/    1C16 : 0807 0003           		btst	#3,d7
    3256/    1C1A : 6704                		beq.s	.hidebg
    3257/    1C1C : 0006 0040           		ori.b	#$40,d6
    3258/    1C20 :                     .hidebg:
    3259/    1C20 : 4846                		swap	d6
    3260/    1C22 : 0807 0004           		btst	#4,d7
    3261/    1C26 : 6704                		beq.s	.hidesp
    3262/    1C28 : 3C3C 855E           		move.w	#$8500+(($BC00)>>9),d6
    3263/    1C2C :                     .hidesp:
    3264/    1C2C : 2D46 0004           		move.l	d6,4(a6)
    3265/    1C30 : 4846                		swap	d6
    3266/    1C32 : 3946 000A           		move.w	d6,vdpReg01(a4)
    3267/    1C36 :                     
    3268/    1C36 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3269/    1C3C :                     
    3270/    1C3C :                     ; ----------------------------------------------------------------
    3271/    1C3C :                     ; $2005 - PPU SCROLL
    3272/    1C3C :                     ; -----------------------------------------------------------------
    3273/    1C3C :                     
    3274/    1C3C :                     wrPPU_Scroll:
    3275/    1C3C : 3C2C 001C           		move.w	ppuNTblBase(a4),d6
    3276/    1C40 : 0A6C 0001 002C      		eori.w	#1,ppuAddrLatch(a4)
    3277/    1C46 : 671C                		beq.s	loc_2AA4
    3278/    1C48 :                     		
    3279/    1C48 : 0247 00FF           		andi.w	#$FF,d7
    3280/    1C4C : CC7C 0001           		and.w	#1,d6
    3281/    1C50 : E14E                		lsl.w	#8,d6
    3282/    1C52 : DE46                		add.w	d6,d7
    3283/    1C54 : 4447                		neg.w	d7
    3284/    1C56 : 3947 0038           		move.w	d7,vdpScrlX(a4)
    3285/    1C5A : 3947 003A           		move.w	d7,vdpScrlX+2(a4)
    3286/    1C5E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3287/    1C64 :                     
    3288/    1C64 :                     ; --------------------------------------------------------
    3289/    1C64 :                     ; Vertical
    3290/    1C64 :                     ; --------------------------------------------------------
    3291/    1C64 :                     
    3292/    1C64 :                     loc_2AA4:
    3293/    1C64 : CE7C 00FF           		and.w	#$FF,d7
    3294/    1C68 : 5047                		addq.w	#8,d7
    3295/    1C6A : E30E                		lsl.b	#1,d6
    3296/    1C6C : 6512                		bcs.s	loc_2ABE
    3297/    1C6E : 3947 003C           		move.w	d7,vdpScrlY(a4)
    3298/    1C72 : DE7C 0110           		add.w	#$110,d7
    3299/    1C76 : 3947 003E           		move.w	d7,vdpScrlY+2(a4)
    3300/    1C7A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3301/    1C80 :                     loc_2ABE:
    3302/    1C80 : 3947 003E           		move.w	d7,vdpScrlY+2(a4)
    3303/    1C84 : DE7C 0110           		add.w	#$110,d7
    3304/    1C88 : 3947 003C           		move.w	d7,vdpScrlY(a4)
    3305/    1C8C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3306/    1C92 :                     
    3307/    1C92 :                     ; ----------------------------------------------------------------
    3308/    1C92 :                     
    3309/    1C92 :                     loc_2ACC:				; DATA XREF: ROM:000029FEo
    3310/    1C92 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3311/    1C98 :                     ; ----------------------------------------------------------------
    3312/    1C98 :                     
    3313/    1C98 :                     loc_2AD0:
    3314/    1C98 : 382C 002E           		move.w	ppuOamUnk(a4),d4
    3315/    1C9C : 1987 4020           		move.b	d7,ppuOamAddr(a4,d4.w)
    3316/    1CA0 : 0A6C 0001 002E      		eori.w	#1,ppuOamUnk(a4)
    3317/    1CA6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3318/    1CAC :                     ; ----------------------------------------------------------------
    3319/    1CAC :                     
    3320/    1CAC :                     loc_2AE2:
    3321/    1CAC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3322/    1CB2 :                     ; ----------------------------------------------------------------
    3323/    1CB2 :                     
    3324/    1CB2 :                     loc_2AE6:
    3325/    1CB2 : 382C 002C           		move.w	ppuAddrLatch(a4),d4
    3326/    1CB6 : 1987 4024           		move.b	d7,ppuAddrBase(a4,d4.w)
    3327/    1CBA : 0A6C 0001 002C      		eori.w	#1,ppuAddrLatch(a4)
    3328/    1CC0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3329/    1CC6 :                     ; ----------------------------------------------------------------
    3330/    1CC6 :                     
    3331/    1CC6 :                     wrPPU_Data:
    3332/    1CC6 : 382C 0024           		move.w	ppuAddrBase(a4),d4
    3333/    1CCA : 3C2C 0022           		move.w	ppuAddrIncr(a4),d6
    3334/    1CCE : DD6C 0024           		add.w	d6,ppuAddrBase(a4)
    3335/    1CD2 : 0244 3FFF           		andi.w	#$3FFF,d4
    3336/    1CD6 : 1787 4000           		move.b	d7,(a3,d4.w)
    3337/    1CDA : 0C44 3F00           		cmpi.w	#$3F00,d4
    3338/    1CDE : 6452                		bcc.s	ppuSetColor
    3339/    1CE0 : 3A04                		move.w	d4,d5
    3340/    1CE2 : 0245 03C0           		andi.w	#$3C0,d5
    3341/    1CE6 : 0C45 03C0           		cmpi.w	#$3C0,d5
    3342/    1CEA : 6600 00E8           		bne.w	ppuDrwCell
    3343/    1CEE : 6000 016E           		bra.w	ppuDrwCellPal
    3344/    1CF2 :                     ; ----------------------------------------------------------------
    3345/    1CF2 :                     
    3346/    1CF2 :                     ppuVdpIndex:
    3347/    1CF2 : 0000 0002 0004 0006 		dc.w $0000,$0002,$0004,$0006
    3348/    1CFA : 0020 0022 0024 0026 		dc.w $0020,$0022,$0024,$0026
    3349/    1D02 : 0040 0042 0044 0046 		dc.w $0040,$0042,$0044,$0046
    3350/    1D0A : 0060 0062 0064 0066 		dc.w $0060,$0062,$0064,$0066
    3351/    1D12 : 0008 000A 000C 000E 		dc.w $0008,$000A,$000C,$000E
    3352/    1D1A : 0028 002A 002C 002E 		dc.w $0028,$002A,$002C,$002E
    3353/    1D22 : 0048 004A 004C 004E 		dc.w $0048,$004A,$004C,$004E
    3354/    1D2A : 0068 006A 006C 006E 		dc.w $0068,$006A,$006C,$006E
    3355/    1D32 :                     		align 2
    3356/    1D32 :                     
    3357/    1D32 :                     ppuSetColor:
    3358/    1D32 : 0244 001F           		andi.w	#$1F,d4
    3359/    1D36 : D844                		add.w	d4,d4
    3360/    1D38 : 383B 40B8           		move.w	ppuVdpIndex(pc,d4.w),d4
    3361/    1D3C : 4BF4 4040           		lea 	vdpPalette(a4,d4.w),a5
    3362/    1D40 : 0207 003F           		andi.b	#$3F,d7
    3363/    1D44 : DE47                		add.w	d7,d7
    3364/    1D46 : 3ABB 700C           		move.w	ppuVdpColors(pc,d7.w),(a5)
    3365/    1D4A : 4BF8 8040           		lea	(RAM_Fami_Emu+vdpPalette),a5
    3366/    1D4E :                     ; 		move.w	$08(a5),$00(a5)
    3367/    1D4E :                     ; 		move.w	$28(a5),$20(a5)	
    3368/    1D4E :                     ; 		move.w	$38(a5),$30(a5)
    3369/    1D4E :                     ; 		move.w	$48(a5),$40(a5)
    3370/    1D4E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3371/    1D54 :                     ; ----------------------------------------------------------------
    3372/    1D54 :                     
    3373/    1D54 : 0666                ppuVdpColors:	dc.w $666
    3374/    1D56 : 0820                		dc.w $820
    3375/    1D58 : 0A00                		dc.w $A00
    3376/    1D5A : 0A04                		dc.w $A04
    3377/    1D5C : 0806                		dc.w $806
    3378/    1D5E : 0406                		dc.w $406
    3379/    1D60 : 0006                		dc.w 6
    3380/    1D62 : 0026                		dc.w $26
    3381/    1D64 : 0044                		dc.w $44
    3382/    1D66 : 0040                		dc.w $40
    3383/    1D68 : 0060                		dc.w $60
    3384/    1D6A : 0040                		dc.w $40
    3385/    1D6C : 0440                		dc.w $440
    3386/    1D6E : 0000                		dc.w 0
    3387/    1D70 : 0000                		dc.w 0
    3388/    1D72 : 0000                		dc.w 0
    3389/    1D74 : 0AAA                		dc.w $AAA
    3390/    1D76 : 0E60                		dc.w $E60
    3391/    1D78 : 0E40                		dc.w $E40
    3392/    1D7A : 0E28                		dc.w $E28
    3393/    1D7C : 0C2A                		dc.w $C2A
    3394/    1D7E : 082C                		dc.w $82C
    3395/    1D80 : 024C                		dc.w $24C
    3396/    1D82 : 004A                		dc.w $4A
    3397/    1D84 : 0066                		dc.w $66
    3398/    1D86 : 0084                		dc.w $84
    3399/    1D88 : 00A0                		dc.w $A0
    3400/    1D8A : 0480                		dc.w $480
    3401/    1D8C : 0880                		dc.w $880
    3402/    1D8E : 0000                		dc.w 0
    3403/    1D90 : 0000                		dc.w 0
    3404/    1D92 : 0000                		dc.w 0
    3405/    1D94 : 0EEE                		dc.w $EEE
    3406/    1D96 : 0EC6                		dc.w $EC6
    3407/    1D98 : 0EAA                		dc.w $EAA
    3408/    1D9A : 0E8C                		dc.w $E8C
    3409/    1D9C : 0E6E                		dc.w $E6E
    3410/    1D9E : 0C6E                		dc.w $C6E
    3411/    1DA0 : 088E                		dc.w $88E
    3412/    1DA2 : 02AE                		dc.w $2AE
    3413/    1DA4 : 00CC                		dc.w $CC
    3414/    1DA6 : 00E8                		dc.w $E8
    3415/    1DA8 : 04E6                		dc.w $4E6
    3416/    1DAA : 08E4                		dc.w $8E4
    3417/    1DAC : 0EC4                		dc.w $EC4
    3418/    1DAE : 0444                		dc.w $444
    3419/    1DB0 : 0000                		dc.w 0
    3420/    1DB2 : 0000                		dc.w 0
    3421/    1DB4 : 0EEE                		dc.w $EEE
    3422/    1DB6 : 0EEC                		dc.w $EEC
    3423/    1DB8 : 0ECC                		dc.w $ECC
    3424/    1DBA : 0ECE                		dc.w $ECE
    3425/    1DBC : 0ECE                		dc.w $ECE
    3426/    1DBE : 0ECE                		dc.w $ECE
    3427/    1DC0 : 0CCE                		dc.w $CCE
    3428/    1DC2 : 0AEE                		dc.w $AEE
    3429/    1DC4 : 08EE                		dc.w $8EE
    3430/    1DC6 : 0AEC                		dc.w $AEC
    3431/    1DC8 : 08EC                		dc.w $8EC
    3432/    1DCA : 0CEC                		dc.w $CEC
    3433/    1DCC : 0EEC                		dc.w $EEC
    3434/    1DCE : 0CCC                		dc.w $CCC
    3435/    1DD0 : 0000                		dc.w 0
    3436/    1DD2 : 0000                		dc.w 0
    3437/    1DD4 :                     ; ----------------------------------------------------------------
    3438/    1DD4 :                     
    3439/    1DD4 :                     ppuDrwCell:
    3440/    1DD4 :                     	; d4 - ppu address
    3441/    1DD4 :                     	; d7 - cell 0-255
    3442/    1DD4 :                     
    3443/    1DD4 :                     ; 	; d4 - X pos
    3444/    1DD4 :                     ; 	; d5 - Y pos
    3445/    1DD4 :                     ; 	; d7 - Page
    3446/    1DD4 :                     
    3447/    1DD4 :                     
    3448/    1DD4 : CE7C 00FF           		and.w	#$FF,d7
    3449/    1DD8 : 3A04                		move.w	d4,d5
    3450/    1DDA : 3C04                		move.w	d4,d6
    3451/    1DDC : CA7C 001F           		and.w	#$1F,d5
    3452/    1DE0 : CC7C 03E0           		and.w	#$3E0,d6
    3453/    1DE4 : DA45                		add.w	d5,d5
    3454/    1DE6 : E54E                		lsl.w	#2,d6
    3455/    1DE8 : DC45                		add.w	d5,d6
    3456/    1DEA :                     
    3457/    1DEA : 3A04                		move.w	d4,d5
    3458/    1DEC : E04D                		lsr.w	#8,d5
    3459/    1DEE : E44D                		lsr.w	#2,d5
    3460/    1DF0 : 0805 0001           		btst	#1,d5
    3461/    1DF4 : 6704                		beq.s	.top_lyr
    3462/    1DF6 : DC7C 2000           		add.w	#$2000,d6
    3463/    1DFA :                     .top_lyr:
    3464/    1DFA : 0805 0000           		btst	#0,d5
    3465/    1DFE : 6704                		beq.s	.left_pg
    3466/    1E00 : DC7C 0040           		add.w	#$40,d6
    3467/    1E04 :                     .left_pg:
    3468/    1E04 : 8E7C 8000           		or.w	#$8000,d7
    3469/    1E08 : 8C7C 4000           		or.w	#$4000,d6
    3470/    1E0C :                     ; 		move.w	#$2700,sr
    3471/    1E0C : 3D46 0004           		move.w	d6,4(a6)
    3472/    1E10 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3473/    1E16 : 3C87                		move.w	d7,(a6)
    3474/    1E18 : 4A6C 000C           		tst.w	ppuMirror(a4)			; horizontal mirror check
    3475/    1E1C : 6622                		bne.s	.vermirror
    3476/    1E1E : 3A06                		move.w	d6,d5	
    3477/    1E20 : DC7C 0040           		add.w	#$40,d6
    3478/    1E24 : CC7C 0040           		and.w	#$40,d6
    3479/    1E28 : CA7C FFBF           		and.w	#$FFBF,d5
    3480/    1E2C : 8C45                		or.w	d5,d6
    3481/    1E2E : 3D46 0004           		move.w	d6,4(a6)
    3482/    1E32 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3483/    1E38 : 3C87                		move.w	d7,(a6)
    3484/    1E3A :                     ; 		move.w	#$2000,sr
    3485/    1E3A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3486/    1E40 :                     .vermirror:
    3487/    1E40 : CC7C 3FFF           		and.w	#$3FFF,d6
    3488/    1E44 : DC7C 2000           		add.w	#$2000,d6
    3489/    1E48 : 8C7C 4000           		or.w	#$4000,d6
    3490/    1E4C : 3D46 0004           		move.w	d6,4(a6)
    3491/    1E50 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3492/    1E56 : 3C87                		move.w	d7,(a6)
    3493/    1E58 :                     ; 		move.w	#$2000,sr
    3494/    1E58 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3495/    1E5E :                     
    3496/    1E5E :                     ; ----------------------------------------------------------------
    3497/    1E5E :                     
    3498/    1E5E :                     ppuDrwCellPal:
    3499/    1E5E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3500/    1E64 :                     
    3501/    1E64 :                     ; 		move.w	#$8F02,4(a6)
    3502/    1E64 :                     ; 		andi.w	#$FFF,d4
    3503/    1E64 :                     ; 		lsl.w	#1,d4
    3504/    1E64 :                     ; 		move.l	d3,-(sp)
    3505/    1E64 :                     ; 		lea	(word_2D8E).l,a5
    3506/    1E64 :                     ; 		move.w	(a5,d4.w),d3
    3507/    1E64 :                     ; 		lsl.w	#1,d4
    3508/    1E64 :                     ; 		lea	(dword_4D8E).l,a5
    3509/    1E64 :                     ; 		move.l	(a5,d4.w),d5
    3510/    1E64 :                     ; 		swap	d7
    3511/    1E64 :                     ; 		andi.w	#$FFC,d4
    3512/    1E64 :                     ; 		cmpi.w	#$FE0,d4
    3513/    1E64 :                     ; 		bcc.w	loc_2C9A
    3514/    1E64 :                     ; 		clr.w	d7
    3515/    1E64 :                     ; 		lsr.l	#2,d7
    3516/    1E64 :                     ; 		lsr.w	#1,d7
    3517/    1E64 :                     ; 		ori.w	#$8000,d7
    3518/    1E64 :                     ; 		move.w	d7,d6
    3519/    1E64 :                     ; 		move.b	1(a2,d3.w),d6
    3520/    1E64 :                     ; 		swap	d6
    3521/    1E64 :                     ; 		move.w	d7,d6
    3522/    1E64 :                     ; 		move.b	3(a2,d3.w),d6
    3523/    1E64 :                     ; 		clr.w	d7
    3524/    1E64 :                     ; 		lsr.l	#2,d7
    3525/    1E64 :                     ; 		lsr.w	#1,d7
    3526/    1E64 :                     ; 		ori.w	#$8000,d7
    3527/    1E64 :                     ; 		move.w	d7,d4
    3528/    1E64 :                     ; 		move.b	5(a2,d3.w),d4
    3529/    1E64 :                     ; 		swap	d4
    3530/    1E64 :                     ; 		move.w	d7,d4
    3531/    1E64 :                     ; 		move.b	7(a2,d3.w),d4
    3532/    1E64 :                     ; 		move.l	d6,(a2,d3.w)
    3533/    1E64 :                     ; 		move.l	d4,4(a2,d3.w)
    3534/    1E64 :                     ; 		move.l	d5,4(a6)
    3535/    1E64 :                     ; 		move.l	d6,(a6)
    3536/    1E64 :                     ; 		move.l	d4,(a6)
    3537/    1E64 :                     ; 		addi.w	#$80,d3
    3538/    1E64 :                     ; 		addi.l	#$800000,d5
    3539/    1E64 :                     ; 		move.b	1(a2,d3.w),d6
    3540/    1E64 :                     ; 		swap	d6
    3541/    1E64 :                     ; 		move.b	3(a2,d3.w),d6
    3542/    1E64 :                     ; 		move.b	5(a2,d3.w),d4
    3543/    1E64 :                     ; 		swap	d4
    3544/    1E64 :                     ; 		move.b	7(a2,d3.w),d4
    3545/    1E64 :                     ; 		move.l	d6,(a2,d3.w)
    3546/    1E64 :                     ; 		move.l	d4,4(a2,d3.w)
    3547/    1E64 :                     ; 		move.l	d5,4(a6)
    3548/    1E64 :                     ; 		move.l	d6,(a6)
    3549/    1E64 :                     ; 		move.l	d4,(a6)
    3550/    1E64 :                     ; 		addi.w	#$80,d3
    3551/    1E64 :                     ; 		addi.l	#$800000,d5
    3552/    1E64 :                     ; loc_2C9A:
    3553/    1E64 :                     ; 		clr.w	d7
    3554/    1E64 :                     ; 		lsr.l	#2,d7
    3555/    1E64 :                     ; 		lsr.w	#1,d7
    3556/    1E64 :                     ; 		ori.w	#$8000,d7
    3557/    1E64 :                     ; 		move.w	d7,d6
    3558/    1E64 :                     ; 		move.b	1(a2,d3.w),d6
    3559/    1E64 :                     ; 		swap	d6
    3560/    1E64 :                     ; 		move.w	d7,d6
    3561/    1E64 :                     ; 		move.b	3(a2,d3.w),d6
    3562/    1E64 :                     ; 		clr.w	d7
    3563/    1E64 :                     ; 		lsr.l	#2,d7
    3564/    1E64 :                     ; 		lsr.w	#1,d7
    3565/    1E64 :                     ; 		ori.w	#$8000,d7
    3566/    1E64 :                     ; 		move.w	d7,d4
    3567/    1E64 :                     ; 		move.b	5(a2,d3.w),d4
    3568/    1E64 :                     ; 		swap	d4
    3569/    1E64 :                     ; 		move.w	d7,d4
    3570/    1E64 :                     ; 		move.b	7(a2,d3.w),d4
    3571/    1E64 :                     ; 		move.l	d6,(a2,d3.w)
    3572/    1E64 :                     ; 		move.l	d4,4(a2,d3.w)
    3573/    1E64 :                     ; 		move.l	d5,4(a6)
    3574/    1E64 :                     ; 		move.l	d6,(a6)
    3575/    1E64 :                     ; 		move.l	d4,(a6)
    3576/    1E64 :                     ; 		addi.w	#$80,d3
    3577/    1E64 :                     ; 		addi.l	#$800000,d5
    3578/    1E64 :                     ; 		move.b	1(a2,d3.w),d6
    3579/    1E64 :                     ; 		swap	d6
    3580/    1E64 :                     ; 		move.b	3(a2,d3.w),d6
    3581/    1E64 :                     ; 		move.b	5(a2,d3.w),d4
    3582/    1E64 :                     ; 		swap	d4
    3583/    1E64 :                     ; 		move.b	7(a2,d3.w),d4
    3584/    1E64 :                     ; 		move.l	d6,(a2,d3.w)
    3585/    1E64 :                     ; 		move.l	d4,4(a2,d3.w)
    3586/    1E64 :                     ; 		move.l	d5,4(a6)
    3587/    1E64 :                     ; 		move.l	d6,(a6)
    3588/    1E64 :                     ; 		move.l	d4,(a6)
    3589/    1E64 :                     ; 		move.l	(sp)+,d3
    3590/    1E64 :                     ; 		jmp	(RAM_EmuLoop).l
    3591/    1E64 :                     ; ----------------------------------------------------------------
    3592/    1E64 :                     
    3593/    1E64 :                     
    3594/    1E64 :                     ; =============== S U B	R O U T	I N E =======================================
    3595/    1E64 :                     
    3596/    1E64 :                     
    3597/    1E64 :                     romGrabPrg:
    3598/    1E64 : 49E8 0010           		lea	$10(a0),a4
    3599/    1E68 : 0C07 0001           		cmpi.b	#1,d7
    3600/    1E6C : 6700 000C           		beq.w	loc_29C0
    3601/    1E70 : 0C07 0002           		cmpi.b	#2,d7
    3602/    1E74 : 6700 0022           		beq.w	loc_29D8
    3603/    1E78 : 4E42                		trap	#2
    3604/    1E7A :                     ; ----------------------------------------------------------------
    3605/    1E7A :                     loc_29C0:
    3606/    1E7A : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3607/    1E80 : 47F9 FFFF 4000      		lea	(RAM_Fami_ROM+$4000).l,a3
    3608/    1E86 : 2E3C 0000 0FFF      		move.l	#$FFF,d7
    3609/    1E8C :                     .rom_1:
    3610/    1E8C : 261C                		move.l	(a4)+,d3
    3611/    1E8E : 2AC3                		move.l	d3,(a5)+
    3612/    1E90 : 26C3                		move.l	d3,(a3)+
    3613/    1E92 : 51CF FFF8           		dbf	d7,.rom_1
    3614/    1E96 : 4E75                		rts
    3615/    1E98 :                     ; ----------------------------------------------------------------
    3616/    1E98 :                     
    3617/    1E98 :                     loc_29D8:
    3618/    1E98 : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3619/    1E9E : 2E3C 0000 1FFF      		move.l	#$1FFF,d7
    3620/    1EA4 :                     loc_29E2:
    3621/    1EA4 : 2ADC                		move.l	(a4)+,(a5)+
    3622/    1EA6 : 51CF FFFC           		dbf	d7,loc_29E2
    3623/    1EAA : 4E75                		rts
    3624/    1EAC :                     
    3625/    1EAC :                     ; =============== S U B	R O U T	I N E =======================================
    3626/    1EAC :                     
    3627/    1EAC :                     
    3628/    1EAC :                     Nemul_LoadChr:
    3629/    1EAC : 46FC 2700           		move.w	#$2700,sr
    3630/    1EB0 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
    3631/    1EB6 : 2D7C 4000 0000 0004 		move.l	#$40000000,4(a6)
    3632/    1EBE : 7A00                		moveq	#0,d5
    3633/    1EC0 : 3C2C 001E           		move.w	ppuChrBank(a4),d6
    3634/    1EC4 : 6100 0014           		bsr.w	.make_chr
    3635/    1EC8 : 7A04                		moveq	#4,d5
    3636/    1ECA : 3C2C 001E           		move.w	ppuChrBank(a4),d6
    3637/    1ECE : E30E                		lsl.b	#1,d6
    3638/    1ED0 : 6100 0008           		bsr.w	.make_chr
    3639/    1ED4 : 46FC 2000           		move.w	#$2000,sr
    3640/    1ED8 : 4E75                		rts
    3641/    1EDA :                     
    3642/    1EDA :                     .make_chr:
    3643/    1EDA : 2A4B                		movea.l	a3,a5
    3644/    1EDC : E30E                		lsl.b	#1,d6
    3645/    1EDE : 6406                		bcc.s	loc_8DBA
    3646/    1EE0 : DBFC 0000 1000      		adda.l	#$1000,a5
    3647/    1EE6 :                     loc_8DBA:
    3648/    1EE6 : 48E7 FF00           		movem.l	d0-d2/d3-d7,-(sp)
    3649/    1EEA : 2E3C 0000 00FF      		move.l	#$FF,d7
    3650/    1EF0 :                     loc_8DC4:
    3651/    1EF0 : 7607                		moveq	#7,d3
    3652/    1EF2 :                     loc_8DC6:
    3653/    1EF2 : 1215                		move.b	(a5),d1
    3654/    1EF4 : 142D 0008           		move.b	8(a5),d2
    3655/    1EF8 : 7000                		moveq	#0,d0
    3656/    1EFA : 7C07                		moveq	#7,d6
    3657/    1EFC :                     loc_8DD0:
    3658/    1EFC : D402                		add.b	d2,d2
    3659/    1EFE : D140                		addx.w	d0,d0
    3660/    1F00 : D201                		add.b	d1,d1
    3661/    1F02 : D140                		addx.w	d0,d0
    3662/    1F04 : 51CE FFF6           		dbf	d6,loc_8DD0
    3663/    1F08 : 7800                		moveq	#0,d4
    3664/    1F0A : 7C07                		moveq	#7,d6
    3665/    1F0C :                     loc_8DE0:
    3666/    1F0C : 1200                		move.b	d0,d1
    3667/    1F0E : E448                		lsr.w	#2,d0
    3668/    1F10 : 0281 0000 0003      		andi.l	#3,d1
    3669/    1F16 : 6702                		beq.s	loc_8DEE
    3670/    1F18 : 8205                		or.b	d5,d1
    3671/    1F1A :                     loc_8DEE:
    3672/    1F1A : 8801                		or.b	d1,d4
    3673/    1F1C : E89C                		ror.l	#4,d4
    3674/    1F1E : 51CE FFEC           		dbf	d6,loc_8DE0
    3675/    1F22 : 2C84                		move.l	d4,(a6)
    3676/    1F24 : 528D                		addq.l	#1,a5
    3677/    1F26 : 51CB FFCA           		dbf	d3,loc_8DC6
    3678/    1F2A : 508D                		addq.l	#8,a5
    3679/    1F2C : 51CF FFC2           		dbf	d7,loc_8DC4
    3680/    1F30 : 4CDF 00FF           		movem.l	(sp)+,d0-d2/d3-d7
    3681/    1F34 :                     return_8E08:
    3682/    1F34 : 4E75                		rts
    3683/    1F36 :                     
    3684/    1F36 :                     ; ====================================================================
    3685/    1F36 :                     
    3686/    1F36 :                     		align $8000
    3687/    8000 :                     EndOfRom:
    3688/    8000 :                     
    3689/    8000 :                     ; ====================================================================
    3690/    8000 :                     ; ----------------------------------------------------------------
    3691/    8000 :                     ; ROM are here
    3692/    8000 :                     ; ----------------------------------------------------------------
    3693/    8000 :                     
    3694/    8000 :                     ROM_FILE:	binclude "roms/paperboy.nes"
    3695/   18010 :                     
 AS V1.42 Beta [Bld 118] - source file md.asm - page 2 - 10/12/2020 19:48:25


  symbol table (* = unused):
  ------------------------

 ADDR_READ :                   1956 C |  ADDR_WRITE :                  1A22 C |
 APU_INPUT :                   1AD2 C |  APU_INPUT_1 :                 199C C |
 APU_INPUT_2 :                 19AA C |  APU_NULL :                    1ACC C |
 APU_OAMDMA :                  1B32 C |  APU_OAMDMA.LP_SPRNORMAL :     1B60 C |
*APU_RD_NULL :                 1996 C |
*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BITDISPENBL :                    6 - |
*BITDMA :                         1 - | *BITDMAENBL :                     4 - |
*BITHINT :                        2 - | *BITHINTENBL :                    4 - |
*BITHVSTOP :                      1 - | *BITJOYA :                        6 - |
*BITJOYB :                        4 - | *BITJOYC :                        5 - |
*BITJOYDOWN :                     1 - | *BITJOYLEFT :                     2 - |
*BITJOYMODE :                     3 - | *BITJOYRIGHT :                    3 - |
*BITJOYSTART :                    7 - | *BITJOYUP :                       0 - |
*BITJOYX :                        2 - | *BITJOYY :                        1 - |
*BITJOYZ :                        0 - | *BITV30 :                         3 - |
 BITVINT :                        3 - | *BITVINTENBL :                    5 - |
*BRANCHEXT :                      0 - |  BYTE_910 :                     35A C |
*CASESENSITIVE :                  0 - |  CLRSTACK :                     244 C |
*CONSTPI :        3.141592653589793 - |  CPUENTRY :                    7FFC - |
 CPUFAMIVINT :                   10 C |  CPUFLAG2 :                      18 C |
 CPUINPUTDATA :                  12 C |  CPUIRQ :                      7FFE - |
 CPUMAPPER :                      E C |  CPUMODEDEC :                    16 C |
 CPUMODEINTDIS :                 1A C |  CPUNMI :                      7FFA - |
*CPUSPRHINT :                     8 C | *DATE :                  10/12/2020 - |
*DISPENBL :                      40 - | *DMAENBL :                       10 - |
*DOTTEDSTRUCTS :                  0 - | *DOVINT :                       59C C |
 EMUCHRROM :                      4 C |  EMULOOP :                      572 C |
 EMUPRGROM :                      0 C |  EMUSTART :                     514 C |
 EMUVINT :                      578 C |  ENDOFROM :                    8000 C |
*FALSE :                          0 - |  FAMIMDVINT :                    36 C |
 FAMIVINT :                     586 C |  FAMI_INITVIDEO :               2B6 C |
 FAMI_INITVIDEO.LOOPBG :        2DC C |  FAMI_INITVIDEO.LOOPFG :        2C8 C |
 FAMI_LOADROM :                 482 C |  FAMI_LOADROM.CLRRAM :          498 C |
 FAMI_LOADROM.CLRVRAM :         4AA C | *FULLPMMU :                       1 - |
 GLBL_LASTORG :                   0 - |  GLBL_LASTPC :                    0 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*HINTENBL :                      10 - | *HVSTOP :                         2 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - | *JOYA :                          40 - |
*JOYB :                          10 - | *JOYC :                          20 - |
*JOYDOWN :                        2 - | *JOYLEFT :                        4 - |
*JOYMODE :                      800 - | *JOYRIGHT :                       8 - |
*JOYSTART :                      80 - | *JOYUP :                          1 - |
*JOYX :                         400 - | *JOYY :                         200 - |
*JOYZ :                         100 - | *LISTON :                         3 - |
 LIST_INITREGS :                26E C |  LOC_1002 :                     9AC C |
 LOC_1030 :                     9DA C |  LOC_1042 :                     9EE C |
 LOC_1060 :                     A0E C |  LOC_1080 :                     A30 C |
 LOC_10A2 :                     A54 C |  LOC_10C6 :                     A7A C |
 LOC_10D0 :                     A84 C |  LOC_10D4 :                     A8A C |
 LOC_10DE :                     A94 C |  LOC_10E2 :                     A9A C |
 LOC_10EC :                     AA4 C |  LOC_10F0 :                     AAA C |
 LOC_1106 :                     AC0 C |  LOC_110E :                     AC8 C |
 LOC_1116 :                     AD0 C |  LOC_111A :                     AD6 C |
 LOC_1136 :                     AF0 C |  LOC_113E :                     AF8 C |
 LOC_1146 :                     B00 C |  LOC_114A :                     B06 C |
 LOC_1154 :                     B10 C |  LOC_1158 :                     B16 C |
 LOC_1162 :                     B20 C |  LOC_1166 :                     B26 C |
 LOC_1170 :                     B30 C |  LOC_118E :                     B5A C |
 LOC_1198 :                     B64 C |  LOC_119C :                     B6A C |
 LOC_11A6 :                     B74 C |  LOC_11AA :                     B7A C |
 LOC_11B2 :                     B84 C |  LOC_11BC :                     B90 C |
 LOC_11C6 :                     B9C C |  LOC_11CE :                     BA6 C |
 LOC_11EE :                     BC8 C |  LOC_1214 :                     BF0 C |
 LOC_123C :                     C1A C |  LOC_1268 :                     C46 C |
 LOC_129A :                     C78 C |  LOC_12CC :                     CAA C |
 LOC_1302 :                     CE0 C |  LOC_133C :                     D1A C |
 LOC_135C :                     D3C C |  LOC_1382 :                     D64 C |
 LOC_13AE :                     D90 C |  LOC_13CE :                     DB2 C |
 LOC_13F4 :                     DDA C |  LOC_1420 :                     E06 C |
 LOC_1438 :                     E20 C |  LOC_1452 :                     E3C C |
 LOC_146E :                     E5A C |  LOC_148C :                     E7A C |
 LOC_149E :                     E8E C |  LOC_14B0 :                     EA2 C |
 LOC_14C4 :                     EB8 C |  LOC_14DE :                     ED4 C |
 LOC_14FA :                     EF2 C |  LOC_151A :                     F12 C |
 LOC_1540 :                     F38 C |  LOC_1566 :                     F5E C |
 LOC_1590 :                     F88 C |  LOC_15BE :                     FB6 C |
 LOC_15D3 :                     FD0 C |  LOC_15F0 :                     FEC C |
 LOC_160C :                    100A C |  LOC_162A :                    102A C |
 LOC_163C :                    103E C |  LOC_164E :                    1052 C |
 LOC_1660 :                    106C C |  LOC_167C :                    1090 C |
 LOC_1686 :                    109A C |  LOC_16A4 :                    10C4 C |
 LOC_16B6 :                    10D8 C |  LOC_16CE :                    10F2 C |
 LOC_16E8 :                    110E C |  LOC_1708 :                    112E C |
 LOC_172E :                    1154 C |  LOC_1754 :                    117A C |
 LOC_177E :                    11A4 C |  LOC_17AC :                    11D2 C |
 LOC_17BE :                    11E6 C |  LOC_17D3 :                    1200 C |
 LOC_17F0 :                    121C C |  LOC_1810 :                    123C C |
 LOC_1836 :                    1262 C |  LOC_1848 :                    1276 C |
 LOC_1860 :                    1290 C |  LOC_187A :                    12AC C |
 LOC_189A :                    12CC C |  LOC_18C0 :                    12F2 C |
 LOC_18D2 :                    1306 C |  LOC_18F0 :                    1326 C |
 LOC_1910 :                    1348 C |  LOC_1932 :                    136C C |
 LOC_1956 :                    1392 C |  LOC_195C :                    139A C |
 LOC_1970 :                    13B0 C |  LOC_198A :                    13CC C |
 LOC_19A6 :                    13EA C |  LOC_19C6 :                    140A C |
 LOC_19EC :                    1430 C |  LOC_1A12 :                    1456 C |
 LOC_1A3C :                    1480 C |  LOC_1A6A :                    14AE C |
 LOC_1A78 :                    14BE C |  LOC_1A88 :                    14D0 C |
 LOC_1AA6 :                    14F0 C |  LOC_1AB6 :                    1502 C |
 LOC_1ACA :                    1518 C |  LOC_1AEA :                    153A C |
 LOC_1B0C :                    155E C |  LOC_1B30 :                    1584 C |
 LOC_1B56 :                    15AC C |  LOC_1B6A :                    15C2 C |
 LOC_1B8A :                    15E4 C |  LOC_1BAC :                    1608 C |
 LOC_1BD0 :                    162E C |  LOC_1BF6 :                    1656 C |
 LOC_1C32 :                    1672 C |  LOC_1C52 :                    169A C |
 LOC_1C6A :                    16B4 C |  LOC_1C88 :                    16D4 C |
 LOC_1CA8 :                    16F6 C |  LOC_1CCC :                    171A C |
 LOC_1CF6 :                    1744 C |  LOC_1D20 :                    176E C |
 LOC_1D4E :                    179C C |  LOC_1D80 :                    17CE C |
 LOC_1D88 :                    17D8 C |  LOC_1D92 :                    17E4 C |
 LOC_1D9C :                    17F0 C |  LOC_1DA8 :                    17FE C |
 LOC_1DB6 :                    180E C |  LOC_1DCA :                    1822 C |
 LOC_1DE0 :                    1836 C |  LOC_1DF6 :                    184A C |
 LOC_1E10 :                    1862 C |  LOC_1E2E :                    187E C |
 LOC_1E3A :                    188C C |  LOC_1E48 :                    189C C |
 LOC_1E5C :                    18B0 C |  LOC_1E68 :                    18BE C |
 LOC_1E76 :                    18CE C |  LOC_1E8A :                    18E2 C |
 LOC_1E9C :                    18F6 C |  LOC_1EAE :                    190A C |
 LOC_1EC4 :                    1922 C |  LOC_1ED3 :                    1936 C |
 LOC_1EE0 :                    1942 C |  LOC_210 :                      214 C |
 LOC_23A6 :                    1998 C |  LOC_23F4 :                    19D6 C |
 LOC_270 :                      26A C |  LOC_29C0 :                    1E7A C |
 LOC_29C0.ROM_1 :              1E8C C |  LOC_29D8 :                    1E98 C |
 LOC_29E2 :                    1EA4 C |  LOC_2A16 :                    1BC0 C |
 LOC_2A16.NOVINTFLAG :         1BCA C |  LOC_2A2C :                    1BD6 C |
 LOC_2A2C.NO_RELOAD :          1BEE C |  LOC_2A2C.NRML_INCR :          1BF6 C |
 LOC_2A5E :                    1C08 C |  LOC_2A5E.HIDEBG :             1C20 C |
 LOC_2A5E.HIDESP :             1C2C C |  LOC_2AA4 :                    1C64 C |
 LOC_2ABE :                    1C80 C |  LOC_2ACC :                    1C92 C |
 LOC_2AD0 :                    1C98 C |  LOC_2AE2 :                    1CAC C |
 LOC_2AE6 :                    1CB2 C |  LOC_51E :                      30A C |
 LOC_8DA :                      324 C |  LOC_8DBA :                    1EE6 C |
 LOC_8DC4 :                    1EF0 C |  LOC_8DC6 :                    1EF2 C |
 LOC_8DD0 :                    1EFC C |  LOC_8DE0 :                    1F0C C |
 LOC_8DEE :                    1F1A C |  LOC_8E0 :                      32A C |
 LOC_8F0 :                      33A C |  LOC_904 :                      34E C |
 LOC_9F4 :                      4F2 C |  LOC_A10 :                      506 C |
 LOC_E34 :                      7D2 C |  LOC_E44 :                      7E4 C |
 LOC_E5A :                      7FC C |  LOC_E72 :                      816 C |
 LOC_E8E :                      832 C |  LOC_EB0 :                      854 C |
 LOC_ED2 :                      876 C |  LOC_EF8 :                      89C C |
 LOC_F22 :                      8C6 C |  LOC_F36 :                      8DC C |
 LOC_F50 :                      8F8 C |  LOC_F6C :                      916 C |
 LOC_F8C :                      936 C |  LOC_FB2 :                      95C C |
 LOC_FD8 :                      982 C | *MACEXP :                         7 - |
*MARS :                           0 - | *MARSCD :                         0 - |
*MCD :                            0 - | *MD_BANK_SRAM :              A130F1 - |
 MD_ENTRY :                     202 C |  MD_ERROR :                     200 C |
 MD_HINT :                      458 C |  MD_INIT :                      36E C |
 MD_INIT.WAIT :                 38E C | *MD_MARS_ID :                A130EC - |
 MD_VINT :                      3BA C |  MD_VINT.WAIT :                 404 C |
 MD_VINT.WAIT2 :                43A C | *MOMCPU :                     68000 - |
*MOMCPUNAME :                 68000 - |  MOSCPU :                       5D0 C |
 MOS_BRK :                      B36 C |  MOS_NULL :                     7D0 C |
 NEMUL_LOADCHR :               1EAC C |  NEMUL_LOADCHR.MAKE_CHR :      1EDA C |
*NESTMAX :                      100 - |  OAMSPRDATA :                    C0 C |
 OFF_23D4 :                    19C6 C |  OFF_2866 :                    1A8C C |
 OFF_29F6 :                    1BB0 C |  OLD_MD :                       23E C |
*PACKING :                        0 - | *PADDING :                        0 - |
*PADDINGSOFAR :                   0 - |  PPUADDRBASE :                   24 C |
 PPUADDRINCR :                   22 C |  PPUADDRLATCH :                  2C C |
 PPUCHRBANK :                    1E C |  PPUDATALAST :                   26 C |
 PPUDRWCELL :                  1DD4 C |  PPUDRWCELL.LEFT_PG :          1E04 C |
 PPUDRWCELL.TOP_LYR :          1DFA C |  PPUDRWCELL.VERMIRROR :        1E40 C |
 PPUDRWCELLPAL :               1E5E C |  PPUMIRROR :                      C C |
 PPUNMIFLAG :                    30 C |  PPUNTBLBASE :                   1C C |
 PPUOAMADDR :                    20 C |  PPUOAMUNK :                     2E C |
 PPUSETCOLOR :                 1D32 C |  PPUSP0YPOS :                    2A C |
 PPUSPRWIDE :                    28 C |  PPUSTATUS :                     32 C |
 PPUVDPCOLORS :                1D54 C |  PPUVDPINDEX :                 1CF2 C |
*PSG_CTRL :                  C00011 - |  RAM_EMULOOP :     FFFFFFFFFFFF8FF0 C |
 RAM_FAMI_EMU :            FFFF8000 - |  RAM_FAMI_PPU :            FFFFA000 - |
 RAM_FAMI_RAM :            FFFF9000 - |  RAM_FAMI_ROM :            FFFF0000 - |
 RDFROM_APU :                  1982 C |  RDFROM_PPU :                  19B8 C |
 RDFROM_PRG :                  1974 C | *RDFROM_RAM :                  1966 C |
 RDPPU_DATA :                  1A0A C |  RDPPU_STATUS :                19DC C |
 RDPPU_STATUS.NOVFLAG :        1A06 C |  RDPPU_STATUS.NO_HIT :         19F6 C |
 READINPUT :                   1ADE C |  READINPUT.THIS_PAD :          1AF4 C |
*RELAXED :                        0 - |  RETURN_241A :                 1A08 C |
*RETURN_8E08 :                 1F34 C |  ROMGRABPRG :                  1E64 C |
 ROM_FILE :                    8000 C |  SOUND_LOADZ80 :                320 C |
 SOUND_PSGINIT :                338 C | *SYSCD_ARGS_M :              A12010 - |
*SYSCD_ARGS_S :              A12020 - | *SYSCD_BUS :                 A12000 - |
*SYSCD_CDCHOST :             A12008 - | *SYSCD_CDCMODE :             A12004 - |
*SYSCD_COMM_M :              A1200E - | *SYSCD_COMM_S :              A1200F - |
*SYSCD_HINT :                A12006 - | *SYSCD_MEMORY :              A12003 - |
*SYSCD_PRGRAM :               20000 - | *SYSCD_STOPWTCH :            A12008 - |
*SYSCD_WORDRAM :             200000 - | *SYS_CTRL_1 :                A10009 - |
*SYS_CTRL_2 :                A1000B - | *SYS_CTRL_3 :                A1000D - |
*SYS_DATA_1 :                A10003 - | *SYS_DATA_2 :                A10005 - |
*SYS_DATA_3 :                A10007 - | *SYS_EXRAM :                 200000 - |
*SYS_IO :                    A10001 - | *SYS_TMSS :                  A14000 - |
*TIME :                    19:48:25 - | *TRUE :                           1 - |
*VARNULLVRAM :                  7FF - |  VDPHINTSP0 :                    34 C |
 VDPPALETTE :                    40 C |  VDPREG01 :                       A C |
 VDPSCRLX :                      38 C |  VDPSCRLY :                      3C C |
 VDP_CTRL :                  C00004 - | *VDP_DATA :                  C00000 - |
*VDP_PALETTE :             C0000000 - | *VDP_VSRAM :               40000010 - |
*VERSION :                     142F - |  VIDEO_INIT :                   346 C |
*VINTENBL :                      20 - |  WRPPU_DATA :                  1CC6 C |
 WRPPU_SCROLL :                1C3C C |  WRTO_APU :                    1A7C C |
 WRTO_PPU :                    1BA2 C |  WRTO_PRG :                    1A46 C |
 WRTO_PRG.COPYCHR :            1A6A C |  WRTO_PRG.MAPPER_3 :           1A54 C |
*WRTO_RAM :                    1A34 C | *YM_CTRL_1 :                 A04000 - |
*YM_CTRL_2 :                 A04002 - | *YM_DATA_1 :                 A04001 - |
*YM_DATA_2 :                 A04003 - |  Z80_BUS :                   A11100 - |
*Z80_CPU :                   A00000 - |  Z80_RESET :                 A11200 - |
*ZBANK :                       6000 - | *ZPSG_CTRL :                   7F11 - |
*ZVDP_CTRL :                   7F04 - | *ZVDP_DATA :                   7F00 - |
*ZYM_CTRL_1 :                  4000 - | *ZYM_CTRL_2 :                  4002 - |
*ZYM_DATA_1 :                  4001 - | *ZYM_DATA_2 :                  4003 - |

    428 symbols
    117 unused symbols

 AS V1.42 Beta [Bld 118] - source file md.asm - page 3 - 10/12/2020 19:48:25


  defined macros:
  ---------------

FINISH                                | ISO_FILE                             
ISO_SETFS                             | ORG                                  
ROMPAD                                | STRUCT                               

      6 macros

 AS V1.42 Beta [Bld 118] - source file md.asm - page 4 - 10/12/2020 19:48:25


  defined functions:
  ------------------

NOTZ80                                | LOCATE                               
MAPSIZE                               | DOUBLEWORD                           
M68K_ADDR                             |

 AS V1.42 Beta [Bld 118] - source file md.asm - page 5 - 10/12/2020 19:48:25


  codepages:
  ----------

STANDARD (0 changed characters)


0.06 seconds assembly time

   4004 lines source file
   4016 lines incl. macro expansions
      3 passes
      0 errors
      0 warnings
