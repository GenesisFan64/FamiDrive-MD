 AS V1.42 Beta [Bld 118] - source file md.asm - page 1 - 10/15/2020 18:09:24


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; FamiDrive beta
       4/       0 :                     ; 
       5/       0 :                     ; A Modification of Nemul by Mairtrus
       6/       0 :                     ; (credit him for his original attempt)
       7/       0 :                     ; 
       8/       0 :                     ; Fixed stuff, now works on real hardware
       9/       0 :                     ; +-----------------------------------------------------------------+
      10/       0 :                     
      11/       0 :                     		include	"system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; --------------------------------------------------------
(1)    7/       0 :                     ; AS Main settings
(1)    8/       0 :                     ; --------------------------------------------------------
(1)    9/       0 :                     
(1)   10/       0 :                     		!org 0				; Start at 0
(1)   11/       0 :                     		cpu 		68000		; BASE CPU is 68k (manually changed later)
(1)   12/       0 :                     		padding		off		; Dont pad dc.b
(1)   13/       0 :                     		listing 	purecode	; Want listing file, but only the final code in expanded macros
(1)   14/       0 :                     		supmode 	on 		; Supervisor mode
(1)   15/       0 :                     		dottedstructs	off		; If needed
(1)   16/       0 :                     		page 		0
(1)   17/       0 :                     
(1)   18/       0 :                     ; ====================================================================
(1)   19/       0 :                     ; ---------------------------------------------
(1)   20/       0 :                     ; Functions
(1)   21/       0 :                     ; ---------------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     ; Fix (address).w
(1)   24/       0 :                     m68k_addr 	function x,-(-x)&$FFFFFFFF					; Allow usage of negative addresses as .w
(1)   25/       0 :                     doubleword 	function l,r,(l<<16&$FFFF0000|r&$FFFF)				; LLLL RRRR
(1)   26/       0 :                     
(1)   27/       0 :                     mapsize		function l,r,( ((l-1)/8)<<16&$FFFF0000|((r-1)/8)&$FFFF )	; for cell w/h use doubleword
(1)   28/       0 :                     locate		function a,b,c,(c&$FF)|(b<<8&$FF00)|(a<<16&$FF0000)		; Layer|X pos|Y pos for some video routines
(1)   29/       0 :                     
(1)   30/       0 :                     ; ====================================================================
(1)   31/       0 :                     ; ---------------------------------------------
(1)   32/       0 :                     ; Macros
(1)   33/       0 :                     ; ---------------------------------------------
(1)   34/       0 :                     
(1)   35/       0 :                     ; -------------------------------------
(1)   36/       0 :                     ; Reserve memory space
(1)   37/       0 :                     ; -------------------------------------
(1)   38/       0 :                     
(1)   39/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   40/       0 :                     GLBL_LASTPC	set *
(1)   41/       0 :                     		dephase
(1)   42/       0 :                     GLBL_LASTORG	set *
(1)   43/       0 :                     		phase thisinput
(1)   44/       0 :                     		endm
(1)   45/       0 :                     		
(1)   46/       0 :                     ; -------------------------------------
(1)   47/       0 :                     ; Finish
(1)   48/       0 :                     ; -------------------------------------
(1)   49/       0 :                     
(1)   50/       0 :                     finish		macro				; Then finish
(1)   51/       0 :                     		!org GLBL_LASTORG
(1)   52/       0 :                     		phase GLBL_LASTPC
(1)   53/       0 :                     		endm
(1)   54/       0 :                     
(1)   55/       0 :                     ; -------------------------------------
(1)   56/       0 :                     ; ZERO Fill padding
(1)   57/       0 :                     ; -------------------------------------
(1)   58/       0 :                     
(1)   59/       0 :                     rompad		macro address			; Zero fill
(1)   60/       0 :                     diff := address - *
(1)   61/       0 :                     		if diff < 0
(1)   62/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   63/       0 :                     		else
(1)   64/       0 :                     			while diff > 1024
(1)   65/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   66/       0 :                     				dc.b [1024]0
(1)   67/       0 :                     diff := diff - 1024
(1)   68/       0 :                     			endm
(1)   69/       0 :                     			dc.b [diff]0
(1)   70/       0 :                     		endif
(1)   71/       0 :                     	endm
(1)   72/       0 :                     	
(1)   73/       0 :                     ; -------------------------------------
(1)   74/       0 :                     ; ORG
(1)   75/       0 :                     ;
(1)   76/       0 :                     ; (from s2disasm)
(1)   77/       0 :                     ; -------------------------------------
(1)   78/       0 :                     
(1)   79/       0 : =$0                 paddingSoFar set 0
(1)   80/       0 :                     ; 128 = 80h = z80, 32988 = 80DCh = z80unDoC 
(1)   81/       0 :                     notZ80 function cpu,(cpu<>128)&&(cpu<>32988)
(1)   82/       0 :                     
(1)   83/       0 :                     ; make org safer (impossible to overwrite previously assembled bytes) and count padding
(1)   84/       0 :                     ; and also make it work in Z80 code without creating a new segment
(1)   85/       0 :                     org macro address
(1)   86/       0 :                     	if notZ80(MOMCPU)
(1)   87/       0 :                     		if address < *
(1)   88/       0 :                     			error "too much stuff before org $\{address} ($\{(*-address)} bytes)"
(1)   89/       0 :                     		elseif address > *
(1)   90/       0 :                     paddingSoFar	set paddingSoFar + address - *
(1)   91/       0 :                     			!org address
(1)   92/       0 :                     		endif
(1)   93/       0 :                     	else
(1)   94/       0 :                     		if address < $
(1)   95/       0 :                     			error "too much stuff before org 0\{address}h (0\{($-address)}h bytes)"
(1)   96/       0 :                     		else
(1)   97/       0 :                     			while address > $
(1)   98/       0 :                     				db 0
(1)   99/       0 :                     			endm
(1)  100/       0 :                     		endif
(1)  101/       0 :                     	endif
(1)  102/       0 :                         endm
(1)  103/       0 :                     
(1)  104/       0 :                     ; ====================================================================
(1)  105/       0 :                     ; ---------------------------------------------
(1)  106/       0 :                     ; Mega CD only
(1)  107/       0 :                     ; ---------------------------------------------
(1)  108/       0 :                     
(1)  109/       0 :                     ; Set a ISO file
(1)  110/       0 :                     ; NOTE: a valid ISO head is required ($8000 to $B7FF)
(1)  111/       0 :                     
(1)  112/       0 :                     iso_setfs	macro type,start,end
(1)  113/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  114/       0 :                     		dc.b 0						; zero
(1)  115/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  116/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  117/       0 :                     		dc.l start>>11					; Start sector, big
(1)  118/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  119/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  120/       0 :                     		dc.l end-start					; Filesize, big
(1)  121/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  122/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  123/       0 :                     		dc.b 2						; File flags
(1)  124/       0 :                     		dc.b 0,0
(1)  125/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  126/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  127/       0 :                     		dc.b 1,type
(1)  128/       0 :                     .fend:
(1)  129/       0 :                     		endm
(1)  130/       0 :                     		
(1)  131/       0 :                     iso_file	macro filename,start,end
(1)  132/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  133/       0 :                     		dc.b 0						; zero
(1)  134/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  135/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  136/       0 :                     		dc.l start>>11					; Start sector, big
(1)  137/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  138/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  139/       0 :                     		dc.l end-start					; Filesize, big
(1)  140/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  141/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  142/       0 :                     		dc.b 0						; File flags
(1)  143/       0 :                     		dc.b 0,0
(1)  144/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  145/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  146/       0 :                     		dc.b .flend-.flen
(1)  147/       0 :                     .flen:		dc.b filename,";1"
(1)  148/       0 :                     .flend:		dc.b 0
(1)  149/       0 :                     .fend:
(1)  150/       0 :                     		endm
(1)  151/       0 :                     		
(1)  152/       0 :                     ; ====================================================================
(1)  153/       0 :                     ; ---------------------------------------------
(1)  154/       0 :                     ; 32X only
(1)  155/       0 :                     ; ---------------------------------------------
(1)  156/       0 :                     
      12/       0 :                     		include	"system/md/const.asm"	; RAM / Variables are here
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Engine settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; MDRAM_START	equ	$FFFF9000
(1)    7/       0 :                     ; MAX_MDERAM	equ 	$200		; MAX RAM for Game modes
(1)    8/       0 :                     
(1)    9/       0 :                     ; ====================================================================
(1)   10/       0 :                     ; ----------------------------------------------------------------
(1)   11/       0 :                     ; Aliases
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     
(1)   14/       0 :                     ; Controller_1	equ RAM_InputData
(1)   15/       0 :                     ; Controller_2	equ RAM_InputData+sizeof_input
(1)   16/       0 :                     
(1)   17/       0 : =$C0000000          Vdp_palette	equ $C0000000		; Palette
(1)   18/       0 : =$40000010          Vdp_vsram	equ $40000010		; Vertical scroll
(1)   19/       0 :                     
(1)   20/       0 :                     ; ====================================================================
(1)   21/       0 :                     ; ----------------------------------------------------------------
(1)   22/       0 :                     ; Variables
(1)   23/       0 :                     ; ----------------------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 :                     ; --------------------------------------------------------
(1)   26/       0 :                     ; controller
(1)   27/       0 :                     ; --------------------------------------------------------
(1)   28/       0 :                     
(1)   29/       0 : =$1                 JoyUp		equ $0001
(1)   30/       0 : =$2                 JoyDown		equ $0002
(1)   31/       0 : =$4                 JoyLeft		equ $0004
(1)   32/       0 : =$8                 JoyRight	equ $0008
(1)   33/       0 : =$10                JoyB		equ $0010
(1)   34/       0 : =$20                JoyC		equ $0020
(1)   35/       0 : =$40                JoyA		equ $0040
(1)   36/       0 : =$80                JoyStart	equ $0080
(1)   37/       0 : =$100               JoyZ		equ $0100
(1)   38/       0 : =$200               JoyY		equ $0200
(1)   39/       0 : =$400               JoyX		equ $0400
(1)   40/       0 : =$800               JoyMode		equ $0800
(1)   41/       0 :                     
(1)   42/       0 :                     ; right byte only
(1)   43/       0 : =$0                 bitJoyUp	equ 0
(1)   44/       0 : =$1                 bitJoyDown	equ 1
(1)   45/       0 : =$2                 bitJoyLeft	equ 2
(1)   46/       0 : =$3                 bitJoyRight	equ 3
(1)   47/       0 : =$4                 bitJoyB		equ 4
(1)   48/       0 : =$5                 bitJoyC		equ 5
(1)   49/       0 : =$6                 bitJoyA		equ 6
(1)   50/       0 : =$7                 bitJoyStart	equ 7
(1)   51/       0 :                     
(1)   52/       0 :                     ; left byte only
(1)   53/       0 : =$0                 bitJoyZ		equ 0
(1)   54/       0 : =$1                 bitJoyY		equ 1
(1)   55/       0 : =$2                 bitJoyX		equ 2
(1)   56/       0 : =$3                 bitJoyMode	equ 3
(1)   57/       0 :                     
(1)   58/       0 :                     ; --------------------------------------------------------
(1)   59/       0 :                     ; vdp_ctrl READ bits
(1)   60/       0 :                     ; --------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 : =$2                 bitHint		equ 2
(1)   63/       0 : =$3                 bitVint		equ 3
(1)   64/       0 : =$1                 bitDma		equ 1
(1)   65/       0 :                     
(1)   66/       0 :                     ; --------------------------------------------------------
(1)   67/       0 :                     ; VDP register vars
(1)   68/       0 :                     ; --------------------------------------------------------
(1)   69/       0 :                     
(1)   70/       0 :                     ; Register $80
(1)   71/       0 : =$2                 HVStop		equ $02
(1)   72/       0 : =$10                HintEnbl	equ $10
(1)   73/       0 : =$1                 bitHVStop	equ 1
(1)   74/       0 : =$4                 bitHintEnbl	equ 4
(1)   75/       0 :                     
(1)   76/       0 :                     ; Register $81
(1)   77/       0 : =$40                DispEnbl 	equ $40
(1)   78/       0 : =$20                VintEnbl 	equ $20
(1)   79/       0 : =$10                DmaEnbl		equ $10
(1)   80/       0 : =$6                 bitDispEnbl	equ 6
(1)   81/       0 : =$5                 bitVintEnbl	equ 5
(1)   82/       0 : =$4                 bitDmaEnbl	equ 4
(1)   83/       0 : =$3                 bitV30		equ 3
(1)   84/       0 :                     
(1)   85/       0 :                     ; --------------------------------------------------------
(1)   86/       0 :                     ; Misc
(1)   87/       0 :                     ; --------------------------------------------------------
(1)   88/       0 :                     
(1)   89/       0 : =$7FF               varNullVram	equ $7FF
(1)   90/       0 :                     
      13/       0 :                     		include	"system/md/map.asm"	; Genesis hardware map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Genesis / Mega drive 68k map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =$200000            sys_exram	equ	$200000		; External RAM
(1)    7/       0 : =$A00000            z80_cpu		equ	$A00000		; Z80 CPU, size: $2000
(1)    8/       0 : =$A04000            ym_ctrl_1	equ	$A04000		; YM2612 reg 1
(1)    9/       0 : =$A04001            ym_data_1	equ	$A04001		; YM2612 reg 2
(1)   10/       0 : =$A04002            ym_ctrl_2	equ	$A04002		; YM2612 reg 1
(1)   11/       0 : =$A04003            ym_data_2	equ	$A04003		; YM2612 reg 2
(1)   12/       0 : =$A10001            sys_io		equ	$A10001		; bits: OVRSEAS(7)|PAL(6)|DISK(5)|VER(3-0)
(1)   13/       0 : =$A10003            sys_data_1	equ	$A10003		; Port 1 DATA
(1)   14/       0 : =$A10005            sys_data_2	equ	$A10005		; Port 2 DATA
(1)   15/       0 : =$A10007            sys_data_3	equ	$A10007		; Modem DATA
(1)   16/       0 : =$A10009            sys_ctrl_1	equ	$A10009		; Port 1 CTRL
(1)   17/       0 : =$A1000B            sys_ctrl_2	equ	$A1000B		; Port 2 CTRL
(1)   18/       0 : =$A1000D            sys_ctrl_3	equ	$A1000D		; Modem CTRL
(1)   19/       0 : =$A14000            sys_tmss	equ	$A14000		; write "SEGA" here for ver > 0
(1)   20/       0 : =$A11100            z80_bus 	equ	$A11100		; only use bit 0 (bit 8 as WORD)
(1)   21/       0 : =$A11200            z80_reset	equ	$A11200		; WRITE only ($0000 reset/$0100 cancel)
(1)   22/       0 : =$A130EC            md_mars_id	equ	$A130EC		; MARS ID "MARS"
(1)   23/       0 : =$A130F1            md_bank_sram	equ	$A130F1		; Make SRAM visible at $200000
(1)   24/       0 : =$C00000            vdp_data	equ	$C00000		; video data port
(1)   25/       0 : =$C00004            vdp_ctrl	equ	$C00004		; video control port
(1)   26/       0 : =$C00011            psg_ctrl	equ	$C00011		; PSG control
(1)   27/       0 :                     
(1)   28/       0 :                     ; ----------------------------------------------------------------
(1)   29/       0 :                     ; Genesis / Mega drive Z80 map
(1)   30/       0 :                     ; ----------------------------------------------------------------
(1)   31/       0 :                     
(1)   32/       0 : =$4000              zym_ctrl_1	equ	$4000		; YM2612 reg 1
(1)   33/       0 : =$4001              zym_data_1	equ	$4001		; YM2612 reg 2
(1)   34/       0 : =$4002              zym_ctrl_2	equ	$4002		; YM2612 reg 1
(1)   35/       0 : =$4003              zym_data_2	equ	$4003		; YM2612 reg 2
(1)   36/       0 : =$6000              zbank		equ	$6000		; ROM BANK 24bits %XXXXXXXX X0000000 00000000
(1)   37/       0 : =$7F00              zvdp_data	equ	$7F00		; video data port
(1)   38/       0 : =$7F04              zvdp_ctrl	equ	$7F04		; video control port
(1)   39/       0 : =$7F11              zpsg_ctrl	equ	$7F11		; PSG control
(1)   40/       0 :                     
(1)   41/       0 :                     ; ----------------------------------------------------------------
(1)   42/       0 :                     ; If a SEGA CD is attached
(1)   43/       0 :                     ; ----------------------------------------------------------------
(1)   44/       0 :                     
(1)   45/       0 : =$20000             syscd_prgram	equ	$020000		; SubCPU PRG-RAM, up to $1FFFF, banked
(1)   46/       0 : =$200000            syscd_wordram	equ	$200000		; WORD-RAM seen in MAIN-CPU
(1)   47/       0 : =$A12000            syscd_bus	equ	$A12000		; WORD | Sub-CPU BUS/RESET
(1)   48/       0 : =$A12003            syscd_memory	equ	$A12003		; BYTE | Sub-CPU memory mode
(1)   49/       0 : =$A12004            syscd_cdcmode	equ	$A12004		; WORD | CDC Mode
(1)   50/       0 : =$A12006            syscd_hint	equ	$A12006		; WORD | VDP HBlank jump ($FFxxxx)
(1)   51/       0 : =$A12008            syscd_cdchost	equ	$A12008		; WORD | CDC Host
(1)   52/       0 : =$A12008            syscd_stopwtch	equ	$A12008		; WORD | Stopwatch
(1)   53/       0 : =$A1200E            syscd_comm_m	equ	$A1200E		; BYTE | MainCPU R/W comm byte
(1)   54/       0 : =$A1200F            syscd_comm_s	equ	$A1200F		; BYTE | Sub-CPU Read comm byte
(1)   55/       0 : =$A12010            syscd_args_m	equ	$A12010		; DATA | comm R/W list, max size: $E
(1)   56/       0 : =$A12020            syscd_args_s	equ	$A12020		; DATA | comm Read list, max size: $E
(1)   57/       0 :                     
(1)   58/       0 :                     ; ----------------------------------------------------------------
(1)   59/       0 :                     ; If a 32X is attached
(1)   60/       0 :                     ; ----------------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 :                     ; TODO
(1)   63/       0 :                     
      14/       0 :                     
      15/       0 :                     ; ====================================================================
      16/       0 :                     ; ----------------------------------------------------------------
      17/       0 :                     ; Emulator variables
      18/       0 :                     ; ----------------------------------------------------------------
      19/       0 :                     
      20/       0 :                     ; ------------------------------------------------
      21/       0 :                     ; RAM
      22/       0 :                     ; ------------------------------------------------
      23/       0 :                     
      24/       0 : =$FFFF0000          RAM_Fami_ROM	equ $FFFF0000		; PRG-ROM
      25/       0 : =$FFFF8000          RAM_Fami_Emu	equ $FFFF8000		; Emulator buffer
      26/       0 : =$FFFF9000          RAM_Fami_RAM	equ $FFFF9000		; RAM size: $800
      27/       0 : =$FFFFA000          RAM_Fami_PPU	equ $FFFFA000		; PPU size: $3EF8 (TODO: still uses negative variables)
      28/       0 :                     
      29/       0 :                     ; ----------------------------------------------------------------
      30/       0 :                     ; CPU
      31/       0 :                     ; ----------------------------------------------------------------
      32/       0 :                     
      33/       0 : =$7FFA              cpuNMI		equ $7FFA
      34/       0 : =$7FFC              cpuEntry	equ $7FFC
      35/       0 : =$7FFE              cpuIRQ		equ $7FFE
      36/       0 :                     
      37/       0 :                     ; ----------------------------------------------------------------
      38/       0 :                     ; Emulator
      39/       0 :                     ; ---------------------------------------------------------------
      40/       0 :                     
      41/       0 : (MACRO)             		struct RAM_Fami_Emu+$FF0
      41/       0 : =$0                 GLBL_LASTPC     set *
      41/       0 :                                     dephase
      41/       0 : =$0                 GLBL_LASTORG    set *
      41/FFFFFFFFFFFF8FF0 :                                     phase RAM_FAMI_EMU+$FF0
      42/FFFFFFFFFFFF8FF0 :                     RAM_EmuLoop	ds.w 3
      43/FFFFFFFFFFFF8FF6 : (MACRO)             		finish
      43/FFFFFFFFFFFF8FF0 :                                     !org GLBL_LASTORG
      43/       0 :                                     phase GLBL_LASTPC
      44/       0 :                     
      45/       0 :                     ; ----------------------------------------------------------------
      46/       0 :                     ; Unsorted
      47/       0 :                     ; ----------------------------------------------------------------
      48/       0 :                     
      49/       0 : (MACRO)             		struct 0
      49/       0 : =$0                 GLBL_LASTPC     set *
      49/       0 :                                     dephase
      49/       0 : =$0                 GLBL_LASTORG    set *
      49/       0 :                                     phase 0
      50/       0 :                     emuPrgRom	ds.l 1
      51/       4 :                     emuChrRom	ds.l 1
      52/       8 :                     famiVintSave	ds.l 8
      53/      28 :                     famiVintSave2	ds.w 1
      54/      2A :                     cpuSprHint	ds.w 1;equ -$38
      55/      2C :                     vdpReg01	ds.w 1;equ -$36
      56/      2E :                     ppuMirror	ds.w 1;equ -$34
      57/      30 :                     cpuMapper	ds.w 1;equ -$32
      58/      32 :                     cpuFamiVint	ds.w 1;equ -$30
      59/      34 :                     cpuInputData	ds.w 2;equ -$28
      60/      38 :                     cpuModeDec	ds.w 1;equ -$22
      61/      3A :                     cpuFlag2	ds.w 1;equ -$20
      62/      3C :                     cpuModeIntDis	ds.w 1;equ -$1E
      63/      3E :                     ppuNTblBase	ds.w 1;equ -$1A
      64/      40 :                     ppuChrBank	ds.w 1;equ -$18
      65/      42 :                     ppuOamAddr	ds.w 1;equ -$16
      66/      44 :                     ppuAddrIncr	ds.w 1;equ -$14
      67/      46 :                     ppuAddrBase	ds.w 1;equ -$12
      68/      48 :                     ppuDataLast	ds.w 1;equ -$10
      69/      4A :                     ppuSprWide	ds.w 1;equ -$E
      70/      4C :                     ppuSp0Ypos	ds.w 1;equ -$C
      71/      4E :                     ppuAddrLatch	ds.w 1;equ -$A
      72/      50 :                     ppuOamUnk	ds.w 1;equ -6
      73/      52 :                     ppuNmiFlag	ds.w 1;equ -4
      74/      54 :                     ppuStatus	ds.w 1;equ -2
      75/      56 :                     vdpHintSp0	ds.w 1
      76/      58 :                     FamiMdVint	ds.w 1
      77/      5A :                     vdpScrlX	ds.l 1
      78/      5E :                     vdpScrlY	ds.l 1
      79/      62 :                     vdpPalette	ds.w 64
      80/      E2 :                     oamSprData	ds.w 8*70
      81/     542 : (MACRO)             		finish
      81/       0 :                                     !org GLBL_LASTORG
      81/       0 :                                     phase GLBL_LASTPC
      82/       0 :                     
      83/       0 :                     ; ====================================================================
      84/       0 :                     ; Header
      85/       0 :                     ; ====================================================================
      86/       0 :                     
      87/       0 : 0000 0000           		dc.l 0
      88/       4 : 0000 0202           		dc.l MD_Entry
      89/       8 : 0000 0200           		dc.l MD_Error
      90/       C : 0000 0200           		dc.l MD_Error
      91/      10 : 0000 0200           		dc.l MD_Error
      92/      14 : 0000 0200           		dc.l MD_Error
      93/      18 : 0000 0200           		dc.l MD_Error
      94/      1C : 0000 0200           		dc.l MD_Error
      95/      20 : 0000 0200           		dc.l MD_Error
      96/      24 : 0000 0200           		dc.l MD_Error
      97/      28 : 0000 0200           		dc.l MD_Error
      98/      2C : 0000 0200           		dc.l MD_Error
      99/      30 : 0000 0200           		dc.l MD_Error
     100/      34 : 0000 0200           		dc.l MD_Error
     101/      38 : 0000 0200           		dc.l MD_Error
     102/      3C : 0000 0200           		dc.l MD_Error
     103/      40 : 0000 0200           		dc.l MD_Error
     104/      44 : 0000 0200           		dc.l MD_Error
     105/      48 : 0000 0200           		dc.l MD_Error
     106/      4C : 0000 0200           		dc.l MD_Error
     107/      50 : 0000 0200           		dc.l MD_Error
     108/      54 : 0000 0200           		dc.l MD_Error
     109/      58 : 0000 0200           		dc.l MD_Error
     110/      5C : 0000 0200           		dc.l MD_Error
     111/      60 : 0000 0200           		dc.l MD_Error
     112/      64 : 0000 0200           		dc.l MD_Error
     113/      68 : 0000 0200           		dc.l MD_Error
     114/      6C : 0000 0200           		dc.l MD_Error
     115/      70 : 0000 044C           		dc.l MD_Hint
     116/      74 : 0000 0200           		dc.l MD_Error
     117/      78 : 0000 03AE           		dc.l MD_Vint
     118/      7C : 0000 0200           		dc.l MD_Error
     119/      80 : 0000 0200           		dc.l MD_Error
     120/      84 : 0000 0200           		dc.l MD_Error
     121/      88 : 0000 0200           		dc.l MD_Error
     122/      8C : 0000 0200           		dc.l MD_Error
     123/      90 : 0000 0200           		dc.l MD_Error
     124/      94 : 0000 0200           		dc.l MD_Error
     125/      98 : 0000 0200           		dc.l MD_Error
     126/      9C : 0000 0200           		dc.l MD_Error
     127/      A0 : 0000 0200           		dc.l MD_Error
     128/      A4 : 0000 0200           		dc.l MD_Error
     129/      A8 : 0000 0200           		dc.l MD_Error
     130/      AC : 0000 0200           		dc.l MD_Error
     131/      B0 : 0000 0200           		dc.l MD_Error
     132/      B4 : 0000 0200           		dc.l MD_Error
     133/      B8 : 0000 0200           		dc.l MD_Error
     134/      BC : 0000 0200           		dc.l MD_Error
     135/      C0 : 0000 0202           		dc.l MD_Entry
     136/      C4 : 0000 0202           		dc.l MD_Entry
     137/      C8 : 0000 0202           		dc.l MD_Entry
     138/      CC : 0000 0202           		dc.l MD_Entry
     139/      D0 : 0000 0202           		dc.l MD_Entry
     140/      D4 : 0000 0202           		dc.l MD_Entry
     141/      D8 : 0000 0202           		dc.l MD_Entry
     142/      DC : 0000 0202           		dc.l MD_Entry
     143/      E0 : 0000 0202           		dc.l MD_Entry
     144/      E4 : 0000 0202           		dc.l MD_Entry
     145/      E8 : 0000 0202           		dc.l MD_Entry
     146/      EC : 0000 0202           		dc.l MD_Entry
     147/      F0 : 0000 0202           		dc.l MD_Entry
     148/      F4 : 0000 0202           		dc.l MD_Entry
     149/      F8 : 0000 0202           		dc.l MD_Entry
     150/      FC : 0000 0202           		dc.l MD_Entry
     151/     100 : 5345 4741 204D 4547 		dc.b "SEGA MEGA DRIVE "
                    4120 4452 4956 4520 
     152/     110 : 2843 2947 4636 3420 		dc.b "(C)GF64 2020.???"
                    3230 3230 2E3F 3F3F 
     153/     120 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     154/     150 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     155/     180 : 474D 2048 4F4D 4542 		dc.b "GM HOMEBREW-00"
                    5245 572D 3030      
     156/     18E : 0000                		dc.w 0
     157/     190 : 0000                		dc.w 0
     158/     192 : 2020 2020 2020 2020 		dc.b "              "
                    2020 2020 2020      
     159/     1A0 : 0000 0000           		dc.l 0
     160/     1A4 : 0000 7FFF           		dc.l EndOfRom-1
     161/     1A8 : 00FF 0000           		dc.l $FF0000
     162/     1AC : 00FF FFFF           		dc.l $FFFFFF
     163/     1B0 : 2020 2020           		dc.l $20202020
     164/     1B4 : 2020 2020           		dc.l $20202020
     165/     1B8 : 2020 2020           		dc.l $20202020
     166/     1BC : 2020 2020 2020 2020 		dc.b "                                                    "
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020           
     167/     1F0 : 4A55 4520 2020 2020 		dc.b "JUE             "
                    2020 2020 2020 2020 
     168/     200 :                     
     169/     200 :                     ; ====================================================================
     170/     200 :                     ; ----------------------------------------------------------------
     171/     200 :                     ; Error
     172/     200 :                     ; ----------------------------------------------------------------
     173/     200 :                     
     174/     200 :                     MD_Error:
     175/     200 : 60FE                		bra.s	MD_Error
     176/     202 :                     
     177/     202 :                     ; ====================================================================
     178/     202 :                     ; ----------------------------------------------------------------
     179/     202 :                     ; Entry
     180/     202 :                     ; ----------------------------------------------------------------
     181/     202 :                     
     182/     202 :                     MD_Entry:
     183/     202 : 46FC 2700           		move	#$2700,sr
     184/     206 : 4AB9 00A1 0008      		tst.l	($A10008).l
     185/     20C : 6606                		bne.s	loc_210
     186/     20E : 4A79 00A1 000C      		tst.w	($A1000C).l
     187/     214 :                     loc_210:
     188/     214 : 6600 0054           		bne.w	loc_270
     189/     218 : 4BF9 0000 026E      		lea	(list_InitRegs).l,a5
     190/     21E : 4C9D 00E0           		movem.w	(a5)+,d5-d7
     191/     222 : 4CDD 1F00           		movem.l	(a5)+,a0-a4
     192/     226 : 1039 00A1 0001      		move.b	($A10001).l,d0
     193/     22C : 0200 000F           		andi.b	#$F,d0
     194/     230 : 6700 000C           		beq.w	old_md
     195/     234 : 23FC 5345 4741 00A1 		move.l	#"SEGA",($A14000).l
                    4000                
     196/     23E :                     old_md:
     197/     23E : 4280                		clr.l	d0
     198/     240 : 2C40                		movea.l	d0,a6
     199/     242 : 4E66                		move	a6,usp
     200/     244 :                     clrstack:
     201/     244 : 2D00                		move.l	d0,-(a6)
     202/     246 : 51CE FFFC           		dbf	d6,clrstack
     203/     24A : 6100 00C8           		bsr	Sound_LoadZ80
     204/     24E : 6100 00DC           		bsr	Sound_PsgInit
     205/     252 : 6100 00E6           		bsr	Video_Init
     206/     256 : 4CD6 7FFF           		movem.l	(a6),d0-a6
     207/     25A : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     208/     262 : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     209/     26A :                     loc_270:
     210/     26A : 6000 00F6           		bra.w	MD_Init
     211/     26E :                     ; ----------------------------------------------------------------
     212/     26E : 8000                list_InitRegs:	dc.w $8000		; d5
     213/     270 : 3FFF                		dc.w $3FFF		; d6
     214/     272 : 0100                		dc.w $100		; d7
     215/     274 : 00A0 0000           		dc.l $A00000		; a0
     216/     278 : 00A1 1100           		dc.l $A11100		; a1
     217/     27C : 00A1 1200           		dc.l $A11200		; a2
     218/     280 : 00C0 0000           		dc.l $C00000		; a3
     219/     284 : 00C0 0004           		dc.l $C00004		; a4
     220/     288 : AF01 D91F 1127 0021 		dc.b $AF, 1, $D9, $1F, $11, $27, 0, $21, $26, 0, $F9, $77
                    2600 F977           
     221/     294 : EDB0 DDE1 FDE1 ED47 		dc.b $ED, $B0, $DD, $E1, $FD, $E1, $ED,	$47, $ED, $4F
                    ED4F                
     222/     29E : D1E1 F108 D9C1 D1E1 		dc.b $D1, $E1, $F1, 8, $D9, $C1, $D1, $E1, $F1,	$F9, $F3
                    F1F9 F3             
     223/     2A9 : ED56 36E9 E981 048F 		dc.b $ED, $56, $36, $E9, $E9, $81, 4, $8F, 1
                    01                  
     224/     2B2 : 9F                  		dc.b $9F
     225/     2B3 : BF                  		dc.b $BF
     226/     2B4 : DF                  		dc.b $DF
     227/     2B5 : FF                  		dc.b $FF
     228/     2B6 :                     ; ----------------------------------------------------------------
     229/     2B6 :                     
     230/     2B6 :                     ; =============== S U B	R O U T	I N E =======================================
     231/     2B6 :                     
     232/     2B6 :                     Fami_InitVideo:
     233/     2B6 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     234/     2BC : 3E3C 0FFF           		move.w	#$FFF,d7
     235/     2C0 : 2D7C 4000 0003 0004 		move.l	#$40000003,4(a6)
     236/     2C8 :                     .loopfg:
     237/     2C8 : 3CBC 0200           		move.w	#$200,(a6)
     238/     2CC : 51CF FFFA           		dbf	d7,.loopfg
     239/     2D0 : 3E3C 0FFF           		move.w	#$FFF,d7
     240/     2D4 : 2D7C 6000 0003 0004 		move.l	#$60000003,4(a6)
     241/     2DC :                     .loopbg:
     242/     2DC : 3CBC 0200           		move.w	#$200,(a6)
     243/     2E0 : 51CF FFFA           		dbf	d7,.loopbg
     244/     2E4 : 2D7C 6800 0002 0004 		move.l	#$68000002,4(a6)
     245/     2EC : 2CBC 0000 0000      		move.l	#0,(a6)
     246/     2F2 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     247/     2FA : 2CBC 0000 0000      		move.l	#0,(a6)
     248/     300 : 7E3F                		moveq	#$3F,d7
     249/     302 : 2D7C C000 0000 0004 		move.l	#$C0000000,4(a6)
     250/     30A :                     
     251/     30A :                     loc_51E:
     252/     30A : 3CBC 0000           		move.w	#0,(a6)
     253/     30E : 51CF FFFA           		dbf	d7,loc_51E
     254/     312 : 4E75                		rts
     255/     314 :                     
     256/     314 :                     ; =============== S U B	R O U T	I N E =======================================
     257/     314 :                     
     258/     314 :                     
     259/     314 :                     Sound_LoadZ80:
     260/     314 : 3287                		move.w	d7,(a1)
     261/     316 : 3487                		move.w	d7,(a2)
     262/     318 :                     
     263/     318 :                     loc_8DA:
     264/     318 : 0111                		btst	d0,(a1)
     265/     31A : 66FC                		bne.s	loc_8DA
     266/     31C : 7425                		moveq	#$25,d2
     267/     31E :                     loc_8E0:
     268/     31E : 10DD                		move.b	(a5)+,(a0)+
     269/     320 : 51CA FFFC           		dbf	d2,loc_8E0
     270/     324 : 3480                		move.w	d0,(a2)
     271/     326 : 3280                		move.w	d0,(a1)
     272/     328 : 3487                		move.w	d7,(a2)
     273/     32A : 4E75                		rts
     274/     32C :                     ; End of function Sound_LoadZ80
     275/     32C :                     
     276/     32C :                     
     277/     32C :                     ; =============== S U B	R O U T	I N E =======================================
     278/     32C :                     
     279/     32C :                     
     280/     32C :                     Sound_PsgInit:
     281/     32C : 7203                		moveq	#3,d1
     282/     32E :                     
     283/     32E :                     loc_8F0:
     284/     32E : 175D 0011           		move.b	(a5)+,$11(a3)
     285/     332 : 51C9 FFFA           		dbf	d1,loc_8F0
     286/     336 : 3480                		move.w	d0,(a2)
     287/     338 : 4E75                		rts
     288/     33A :                     ; End of function Sound_PsgInit
     289/     33A :                     
     290/     33A :                     
     291/     33A :                     ; =============== S U B	R O U T	I N E =======================================
     292/     33A :                     
     293/     33A :                     
     294/     33A :                     Video_Init:
     295/     33A : 7017                		moveq	#$17,d0
     296/     33C : 41F9 0000 034E      		lea	(byte_910).l,a0
     297/     342 :                     loc_904:
     298/     342 : 1A18                		move.b	(a0)+,d5
     299/     344 : 3885                		move.w	d5,(a4)
     300/     346 : DA47                		add.w	d7,d5
     301/     348 : 51C8 FFF8           		dbf	d0,loc_904
     302/     34C : 4E75                		rts
     303/     34E :                     
     304/     34E :                     ; ----------------------------------------------------------------
     305/     34E :                     byte_910:
     306/     34E : 04                  		dc.b $04			; HBlank int on, HV Counter on
     307/     34F : 64                  		dc.b $64			; Display ON, VBlank int on
     308/     350 : 30                  		dc.b (($C000)>>10)		; ForeGrd at VRAM $C000 (%00xxx000)
     309/     351 : 34                  		dc.b (($D000)>>10)		; Window  at VRAM $D000 (%00xxxxy0)
     310/     352 : 07                  		dc.b (($E000)>>13)		; BackGrd at VRAM $E000 (%00000xxx)
     311/     353 : 5E                  		dc.b (($BC00)>>9)		; Sprites at VRAM $BC00 (%0xxxxxxy)
     312/     354 : 00                  		dc.b $00			; Nothing
     313/     355 : 00                  		dc.b $00			; Background color
     314/     356 : 00                  		dc.b $00			; Nothing
     315/     357 : 00                  		dc.b $00			; Nothing
     316/     358 : DF                  		dc.b $DF			; HInt value
     317/     359 : 00                  		dc.b (%000|%00)			; No ExtInt, Scroll: VSCR:full HSCR:full
     318/     35A : 00                  		dc.b $00			; H40, No shadow mode, Normal resolution
     319/     35B : 2E                  		dc.b (($B800)>>10)		; HScroll at VRAM $B800 (%00xxxxxx)
     320/     35C : 00                  		dc.b $00			; Nothing
     321/     35D : 02                  		dc.b $02			; VDP Auto increment by $02
     322/     35E : 11                  		dc.b (%01<<4)|%01		; Layer size: V32 H64
     323/     35F : 00                  		dc.b $00
     324/     360 : 00                  		dc.b $00
     325/     361 :                     		align 2
     326/     362 :                     
     327/     362 :                     ; ====================================================================
     328/     362 :                     
     329/     362 :                     MD_Init:
     330/     362 : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     331/     36A : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     332/     372 : 33FC 0100 00A1 1100 		move.w	#$100,(z80_bus).l		; Stop Z80
     333/     37A : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     334/     382 :                     .wait:
     335/     382 : 0839 0000 00A1 1100 		btst	#0,(z80_bus).l			; Wait bus
     336/     38A : 66F6                		bne.s	.wait
     337/     38C :                     
     338/     38C : 33FC 0000 00A1 1200 		move.w	#0,(z80_reset).l		; Reset request
     339/     394 : 4E71                		nop
     340/     396 : 4E71                		nop
     341/     398 : 4E71                		nop
     342/     39A : 33FC 0000 00A1 1100 		move.w	#0,(z80_bus).l			; Start Z80
     343/     3A2 : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     344/     3AA :                     		
     345/     3AA : 6000 0144           		bra	emuStart
     346/     3AE :                     
     347/     3AE :                     ; ====================================================================
     348/     3AE :                     ; ----------------------------------------------------------------
     349/     3AE :                     ; VBlank
     350/     3AE :                     ; ----------------------------------------------------------------
     351/     3AE :                     
     352/     3AE :                     MD_Vint:
     353/     3AE : 48E7 FFFE           		movem.l	d0-d7/a0-a6,-(sp)
     354/     3B2 :                     
     355/     3B2 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     356/     3B8 : 2D7C 7800 0002 0004 		move.l	#$78000002,4(a6)
     357/     3C0 : 2CAC 005A           		move.l	vdpScrlX(a4),(a6)
     358/     3C4 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     359/     3CC : 2CAC 005E           		move.l	vdpScrlY(a4),(a6)
     360/     3D0 : 2D7C 9401 9318 0004 		move.l	#$94019318,4(a6)
     361/     3D8 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     362/     3E0 : 2D7C 96C0 9571 0004 		move.l	#$96009500+(((RAM_Fami_Emu+oamSprData)<<7)&$FF0000)|(((RAM_Fami_Emu+oamSprData)>>1)&$FF),4(a6)
     363/     3E8 : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+oamSprData)>>17)&$7F),4(a6)
     364/     3EE : 3D7C 7C00 0004      		move.w	#$7C00,4(a6)
     365/     3F4 : 3F3C 0082           		move.w	#$0002|$80,-(sp)
     366/     3F8 : 0839 0000 00A1 1100 .wait:		btst	#0,(z80_bus).l
     367/     400 : 66F6                		bne.s	.wait
     368/     402 : 3D5F 0004           		move.w	(sp)+,4(a6)
     369/     406 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     370/     40E : 2D7C 9400 9340 0004 		move.l	#$94009340,4(a6)
     371/     416 : 2D7C 96C0 9531 0004 		move.l	#$96009500+(((RAM_Fami_Emu+vdpPalette)<<7)&$FF0000)|(((RAM_Fami_Emu+vdpPalette)>>1)&$FF),4(a6)
     372/     41E : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+vdpPalette)>>17)&$7F),4(a6)
     373/     424 : 3D7C C000 0004      		move.w	#$C000,4(a6)
     374/     42A : 3F3C 0080           		move.w	#$0000|$80,-(sp)
     375/     42E : 0839 0000 00A1 1100 .wait2:		btst	#0,(z80_bus).l
     376/     436 : 66F6                		bne.s	.wait2
     377/     438 : 3D5F 0004           		move.w	(sp)+,4(a6)
     378/     43C :                     
     379/     43C : 426C 0056           		clr.w	vdpHintSp0(a4)
     380/     440 : 397C 0001 0058      		move.w	#1,FamiMdVint(a4)
     381/     446 : 4CDF 7FFF           		movem.l	(sp)+,d0-d7/a0-a6
     382/     44A : 4E73                		rte
     383/     44C :                     
     384/     44C :                     ; ====================================================================
     385/     44C :                     ; ----------------------------------------------------------------
     386/     44C :                     ; HBlank
     387/     44C :                     ; ----------------------------------------------------------------
     388/     44C :                     
     389/     44C :                     MD_Hint:
     390/     44C : 46FC 2700           		move.w	#$2700,sr
     391/     450 : 3D7C 8ADF 0004      		move.w	#$8ADF,4(a6)
     392/     456 : 397C 0001 0056      		move.w	#1,vdpHintSp0(a4)
     393/     45C : 4E73                		rte
     394/     45E :                     
     395/     45E :                     ; ====================================================================
     396/     45E :                     ; ----------------------------------------------------------------
     397/     45E :                     ; Load ROM
     398/     45E :                     ; ----------------------------------------------------------------
     399/     45E :                     
     400/     45E :                     Fami_LoadRom:
     401/     45E : 2010                		move.l	(a0),d0		; Read and Load	Fami ROM
     402/     460 : 0C80 4E45 531A      		cmpi.l	#$4E45531A,d0
     403/     466 : 66FE                		bne.s	*
     404/     468 :                     
     405/     468 : 4BF9 FFFF 9000      		lea	(RAM_Fami_RAM).l,a5
     406/     46E : 7000                		moveq	#0,d0
     407/     470 : 323C 01FF           		move.w	#$7FF/4,d1
     408/     474 :                     .clrram:
     409/     474 : 2AC0                		move.l	d0,(a5)+
     410/     476 : 51C9 FFFC           		dbf	d1,.clrram
     411/     47A : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     412/     480 : 7000                		moveq	#0,d0
     413/     482 : 323C 1000           		move.w	#$4000/4,d1
     414/     486 :                     .clrvram:
     415/     486 : 2AC0                		move.l	d0,(a5)+
     416/     488 : 51C9 FFFC           		dbf	d1,.clrvram
     417/     48C : 4DF9 00C0 0000      		lea 	($C00000),a6
     418/     492 : 6100 FE22           		bsr	Fami_InitVideo
     419/     496 :                     
     420/     496 : 47F9 FFFF 8000      		lea	(RAM_Fami_Emu).l,a3
     421/     49C : 7E00                		moveq	#0,d7			; PRG-ROM copy
     422/     49E : 1E28 0004           		move.b	4(a0),d7
     423/     4A2 : 6100 1BC4           		bsr	romGrabPrg
     424/     4A6 : 1E28 0006           		move.b	6(a0),d7		; PPU mirroring
     425/     4AA : 1C28 0007           		move.b	7(a0),d6
     426/     4AE : CE7C 00F0           		and.w	#%11110000,d7
     427/     4B2 : CC7C 00F0           		and.w	#%11110000,d6
     428/     4B6 : E84F                		lsr.w	#4,d7
     429/     4B8 : 8E46                		or.w	d6,d7
     430/     4BA : 3747 0030           		move.w	d7,cpuMapper(a3)
     431/     4BE :                     	
     432/     4BE :                     	; Mirror check
     433/     4BE : 3E3C 0000           		move.w	#0,d7			; 0 - horizontal
     434/     4C2 : 0828 0000 0006      		btst	#0,6(a0)		; PPU mirroring
     435/     4C8 : 6704                		beq.s	loc_9F4
     436/     4CA : 3E3C 0001           		move.w	#1,d7			; 1 - vertical
     437/     4CE :                     loc_9F4:
     438/     4CE : 3747 002E           		move.w	d7,ppuMirror(a3)
     439/     4D2 :                     		
     440/     4D2 :                     	; COPY CHR-ROM TO RAM
     441/     4D2 : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     442/     4D8 : 274C 0004           		move.l	a4,emuChrRom(a3)
     443/     4DC : 2E3C 0000 07FF      		move.l	#$7FF,d7
     444/     4E2 :                     loc_A10:
     445/     4E2 : 2ADC                		move.l	(a4)+,(a5)+
     446/     4E4 : 51CF FFFC           		dbf	d7,loc_A10
     447/     4E8 : D0FC 0010           		adda	#$10,a0
     448/     4EC : 2688                		move.l	a0,emuPrgRom(a3)
     449/     4EE : 4E75                		rts
     450/     4F0 :                     
     451/     4F0 :                     ; ====================================================================
     452/     4F0 :                     ; ----------------------------------------------------------------
     453/     4F0 :                     ; Emulator start
     454/     4F0 :                     ; ----------------------------------------------------------------
     455/     4F0 :                     
     456/     4F0 :                     emuStart:
     457/     4F0 : 41F9 0000 8000      		lea	(ROM_FILE).l,a0
     458/     4F6 : 6100 FF66           		bsr	Fami_LoadRom
     459/     4FA :                     		
     460/     4FA : 4DF9 00C0 0000      		lea	($C00000).l,a6
     461/     500 : 49F8 8000           		lea 	(RAM_Fami_Emu),a4
     462/     504 : 47F8 A000           		lea	(RAM_Fami_PPU).w,a3
     463/     508 : 45F8 9000           		lea	(RAM_Fami_RAM).w,a2
     464/     50C : 6100 1BA2           		bsr	Nemul_LoadChr
     465/     510 : 43F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a1	; PRG base
     466/     516 : 2049                		movea.l	a1,a0
     467/     518 : 303C 7FFC           		move.w	#cpuEntry,d0		; go to Entry
     468/     51C : D0C0                		add.w	d0,a0
     469/     51E : 1028 0001           		move.b	1(a0),d0
     470/     522 : E148                		lsl.w	#8,d0
     471/     524 : 1010                		move.b	(a0),d0
     472/     526 : C07C 7FFF           		and.w	#$7FFF,d0
     473/     52A : 2049                		movea.l	a1,a0
     474/     52C : D0C0                		adda	d0,a0
     475/     52E : 397C 8174 002C      		move.w	#$8174,vdpReg01(a4)
     476/     534 : 33FC 4EF9 FFFF 8FF0 		move.w	#$4EF9,(RAM_EmuLoop).l
     477/     53C : 23FC 0000 0552 FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
     478/     546 :                     
     479/     546 : 7000                		moveq	#0,d0
     480/     548 : 7200                		moveq	#0,d1
     481/     54A : 7400                		moveq	#0,d2
     482/     54C : 263C 0100 2000      		move.l	#$01002000,d3
     483/     552 :                     
     484/     552 :                     ; --------------------------------------------------------
     485/     552 :                     ; a0 - Fami CPU current PC
     486/     552 :                     ; a1 - Fami PRG address
     487/     552 :                     ; a2 - Fami RAM address (for zero addressing)
     488/     552 :                     ; a3 - Fami PPU Buffer
     489/     552 :                     ; a4 - Fami EMU Buffer
     490/     552 :                     ; a5 - Used on temporal tasks
     491/     552 :                     ; a6 - VDP data point
     492/     552 :                     ; 
     493/     552 :                     ; d0 - A register
     494/     552 :                     ; d1 - X register
     495/     552 :                     ; d2 - Y register
     496/     552 :                     ; d3 - Fami STACK Point | MD current sr
     497/     552 :                     ; d4 - free
     498/     552 :                     ; d5 - free
     499/     552 :                     ; d6 - free
     500/     552 :                     ; d7 - emu temporal input/output
     501/     552 :                     ; --------------------------------------------------------
     502/     552 :                     
     503/     552 :                     ; ------------------------------------------------
     504/     552 :                     ; Main Loop
     505/     552 :                     ; ------------------------------------------------
     506/     552 :                     
     507/     552 :                     emuLoop:
     508/     552 : 4A6C 0058           		tst.w	FamiMdVint(a4)
     509/     556 : 660E                		bne.s	famiVInt
     510/     558 :                     emuVint:
     511/     558 : 4244                		clr.w	d4
     512/     55A : 1818                		move.b	(a0)+,d4
     513/     55C : D844                		add.w	d4,d4
     514/     55E : 3C3B 4054           		move.w	mosCpu(pc,d4.w),d6
     515/     562 : 4EFB 6050           		jmp	mosCpu(pc,d6.w)
     516/     566 :                     
     517/     566 :                     ; ------------------------------------------------
     518/     566 :                     ; VBlank
     519/     566 :                     ; ------------------------------------------------
     520/     566 :                     
     521/     566 :                     famiVInt:
     522/     566 : 426C 0058           		clr.w	FamiMdVint(a4)
     523/     56A : 397C 0080 0054      		move.w	#$80,ppuStatus(a4)
     524/     570 : 4A6C 0032           		tst.w	cpuFamiVint(a4)
     525/     574 : 66E2                		bne.s	emuVint
     526/     576 : 4A6C 0052           		tst.w	ppuNmiFlag(a4)
     527/     57A : 67DC                		beq.s	emuVint
     528/     57C :                     
     529/     57C :                     ; ------------------------------------------------
     530/     57C :                     doVint:
     531/     57C : 23FC 0000 0558 FFFF 		move.l	#emuVint,(RAM_EmuLoop+2).l
                    8FF2                
     532/     586 : 397C 0001 0032      		move.w	#1,cpuFamiVint(a4)
     533/     58C :                     
     534/     58C :                     ; 		movem.l	d7/a5,famiVintSave(a4)
     535/     58C :                     ; 		move.w	d3,d7
     536/     58C :                     ; 		swap	d3
     537/     58C :                     ; 		move.l	a0,d6
     538/     58C :                     ; 		or.w	#$8000,d6
     539/     58C :                     ; 		move.w	d6,d5
     540/     58C :                     ; 		lsr.w	#8,d5
     541/     58C :                     ; 		subq.w	#1,d3
     542/     58C :                     ; 		move.b	d6,(a2,d3.w)
     543/     58C :                     ; 		subq.w	#1,d3		
     544/     58C :                     ; 		move.b	d5,(a2,d3.w)
     545/     58C :                     ; 		subq.w	#1,d3
     546/     58C :                     ; 		move.b	d7,(a2,d3.w)
     547/     58C :                     ; 		swap	d3
     548/     58C :                     
     549/     58C : 48EC 2100 0008      		movem.l	a0/a5,famiVintSave(a4)
     550/     592 : 3943 0028           		move.w	d3,famiVintSave2(a4)
     551/     596 : 41F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a0	; PRG base
     552/     59C : 3C3C 7FFA           		move.w	#cpuNMI,d6		; go to NMI
     553/     5A0 : D0C6                		add.w	d6,a0
     554/     5A2 : 1C28 0001           		move.b	1(a0),d6
     555/     5A6 : E14E                		lsl.w	#8,d6
     556/     5A8 : 1C10                		move.b	(a0),d6
     557/     5AA : CC7C 7FFF           		and.w	#$7FFF,d6
     558/     5AE : 2049                		movea.l	a1,a0
     559/     5B0 : D0C6                		add.w	d6,a0
     560/     5B2 : 60A4                		bra	emuVint
     561/     5B4 :                     		
     562/     5B4 :                     ; ----------------------------------------------------------------
     563/     5B4 : 0578                mosCpu:		dc.w mos_BRK-mosCpu	; $00
     564/     5B6 : 0EC4                		dc.w loc_1A12-mosCpu
     565/     5B8 : 0200                		dc.w mos_Null-mosCpu
     566/     5BA : 0200                		dc.w mos_Null-mosCpu
     567/     5BC : 0200                		dc.w mos_Null-mosCpu
     568/     5BE : 0E1E                		dc.w loc_1970-mosCpu
     569/     5C0 : 0430                		dc.w loc_1042-mosCpu
     570/     5C2 : 0200                		dc.w mos_Null-mosCpu
     571/     5C4 : 0F34                		dc.w loc_1A78-mosCpu	; $08 - PHP
     572/     5C6 : 0E08                		dc.w loc_195C-mosCpu	; $09 - ORA #$xx
     573/     5C8 : 041C                		dc.w loc_1030-mosCpu
     574/     5CA : 0200                		dc.w mos_Null-mosCpu
     575/     5CC : 0200                		dc.w mos_Null-mosCpu
     576/     5CE : 0E58                		dc.w loc_19A6-mosCpu
     577/     5D0 : 0472                		dc.w loc_1080-mosCpu
     578/     5D2 : 0200                		dc.w mos_Null-mosCpu
     579/     5D4 : 0568                		dc.w loc_1166-mosCpu	; $10
     580/     5D6 : 0EF2                		dc.w loc_1A3C-mosCpu
     581/     5D8 : 0200                		dc.w mos_Null-mosCpu
     582/     5DA : 0200                		dc.w mos_Null-mosCpu
     583/     5DC : 0200                		dc.w mos_Null-mosCpu
     584/     5DE : 0E3A                		dc.w loc_198A-mosCpu
     585/     5E0 : 0450                		dc.w loc_1060-mosCpu
     586/     5E2 : 0200                		dc.w mos_Null-mosCpu
     587/     5E4 : 05BC                		dc.w loc_11AA-mosCpu	; $18
     588/     5E6 : 0E9E                		dc.w loc_19EC-mosCpu
     589/     5E8 : 0200                		dc.w mos_Null-mosCpu
     590/     5EA : 0200                		dc.w mos_Null-mosCpu
     591/     5EC : 0200                		dc.w mos_Null-mosCpu
     592/     5EE : 0E78                		dc.w loc_19C6-mosCpu
     593/     5F0 : 0496                		dc.w loc_10A2-mosCpu
     594/     5F2 : 0200                		dc.w mos_Null-mosCpu
     595/     5F4 : 0AF6                		dc.w loc_167C-mosCpu	; $20
     596/     5F6 : 03BC                		dc.w loc_FD8-mosCpu
     597/     5F8 : 0200                		dc.w mos_Null-mosCpu
     598/     5FA : 0200                		dc.w mos_Null-mosCpu
     599/     5FC : 04EC                		dc.w loc_10F0-mosCpu
     600/     5FE : 0316                		dc.w loc_F36-mosCpu
     601/     600 : 0F92                		dc.w loc_1ACA-mosCpu
     602/     602 : 0200                		dc.w mos_Null-mosCpu
     603/     604 : 0F68                		dc.w loc_1AA6-mosCpu	; $28 - PLP
     604/     606 : 0300                		dc.w loc_F22-mosCpu
     605/     608 : 0F7C                		dc.w loc_1AB6-mosCpu
     606/     60A : 0200                		dc.w mos_Null-mosCpu
     607/     60C : 0518                		dc.w loc_111A-mosCpu
     608/     60E : 0350                		dc.w loc_F6C-mosCpu
     609/     610 : 0FD8                		dc.w loc_1B0C-mosCpu
     610/     612 : 0200                		dc.w mos_Null-mosCpu
     611/     614 : 0548                		dc.w loc_114A-mosCpu	; $30
     612/     616 : 03EA                		dc.w loc_1002-mosCpu
     613/     618 : 0200                		dc.w mos_Null-mosCpu
     614/     61A : 0200                		dc.w mos_Null-mosCpu
     615/     61C : 0200                		dc.w mos_Null-mosCpu
     616/     61E : 0332                		dc.w loc_F50-mosCpu
     617/     620 : 0FB4                		dc.w loc_1AEA-mosCpu
     618/     622 : 0200                		dc.w mos_Null-mosCpu
     619/     624 : 1288                		dc.w loc_1D80-mosCpu	; $38
     620/     626 : 0396                		dc.w loc_FB2-mosCpu
     621/     628 : 0200                		dc.w mos_Null-mosCpu
     622/     62A : 0200                		dc.w mos_Null-mosCpu
     623/     62C : 0200                		dc.w mos_Null-mosCpu
     624/     62E : 0370                		dc.w loc_F8C-mosCpu
     625/     630 : 0FFE                		dc.w loc_1B30-mosCpu
     626/     632 : 0200                		dc.w mos_Null-mosCpu
     627/     634 : 10D0                		dc.w loc_1BF6-mosCpu	; $40 - RTI
     628/     636 : 09A8                		dc.w loc_1566-mosCpu
     629/     638 : 0200                		dc.w mos_Null-mosCpu
     630/     63A : 0200                		dc.w mos_Null-mosCpu
     631/     63C : 0200                		dc.w mos_Null-mosCpu
     632/     63E : 0902                		dc.w loc_14C4-mosCpu
     633/     640 : 0D74                		dc.w loc_18D2-mosCpu
     634/     642 : 0200                		dc.w mos_Null-mosCpu
     635/     644 : 0F24                		dc.w loc_1A6A-mosCpu	; $48
     636/     646 : 08EC                		dc.w loc_14B0-mosCpu
     637/     648 : 0D60                		dc.w loc_18C0-mosCpu
     638/     64A : 0200                		dc.w mos_Null-mosCpu
     639/     64C : 0AA4                		dc.w loc_164E-mosCpu	; $4C - JMP $xxxx
     640/     64E : 093C                		dc.w loc_14FA-mosCpu
     641/     650 : 0DB6                		dc.w loc_1910-mosCpu
     642/     652 : 0200                		dc.w mos_Null-mosCpu
     643/     654 : 059C                		dc.w loc_118E-mosCpu	; $50
     644/     656 : 09D6                		dc.w loc_1590-mosCpu
     645/     658 : 0200                		dc.w mos_Null-mosCpu
     646/     65A : 0200                		dc.w mos_Null-mosCpu
     647/     65C : 0200                		dc.w mos_Null-mosCpu
     648/     65E : 091E                		dc.w loc_14DE-mosCpu
     649/     660 : 0D94                		dc.w loc_18F0-mosCpu
     650/     662 : 0200                		dc.w mos_Null-mosCpu
     651/     664 : 05D2                		dc.w loc_11BC-mosCpu	; $58
     652/     666 : 0982                		dc.w loc_1540-mosCpu
     653/     668 : 0200                		dc.w mos_Null-mosCpu
     654/     66A : 0200                		dc.w mos_Null-mosCpu
     655/     66C : 0200                		dc.w mos_Null-mosCpu
     656/     66E : 095C                		dc.w loc_151A-mosCpu
     657/     670 : 0DDA                		dc.w loc_1932-mosCpu
     658/     672 : 0200                		dc.w mos_Null-mosCpu
     659/     674 : 1124                		dc.w loc_1C32-mosCpu	; $60 - RTS
     660/     676 : 02A8                		dc.w loc_ED2-mosCpu
     661/     678 : 0200                		dc.w mos_Null-mosCpu
     662/     67A : 0200                		dc.w mos_Null-mosCpu
     663/     67C : 0200                		dc.w mos_Null-mosCpu
     664/     67E : 0216                		dc.w loc_E44-mosCpu
     665/     680 : 103C                		dc.w loc_1B6A-mosCpu
     666/     682 : 0200                		dc.w mos_Null-mosCpu
     667/     684 : 0F48                		dc.w loc_1A88-mosCpu	; $68
     668/     686 : 0204                		dc.w loc_E34-mosCpu
     669/     688 : 1026                		dc.w loc_1B56-mosCpu
     670/     68A : 0200                		dc.w mos_Null-mosCpu
     671/     68C : 0ABE                		dc.w loc_1660-mosCpu	; $6C - JMP ($xxxx)
     672/     68E : 0248                		dc.w loc_E72-mosCpu
     673/     690 : 1082                		dc.w loc_1BAC-mosCpu
     674/     692 : 0200                		dc.w mos_Null-mosCpu
     675/     694 : 05AC                		dc.w loc_119C-mosCpu	; $70
     676/     696 : 02D2                		dc.w loc_EF8-mosCpu
     677/     698 : 0200                		dc.w mos_Null-mosCpu
     678/     69A : 0200                		dc.w mos_Null-mosCpu
     679/     69C : 0200                		dc.w mos_Null-mosCpu
     680/     69E : 022E                		dc.w loc_E5A-mosCpu
     681/     6A0 : 105E                		dc.w loc_1B8A-mosCpu
     682/     6A2 : 0200                		dc.w mos_Null-mosCpu
     683/     6A4 : 129E                		dc.w loc_1D92-mosCpu	; $78
     684/     6A6 : 0286                		dc.w loc_EB0-mosCpu
     685/     6A8 : 0200                		dc.w mos_Null-mosCpu
     686/     6AA : 0200                		dc.w mos_Null-mosCpu
     687/     6AC : 0200                		dc.w mos_Null-mosCpu
     688/     6AE : 0264                		dc.w loc_E8E-mosCpu
     689/     6B0 : 10A8                		dc.w loc_1BD0-mosCpu
     690/     6B2 : 0200                		dc.w mos_Null-mosCpu
     691/     6B4 : 0200                		dc.w mos_Null-mosCpu	; $80
     692/     6B6 : 1304                		dc.w loc_1DF6-mosCpu	; $81 - STA (oper,X)
     693/     6B8 : 0200                		dc.w mos_Null-mosCpu
     694/     6BA : 0200                		dc.w mos_Null-mosCpu
     695/     6BC : 1372                		dc.w loc_1E5C-mosCpu
     696/     6BE : 12AA                		dc.w loc_1D9C-mosCpu
     697/     6C0 : 1340                		dc.w loc_1E2E-mosCpu
     698/     6C2 : 0200                		dc.w mos_Null-mosCpu
     699/     6C4 : 08D8                		dc.w loc_149E-mosCpu	; $88 - DEY
     700/     6C6 : 0200                		dc.w mos_Null-mosCpu
     701/     6C8 : 13E4                		dc.w loc_1EC4-mosCpu
     702/     6CA : 0200                		dc.w mos_Null-mosCpu
     703/     6CC : 1390                		dc.w loc_1E76-mosCpu
     704/     6CE : 12C8                		dc.w loc_1DB6-mosCpu
     705/     6D0 : 135E                		dc.w loc_1E48-mosCpu
     706/     6D2 : 0200                		dc.w mos_Null-mosCpu
     707/     6D4 : 04BC                		dc.w loc_10C6-mosCpu	; $90
     708/     6D6 : 1320                		dc.w loc_1E10-mosCpu
     709/     6D8 : 0200                		dc.w mos_Null-mosCpu
     710/     6DA : 0200                		dc.w mos_Null-mosCpu
     711/     6DC : 1380                		dc.w loc_1E68-mosCpu
     712/     6DE : 12B8                		dc.w loc_1DA8-mosCpu
     713/     6E0 : 134E                		dc.w loc_1E3A-mosCpu
     714/     6E2 : 0200                		dc.w mos_Null-mosCpu
     715/     6E4 : 1404                		dc.w loc_1EE0-mosCpu	; $98
     716/     6E6 : 12F0                		dc.w loc_1DE0-mosCpu
     717/     6E8 : 13F8                		dc.w loc_1Ed3-mosCpu	; $9A
     718/     6EA : 0200                		dc.w mos_Null-mosCpu
     719/     6EC : 0200                		dc.w mos_Null-mosCpu
     720/     6EE : 12DC                		dc.w loc_1DCA-mosCpu
     721/     6F0 : 0200                		dc.w mos_Null-mosCpu
     722/     6F2 : 0200                		dc.w mos_Null-mosCpu
     723/     6F4 : 0CD0                		dc.w loc_1836-mosCpu	; $A0
     724/     6F6 : 0BE0                		dc.w loc_1754-mosCpu	; $A1 - LDA (oper,X)
     725/     6F8 : 0C40                		dc.w loc_17AC-mosCpu
     726/     6FA : 0200                		dc.w mos_Null-mosCpu
     727/     6FC : 0CE4                		dc.w loc_1848-mosCpu
     728/     6FE : 0B3E                		dc.w loc_16B6-mosCpu
     729/     700 : 0C54                		dc.w loc_17BE-mosCpu
     730/     702 : 0200                		dc.w mos_Null-mosCpu
     731/     704 : 13B8                		dc.w loc_1E9C-mosCpu	; $A8
     732/     706 : 0B2A                		dc.w loc_16A4-mosCpu	; $A9 - LDA #$xx
     733/     708 : 13A4                		dc.w loc_1E8A-mosCpu
     734/     70A : 0200                		dc.w mos_Null-mosCpu
     735/     70C : 0D1A                		dc.w loc_187A-mosCpu
     736/     70E : 0B74                		dc.w loc_16E8-mosCpu	; $AD
     737/     710 : 0C8A                		dc.w loc_17F0-mosCpu
     738/     712 : 0200                		dc.w mos_Null-mosCpu
     739/     714 : 04CC                		dc.w loc_10D4-mosCpu	; $B0
     740/     716 : 0C0E                		dc.w loc_177E-mosCpu	; $B1 - LDA (oper),Y
     741/     718 : 0200                		dc.w mos_Null-mosCpu
     742/     71A : 0200                		dc.w mos_Null-mosCpu
     743/     71C : 0CFE                		dc.w loc_1860-mosCpu
     744/     71E : 0B58                		dc.w loc_16CE-mosCpu
     745/     720 : 0C6E                		dc.w loc_17d3-mosCpu
     746/     722 : 0200                		dc.w mos_Null-mosCpu
     747/     724 : 05DE                		dc.w loc_11C6-mosCpu	; $B8
     748/     726 : 0BBA                		dc.w loc_172E-mosCpu
     749/     728 : 13CC                		dc.w loc_1EAE-mosCpu	; $BA - TSX
     750/     72A : 0200                		dc.w mos_Null-mosCpu
     751/     72C : 0D3A                		dc.w loc_189A-mosCpu
     752/     72E : 0B94                		dc.w loc_1708-mosCpu
     753/     730 : 0CAA                		dc.w loc_1810-mosCpu
     754/     732 : 0200                		dc.w mos_Null-mosCpu
     755/     734 : 07DA                		dc.w loc_13AE-mosCpu	; $C0
     756/     736 : 06EC                		dc.w loc_12CC-mosCpu
     757/     738 : 0200                		dc.w mos_Null-mosCpu
     758/     73A : 0200                		dc.w mos_Null-mosCpu
     759/     73C : 07FC                		dc.w loc_13CE-mosCpu
     760/     73E : 060A                		dc.w loc_11EE-mosCpu
     761/     740 : 0850                		dc.w loc_1420-mosCpu
     762/     742 : 0200                		dc.w mos_Null-mosCpu
     763/     744 : 0A90                		dc.w loc_163C-mosCpu	; $C8 - INY
     764/     746 : 05E8                		dc.w loc_11CE-mosCpu
     765/     748 : 08C4                		dc.w loc_148C-mosCpu
     766/     74A : 0200                		dc.w mos_Null-mosCpu
     767/     74C : 0824                		dc.w loc_13F4-mosCpu
     768/     74E : 065C                		dc.w loc_123C-mosCpu
     769/     750 : 0886                		dc.w loc_1452-mosCpu
     770/     752 : 0200                		dc.w mos_Null-mosCpu
     771/     754 : 0558                		dc.w loc_1158-mosCpu	; $D0 - BNE rel
     772/     756 : 0726                		dc.w loc_1302-mosCpu
     773/     758 : 0200                		dc.w mos_Null-mosCpu
     774/     75A : 0200                		dc.w mos_Null-mosCpu
     775/     75C : 0200                		dc.w mos_Null-mosCpu
     776/     75E : 0632                		dc.w loc_1214-mosCpu
     777/     760 : 086A                		dc.w loc_1438-mosCpu
     778/     762 : 0200                		dc.w mos_Null-mosCpu
     779/     764 : 05C6                		dc.w loc_11B2-mosCpu	; $D8 - CLD
     780/     766 : 06BA                		dc.w loc_129A-mosCpu
     781/     768 : 0200                		dc.w mos_Null-mosCpu
     782/     76A : 0200                		dc.w mos_Null-mosCpu
     783/     76C : 0200                		dc.w mos_Null-mosCpu
     784/     76E : 0688                		dc.w loc_1268-mosCpu
     785/     770 : 08A4                		dc.w loc_146E-mosCpu
     786/     772 : 0200                		dc.w mos_Null-mosCpu
     787/     774 : 0764                		dc.w loc_133C-mosCpu	; $E0
     788/     776 : 1220                		dc.w loc_1D20-mosCpu
     789/     778 : 0200                		dc.w mos_Null-mosCpu
     790/     77A : 0200                		dc.w mos_Null-mosCpu
     791/     77C : 0786                		dc.w loc_135C-mosCpu
     792/     77E : 1166                		dc.w loc_1C6A-mosCpu
     793/     780 : 0A08                		dc.w loc_15BE-mosCpu
     794/     782 : 0200                		dc.w mos_Null-mosCpu
     795/     784 : 0A7C                		dc.w loc_162A-mosCpu	; $E8
     796/     786 : 114C                		dc.w loc_1C52-mosCpu
     797/     788 : 0E00                		dc.w loc_1956-mosCpu
     798/     78A : 0200                		dc.w mos_Null-mosCpu
     799/     78C : 07AE                		dc.w loc_1382-mosCpu
     800/     78E : 11A8                		dc.w loc_1CA8-mosCpu
     801/     790 : 0A3E                		dc.w loc_15F0-mosCpu
     802/     792 : 0200                		dc.w mos_Null-mosCpu
     803/     794 : 04DC                		dc.w loc_10E2-mosCpu	; $F0
     804/     796 : 1252                		dc.w loc_1D4E-mosCpu
     805/     798 : 0200                		dc.w mos_Null-mosCpu
     806/     79A : 0200                		dc.w mos_Null-mosCpu
     807/     79C : 0200                		dc.w mos_Null-mosCpu
     808/     79E : 1186                		dc.w loc_1C88-mosCpu
     809/     7A0 : 0A22                		dc.w loc_15d3-mosCpu
     810/     7A2 : 0200                		dc.w mos_Null-mosCpu
     811/     7A4 : 1292                		dc.w loc_1D88-mosCpu	; $F8
     812/     7A6 : 11F6                		dc.w loc_1CF6-mosCpu
     813/     7A8 : 0200                		dc.w mos_Null-mosCpu
     814/     7AA : 0200                		dc.w mos_Null-mosCpu
     815/     7AC : 0200                		dc.w mos_Null-mosCpu
     816/     7AE : 11CC                		dc.w loc_1CCC-mosCpu
     817/     7B0 : 0A5C                		dc.w loc_160C-mosCpu
     818/     7B2 : 0200                		dc.w mos_Null-mosCpu
     819/     7B4 :                     
     820/     7B4 :                     ; ----------------------------------------------------------------
     821/     7B4 :                     
     822/     7B4 :                     mos_Null:
     823/     7B4 : E24C                		lsr.w	#1,d4
     824/     7B6 : 60FE                		bra.s	*
     825/     7B8 :                     
     826/     7B8 :                     ; ----------------------------------------------------------------
     827/     7B8 :                     
     828/     7B8 :                     loc_E34:
     829/     7B8 : 1E18                		move.b	(a0)+,d7
     830/     7BA : 0003 0004           		ori.b	#4,d3
     831/     7BE : 46C3                		move	d3,sr
     832/     7C0 : D107                		addx.b	d7,d0
     833/     7C2 : 40C3                		move	sr,d3
     834/     7C4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     835/     7CA :                     ; ----------------------------------------------------------------
     836/     7CA :                     
     837/     7CA :                     loc_E44:
     838/     7CA : 4246                		clr.w	d6
     839/     7CC : 1C18                		move.b	(a0)+,d6
     840/     7CE : 1E32 6000           		move.b	(a2,d6.w),d7
     841/     7D2 : 0003 0004           		ori.b	#4,d3
     842/     7D6 : 46C3                		move	d3,sr
     843/     7D8 : D107                		addx.b	d7,d0
     844/     7DA : 40C3                		move	sr,d3
     845/     7DC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     846/     7E2 :                     ; ----------------------------------------------------------------
     847/     7E2 :                     
     848/     7E2 :                     loc_E5A:
     849/     7E2 : 4246                		clr.w	d6
     850/     7E4 : 1C18                		move.b	(a0)+,d6
     851/     7E6 : DC01                		add.b	d1,d6
     852/     7E8 : 1E32 6000           		move.b	(a2,d6.w),d7
     853/     7EC : 0003 0004           		ori.b	#4,d3
     854/     7F0 : 46C3                		move	d3,sr
     855/     7F2 : D107                		addx.b	d7,d0
     856/     7F4 : 40C3                		move	sr,d3
     857/     7F6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     858/     7FC :                     ; ----------------------------------------------------------------
     859/     7FC :                     
     860/     7FC :                     loc_E72:				; DATA XREF: ROM:00000BE6o
     861/     7FC : 4244                		clr.w	d4
     862/     7FE : 1818                		move.b	(a0)+,d4
     863/     800 : 4246                		clr.w	d6
     864/     802 : 1C18                		move.b	(a0)+,d6
     865/     804 : 6100 11C6           		bsr	addr_Read
     866/     808 : 0003 0004           		ori.b	#4,d3
     867/     80C : 46C3                		move	d3,sr
     868/     80E : D107                		addx.b	d7,d0
     869/     810 : 40C3                		move	sr,d3
     870/     812 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     871/     818 :                     ; ----------------------------------------------------------------
     872/     818 :                     
     873/     818 :                     loc_E8E:				; DATA XREF: ROM:00000C26o
     874/     818 : 4244                		clr.w	d4
     875/     81A : 1818                		move.b	(a0)+,d4
     876/     81C : 4246                		clr.w	d6
     877/     81E : 1C18                		move.b	(a0)+,d6
     878/     820 : 4207                		clr.b	d7
     879/     822 : D801                		add.b	d1,d4
     880/     824 : DD07                		addx.b	d7,d6
     881/     826 : 6100 11A4           		bsr	addr_Read
     882/     82A : 0003 0004           		ori.b	#4,d3
     883/     82E : 46C3                		move	d3,sr
     884/     830 : D107                		addx.b	d7,d0
     885/     832 : 40C3                		move	sr,d3
     886/     834 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     887/     83A :                     ; ----------------------------------------------------------------
     888/     83A :                     
     889/     83A :                     loc_EB0:				; DATA XREF: ROM:00000C16o
     890/     83A : 4244                		clr.w	d4
     891/     83C : 1818                		move.b	(a0)+,d4
     892/     83E : 4246                		clr.w	d6
     893/     840 : 1C18                		move.b	(a0)+,d6
     894/     842 : 4207                		clr.b	d7
     895/     844 : D802                		add.b	d2,d4
     896/     846 : DD07                		addx.b	d7,d6
     897/     848 : 6100 1182           		bsr	addr_Read
     898/     84C : 0003 0004           		ori.b	#4,d3
     899/     850 : 46C3                		move	d3,sr
     900/     852 : D107                		addx.b	d7,d0
     901/     854 : 40C3                		move	sr,d3
     902/     856 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     903/     85C :                     ; ----------------------------------------------------------------
     904/     85C :                     
     905/     85C :                     loc_ED2:
     906/     85C : 4244                		clr.w	d4
     907/     85E : 4245                		clr.w	d5
     908/     860 : 4246                		clr.w	d6
     909/     862 : 1A18                		move.b	(a0)+,d5
     910/     864 : DA01                		add.b	d1,d5
     911/     866 : 1832 5000           		move.b	(a2,d5.w),d4
     912/     86A : DA3C 0001           		add.b	#1,d5
     913/     86E : 1C32 5000           		move.b	(a2,d5.w),d6
     914/     872 : 6100 1158           		bsr	addr_Read
     915/     876 : 0003 0004           		ori.b	#4,d3
     916/     87A : 46C3                		move	d3,sr
     917/     87C : D107                		addx.b	d7,d0
     918/     87E : 40C3                		move	sr,d3
     919/     880 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     920/     886 :                     ; ----------------------------------------------------------------
     921/     886 :                     
     922/     886 :                     loc_EF8:
     923/     886 : 4244                		clr.w	d4
     924/     888 : 4245                		clr.w	d5
     925/     88A : 4246                		clr.w	d6
     926/     88C : 1A18                		move.b	(a0)+,d5
     927/     88E : 1832 5000           		move.b	(a2,d5.w),d4
     928/     892 : DA3C 0001           		add.b	#1,d5
     929/     896 : 1C32 5000           		move.b	(a2,d5.w),d6
     930/     89A : 4207                		clr.b	d7
     931/     89C : D802                		add.b	d2,d4
     932/     89E : DD07                		addx.b	d7,d6
     933/     8A0 : 6100 112A           		bsr	addr_Read
     934/     8A4 : 0003 0004           		ori.b	#4,d3
     935/     8A8 : 46C3                		move	d3,sr
     936/     8AA : D107                		addx.b	d7,d0
     937/     8AC : 40C3                		move	sr,d3
     938/     8AE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     939/     8B4 :                     ; ----------------------------------------------------------------
     940/     8B4 :                     
     941/     8B4 :                     loc_F22:				; DATA XREF: ROM:00000Ad3o
     942/     8B4 : 1E18                		move.b	(a0)+,d7
     943/     8B6 : C007                		and.b	d7,d0
     944/     8B8 : 40C5                		move	sr,d5
     945/     8BA : 0245 000C           		andi.w	#$C,d5
     946/     8BE : 0203 00F3           		andi.b	#$F3,d3
     947/     8C2 : 8645                		or.w	d5,d3
     948/     8C4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     949/     8CA :                     ; ----------------------------------------------------------------
     950/     8CA :                     
     951/     8CA :                     loc_F36:				; DATA XREF: ROM:00000AC6o
     952/     8CA : 4246                		clr.w	d6
     953/     8CC : 1C18                		move.b	(a0)+,d6
     954/     8CE : 1E32 6000           		move.b	(a2,d6.w),d7
     955/     8D2 : C007                		and.b	d7,d0
     956/     8D4 : 40C5                		move	sr,d5
     957/     8D6 : 0245 000C           		andi.w	#$C,d5
     958/     8DA : 0203 00F3           		andi.b	#$F3,d3
     959/     8DE : 8645                		or.w	d5,d3
     960/     8E0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     961/     8E6 :                     ; ----------------------------------------------------------------
     962/     8E6 :                     
     963/     8E6 :                     loc_F50:				; DATA XREF: ROM:00000B06o
     964/     8E6 : 4246                		clr.w	d6
     965/     8E8 : 1C18                		move.b	(a0)+,d6
     966/     8EA : DC01                		add.b	d1,d6
     967/     8EC : 1E32 6000           		move.b	(a2,d6.w),d7
     968/     8F0 : C007                		and.b	d7,d0
     969/     8F2 : 40C5                		move	sr,d5
     970/     8F4 : 0245 000C           		andi.w	#$C,d5
     971/     8F8 : 0203 00F3           		andi.b	#$F3,d3
     972/     8FC : 8645                		or.w	d5,d3
     973/     8FE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     974/     904 :                     ; ----------------------------------------------------------------
     975/     904 :                     
     976/     904 :                     loc_F6C:
     977/     904 : 4244                		clr.w	d4
     978/     906 : 1818                		move.b	(a0)+,d4
     979/     908 : 4246                		clr.w	d6
     980/     90A : 1C18                		move.b	(a0)+,d6
     981/     90C : 6100 10BE           		bsr	addr_Read
     982/     910 : C007                		and.b	d7,d0
     983/     912 : 40C5                		move	sr,d5
     984/     914 : 0245 000C           		andi.w	#$C,d5
     985/     918 : 0203 00F3           		andi.b	#$F3,d3
     986/     91C : 8645                		or.w	d5,d3
     987/     91E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     988/     924 :                     ; ----------------------------------------------------------------
     989/     924 :                     
     990/     924 :                     loc_F8C:
     991/     924 : 4244                		clr.w	d4
     992/     926 : 1818                		move.b	(a0)+,d4
     993/     928 : 4246                		clr.w	d6
     994/     92A : 1C18                		move.b	(a0)+,d6
     995/     92C : 4207                		clr.b	d7
     996/     92E : D801                		add.b	d1,d4
     997/     930 : DD07                		addx.b	d7,d6
     998/     932 : 6100 1098           		bsr	addr_Read
     999/     936 : C007                		and.b	d7,d0
    1000/     938 : 40C5                		move	sr,d5
    1001/     93A : 0245 000C           		andi.w	#$C,d5
    1002/     93E : 0203 00F3           		andi.b	#$F3,d3
    1003/     942 : 8645                		or.w	d5,d3
    1004/     944 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1005/     94A :                     ; ----------------------------------------------------------------
    1006/     94A :                     
    1007/     94A :                     loc_FB2:				; DATA XREF: ROM:00000B16o
    1008/     94A : 4244                		clr.w	d4
    1009/     94C : 1818                		move.b	(a0)+,d4
    1010/     94E : 4246                		clr.w	d6
    1011/     950 : 1C18                		move.b	(a0)+,d6
    1012/     952 : 4207                		clr.b	d7
    1013/     954 : D802                		add.b	d2,d4
    1014/     956 : DD07                		addx.b	d7,d6
    1015/     958 : 6100 1072           		bsr	addr_Read
    1016/     95C : C007                		and.b	d7,d0
    1017/     95E : 40C5                		move	sr,d5
    1018/     960 : 0245 000C           		andi.w	#$C,d5
    1019/     964 : 0203 00F3           		andi.b	#$F3,d3
    1020/     968 : 8645                		or.w	d5,d3
    1021/     96A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1022/     970 :                     ; ----------------------------------------------------------------
    1023/     970 :                     
    1024/     970 :                     loc_FD8:
    1025/     970 : 4244                		clr.w	d4
    1026/     972 : 4245                		clr.w	d5
    1027/     974 : 4246                		clr.w	d6
    1028/     976 : 1A18                		move.b	(a0)+,d5
    1029/     978 : DA01                		add.b	d1,d5
    1030/     97A : 1832 5000           		move.b	(a2,d5.w),d4
    1031/     97E : DA3C 0001           		add.b	#1,d5
    1032/     982 : 1C32 5000           		move.b	(a2,d5.w),d6
    1033/     986 : 6100 1044           		bsr	addr_Read
    1034/     98A : C007                		and.b	d7,d0
    1035/     98C : 40C5                		move	sr,d5
    1036/     98E : 0245 000C           		andi.w	#$C,d5
    1037/     992 : 0203 00F3           		andi.b	#$F3,d3
    1038/     996 : 8645                		or.w	d5,d3
    1039/     998 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1040/     99E :                     ; ----------------------------------------------------------------
    1041/     99E :                     
    1042/     99E :                     loc_1002:
    1043/     99E : 4244                		clr.w	d4
    1044/     9A0 : 4245                		clr.w	d5
    1045/     9A2 : 4246                		clr.w	d6
    1046/     9A4 : 1A18                		move.b	(a0)+,d5
    1047/     9A6 : 1832 5000           		move.b	(a2,d5.w),d4
    1048/     9AA : DA3C 0001           		add.b	#1,d5
    1049/     9AE : 1C32 5000           		move.b	(a2,d5.w),d6
    1050/     9B2 : 4207                		clr.b	d7
    1051/     9B4 : D802                		add.b	d2,d4
    1052/     9B6 : DD07                		addx.b	d7,d6
    1053/     9B8 : 6100 1012           		bsr	addr_Read
    1054/     9BC : C007                		and.b	d7,d0
    1055/     9BE : 40C5                		move	sr,d5
    1056/     9C0 : 0245 000C           		andi.w	#$C,d5
    1057/     9C4 : 0203 00F3           		andi.b	#$F3,d3
    1058/     9C8 : 8645                		or.w	d5,d3
    1059/     9CA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1060/     9D0 :                     ; ----------------------------------------------------------------
    1061/     9D0 :                     
    1062/     9D0 :                     loc_1030:
    1063/     9D0 : E308                		lsl.b	#1,d0
    1064/     9D2 : 40C5                		move	sr,d5
    1065/     9D4 : 0245 001D           		andi.w	#$1D,d5
    1066/     9D8 : 0203 00E2           		andi.b	#$E2,d3
    1067/     9DC : 8645                		or.w	d5,d3
    1068/     9DE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1069/     9E4 :                     ; ----------------------------------------------------------------
    1070/     9E4 :                     
    1071/     9E4 :                     loc_1042:
    1072/     9E4 : 4246                		clr.w	d6
    1073/     9E6 : 1C18                		move.b	(a0)+,d6
    1074/     9E8 : 1E32 6000           		move.b	(a2,d6.w),d7
    1075/     9EC : E30F                		lsl.b	#1,d7
    1076/     9EE : 40C5                		move	sr,d5
    1077/     9F0 : 0245 001D           		andi.w	#$1D,d5
    1078/     9F4 : 0203 00E2           		andi.b	#$E2,d3
    1079/     9F8 : 8645                		or.w	d5,d3
    1080/     9FA : 1587 6000           		move.b	d7,(a2,d6.w)
    1081/     9FE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1082/     A04 :                     ; ----------------------------------------------------------------
    1083/     A04 :                     
    1084/     A04 :                     loc_1060:
    1085/     A04 : 4246                		clr.w	d6
    1086/     A06 : 1C18                		move.b	(a0)+,d6
    1087/     A08 : DC01                		add.b	d1,d6
    1088/     A0A : 1E32 6000           		move.b	(a2,d6.w),d7
    1089/     A0E : E30F                		lsl.b	#1,d7
    1090/     A10 : 40C5                		move	sr,d5
    1091/     A12 : 0245 001D           		andi.w	#$1D,d5
    1092/     A16 : 0203 00E2           		andi.b	#$E2,d3
    1093/     A1A : 8645                		or.w	d5,d3
    1094/     A1C : 1587 6000           		move.b	d7,(a2,d6.w)
    1095/     A20 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1096/     A26 :                     ; ----------------------------------------------------------------
    1097/     A26 :                     
    1098/     A26 :                     loc_1080:
    1099/     A26 : 1818                		move.b	(a0)+,d4
    1100/     A28 : 1C18                		move.b	(a0)+,d6
    1101/     A2A : E14E                		lsl.w	#8,d6
    1102/     A2C : 1C04                		move.b	d4,d6
    1103/     A2E : 1E32 6000           		move.b	(a2,d6.w),d7
    1104/     A32 : E30F                		lsl.b	#1,d7
    1105/     A34 : 40C5                		move	sr,d5
    1106/     A36 : 0245 001D           		andi.w	#$1D,d5
    1107/     A3A : 0203 00E2           		andi.b	#$E2,d3
    1108/     A3E : 8645                		or.w	d5,d3
    1109/     A40 : 1587 6000           		move.b	d7,(a2,d6.w)
    1110/     A44 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1111/     A4A :                     ; ----------------------------------------------------------------
    1112/     A4A :                     
    1113/     A4A :                     loc_10A2:				; DATA XREF: ROM:00000AAAo
    1114/     A4A : 1818                		move.b	(a0)+,d4
    1115/     A4C : 1C18                		move.b	(a0)+,d6
    1116/     A4E : E14E                		lsl.w	#8,d6
    1117/     A50 : 1C04                		move.b	d4,d6
    1118/     A52 : DC41                		add.w	d1,d6
    1119/     A54 : 1E32 6000           		move.b	(a2,d6.w),d7
    1120/     A58 : E30F                		lsl.b	#1,d7
    1121/     A5A : 40C5                		move	sr,d5
    1122/     A5C : 0245 001D           		andi.w	#$1D,d5
    1123/     A60 : 0203 00E2           		andi.b	#$E2,d3
    1124/     A64 : 8645                		or.w	d5,d3
    1125/     A66 : 1587 6000           		move.b	d7,(a2,d6.w)
    1126/     A6A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1127/     A70 :                     ; ----------------------------------------------------------------
    1128/     A70 :                     
    1129/     A70 :                     loc_10C6:
    1130/     A70 : 1C18                		move.b	(a0)+,d6
    1131/     A72 : 46C3                		move	d3,sr
    1132/     A74 : 6504                		bcs.s	loc_10D0
    1133/     A76 : 4886                		ext.w	d6
    1134/     A78 : D0C6                		adda.w	d6,a0
    1135/     A7A :                     loc_10D0:
    1136/     A7A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1137/     A80 :                     ; ----------------------------------------------------------------
    1138/     A80 :                     
    1139/     A80 :                     loc_10D4:
    1140/     A80 : 1C18                		move.b	(a0)+,d6
    1141/     A82 : 46C3                		move	d3,sr
    1142/     A84 : 6404                		bcc.s	loc_10DE
    1143/     A86 : 4886                		ext.w	d6
    1144/     A88 : D0C6                		adda.w	d6,a0
    1145/     A8A :                     loc_10DE:
    1146/     A8A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1147/     A90 :                     ; ----------------------------------------------------------------
    1148/     A90 :                     
    1149/     A90 :                     loc_10E2:
    1150/     A90 : 1C18                		move.b	(a0)+,d6
    1151/     A92 : 46C3                		move	d3,sr
    1152/     A94 : 6604                		bne.s	loc_10EC
    1153/     A96 : 4886                		ext.w	d6
    1154/     A98 : D0C6                		adda.w	d6,a0
    1155/     A9A :                     loc_10EC:
    1156/     A9A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1157/     AA0 :                     ; ----------------------------------------------------------------
    1158/     AA0 :                     
    1159/     AA0 :                     loc_10F0:
    1160/     AA0 : 4246                		clr.w	d6
    1161/     AA2 : 1C18                		move.b	(a0)+,d6
    1162/     AA4 : 1E32 6000           		move.b	(a2,d6.w),d7
    1163/     AA8 : 1807                		move.b	d7,d4
    1164/     AAA : 0203 00F1           		andi.b	#$F1,d3
    1165/     AAE : E30F                		lsl.b	#1,d7
    1166/     AB0 : 6404                		bcc.s	loc_1106
    1167/     AB2 : 0003 0008           		ori.b	#8,d3
    1168/     AB6 :                     loc_1106:
    1169/     AB6 : E30F                		lsl.b	#1,d7
    1170/     AB8 : 6404                		bcc.s	loc_110E
    1171/     ABA : 0003 0002           		ori.b	#2,d3
    1172/     ABE :                     loc_110E:
    1173/     ABE : C800                		and.b	d0,d4
    1174/     AC0 : 6604                		bne.s	loc_1116
    1175/     AC2 : 0003 0004           		ori.b	#4,d3
    1176/     AC6 :                     loc_1116:
    1177/     AC6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1178/     ACC :                     ; ----------------------------------------------------------------
    1179/     ACC :                     
    1180/     ACC :                     loc_111A:
    1181/     ACC : 4244                		clr.w	d4
    1182/     ACE : 1818                		move.b	(a0)+,d4
    1183/     AD0 : 4246                		clr.w	d6
    1184/     AD2 : 1C18                		move.b	(a0)+,d6
    1185/     AD4 : 6100 0EF6           		bsr	addr_Read
    1186/     AD8 : 1807                		move.b	d7,d4
    1187/     ADA : 0203 00F1           		andi.b	#$F1,d3
    1188/     ADE : E30F                		lsl.b	#1,d7
    1189/     AE0 : 6404                		bcc.s	loc_1136
    1190/     AE2 : 0003 0008           		ori.b	#8,d3
    1191/     AE6 :                     
    1192/     AE6 :                     loc_1136:
    1193/     AE6 : E30F                		lsl.b	#1,d7
    1194/     AE8 : 6404                		bcc.s	loc_113E
    1195/     AEA : 0003 0002           		ori.b	#2,d3
    1196/     AEE :                     
    1197/     AEE :                     loc_113E:
    1198/     AEE : C800                		and.b	d0,d4
    1199/     AF0 : 6604                		bne.s	loc_1146
    1200/     AF2 : 0003 0004           		ori.b	#4,d3
    1201/     AF6 :                     
    1202/     AF6 :                     loc_1146:
    1203/     AF6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1204/     AFC :                     ; ----------------------------------------------------------------
    1205/     AFC :                     
    1206/     AFC :                     loc_114A:				; DATA XREF: ROM:00000AF2o
    1207/     AFC : 1C18                		move.b	(a0)+,d6
    1208/     AFE : 46C3                		move	d3,sr
    1209/     B00 : 6A04                		bpl.s	loc_1154
    1210/     B02 : 4886                		ext.w	d6
    1211/     B04 : D0C6                		adda.w	d6,a0
    1212/     B06 :                     
    1213/     B06 :                     loc_1154:				; CODE XREF: ROM:0000114Ej
    1214/     B06 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1215/     B0C :                     ; ----------------------------------------------------------------
    1216/     B0C :                     
    1217/     B0C :                     loc_1158:				; DATA XREF: ROM:00000D72o
    1218/     B0C : 1C18                		move.b	(a0)+,d6
    1219/     B0E : 46C3                		move	d3,sr
    1220/     B10 : 6704                		beq.s	loc_1162
    1221/     B12 : 4886                		ext.w	d6
    1222/     B14 : D0C6                		adda.w	d6,a0
    1223/     B16 :                     
    1224/     B16 :                     loc_1162:				; CODE XREF: ROM:0000115Cj
    1225/     B16 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1226/     B1C :                     ; ----------------------------------------------------------------
    1227/     B1C :                     
    1228/     B1C :                     loc_1166:
    1229/     B1C : 1C18                		move.b	(a0)+,d6
    1230/     B1E : 46C3                		move	d3,sr
    1231/     B20 : 6B04                		bmi.s	loc_1170
    1232/     B22 : 4886                		ext.w	d6
    1233/     B24 : D0C6                		adda.w	d6,a0
    1234/     B26 :                     
    1235/     B26 :                     loc_1170:
    1236/     B26 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1237/     B2C :                     
    1238/     B2C :                     ; ----------------------------------------------------------------
    1239/     B2C :                     ; $00 - BRK
    1240/     B2C :                     ; ----------------------------------------------------------------
    1241/     B2C :                     
    1242/     B2C :                     mos_BRK:
    1243/     B2C : 4BF9 FFFF 0000      		lea 	(RAM_Fami_ROM),a5
    1244/     B32 : 3C3C 7FFE           		move.w	#cpuIRQ,d6		; go to IRQ
    1245/     B36 : DAC6                		add.w	d6,a5
    1246/     B38 : 1C2D 0001           		move.b	1(a5),d6
    1247/     B3C : E14E                		lsl.w	#8,d6
    1248/     B3E : 1C15                		move.b	(a5),d6
    1249/     B40 :                     
    1250/     B40 : 397C 0001 003C      		move.w	#1,cpuModeIntDis(a4)
    1251/     B46 : 397C 0001 003A      		move.w	#1,cpuFlag2(a4)
    1252/     B4C : 6000 0566           		bra.w	loc_1686
    1253/     B50 :                     ; ----------------------------------------------------------------
    1254/     B50 :                     
    1255/     B50 :                     loc_118E:
    1256/     B50 : 1C18                		move.b	(a0)+,d6
    1257/     B52 : 46C3                		move	d3,sr
    1258/     B54 : 6904                		bvs.s	loc_1198
    1259/     B56 : 4886                		ext.w	d6
    1260/     B58 : D0C6                		adda.w	d6,a0
    1261/     B5A :                     
    1262/     B5A :                     loc_1198:
    1263/     B5A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1264/     B60 :                     ; ----------------------------------------------------------------
    1265/     B60 :                     
    1266/     B60 :                     loc_119C:
    1267/     B60 : 1C18                		move.b	(a0)+,d6
    1268/     B62 : 46C3                		move	d3,sr
    1269/     B64 : 6804                		bvc.s	loc_11A6
    1270/     B66 : 4886                		ext.w	d6
    1271/     B68 : D0C6                		adda.w	d6,a0
    1272/     B6A :                     
    1273/     B6A :                     loc_11A6:				; CODE XREF: ROM:000011A0j
    1274/     B6A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1275/     B70 :                     ; ----------------------------------------------------------------
    1276/     B70 :                     
    1277/     B70 :                     loc_11AA:				; DATA XREF: ROM:00000A92o
    1278/     B70 : 0203 00EE           		andi.b	#$EE,d3
    1279/     B74 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1280/     B7A :                     
    1281/     B7A :                     ; ----------------------------------------------------------------
    1282/     B7A :                     ; CLD - Clear Decimal mode
    1283/     B7A :                     ; ----------------------------------------------------------------
    1284/     B7A :                     
    1285/     B7A :                     loc_11B2:
    1286/     B7A : 397C 0000 0038      		move.w	#0,cpuModeDec(a4)
    1287/     B80 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1288/     B86 :                     
    1289/     B86 :                     ; ----------------------------------------------------------------
    1290/     B86 :                     ; CLI - Clear Interrupt disable
    1291/     B86 :                     ; ----------------------------------------------------------------
    1292/     B86 :                     
    1293/     B86 :                     loc_11BC:
    1294/     B86 : 397C 0000 003C      		move.w	#0,cpuModeIntDis(a4)
    1295/     B8C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1296/     B92 :                     
    1297/     B92 :                     ; ----------------------------------------------------------------
    1298/     B92 :                     
    1299/     B92 :                     loc_11C6:				; DATA XREF: ROM:00000D12o
    1300/     B92 : 0203 00FD           		andi.b	#$FD,d3
    1301/     B96 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1302/     B9C :                     ; ----------------------------------------------------------------
    1303/     B9C :                     
    1304/     B9C :                     loc_11CE:				; DATA XREF: ROM:00000D56o
    1305/     B9C : 1E18                		move.b	(a0)+,d7
    1306/     B9E : B007                		cmp.b	d7,d0
    1307/     BA0 : 40C5                		move	sr,d5
    1308/     BA2 : 0245 000D           		andi.w	#$D,d5
    1309/     BA6 : 0A05 0001           		eori.b	#1,d5
    1310/     BAA : 0203 0002           		andi.b	#2,d3
    1311/     BAE : 8605                		or.b	d5,d3
    1312/     BB0 : 0205 0001           		andi.b	#1,d5
    1313/     BB4 : E90D                		lsl.b	#4,d5
    1314/     BB6 : 8605                		or.b	d5,d3
    1315/     BB8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1316/     BBE :                     ; ----------------------------------------------------------------
    1317/     BBE :                     
    1318/     BBE :                     loc_11EE:				; DATA XREF: ROM:00000D46o
    1319/     BBE : 4246                		clr.w	d6
    1320/     BC0 : 1C18                		move.b	(a0)+,d6
    1321/     BC2 : 1E32 6000           		move.b	(a2,d6.w),d7
    1322/     BC6 : B007                		cmp.b	d7,d0
    1323/     BC8 : 40C5                		move	sr,d5
    1324/     BCA : 0245 000D           		andi.w	#$D,d5
    1325/     BCE : 0A05 0001           		eori.b	#1,d5
    1326/     BD2 : 0203 0002           		andi.b	#2,d3
    1327/     BD6 : 8605                		or.b	d5,d3
    1328/     BD8 : 0205 0001           		andi.b	#1,d5
    1329/     BDC : E90D                		lsl.b	#4,d5
    1330/     BDE : 8605                		or.b	d5,d3
    1331/     BE0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1332/     BE6 :                     ; ----------------------------------------------------------------
    1333/     BE6 :                     
    1334/     BE6 :                     loc_1214:				; DATA XREF: ROM:00000D86o
    1335/     BE6 : 4246                		clr.w	d6
    1336/     BE8 : 1C18                		move.b	(a0)+,d6
    1337/     BEA : DC01                		add.b	d1,d6
    1338/     BEC : 1E32 6000           		move.b	(a2,d6.w),d7
    1339/     BF0 : B007                		cmp.b	d7,d0
    1340/     BF2 : 40C5                		move	sr,d5
    1341/     BF4 : 0245 000D           		andi.w	#$D,d5
    1342/     BF8 : 0A05 0001           		eori.b	#1,d5
    1343/     BFC : 0203 0002           		andi.b	#2,d3
    1344/     C00 : 8605                		or.b	d5,d3
    1345/     C02 : 0205 0001           		andi.b	#1,d5
    1346/     C06 : E90D                		lsl.b	#4,d5
    1347/     C08 : 8605                		or.b	d5,d3
    1348/     C0A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1349/     C10 :                     ; ----------------------------------------------------------------
    1350/     C10 :                     
    1351/     C10 :                     loc_123C:				; DATA XREF: ROM:00000d36o
    1352/     C10 : 4244                		clr.w	d4
    1353/     C12 : 1818                		move.b	(a0)+,d4
    1354/     C14 : 4246                		clr.w	d6
    1355/     C16 : 1C18                		move.b	(a0)+,d6
    1356/     C18 : 6100 0DB2           		bsr	addr_Read
    1357/     C1C : B007                		cmp.b	d7,d0
    1358/     C1E : 40C5                		move	sr,d5
    1359/     C20 : 0245 000D           		andi.w	#$D,d5
    1360/     C24 : 0A05 0001           		eori.b	#1,d5
    1361/     C28 : 0203 0002           		andi.b	#2,d3
    1362/     C2C : 8605                		or.b	d5,d3
    1363/     C2E : 0205 0001           		andi.b	#1,d5
    1364/     C32 : E90D                		lsl.b	#4,d5
    1365/     C34 : 8605                		or.b	d5,d3
    1366/     C36 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1367/     C3C :                     ; ----------------------------------------------------------------
    1368/     C3C :                     
    1369/     C3C :                     loc_1268:				; DATA XREF: ROM:00000DA6o
    1370/     C3C : 4244                		clr.w	d4
    1371/     C3E : 1818                		move.b	(a0)+,d4
    1372/     C40 : 4246                		clr.w	d6
    1373/     C42 : 1C18                		move.b	(a0)+,d6
    1374/     C44 : 4207                		clr.b	d7
    1375/     C46 : D801                		add.b	d1,d4
    1376/     C48 : DD07                		addx.b	d7,d6
    1377/     C4A : 6100 0D80           		bsr	addr_Read
    1378/     C4E : B007                		cmp.b	d7,d0
    1379/     C50 : 40C5                		move	sr,d5
    1380/     C52 : 0245 000D           		andi.w	#$D,d5
    1381/     C56 : 0A05 0001           		eori.b	#1,d5
    1382/     C5A : 0203 0002           		andi.b	#2,d3
    1383/     C5E : 8605                		or.b	d5,d3
    1384/     C60 : 0205 0001           		andi.b	#1,d5
    1385/     C64 : E90D                		lsl.b	#4,d5
    1386/     C66 : 8605                		or.b	d5,d3
    1387/     C68 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1388/     C6E :                     ; ----------------------------------------------------------------
    1389/     C6E :                     
    1390/     C6E :                     loc_129A:				; DATA XREF: ROM:00000D96o
    1391/     C6E : 4244                		clr.w	d4
    1392/     C70 : 1818                		move.b	(a0)+,d4
    1393/     C72 : 4246                		clr.w	d6
    1394/     C74 : 1C18                		move.b	(a0)+,d6
    1395/     C76 : 4207                		clr.b	d7
    1396/     C78 : D802                		add.b	d2,d4
    1397/     C7A : DD07                		addx.b	d7,d6
    1398/     C7C : 6100 0D4E           		bsr	addr_Read
    1399/     C80 : B007                		cmp.b	d7,d0
    1400/     C82 : 40C5                		move	sr,d5
    1401/     C84 : 0245 000D           		andi.w	#$D,d5
    1402/     C88 : 0A05 0001           		eori.b	#1,d5
    1403/     C8C : 0203 0002           		andi.b	#2,d3
    1404/     C90 : 8605                		or.b	d5,d3
    1405/     C92 : 0205 0001           		andi.b	#1,d5
    1406/     C96 : E90D                		lsl.b	#4,d5
    1407/     C98 : 8605                		or.b	d5,d3
    1408/     C9A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1409/     CA0 :                     ; ----------------------------------------------------------------
    1410/     CA0 :                     
    1411/     CA0 :                     loc_12CC:
    1412/     CA0 : 4245                		clr.w	d5
    1413/     CA2 : 4244                		clr.w	d4
    1414/     CA4 : 4246                		clr.w	d6
    1415/     CA6 : 1A18                		move.b	(a0)+,d5
    1416/     CA8 : DA01                		add.b	d1,d5
    1417/     CAA : 1832 5000           		move.b	(a2,d5.w),d4
    1418/     CAE : DA3C 0001           		add.b	#1,d5
    1419/     CB2 : 1C32 5000           		move.b	(a2,d5.w),d6
    1420/     CB6 : 6100 0D14           		bsr	addr_Read
    1421/     CBA : B007                		cmp.b	d7,d0
    1422/     CBC : 40C5                		move	sr,d5
    1423/     CBE : 0245 000D           		andi.w	#$D,d5
    1424/     CC2 : 0A05 0001           		eori.b	#1,d5
    1425/     CC6 : 0203 0002           		andi.b	#2,d3
    1426/     CCA : 8605                		or.b	d5,d3
    1427/     CCC : 0205 0001           		andi.b	#1,d5
    1428/     CD0 : E90D                		lsl.b	#4,d5
    1429/     CD2 : 8605                		or.b	d5,d3
    1430/     CD4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1431/     CDA :                     ; ----------------------------------------------------------------
    1432/     CDA :                     
    1433/     CDA :                     loc_1302:
    1434/     CDA : 4244                		clr.w	d4
    1435/     CDC : 4245                		clr.w	d5
    1436/     CDE : 4246                		clr.w	d6
    1437/     CE0 : 1A18                		move.b	(a0)+,d5
    1438/     CE2 : 1832 5000           		move.b	(a2,d5.w),d4
    1439/     CE6 : DA3C 0001           		add.b	#1,d5
    1440/     CEA : 1C32 5000           		move.b	(a2,d5.w),d6
    1441/     CEE : 4207                		clr.b	d7
    1442/     CF0 : D802                		add.b	d2,d4
    1443/     CF2 : DD07                		addx.b	d7,d6
    1444/     CF4 : 6100 0CD6           		bsr	addr_Read
    1445/     CF8 : B007                		cmp.b	d7,d0
    1446/     CFA : 40C5                		move	sr,d5
    1447/     CFC : 0245 000D           		andi.w	#$D,d5
    1448/     D00 : 0A05 0001           		eori.b	#1,d5
    1449/     D04 : 0203 0002           		andi.b	#2,d3
    1450/     D08 : 8605                		or.b	d5,d3
    1451/     D0A : 0205 0001           		andi.b	#1,d5
    1452/     D0E : E90D                		lsl.b	#4,d5
    1453/     D10 : 8605                		or.b	d5,d3
    1454/     D12 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1455/     D18 :                     ; ----------------------------------------------------------------
    1456/     D18 :                     
    1457/     D18 :                     loc_133C:				; DATA XREF: ROM:00000DB2o
    1458/     D18 : 1E18                		move.b	(a0)+,d7
    1459/     D1A : B207                		cmp.b	d7,d1
    1460/     D1C : 40C5                		move	sr,d5
    1461/     D1E : 0245 000D           		andi.w	#$D,d5
    1462/     D22 : 0A05 0001           		eori.b	#1,d5
    1463/     D26 : 0203 0002           		andi.b	#2,d3
    1464/     D2A : 8605                		or.b	d5,d3
    1465/     D2C : 0205 0001           		andi.b	#1,d5
    1466/     D30 : E90D                		lsl.b	#4,d5
    1467/     D32 : 8605                		or.b	d5,d3
    1468/     D34 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1469/     D3A :                     ; ----------------------------------------------------------------
    1470/     D3A :                     
    1471/     D3A :                     loc_135C:				; DATA XREF: ROM:00000DC2o
    1472/     D3A : 4246                		clr.w	d6
    1473/     D3C : 1C18                		move.b	(a0)+,d6
    1474/     D3E : 1E32 6000           		move.b	(a2,d6.w),d7
    1475/     D42 : B207                		cmp.b	d7,d1
    1476/     D44 : 40C5                		move	sr,d5
    1477/     D46 : 0245 000D           		andi.w	#$D,d5
    1478/     D4A : 0A05 0001           		eori.b	#1,d5
    1479/     D4E : 0203 0002           		andi.b	#2,d3
    1480/     D52 : 8605                		or.b	d5,d3
    1481/     D54 : 0205 0001           		andi.b	#1,d5
    1482/     D58 : E90D                		lsl.b	#4,d5
    1483/     D5A : 8605                		or.b	d5,d3
    1484/     D5C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1485/     D62 :                     ; ----------------------------------------------------------------
    1486/     D62 :                     
    1487/     D62 :                     loc_1382:				; DATA XREF: ROM:00000DE2o
    1488/     D62 : 4244                		clr.w	d4
    1489/     D64 : 1818                		move.b	(a0)+,d4
    1490/     D66 : 4246                		clr.w	d6
    1491/     D68 : 1C18                		move.b	(a0)+,d6
    1492/     D6A : 6100 0C60           		bsr	addr_Read
    1493/     D6E : B207                		cmp.b	d7,d1
    1494/     D70 : 40C5                		move	sr,d5
    1495/     D72 : 0245 000D           		andi.w	#$D,d5
    1496/     D76 : 0A05 0001           		eori.b	#1,d5
    1497/     D7A : 0203 0002           		andi.b	#2,d3
    1498/     D7E : 8605                		or.b	d5,d3
    1499/     D80 : 0205 0001           		andi.b	#1,d5
    1500/     D84 : E90D                		lsl.b	#4,d5
    1501/     D86 : 8605                		or.b	d5,d3
    1502/     D88 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1503/     D8E :                     ; ----------------------------------------------------------------
    1504/     D8E :                     
    1505/     D8E :                     loc_13AE:				; DATA XREF: ROM:00000d62o
    1506/     D8E : 1E18                		move.b	(a0)+,d7
    1507/     D90 : B407                		cmp.b	d7,d2
    1508/     D92 : 40C5                		move	sr,d5
    1509/     D94 : 0245 000D           		andi.w	#$D,d5
    1510/     D98 : 0A05 0001           		eori.b	#1,d5
    1511/     D9C : 0203 0002           		andi.b	#2,d3
    1512/     DA0 : 8605                		or.b	d5,d3
    1513/     DA2 : 0205 0001           		andi.b	#1,d5
    1514/     DA6 : E90D                		lsl.b	#4,d5
    1515/     DA8 : 8605                		or.b	d5,d3
    1516/     DAA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1517/     DB0 :                     ; ----------------------------------------------------------------
    1518/     DB0 :                     
    1519/     DB0 :                     loc_13CE:				; DATA XREF: ROM:00000D42o
    1520/     DB0 : 4246                		clr.w	d6
    1521/     DB2 : 1C18                		move.b	(a0)+,d6
    1522/     DB4 : 1E32 6000           		move.b	(a2,d6.w),d7
    1523/     DB8 : B407                		cmp.b	d7,d2
    1524/     DBA : 40C5                		move	sr,d5
    1525/     DBC : 0245 000D           		andi.w	#$D,d5
    1526/     DC0 : 0A05 0001           		eori.b	#1,d5
    1527/     DC4 : 0203 0002           		andi.b	#2,d3
    1528/     DC8 : 8605                		or.b	d5,d3
    1529/     DCA : 0205 0001           		andi.b	#1,d5
    1530/     DCE : E90D                		lsl.b	#4,d5
    1531/     DD0 : 8605                		or.b	d5,d3
    1532/     DD2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1533/     DD8 :                     ; ----------------------------------------------------------------
    1534/     DD8 :                     
    1535/     DD8 :                     loc_13F4:				; DATA XREF: ROM:00000d32o
    1536/     DD8 : 4244                		clr.w	d4
    1537/     DDA : 1818                		move.b	(a0)+,d4
    1538/     DDC : 4246                		clr.w	d6
    1539/     DDE : 1C18                		move.b	(a0)+,d6
    1540/     DE0 : 6100 0BEA           		bsr	addr_Read
    1541/     DE4 : B407                		cmp.b	d7,d2
    1542/     DE6 : 40C5                		move	sr,d5
    1543/     DE8 : 0245 000D           		andi.w	#$D,d5
    1544/     DEC : 0A05 0001           		eori.b	#1,d5
    1545/     DF0 : 0203 0002           		andi.b	#2,d3
    1546/     DF4 : 8605                		or.b	d5,d3
    1547/     DF6 : 0205 0001           		andi.b	#1,d5
    1548/     DFA : E90D                		lsl.b	#4,d5
    1549/     DFC : 8605                		or.b	d5,d3
    1550/     DFE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1551/     E04 :                     ; ----------------------------------------------------------------
    1552/     E04 :                     
    1553/     E04 :                     loc_1420:				; DATA XREF: ROM:00000D4Ao
    1554/     E04 : 4246                		clr.w	d6
    1555/     E06 : 1C18                		move.b	(a0)+,d6
    1556/     E08 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1557/     E0C : 40C5                		move	sr,d5
    1558/     E0E : 0245 000C           		andi.w	#$C,d5
    1559/     E12 : 0203 00F3           		andi.b	#$F3,d3
    1560/     E16 : 8645                		or.w	d5,d3
    1561/     E18 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1562/     E1E :                     ; ----------------------------------------------------------------
    1563/     E1E :                     
    1564/     E1E :                     loc_1438:				; DATA XREF: ROM:00000D8Ao
    1565/     E1E : 4246                		clr.w	d6
    1566/     E20 : 1C18                		move.b	(a0)+,d6
    1567/     E22 : DC01                		add.b	d1,d6
    1568/     E24 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1569/     E28 : 40C5                		move	sr,d5
    1570/     E2A : 0245 000C           		andi.w	#$C,d5
    1571/     E2E : 0203 00F3           		andi.b	#$F3,d3
    1572/     E32 : 8645                		or.w	d5,d3
    1573/     E34 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1574/     E3A :                     ; ----------------------------------------------------------------
    1575/     E3A :                     
    1576/     E3A :                     loc_1452:				; DATA XREF: ROM:00000d3Ao
    1577/     E3A : 1818                		move.b	(a0)+,d4
    1578/     E3C : 1C18                		move.b	(a0)+,d6
    1579/     E3E : E14E                		lsl.w	#8,d6
    1580/     E40 : 1C04                		move.b	d4,d6
    1581/     E42 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1582/     E46 : 40C5                		move	sr,d5
    1583/     E48 : 0245 000C           		andi.w	#$C,d5
    1584/     E4C : 0203 00F3           		andi.b	#$F3,d3
    1585/     E50 : 8645                		or.w	d5,d3
    1586/     E52 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1587/     E58 :                     ; ----------------------------------------------------------------
    1588/     E58 :                     
    1589/     E58 :                     loc_146E:				; DATA XREF: ROM:00000DAAo
    1590/     E58 : 1818                		move.b	(a0)+,d4
    1591/     E5A : 1C18                		move.b	(a0)+,d6
    1592/     E5C : E14E                		lsl.w	#8,d6
    1593/     E5E : 1C04                		move.b	d4,d6
    1594/     E60 : DC41                		add.w	d1,d6
    1595/     E62 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1596/     E66 : 40C5                		move	sr,d5
    1597/     E68 : 0245 000C           		andi.w	#$C,d5
    1598/     E6C : 0203 00F3           		andi.b	#$F3,d3
    1599/     E70 : 8645                		or.w	d5,d3
    1600/     E72 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1601/     E78 :                     ; ----------------------------------------------------------------
    1602/     E78 :                     
    1603/     E78 :                     loc_148C:				; DATA XREF: ROM:00000D5Ao
    1604/     E78 : 5301                		subq.b	#1,d1
    1605/     E7A : 40C5                		move	sr,d5
    1606/     E7C : 0245 000C           		andi.w	#$C,d5
    1607/     E80 : 0203 00F3           		andi.b	#$F3,d3
    1608/     E84 : 8645                		or.w	d5,d3
    1609/     E86 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1610/     E8C :                     ; ----------------------------------------------------------------
    1611/     E8C :                     
    1612/     E8C :                     loc_149E:
    1613/     E8C : 5302                		subq.b	#1,d2
    1614/     E8E : 40C5                		move	sr,d5
    1615/     E90 : 0245 000C           		andi.w	#$C,d5
    1616/     E94 : 0203 00F3           		andi.b	#$F3,d3
    1617/     E98 : 8645                		or.w	d5,d3
    1618/     E9A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1619/     EA0 :                     ; ----------------------------------------------------------------
    1620/     EA0 :                     
    1621/     EA0 :                     loc_14B0:				; DATA XREF: ROM:00000B56o
    1622/     EA0 : 1E18                		move.b	(a0)+,d7
    1623/     EA2 : BF00                		eor.b	d7,d0
    1624/     EA4 : 40C5                		move	sr,d5
    1625/     EA6 : 0245 000C           		andi.w	#$C,d5
    1626/     EAA : 0203 00F3           		andi.b	#$F3,d3
    1627/     EAE : 8645                		or.w	d5,d3
    1628/     EB0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1629/     EB6 :                     ; ----------------------------------------------------------------
    1630/     EB6 :                     
    1631/     EB6 :                     loc_14C4:				; DATA XREF: ROM:00000B46o
    1632/     EB6 : 4246                		clr.w	d6
    1633/     EB8 : 1C18                		move.b	(a0)+,d6
    1634/     EBA : 1E32 6000           		move.b	(a2,d6.w),d7
    1635/     EBE : BF00                		eor.b	d7,d0
    1636/     EC0 : 40C5                		move	sr,d5
    1637/     EC2 : 0245 000C           		andi.w	#$C,d5
    1638/     EC6 : 0203 00F3           		andi.b	#$F3,d3
    1639/     ECA : 8645                		or.w	d5,d3
    1640/     ECC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1641/     ED2 :                     ; ----------------------------------------------------------------
    1642/     ED2 :                     
    1643/     ED2 :                     loc_14DE:				; DATA XREF: ROM:00000B86o
    1644/     ED2 : 4246                		clr.w	d6
    1645/     ED4 : 1C18                		move.b	(a0)+,d6
    1646/     ED6 : DC01                		add.b	d1,d6
    1647/     ED8 : 1E32 6000           		move.b	(a2,d6.w),d7
    1648/     EDC : BF00                		eor.b	d7,d0
    1649/     EDE : 40C5                		move	sr,d5
    1650/     EE0 : 0245 000C           		andi.w	#$C,d5
    1651/     EE4 : 0203 00F3           		andi.b	#$F3,d3
    1652/     EE8 : 8645                		or.w	d5,d3
    1653/     EEA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1654/     EF0 :                     ; ----------------------------------------------------------------
    1655/     EF0 :                     
    1656/     EF0 :                     loc_14FA:				; DATA XREF: ROM:00000B66o
    1657/     EF0 : 4244                		clr.w	d4
    1658/     EF2 : 1818                		move.b	(a0)+,d4
    1659/     EF4 : 4246                		clr.w	d6
    1660/     EF6 : 1C18                		move.b	(a0)+,d6
    1661/     EF8 : 6100 0AD2           		bsr	addr_Read
    1662/     EFC : BF00                		eor.b	d7,d0
    1663/     EFE : 40C5                		move	sr,d5
    1664/     F00 : 0245 000C           		andi.w	#$C,d5
    1665/     F04 : 0203 00F3           		andi.b	#$F3,d3
    1666/     F08 : 8645                		or.w	d5,d3
    1667/     F0A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1668/     F10 :                     ; ----------------------------------------------------------------
    1669/     F10 :                     
    1670/     F10 :                     loc_151A:				; DATA XREF: ROM:00000BA6o
    1671/     F10 : 4244                		clr.w	d4
    1672/     F12 : 1818                		move.b	(a0)+,d4
    1673/     F14 : 4246                		clr.w	d6
    1674/     F16 : 1C18                		move.b	(a0)+,d6
    1675/     F18 : 4207                		clr.b	d7
    1676/     F1A : D801                		add.b	d1,d4
    1677/     F1C : DD07                		addx.b	d7,d6
    1678/     F1E : 6100 0AAC           		bsr	addr_Read
    1679/     F22 : BF00                		eor.b	d7,d0
    1680/     F24 : 40C5                		move	sr,d5
    1681/     F26 : 0245 000C           		andi.w	#$C,d5
    1682/     F2A : 0203 00F3           		andi.b	#$F3,d3
    1683/     F2E : 8645                		or.w	d5,d3
    1684/     F30 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1685/     F36 :                     ; ----------------------------------------------------------------
    1686/     F36 :                     
    1687/     F36 :                     loc_1540:				; DATA XREF: ROM:00000B96o
    1688/     F36 : 4244                		clr.w	d4
    1689/     F38 : 1818                		move.b	(a0)+,d4
    1690/     F3A : 4246                		clr.w	d6
    1691/     F3C : 1C18                		move.b	(a0)+,d6
    1692/     F3E : 4207                		clr.b	d7
    1693/     F40 : D802                		add.b	d2,d4
    1694/     F42 : DD07                		addx.b	d7,d6
    1695/     F44 : 6100 0A86           		bsr	addr_Read
    1696/     F48 : BF00                		eor.b	d7,d0
    1697/     F4A : 40C5                		move	sr,d5
    1698/     F4C : 0245 000C           		andi.w	#$C,d5
    1699/     F50 : 0203 00F3           		andi.b	#$F3,d3
    1700/     F54 : 8645                		or.w	d5,d3
    1701/     F56 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1702/     F5C :                     ; ----------------------------------------------------------------
    1703/     F5C :                     
    1704/     F5C :                     loc_1566:
    1705/     F5C : 4244                		clr.w	d4
    1706/     F5E : 4245                		clr.w	d5
    1707/     F60 : 4246                		clr.w	d6
    1708/     F62 : 1A18                		move.b	(a0)+,d5
    1709/     F64 : DA01                		add.b	d1,d5
    1710/     F66 : 1832 5000           		move.b	(a2,d5.w),d4
    1711/     F6A : DA3C 0001           		add.b	#1,d5
    1712/     F6E : 1C32 5000           		move.b	(a2,d5.w),d6
    1713/     F72 : 6100 0A58           		bsr	addr_Read
    1714/     F76 : BF00                		eor.b	d7,d0
    1715/     F78 : 40C5                		move	sr,d5
    1716/     F7A : 0245 000C           		andi.w	#$C,d5
    1717/     F7E : 0203 00F3           		andi.b	#$F3,d3
    1718/     F82 : 8645                		or.w	d5,d3
    1719/     F84 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1720/     F8A :                     ; ----------------------------------------------------------------
    1721/     F8A :                     
    1722/     F8A :                     loc_1590:
    1723/     F8A : 4244                		clr.w	d4
    1724/     F8C : 4245                		clr.w	d5
    1725/     F8E : 4246                		clr.w	d6
    1726/     F90 : 1A18                		move.b	(a0)+,d5
    1727/     F92 : 1832 5000           		move.b	(a2,d5.w),d4
    1728/     F96 : DA3C 0001           		add.b	#1,d5
    1729/     F9A : 1C32 5000           		move.b	(a2,d5.w),d6
    1730/     F9E : 4207                		clr.b	d7
    1731/     FA0 : D802                		add.b	d2,d4
    1732/     FA2 : DD07                		addx.b	d7,d6
    1733/     FA4 : 6100 0A26           		bsr	addr_Read
    1734/     FA8 : BF00                		eor.b	d7,d0
    1735/     FAA : 40C5                		move	sr,d5
    1736/     FAC : 0245 000C           		andi.w	#$C,d5
    1737/     FB0 : 0203 00F3           		andi.b	#$F3,d3
    1738/     FB4 : 8645                		or.w	d5,d3
    1739/     FB6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1740/     FBC :                     ; ----------------------------------------------------------------
    1741/     FBC :                     
    1742/     FBC :                     loc_15BE:
    1743/     FBC : 4246                		clr.w	d6
    1744/     FBE : 1C18                		move.b	(a0)+,d6
    1745/     FC0 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1746/     FC4 : 40C5                		move	sr,d5
    1747/     FC6 : 0245 000C           		andi.w	#$C,d5
    1748/     FCA : 0203 00F3           		andi.b	#$F3,d3
    1749/     FCE : 8645                		or.w	d5,d3
    1750/     FD0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1751/     FD6 :                     ; ----------------------------------------------------------------
    1752/     FD6 :                     
    1753/     FD6 :                     loc_15d3:
    1754/     FD6 : 4246                		clr.w	d6
    1755/     FD8 : 1C18                		move.b	(a0)+,d6
    1756/     FDA : DC01                		add.b	d1,d6
    1757/     FDC : 5232 6000           		addq.b	#1,(a2,d6.w)
    1758/     FE0 : 40C5                		move	sr,d5
    1759/     FE2 : 0245 000C           		andi.w	#$C,d5
    1760/     FE6 : 0203 00F3           		andi.b	#$F3,d3
    1761/     FEA : 8645                		or.w	d5,d3
    1762/     FEC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1763/     FF2 :                     ; ----------------------------------------------------------------
    1764/     FF2 :                     
    1765/     FF2 :                     loc_15F0:
    1766/     FF2 : 1818                		move.b	(a0)+,d4
    1767/     FF4 : 1C18                		move.b	(a0)+,d6
    1768/     FF6 : E14E                		lsl.w	#8,d6
    1769/     FF8 : 1C04                		move.b	d4,d6
    1770/     FFA : 5232 6000           		addq.b	#1,(a2,d6.w)
    1771/     FFE : 40C5                		move	sr,d5
    1772/    1000 : 0245 000C           		andi.w	#$C,d5
    1773/    1004 : 0203 00F3           		andi.b	#$F3,d3
    1774/    1008 : 8645                		or.w	d5,d3
    1775/    100A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1776/    1010 :                     ; ----------------------------------------------------------------
    1777/    1010 :                     
    1778/    1010 :                     loc_160C:
    1779/    1010 : 1818                		move.b	(a0)+,d4
    1780/    1012 : 1C18                		move.b	(a0)+,d6
    1781/    1014 : E14E                		lsl.w	#8,d6
    1782/    1016 : 1C04                		move.b	d4,d6
    1783/    1018 : DC41                		add.w	d1,d6
    1784/    101A : 5232 6000           		addq.b	#1,(a2,d6.w)
    1785/    101E : 40C5                		move	sr,d5
    1786/    1020 : 0245 000C           		andi.w	#$C,d5
    1787/    1024 : 0203 00F3           		andi.b	#$F3,d3
    1788/    1028 : 8645                		or.w	d5,d3
    1789/    102A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1790/    1030 :                     ; ----------------------------------------------------------------
    1791/    1030 :                     
    1792/    1030 :                     loc_162A:
    1793/    1030 : 5201                		addq.b	#1,d1
    1794/    1032 : 40C5                		move	sr,d5
    1795/    1034 : 0245 000C           		andi.w	#$C,d5
    1796/    1038 : 0203 00F3           		andi.b	#$F3,d3
    1797/    103C : 8645                		or.w	d5,d3
    1798/    103E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1799/    1044 :                     ; ----------------------------------------------------------------
    1800/    1044 :                     
    1801/    1044 :                     loc_163C:
    1802/    1044 : 5202                		addq.b	#1,d2
    1803/    1046 : 40C5                		move	sr,d5
    1804/    1048 : 0245 000C           		andi.w	#$C,d5
    1805/    104C : 0203 00F3           		andi.b	#$F3,d3
    1806/    1050 : 8645                		or.w	d5,d3
    1807/    1052 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1808/    1058 :                     ; ----------------------------------------------------------------
    1809/    1058 :                     ; $4C - JMP $xxxx
    1810/    1058 :                     ; ----------------------------------------------------------------
    1811/    1058 :                     
    1812/    1058 :                     loc_164E:
    1813/    1058 : 7C00                		moveq	#0,d6
    1814/    105A : 1C28 0001           		move.b	1(a0),d6
    1815/    105E : E14E                		lsl.w	#8,d6
    1816/    1060 : 1C10                		move.b	(a0),d6
    1817/    1062 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1818/    1068 : 2049                		movea.l a1,a0
    1819/    106A : D1C6                		add.l 	d6,a0
    1820/    106C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1821/    1072 :                     
    1822/    1072 :                     ; ----------------------------------------------------------------
    1823/    1072 :                     ; $6C - JMP ($xxxx)
    1824/    1072 :                     ; ----------------------------------------------------------------
    1825/    1072 :                     
    1826/    1072 :                     loc_1660:
    1827/    1072 : 7800                		moveq	#0,d4
    1828/    1074 : 1C28 0001           		move.b	1(a0),d6
    1829/    1078 : E14E                		lsl.w	#8,d6
    1830/    107A : 1C10                		move.b	(a0),d6
    1831/    107C : 1832 6000           		move.b	(a2,d6.w),d4
    1832/    1080 : DC3C 0001           		add.b	#1,d6
    1833/    1084 : 1C32 6000           		move.b	(a2,d6.w),d6
    1834/    1088 : E14E                		lsl.w	#8,d6
    1835/    108A : 8C04                		or.b	d4,d6
    1836/    108C :                     
    1837/    108C :                     	; TODO: Check for more jump locations
    1838/    108C : 4A46                		tst.w	d6
    1839/    108E : 6B0A                		bmi.s	.to_rom
    1840/    1090 : 204A                		move.l	a2,a0
    1841/    1092 : D0C6                		adda	d6,a0
    1842/    1094 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1843/    109A :                     .to_rom:
    1844/    109A : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1845/    10A0 : 2049                		movea.l a1,a0
    1846/    10A2 : D1C6                		add.l 	d6,a0
    1847/    10A4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1848/    10AA :                     
    1849/    10AA :                     ; ----------------------------------------------------------------
    1850/    10AA :                     ; $6C - JSR $xxxx
    1851/    10AA :                     ; ----------------------------------------------------------------
    1852/    10AA :                     
    1853/    10AA :                     loc_167C:
    1854/    10AA : 7C00                		moveq	#0,d6
    1855/    10AC : 1818                		move.b	(a0)+,d4
    1856/    10AE : 1C10                		move.b	(a0),d6
    1857/    10B0 : E14E                		lsl.w	#8,d6
    1858/    10B2 : 1C04                		move.b	d4,d6
    1859/    10B4 :                     
    1860/    10B4 :                     loc_1686:
    1861/    10B4 : 4843                		swap	d3
    1862/    10B6 : 3808                		move.w	a0,d4
    1863/    10B8 : 1A04                		move.b	d4,d5
    1864/    10BA : E04C                		lsr.w	#8,d4
    1865/    10BC : 883C 0080           		or.b	#$80,d4
    1866/    10C0 : 1584 3000           		move.b	d4,(a2,d3.w)
    1867/    10C4 : 5303                		subq.b	#1,d3
    1868/    10C6 : 1585 3000           		move.b	d5,(a2,d3.w)
    1869/    10CA : 5303                		subq.b	#1,d3
    1870/    10CC : 4843                		swap	d3
    1871/    10CE :                     		
    1872/    10CE : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1873/    10D4 : 2049                		movea.l a1,a0
    1874/    10D6 : D1C6                		add.l 	d6,a0
    1875/    10D8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1876/    10DE :                     ; ----------------------------------------------------------------
    1877/    10DE :                     ; $A9 - LDA #$xx
    1878/    10DE :                     ; ----------------------------------------------------------------
    1879/    10DE :                     
    1880/    10DE :                     loc_16A4:
    1881/    10DE : 1018                		move.b	(a0)+,d0
    1882/    10E0 : 40C5                		move	sr,d5
    1883/    10E2 : 0245 000C           		andi.w	#$C,d5
    1884/    10E6 : 0203 00F3           		andi.b	#$F3,d3
    1885/    10EA : 8645                		or.w	d5,d3
    1886/    10EC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1887/    10F2 :                     ; ----------------------------------------------------------------
    1888/    10F2 :                     
    1889/    10F2 :                     loc_16B6:
    1890/    10F2 : 4246                		clr.w	d6
    1891/    10F4 : 1C18                		move.b	(a0)+,d6
    1892/    10F6 : 1032 6000           		move.b	(a2,d6.w),d0
    1893/    10FA : 40C5                		move	sr,d5
    1894/    10FC : 0245 000C           		andi.w	#$C,d5
    1895/    1100 : 0203 00F3           		andi.b	#$F3,d3
    1896/    1104 : 8645                		or.w	d5,d3
    1897/    1106 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1898/    110C :                     ; ----------------------------------------------------------------
    1899/    110C :                     
    1900/    110C :                     loc_16CE:				; DATA XREF: ROM:00000D06o
    1901/    110C : 4246                		clr.w	d6
    1902/    110E : 1C18                		move.b	(a0)+,d6
    1903/    1110 : DC01                		add.b	d1,d6
    1904/    1112 : 1032 6000           		move.b	(a2,d6.w),d0
    1905/    1116 : 40C5                		move	sr,d5
    1906/    1118 : 0245 000C           		andi.w	#$C,d5
    1907/    111C : 0203 00F3           		andi.b	#$F3,d3
    1908/    1120 : 8645                		or.w	d5,d3
    1909/    1122 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1910/    1128 :                     ; ----------------------------------------------------------------
    1911/    1128 :                     
    1912/    1128 :                     loc_16E8:
    1913/    1128 : 4244                		clr.w	d4
    1914/    112A : 4246                		clr.w	d6
    1915/    112C : 1818                		move.b	(a0)+,d4
    1916/    112E : 1C18                		move.b	(a0)+,d6
    1917/    1130 : 6100 089A           		bsr	addr_Read
    1918/    1134 : 1007                		move.b	d7,d0
    1919/    1136 : 40C5                		move	sr,d5
    1920/    1138 : 0245 000C           		andi.w	#$C,d5
    1921/    113C : 0203 00F3           		andi.b	#$F3,d3
    1922/    1140 : 8645                		or.w	d5,d3
    1923/    1142 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1924/    1148 :                     ; ----------------------------------------------------------------
    1925/    1148 :                     
    1926/    1148 :                     loc_1708:				; DATA XREF: ROM:00000D26o
    1927/    1148 : 4244                		clr.w	d4
    1928/    114A : 1818                		move.b	(a0)+,d4
    1929/    114C : 4246                		clr.w	d6
    1930/    114E : 1C18                		move.b	(a0)+,d6
    1931/    1150 : 4207                		clr.b	d7
    1932/    1152 : D801                		add.b	d1,d4
    1933/    1154 : DD07                		addx.b	d7,d6
    1934/    1156 : 6100 0874           		bsr	addr_Read
    1935/    115A : 1007                		move.b	d7,d0
    1936/    115C : 40C5                		move	sr,d5
    1937/    115E : 0245 000C           		andi.w	#$C,d5
    1938/    1162 : 0203 00F3           		andi.b	#$F3,d3
    1939/    1166 : 8645                		or.w	d5,d3
    1940/    1168 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1941/    116E :                     ; ----------------------------------------------------------------
    1942/    116E :                     
    1943/    116E :                     loc_172E:				; DATA XREF: ROM:00000D16o
    1944/    116E : 4244                		clr.w	d4
    1945/    1170 : 1818                		move.b	(a0)+,d4
    1946/    1172 : 4246                		clr.w	d6
    1947/    1174 : 1C18                		move.b	(a0)+,d6
    1948/    1176 : 4207                		clr.b	d7
    1949/    1178 : D802                		add.b	d2,d4
    1950/    117A : DD07                		addx.b	d7,d6
    1951/    117C : 6100 084E           		bsr	addr_Read
    1952/    1180 : 1007                		move.b	d7,d0
    1953/    1182 : 40C5                		move	sr,d5
    1954/    1184 : 0245 000C           		andi.w	#$C,d5
    1955/    1188 : 0203 00F3           		andi.b	#$F3,d3
    1956/    118C : 8645                		or.w	d5,d3
    1957/    118E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1958/    1194 :                     ; ----------------------------------------------------------------
    1959/    1194 :                     ; LDA (oper,X)
    1960/    1194 :                     
    1961/    1194 :                     loc_1754:
    1962/    1194 : 4244                		clr.w	d4
    1963/    1196 : 4245                		clr.w	d5
    1964/    1198 : 4246                		clr.w	d6
    1965/    119A : 1A18                		move.b	(a0)+,d5
    1966/    119C : DA01                		add.b	d1,d5
    1967/    119E : 1832 5000           		move.b	(a2,d5.w),d4
    1968/    11A2 : DA3C 0001           		add.b	#1,d5
    1969/    11A6 : 1C32 5000           		move.b	(a2,d5.w),d6
    1970/    11AA : 6100 0820           		bsr	addr_Read
    1971/    11AE : 1007                		move.b	d7,d0
    1972/    11B0 : 40C5                		move	sr,d5
    1973/    11B2 : 0245 000C           		andi.w	#$C,d5
    1974/    11B6 : 0203 00F3           		andi.b	#$F3,d3
    1975/    11BA : 8645                		or.w	d5,d3
    1976/    11BC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1977/    11C2 :                     ; ----------------------------------------------------------------
    1978/    11C2 :                     
    1979/    11C2 :                     loc_177E:
    1980/    11C2 : 4244                		clr.w	d4
    1981/    11C4 : 4245                		clr.w	d5
    1982/    11C6 : 4246                		clr.w	d6
    1983/    11C8 : 1A18                		move.b	(a0)+,d5
    1984/    11CA : 1832 5000           		move.b	(a2,d5.w),d4
    1985/    11CE : DA3C 0001           		add.b	#1,d5
    1986/    11D2 : 1C32 5000           		move.b	(a2,d5.w),d6
    1987/    11D6 : 4207                		clr.b	d7
    1988/    11D8 : D802                		add.b	d2,d4
    1989/    11DA : DD07                		addx.b	d7,d6
    1990/    11DC : 6100 07EE           		bsr	addr_Read
    1991/    11E0 : 1007                		move.b	d7,d0
    1992/    11E2 : 40C5                		move	sr,d5
    1993/    11E4 : 0245 000C           		andi.w	#$C,d5
    1994/    11E8 : 0203 00F3           		andi.b	#$F3,d3
    1995/    11EC : 8645                		or.w	d5,d3
    1996/    11EE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1997/    11F4 :                     ; ----------------------------------------------------------------
    1998/    11F4 :                     
    1999/    11F4 :                     loc_17AC:				; DATA XREF: ROM:00000CBAo
    2000/    11F4 : 1218                		move.b	(a0)+,d1
    2001/    11F6 : 40C5                		move	sr,d5
    2002/    11F8 : 0245 000C           		andi.w	#$C,d5
    2003/    11FC : 0203 00F3           		andi.b	#$F3,d3
    2004/    1200 : 8645                		or.w	d5,d3
    2005/    1202 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2006/    1208 :                     ; ----------------------------------------------------------------
    2007/    1208 :                     
    2008/    1208 :                     loc_17BE:				; DATA XREF: ROM:00000CCAo
    2009/    1208 : 4246                		clr.w	d6
    2010/    120A : 1C18                		move.b	(a0)+,d6
    2011/    120C : 1232 6000           		move.b	(a2,d6.w),d1
    2012/    1210 : 40C5                		move	sr,d5
    2013/    1212 : 0245 000C           		andi.w	#$C,d5
    2014/    1216 : 0203 00F3           		andi.b	#$F3,d3
    2015/    121A : 8645                		or.w	d5,d3
    2016/    121C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2017/    1222 :                     ; ----------------------------------------------------------------
    2018/    1222 :                     
    2019/    1222 :                     loc_17d3:				; DATA XREF: ROM:00000D0Ao
    2020/    1222 : 4246                		clr.w	d6
    2021/    1224 : 1C18                		move.b	(a0)+,d6
    2022/    1226 : DC02                		add.b	d2,d6
    2023/    1228 : 1232 6000           		move.b	(a2,d6.w),d1
    2024/    122C : 40C5                		move	sr,d5
    2025/    122E : 0245 000C           		andi.w	#$C,d5
    2026/    1232 : 0203 00F3           		andi.b	#$F3,d3
    2027/    1236 : 8645                		or.w	d5,d3
    2028/    1238 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2029/    123E :                     ; ----------------------------------------------------------------
    2030/    123E :                     
    2031/    123E :                     loc_17F0:				; DATA XREF: ROM:00000CEAo
    2032/    123E : 4244                		clr.w	d4
    2033/    1240 : 1818                		move.b	(a0)+,d4
    2034/    1242 : 4246                		clr.w	d6
    2035/    1244 : 1C18                		move.b	(a0)+,d6
    2036/    1246 : 6100 0784           		bsr	addr_Read
    2037/    124A : 1207                		move.b	d7,d1
    2038/    124C : 40C5                		move	sr,d5
    2039/    124E : 0245 000C           		andi.w	#$C,d5
    2040/    1252 : 0203 00F3           		andi.b	#$F3,d3
    2041/    1256 : 8645                		or.w	d5,d3
    2042/    1258 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2043/    125E :                     ; ----------------------------------------------------------------
    2044/    125E :                     
    2045/    125E :                     loc_1810:				; DATA XREF: ROM:00000D2Ao
    2046/    125E : 4244                		clr.w	d4
    2047/    1260 : 1818                		move.b	(a0)+,d4
    2048/    1262 : 4246                		clr.w	d6
    2049/    1264 : 1C18                		move.b	(a0)+,d6
    2050/    1266 : 4207                		clr.b	d7
    2051/    1268 : D802                		add.b	d2,d4
    2052/    126A : DD07                		addx.b	d7,d6
    2053/    126C : 6100 075E           		bsr	addr_Read
    2054/    1270 : 1207                		move.b	d7,d1
    2055/    1272 : 40C5                		move	sr,d5
    2056/    1274 : 0245 000C           		andi.w	#$C,d5
    2057/    1278 : 0203 00F3           		andi.b	#$F3,d3
    2058/    127C : 8645                		or.w	d5,d3
    2059/    127E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2060/    1284 :                     ; ----------------------------------------------------------------
    2061/    1284 :                     
    2062/    1284 :                     loc_1836:				; DATA XREF: ROM:00000CB2o
    2063/    1284 : 1418                		move.b	(a0)+,d2
    2064/    1286 : 40C5                		move	sr,d5
    2065/    1288 : 0245 000C           		andi.w	#$C,d5
    2066/    128C : 0203 00F3           		andi.b	#$F3,d3
    2067/    1290 : 8645                		or.w	d5,d3
    2068/    1292 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2069/    1298 :                     ; ----------------------------------------------------------------
    2070/    1298 :                     
    2071/    1298 :                     loc_1848:				; DATA XREF: ROM:00000CC2o
    2072/    1298 : 4246                		clr.w	d6
    2073/    129A : 1C18                		move.b	(a0)+,d6
    2074/    129C : 1432 6000           		move.b	(a2,d6.w),d2
    2075/    12A0 : 40C5                		move	sr,d5
    2076/    12A2 : 0245 000C           		andi.w	#$C,d5
    2077/    12A6 : 0203 00F3           		andi.b	#$F3,d3
    2078/    12AA : 8645                		or.w	d5,d3
    2079/    12AC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2080/    12B2 :                     ; ----------------------------------------------------------------
    2081/    12B2 :                     
    2082/    12B2 :                     loc_1860:				; DATA XREF: ROM:00000D02o
    2083/    12B2 : 4246                		clr.w	d6
    2084/    12B4 : 1C18                		move.b	(a0)+,d6
    2085/    12B6 : DC01                		add.b	d1,d6
    2086/    12B8 : 1432 6000           		move.b	(a2,d6.w),d2
    2087/    12BC : 40C5                		move	sr,d5
    2088/    12BE : 0245 000C           		andi.w	#$C,d5
    2089/    12C2 : 0203 00F3           		andi.b	#$F3,d3
    2090/    12C6 : 8645                		or.w	d5,d3
    2091/    12C8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2092/    12CE :                     ; ----------------------------------------------------------------
    2093/    12CE :                     
    2094/    12CE :                     loc_187A:				; DATA XREF: ROM:00000CE2o
    2095/    12CE : 4244                		clr.w	d4
    2096/    12D0 : 1818                		move.b	(a0)+,d4
    2097/    12D2 : 4246                		clr.w	d6
    2098/    12D4 : 1C18                		move.b	(a0)+,d6
    2099/    12D6 : 6100 06F4           		bsr	addr_Read
    2100/    12DA : 1407                		move.b	d7,d2
    2101/    12DC : 40C5                		move	sr,d5
    2102/    12DE : 0245 000C           		andi.w	#$C,d5
    2103/    12E2 : 0203 00F3           		andi.b	#$F3,d3
    2104/    12E6 : 8645                		or.w	d5,d3
    2105/    12E8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2106/    12EE :                     ; ----------------------------------------------------------------
    2107/    12EE :                     
    2108/    12EE :                     loc_189A:				; DATA XREF: ROM:00000D22o
    2109/    12EE : 4244                		clr.w	d4
    2110/    12F0 : 1818                		move.b	(a0)+,d4
    2111/    12F2 : 4246                		clr.w	d6
    2112/    12F4 : 1C18                		move.b	(a0)+,d6
    2113/    12F6 : 4207                		clr.b	d7
    2114/    12F8 : D801                		add.b	d1,d4
    2115/    12FA : DD07                		addx.b	d7,d6
    2116/    12FC : 6100 06CE           		bsr	addr_Read
    2117/    1300 : 1407                		move.b	d7,d2
    2118/    1302 : 40C5                		move	sr,d5
    2119/    1304 : 0245 000C           		andi.w	#$C,d5
    2120/    1308 : 0203 00F3           		andi.b	#$F3,d3
    2121/    130C : 8645                		or.w	d5,d3
    2122/    130E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2123/    1314 :                     ; ----------------------------------------------------------------
    2124/    1314 :                     
    2125/    1314 :                     loc_18C0:				; DATA XREF: ROM:00000B5Ao
    2126/    1314 : E208                		lsr.b	#1,d0
    2127/    1316 : 40C5                		move	sr,d5
    2128/    1318 : 0245 001D           		andi.w	#$1D,d5
    2129/    131C : 0203 00E2           		andi.b	#$E2,d3
    2130/    1320 : 8645                		or.w	d5,d3
    2131/    1322 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2132/    1328 :                     ; ----------------------------------------------------------------
    2133/    1328 :                     
    2134/    1328 :                     loc_18D2:				; DATA XREF: ROM:00000B4Ao
    2135/    1328 : 4246                		clr.w	d6
    2136/    132A : 1C18                		move.b	(a0)+,d6
    2137/    132C : 1E32 6000           		move.b	(a2,d6.w),d7
    2138/    1330 : E20F                		lsr.b	#1,d7
    2139/    1332 : 40C5                		move	sr,d5
    2140/    1334 : 0245 001D           		andi.w	#$1D,d5
    2141/    1338 : 0203 00E2           		andi.b	#$E2,d3
    2142/    133C : 8645                		or.w	d5,d3
    2143/    133E : 1587 6000           		move.b	d7,(a2,d6.w)
    2144/    1342 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2145/    1348 :                     ; ----------------------------------------------------------------
    2146/    1348 :                     
    2147/    1348 :                     loc_18F0:				; DATA XREF: ROM:00000B8Ao
    2148/    1348 : 4246                		clr.w	d6
    2149/    134A : 1C18                		move.b	(a0)+,d6
    2150/    134C : DC01                		add.b	d1,d6
    2151/    134E : 1E32 6000           		move.b	(a2,d6.w),d7
    2152/    1352 : E20F                		lsr.b	#1,d7
    2153/    1354 : 40C5                		move	sr,d5
    2154/    1356 : 0245 001D           		andi.w	#$1D,d5
    2155/    135A : 0203 00E2           		andi.b	#$E2,d3
    2156/    135E : 8645                		or.w	d5,d3
    2157/    1360 : 1587 6000           		move.b	d7,(a2,d6.w)
    2158/    1364 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2159/    136A :                     ; ----------------------------------------------------------------
    2160/    136A :                     
    2161/    136A :                     loc_1910:				; DATA XREF: ROM:00000B6Ao
    2162/    136A : 1818                		move.b	(a0)+,d4
    2163/    136C : 1C18                		move.b	(a0)+,d6
    2164/    136E : E14E                		lsl.w	#8,d6
    2165/    1370 : 1C04                		move.b	d4,d6
    2166/    1372 : 1E32 6000           		move.b	(a2,d6.w),d7
    2167/    1376 : E20F                		lsr.b	#1,d7
    2168/    1378 : 40C5                		move	sr,d5
    2169/    137A : 0245 001D           		andi.w	#$1D,d5
    2170/    137E : 0203 00E2           		andi.b	#$E2,d3
    2171/    1382 : 8645                		or.w	d5,d3
    2172/    1384 : 1587 6000           		move.b	d7,(a2,d6.w)
    2173/    1388 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2174/    138E :                     ; ----------------------------------------------------------------
    2175/    138E :                     
    2176/    138E :                     loc_1932:				; DATA XREF: ROM:00000BAAo
    2177/    138E : 1818                		move.b	(a0)+,d4
    2178/    1390 : 1C18                		move.b	(a0)+,d6
    2179/    1392 : E14E                		lsl.w	#8,d6
    2180/    1394 : 1C04                		move.b	d4,d6
    2181/    1396 : DC41                		add.w	d1,d6
    2182/    1398 : 1E32 6000           		move.b	(a2,d6.w),d7
    2183/    139C : E20F                		lsr.b	#1,d7
    2184/    139E : 40C5                		move	sr,d5
    2185/    13A0 : 0245 001D           		andi.w	#$1D,d5
    2186/    13A4 : 0203 00E2           		andi.b	#$E2,d3
    2187/    13A8 : 8645                		or.w	d5,d3
    2188/    13AA : 1587 6000           		move.b	d7,(a2,d6.w)
    2189/    13AE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2190/    13B4 :                     ; ----------------------------------------------------------------
    2191/    13B4 :                     ; $EA - nop
    2192/    13B4 :                     
    2193/    13B4 :                     loc_1956:
    2194/    13B4 : 4E71                		nop
    2195/    13B6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2196/    13BC :                     ; ----------------------------------------------------------------
    2197/    13BC :                     
    2198/    13BC :                     loc_195C:				; DATA XREF: ROM:00000A56o
    2199/    13BC : 1E18                		move.b	(a0)+,d7
    2200/    13BE : 8007                		or.b	d7,d0
    2201/    13C0 : 40C5                		move	sr,d5
    2202/    13C2 : 0245 000C           		andi.w	#$C,d5
    2203/    13C6 : 0203 00F3           		andi.b	#$F3,d3
    2204/    13CA : 8645                		or.w	d5,d3
    2205/    13CC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2206/    13D2 :                     ; ----------------------------------------------------------------
    2207/    13D2 :                     
    2208/    13D2 :                     loc_1970:				; DATA XREF: ROM:00000A46o
    2209/    13D2 : 4246                		clr.w	d6
    2210/    13D4 : 1C18                		move.b	(a0)+,d6
    2211/    13D6 : 1E32 6000           		move.b	(a2,d6.w),d7
    2212/    13DA : 8007                		or.b	d7,d0
    2213/    13DC : 40C5                		move	sr,d5
    2214/    13DE : 0245 000C           		andi.w	#$C,d5
    2215/    13E2 : 0203 00F3           		andi.b	#$F3,d3
    2216/    13E6 : 8645                		or.w	d5,d3
    2217/    13E8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2218/    13EE :                     ; ----------------------------------------------------------------
    2219/    13EE :                     
    2220/    13EE :                     loc_198A:				; DATA XREF: ROM:00000A86o
    2221/    13EE : 4246                		clr.w	d6
    2222/    13F0 : 1C18                		move.b	(a0)+,d6
    2223/    13F2 : DC01                		add.b	d1,d6
    2224/    13F4 : 1E32 6000           		move.b	(a2,d6.w),d7
    2225/    13F8 : 8007                		or.b	d7,d0
    2226/    13FA : 40C5                		move	sr,d5
    2227/    13FC : 0245 000C           		andi.w	#$C,d5
    2228/    1400 : 0203 00F3           		andi.b	#$F3,d3
    2229/    1404 : 8645                		or.w	d5,d3
    2230/    1406 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2231/    140C :                     ; ----------------------------------------------------------------
    2232/    140C :                     
    2233/    140C :                     loc_19A6:				; DATA XREF: ROM:00000A66o
    2234/    140C : 4244                		clr.w	d4
    2235/    140E : 1818                		move.b	(a0)+,d4
    2236/    1410 : 4246                		clr.w	d6
    2237/    1412 : 1C18                		move.b	(a0)+,d6
    2238/    1414 : 6100 05B6           		bsr	addr_Read
    2239/    1418 : 8007                		or.b	d7,d0
    2240/    141A : 40C5                		move	sr,d5
    2241/    141C : 0245 000C           		andi.w	#$C,d5
    2242/    1420 : 0203 00F3           		andi.b	#$F3,d3
    2243/    1424 : 8645                		or.w	d5,d3
    2244/    1426 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2245/    142C :                     ; ----------------------------------------------------------------
    2246/    142C :                     
    2247/    142C :                     loc_19C6:				; DATA XREF: ROM:00000AA6o
    2248/    142C : 4244                		clr.w	d4
    2249/    142E : 1818                		move.b	(a0)+,d4
    2250/    1430 : 4246                		clr.w	d6
    2251/    1432 : 1C18                		move.b	(a0)+,d6
    2252/    1434 : 4207                		clr.b	d7
    2253/    1436 : D801                		add.b	d1,d4
    2254/    1438 : DD07                		addx.b	d7,d6
    2255/    143A : 6100 0590           		bsr	addr_Read
    2256/    143E : 8007                		or.b	d7,d0
    2257/    1440 : 40C5                		move	sr,d5
    2258/    1442 : 0245 000C           		andi.w	#$C,d5
    2259/    1446 : 0203 00F3           		andi.b	#$F3,d3
    2260/    144A : 8645                		or.w	d5,d3
    2261/    144C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2262/    1452 :                     ; ----------------------------------------------------------------
    2263/    1452 :                     
    2264/    1452 :                     loc_19EC:				; DATA XREF: ROM:00000A96o
    2265/    1452 : 4244                		clr.w	d4
    2266/    1454 : 1818                		move.b	(a0)+,d4
    2267/    1456 : 4246                		clr.w	d6
    2268/    1458 : 1C18                		move.b	(a0)+,d6
    2269/    145A : 4207                		clr.b	d7
    2270/    145C : D802                		add.b	d2,d4
    2271/    145E : DD07                		addx.b	d7,d6
    2272/    1460 : 6100 056A           		bsr	addr_Read
    2273/    1464 : 8007                		or.b	d7,d0
    2274/    1466 : 40C5                		move	sr,d5
    2275/    1468 : 0245 000C           		andi.w	#$C,d5
    2276/    146C : 0203 00F3           		andi.b	#$F3,d3
    2277/    1470 : 8645                		or.w	d5,d3
    2278/    1472 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2279/    1478 :                     ; ----------------------------------------------------------------
    2280/    1478 :                     
    2281/    1478 :                     loc_1A12:
    2282/    1478 : 4244                		clr.w	d4
    2283/    147A : 4245                		clr.w	d5
    2284/    147C : 4246                		clr.w	d6
    2285/    147E : 1A18                		move.b	(a0)+,d5
    2286/    1480 : DA01                		add.b	d1,d5
    2287/    1482 : 1832 5000           		move.b	(a2,d5.w),d4
    2288/    1486 : DA3C 0001           		add.b	#1,d5
    2289/    148A : 1C32 5000           		move.b	(a2,d5.w),d6
    2290/    148E : 6100 053C           		bsr	addr_Read
    2291/    1492 : 8007                		or.b	d7,d0
    2292/    1494 : 40C5                		move	sr,d5
    2293/    1496 : 0245 000C           		andi.w	#$C,d5
    2294/    149A : 0203 00F3           		andi.b	#$F3,d3
    2295/    149E : 8645                		or.w	d5,d3
    2296/    14A0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2297/    14A6 :                     ; ----------------------------------------------------------------
    2298/    14A6 :                     
    2299/    14A6 :                     loc_1A3C:
    2300/    14A6 : 4244                		clr.w	d4
    2301/    14A8 : 4245                		clr.w	d5
    2302/    14AA : 4246                		clr.w	d6
    2303/    14AC : 1A18                		move.b	(a0)+,d5
    2304/    14AE : 1832 5000           		move.b	(a2,d5.w),d4
    2305/    14B2 : DA3C 0001           		add.b	#1,d5
    2306/    14B6 : 1C32 5000           		move.b	(a2,d5.w),d6
    2307/    14BA : 4207                		clr.b	d7
    2308/    14BC : D802                		add.b	d2,d4
    2309/    14BE : DD07                		addx.b	d7,d6
    2310/    14C0 : 6100 050A           		bsr	addr_Read
    2311/    14C4 : 8007                		or.b	d7,d0
    2312/    14C6 : 40C5                		move	sr,d5
    2313/    14C8 : 0245 000C           		andi.w	#$C,d5
    2314/    14CC : 0203 00F3           		andi.b	#$F3,d3
    2315/    14D0 : 8645                		or.w	d5,d3
    2316/    14D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2317/    14D8 :                     ; ----------------------------------------------------------------
    2318/    14D8 :                     
    2319/    14D8 :                     loc_1A6A:				; DATA XREF: ROM:00000B52o
    2320/    14D8 : 4843                		swap	d3
    2321/    14DA : 1580 3000           		move.b	d0,(a2,d3.w)
    2322/    14DE : 5303                		subq.b	#1,d3
    2323/    14E0 : 4843                		swap	d3
    2324/    14E2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2325/    14E8 :                     
    2326/    14E8 :                     ; ----------------------------------------------------------------
    2327/    14E8 :                     ; $08 - PHP
    2328/    14E8 :                     ; ----------------------------------------------------------------
    2329/    14E8 :                     
    2330/    14E8 :                     loc_1A78:
    2331/    14E8 : 3A03                		move.w	d3,d5
    2332/    14EA : 4843                		swap	d3
    2333/    14EC : 1585 3000           		move.b	d5,(a2,d3.w)
    2334/    14F0 : 967C 0001           		sub.w	#1,d3
    2335/    14F4 : 4843                		swap	d3
    2336/    14F6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2337/    14FC :                     ; ----------------------------------------------------------------
    2338/    14FC :                     
    2339/    14FC :                     loc_1A88:
    2340/    14FC : 0683 0001 0000      		addi.l	#$10000,d3
    2341/    1502 : 2A03                		move.l	d3,d5
    2342/    1504 : 4845                		swap	d5
    2343/    1506 : 1032 5000           		move.b	(a2,d5.w),d0
    2344/    150A : 40C5                		move	sr,d5
    2345/    150C : 0245 000C           		andi.w	#$C,d5
    2346/    1510 : 0203 00F3           		andi.b	#$F3,d3
    2347/    1514 : 8645                		or.w	d5,d3
    2348/    1516 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2349/    151C :                     
    2350/    151C :                     ; ----------------------------------------------------------------
    2351/    151C :                     ; $28 - PLP
    2352/    151C :                     ; ----------------------------------------------------------------
    2353/    151C :                     
    2354/    151C :                     loc_1AA6:
    2355/    151C : 4843                		swap	d3
    2356/    151E : D67C 0001           		add.w	#1,d3
    2357/    1522 : 1A32 3000           		move.b	(a2,d3.w),d5
    2358/    1526 : 4843                		swap	d3
    2359/    1528 : 1605                		move.b	d5,d3
    2360/    152A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2361/    1530 :                     ; ----------------------------------------------------------------
    2362/    1530 :                     
    2363/    1530 :                     loc_1AB6:
    2364/    1530 : 46C3                		move	d3,sr
    2365/    1532 : E310                		roxl.b	#1,d0
    2366/    1534 : 40C5                		move	sr,d5
    2367/    1536 : 0245 001D           		andi.w	#$1D,d5
    2368/    153A : 0203 00E2           		andi.b	#$E2,d3
    2369/    153E : 8645                		or.w	d5,d3
    2370/    1540 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2371/    1546 :                     ; ----------------------------------------------------------------
    2372/    1546 :                     
    2373/    1546 :                     loc_1ACA:				; DATA XREF: ROM:00000ACAo
    2374/    1546 : 4246                		clr.w	d6
    2375/    1548 : 1C18                		move.b	(a0)+,d6
    2376/    154A : 1E32 6000           		move.b	(a2,d6.w),d7
    2377/    154E : 46C3                		move	d3,sr
    2378/    1550 : E317                		roxl.b	#1,d7
    2379/    1552 : 40C5                		move	sr,d5
    2380/    1554 : 0245 001D           		andi.w	#$1D,d5
    2381/    1558 : 0203 00E2           		andi.b	#$E2,d3
    2382/    155C : 8645                		or.w	d5,d3
    2383/    155E : 1587 6000           		move.b	d7,(a2,d6.w)
    2384/    1562 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2385/    1568 :                     ; ----------------------------------------------------------------
    2386/    1568 :                     
    2387/    1568 :                     loc_1AEA:				; DATA XREF: ROM:00000B0Ao
    2388/    1568 : 4246                		clr.w	d6
    2389/    156A : 1C18                		move.b	(a0)+,d6
    2390/    156C : DC01                		add.b	d1,d6
    2391/    156E : 1E32 6000           		move.b	(a2,d6.w),d7
    2392/    1572 : 46C3                		move	d3,sr
    2393/    1574 : E317                		roxl.b	#1,d7
    2394/    1576 : 40C5                		move	sr,d5
    2395/    1578 : 0245 001D           		andi.w	#$1D,d5
    2396/    157C : 0203 00E2           		andi.b	#$E2,d3
    2397/    1580 : 8645                		or.w	d5,d3
    2398/    1582 : 1587 6000           		move.b	d7,(a2,d6.w)
    2399/    1586 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2400/    158C :                     ; ----------------------------------------------------------------
    2401/    158C :                     
    2402/    158C :                     loc_1B0C:				; DATA XREF: ROM:00000AEAo
    2403/    158C : 1818                		move.b	(a0)+,d4
    2404/    158E : 1C18                		move.b	(a0)+,d6
    2405/    1590 : E14E                		lsl.w	#8,d6
    2406/    1592 : 1C04                		move.b	d4,d6
    2407/    1594 : 1E32 6000           		move.b	(a2,d6.w),d7
    2408/    1598 : 46C3                		move	d3,sr
    2409/    159A : E317                		roxl.b	#1,d7
    2410/    159C : 40C5                		move	sr,d5
    2411/    159E : 0245 001D           		andi.w	#$1D,d5
    2412/    15A2 : 0203 00E2           		andi.b	#$E2,d3
    2413/    15A6 : 8645                		or.w	d5,d3
    2414/    15A8 : 1587 6000           		move.b	d7,(a2,d6.w)
    2415/    15AC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2416/    15B2 :                     ; ----------------------------------------------------------------
    2417/    15B2 :                     
    2418/    15B2 :                     loc_1B30:				; DATA XREF: ROM:00000B2Ao
    2419/    15B2 : 1818                		move.b	(a0)+,d4
    2420/    15B4 : 1C18                		move.b	(a0)+,d6
    2421/    15B6 : E14E                		lsl.w	#8,d6
    2422/    15B8 : 1C04                		move.b	d4,d6
    2423/    15BA : DC41                		add.w	d1,d6
    2424/    15BC : 1E32 6000           		move.b	(a2,d6.w),d7
    2425/    15C0 : 46C3                		move	d3,sr
    2426/    15C2 : E317                		roxl.b	#1,d7
    2427/    15C4 : 40C5                		move	sr,d5
    2428/    15C6 : 0245 001D           		andi.w	#$1D,d5
    2429/    15CA : 0203 00E2           		andi.b	#$E2,d3
    2430/    15CE : 8645                		or.w	d5,d3
    2431/    15D0 : 1587 6000           		move.b	d7,(a2,d6.w)
    2432/    15D4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2433/    15DA :                     ; ----------------------------------------------------------------
    2434/    15DA :                     
    2435/    15DA :                     loc_1B56:				; DATA XREF: ROM:00000BDAo
    2436/    15DA : 46C3                		move	d3,sr
    2437/    15DC : E210                		roxr.b	#1,d0
    2438/    15DE : 40C5                		move	sr,d5
    2439/    15E0 : 0245 001D           		andi.w	#$1D,d5
    2440/    15E4 : 0203 00E2           		andi.b	#$E2,d3
    2441/    15E8 : 8645                		or.w	d5,d3
    2442/    15EA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2443/    15F0 :                     ; ----------------------------------------------------------------
    2444/    15F0 :                     
    2445/    15F0 :                     loc_1B6A:				; DATA XREF: ROM:00000BCAo
    2446/    15F0 : 4246                		clr.w	d6
    2447/    15F2 : 1C18                		move.b	(a0)+,d6
    2448/    15F4 : 1E32 6000           		move.b	(a2,d6.w),d7
    2449/    15F8 : 46C3                		move	d3,sr
    2450/    15FA : E217                		roxr.b	#1,d7
    2451/    15FC : 40C5                		move	sr,d5
    2452/    15FE : 0245 001D           		andi.w	#$1D,d5
    2453/    1602 : 0203 00E2           		andi.b	#$E2,d3
    2454/    1606 : 8645                		or.w	d5,d3
    2455/    1608 : 1587 6000           		move.b	d7,(a2,d6.w)
    2456/    160C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2457/    1612 :                     ; ----------------------------------------------------------------
    2458/    1612 :                     
    2459/    1612 :                     loc_1B8A:				; DATA XREF: ROM:00000C0Ao
    2460/    1612 : 4246                		clr.w	d6
    2461/    1614 : 1C18                		move.b	(a0)+,d6
    2462/    1616 : DC01                		add.b	d1,d6
    2463/    1618 : 1E32 6000           		move.b	(a2,d6.w),d7
    2464/    161C : 46C3                		move	d3,sr
    2465/    161E : E217                		roxr.b	#1,d7
    2466/    1620 : 40C5                		move	sr,d5
    2467/    1622 : 0245 001D           		andi.w	#$1D,d5
    2468/    1626 : 0203 00E2           		andi.b	#$E2,d3
    2469/    162A : 8645                		or.w	d5,d3
    2470/    162C : 1587 6000           		move.b	d7,(a2,d6.w)
    2471/    1630 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2472/    1636 :                     ; ----------------------------------------------------------------
    2473/    1636 :                     
    2474/    1636 :                     loc_1BAC:				; DATA XREF: ROM:00000BEAo
    2475/    1636 : 1818                		move.b	(a0)+,d4
    2476/    1638 : 1C18                		move.b	(a0)+,d6
    2477/    163A : E14E                		lsl.w	#8,d6
    2478/    163C : 1C04                		move.b	d4,d6
    2479/    163E : 1E32 6000           		move.b	(a2,d6.w),d7
    2480/    1642 : 46C3                		move	d3,sr
    2481/    1644 : E217                		roxr.b	#1,d7
    2482/    1646 : 40C5                		move	sr,d5
    2483/    1648 : 0245 001D           		andi.w	#$1D,d5
    2484/    164C : 0203 00E2           		andi.b	#$E2,d3
    2485/    1650 : 8645                		or.w	d5,d3
    2486/    1652 : 1587 6000           		move.b	d7,(a2,d6.w)
    2487/    1656 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2488/    165C :                     ; ----------------------------------------------------------------
    2489/    165C :                     
    2490/    165C :                     loc_1BD0:				; DATA XREF: ROM:00000C2Ao
    2491/    165C : 1818                		move.b	(a0)+,d4
    2492/    165E : 1C18                		move.b	(a0)+,d6
    2493/    1660 : E14E                		lsl.w	#8,d6
    2494/    1662 : 1C04                		move.b	d4,d6
    2495/    1664 : DC41                		add.w	d1,d6
    2496/    1666 : 1E32 6000           		move.b	(a2,d6.w),d7
    2497/    166A : 46C3                		move	d3,sr
    2498/    166C : E217                		roxr.b	#1,d7
    2499/    166E : 40C5                		move	sr,d5
    2500/    1670 : 0245 001D           		andi.w	#$1D,d5
    2501/    1674 : 0203 00E2           		andi.b	#$E2,d3
    2502/    1678 : 8645                		or.w	d5,d3
    2503/    167A : 1587 6000           		move.b	d7,(a2,d6.w)
    2504/    167E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2505/    1684 :                     
    2506/    1684 :                     ; ----------------------------------------------------------------
    2507/    1684 :                     ; $40 - RTI
    2508/    1684 :                     ; 
    2509/    1684 :                     ; NOTE: Interrupt exit
    2510/    1684 :                     ; ----------------------------------------------------------------
    2511/    1684 :                     
    2512/    1684 :                     loc_1BF6:
    2513/    1684 : 4A6C 0032           		tst.w	cpuFamiVint(a4)
    2514/    1688 : 6720                		beq.s	.nonint
    2515/    168A : 4CEC 2100 0008      		movem.l	famiVintSave(a4),a0/a5
    2516/    1690 : 362C 0028           		move.w	famiVintSave2(a4),d3
    2517/    1694 :                     
    2518/    1694 :                     ; 		movem.l	famiVintSave(a4),d7/a5
    2519/    1694 : 23FC 0000 0552 FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
    2520/    169E : 397C 0000 0032      		move.w	#0,cpuFamiVint(a4)
    2521/    16A4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2522/    16AA :                     
    2523/    16AA :                     .nonint:
    2524/    16AA : 4843                		swap	d3
    2525/    16AC : 7C00                		moveq	#0,d6
    2526/    16AE : 5203                		addq.b	#1,d3
    2527/    16B0 : 1A32 3000           		move.b	(a2,d3.w),d5
    2528/    16B4 : 5203                		addq.b	#1,d3
    2529/    16B6 : 1832 3000           		move.b	(a2,d3.w),d4
    2530/    16BA : 5203                		addq.b	#1,d3
    2531/    16BC : 1C32 3000           		move.b	(a2,d3.w),d6
    2532/    16C0 : E14E                		lsl.w	#8,d6
    2533/    16C2 : 1C04                		move.b	d4,d6
    2534/    16C4 : 4843                		swap	d3
    2535/    16C6 : 1605                		move.b	d5,d3
    2536/    16C8 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2537/    16CE : 2049                		movea.l a1,a0
    2538/    16D0 : D1C6                		add.l 	d6,a0
    2539/    16D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2540/    16D8 :                     
    2541/    16D8 :                     ; ----------------------------------------------------------------
    2542/    16D8 :                     ; $60 - RTS
    2543/    16D8 :                     ; ----------------------------------------------------------------
    2544/    16D8 :                     
    2545/    16D8 :                     loc_1C32:
    2546/    16D8 : 4843                		swap	d3
    2547/    16DA : 7C00                		moveq	#0,d6
    2548/    16DC : 5203                		addq.b	#1,d3
    2549/    16DE : 1832 3000           		move.b	(a2,d3.w),d4
    2550/    16E2 : 5203                		addq.b	#1,d3
    2551/    16E4 : 1C32 3000           		move.b	(a2,d3.w),d6
    2552/    16E8 : E14E                		lsl.w	#8,d6
    2553/    16EA : 1C04                		move.b	d4,d6
    2554/    16EC : 4843                		swap	d3
    2555/    16EE : 5246                		addq.w	#1,d6
    2556/    16F0 :                     
    2557/    16F0 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2558/    16F6 : 2049                		movea.l a1,a0
    2559/    16F8 : D1C6                		add.l 	d6,a0
    2560/    16FA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2561/    1700 :                     ; ----------------------------------------------------------------
    2562/    1700 :                     
    2563/    1700 :                     loc_1C52:
    2564/    1700 : 1E18                		move.b	(a0)+,d7
    2565/    1702 : 0A03 0011           		eori.b	#$11,d3
    2566/    1706 : 0003 0004           		ori.b	#4,d3
    2567/    170A : 46C3                		move	d3,sr
    2568/    170C : 9107                		subx.b	d7,d0
    2569/    170E : 40C3                		move	sr,d3
    2570/    1710 : 0A03 0011           		eori.b	#$11,d3
    2571/    1714 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2572/    171A :                     ; ----------------------------------------------------------------
    2573/    171A :                     
    2574/    171A :                     loc_1C6A:
    2575/    171A : 4246                		clr.w	d6
    2576/    171C : 1C18                		move.b	(a0)+,d6
    2577/    171E : 1E32 6000           		move.b	(a2,d6.w),d7
    2578/    1722 : 0A03 0011           		eori.b	#$11,d3
    2579/    1726 : 0003 0004           		ori.b	#4,d3
    2580/    172A : 46C3                		move	d3,sr
    2581/    172C : 9107                		subx.b	d7,d0
    2582/    172E : 40C3                		move	sr,d3
    2583/    1730 : 0A03 0011           		eori.b	#$11,d3
    2584/    1734 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2585/    173A :                     ; ----------------------------------------------------------------
    2586/    173A :                     
    2587/    173A :                     loc_1C88:				; DATA XREF: ROM:00000E06o
    2588/    173A : 4246                		clr.w	d6
    2589/    173C : 1C18                		move.b	(a0)+,d6
    2590/    173E : DC01                		add.b	d1,d6
    2591/    1740 : 1E32 6000           		move.b	(a2,d6.w),d7
    2592/    1744 : 0A03 0011           		eori.b	#$11,d3
    2593/    1748 : 0003 0004           		ori.b	#4,d3
    2594/    174C : 46C3                		move	d3,sr
    2595/    174E : 9107                		subx.b	d7,d0
    2596/    1750 : 40C3                		move	sr,d3
    2597/    1752 : 0A03 0011           		eori.b	#$11,d3
    2598/    1756 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2599/    175C :                     ; ----------------------------------------------------------------
    2600/    175C :                     
    2601/    175C :                     loc_1CA8:				; DATA XREF: ROM:00000DE6o
    2602/    175C : 4244                		clr.w	d4
    2603/    175E : 1818                		move.b	(a0)+,d4
    2604/    1760 : 4246                		clr.w	d6
    2605/    1762 : 1C18                		move.b	(a0)+,d6
    2606/    1764 : 6100 0266           		bsr	addr_Read
    2607/    1768 : 0A03 0011           		eori.b	#$11,d3
    2608/    176C : 0003 0004           		ori.b	#4,d3
    2609/    1770 : 46C3                		move	d3,sr
    2610/    1772 : 9107                		subx.b	d7,d0
    2611/    1774 : 40C3                		move	sr,d3
    2612/    1776 : 0A03 0011           		eori.b	#$11,d3
    2613/    177A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2614/    1780 :                     ; ----------------------------------------------------------------
    2615/    1780 :                     
    2616/    1780 :                     loc_1CCC:				; DATA XREF: ROM:00000E26o
    2617/    1780 : 4244                		clr.w	d4
    2618/    1782 : 1818                		move.b	(a0)+,d4
    2619/    1784 : 4246                		clr.w	d6
    2620/    1786 : 1C18                		move.b	(a0)+,d6
    2621/    1788 : 4207                		clr.b	d7
    2622/    178A : D801                		add.b	d1,d4
    2623/    178C : DD07                		addx.b	d7,d6
    2624/    178E : 6100 023C           		bsr	addr_Read
    2625/    1792 : 0A03 0011           		eori.b	#$11,d3
    2626/    1796 : 0003 0004           		ori.b	#4,d3
    2627/    179A : 46C3                		move	d3,sr
    2628/    179C : 9107                		subx.b	d7,d0
    2629/    179E : 40C3                		move	sr,d3
    2630/    17A0 : 0A03 0011           		eori.b	#$11,d3
    2631/    17A4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2632/    17AA :                     ; ----------------------------------------------------------------
    2633/    17AA :                     
    2634/    17AA :                     loc_1CF6:
    2635/    17AA : 4244                		clr.w	d4
    2636/    17AC : 4245                		clr.w	d5
    2637/    17AE : 4207                		clr.b	d7
    2638/    17B0 : 1818                		move.b	(a0)+,d4
    2639/    17B2 : 1C18                		move.b	(a0)+,d6
    2640/    17B4 : D802                		add.b	d2,d4
    2641/    17B6 : DD07                		addx.b	d7,d6
    2642/    17B8 : 6100 0212           		bsr	addr_Read
    2643/    17BC : 0A03 0011           		eori.b	#$11,d3
    2644/    17C0 : 0003 0004           		ori.b	#4,d3
    2645/    17C4 : 46C3                		move	d3,sr
    2646/    17C6 : 9107                		subx.b	d7,d0
    2647/    17C8 : 40C3                		move	sr,d3
    2648/    17CA : 0A03 0011           		eori.b	#$11,d3
    2649/    17CE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2650/    17D4 :                     ; ----------------------------------------------------------------
    2651/    17D4 :                     
    2652/    17D4 :                     loc_1D20:
    2653/    17D4 : 4244                		clr.w	d4
    2654/    17D6 : 4245                		clr.w	d5
    2655/    17D8 : 4246                		clr.w	d6
    2656/    17DA : 1A18                		move.b	(a0)+,d5
    2657/    17DC : DA01                		add.b	d1,d5
    2658/    17DE : 1832 5000           		move.b	(a2,d5.w),d4
    2659/    17E2 : DA3C 0001           		add.b	#1,d5
    2660/    17E6 : 1C32 5000           		move.b	(a2,d5.w),d6
    2661/    17EA :                     
    2662/    17EA : 6100 01E0           		bsr	addr_Read
    2663/    17EE : 0A03 0011           		eori.b	#$11,d3
    2664/    17F2 : 0003 0004           		ori.b	#4,d3
    2665/    17F6 : 46C3                		move	d3,sr
    2666/    17F8 : 9107                		subx.b	d7,d0
    2667/    17FA : 40C3                		move	sr,d3
    2668/    17FC : 0A03 0011           		eori.b	#$11,d3
    2669/    1800 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2670/    1806 :                     ; ----------------------------------------------------------------
    2671/    1806 :                     
    2672/    1806 :                     loc_1D4E:
    2673/    1806 : 4244                		clr.w	d4
    2674/    1808 : 4245                		clr.w	d5
    2675/    180A : 4246                		clr.w	d6
    2676/    180C : 1A18                		move.b	(a0)+,d5
    2677/    180E : 1832 5000           		move.b	(a2,d5.w),d4
    2678/    1812 : DA3C 0001           		add.b	#1,d5
    2679/    1816 : 1C32 5000           		move.b	(a2,d5.w),d6
    2680/    181A : 4207                		clr.b	d7
    2681/    181C : D802                		add.b	d2,d4
    2682/    181E : DD07                		addx.b	d7,d6
    2683/    1820 : 6100 01AA           		bsr	addr_Read
    2684/    1824 : 0A03 0011           		eori.b	#$11,d3
    2685/    1828 : 0003 0004           		ori.b	#4,d3
    2686/    182C : 46C3                		move	d3,sr
    2687/    182E : 9107                		subx.b	d7,d0
    2688/    1830 : 40C3                		move	sr,d3
    2689/    1832 : 0A03 0011           		eori.b	#$11,d3
    2690/    1836 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2691/    183C :                     ; ----------------------------------------------------------------
    2692/    183C :                     
    2693/    183C :                     loc_1D80:
    2694/    183C : 0003 0011           		ori.b	#$11,d3
    2695/    1840 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2696/    1846 :                     
    2697/    1846 :                     ; ----------------------------------------------------------------
    2698/    1846 :                     ; SED - Set Decimal mode
    2699/    1846 :                     ; ----------------------------------------------------------------
    2700/    1846 :                     
    2701/    1846 :                     loc_1D88:
    2702/    1846 : 397C 0001 0038      		move.w	#1,cpuModeDec(a4)
    2703/    184C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2704/    1852 :                     
    2705/    1852 :                     ; ----------------------------------------------------------------
    2706/    1852 :                     ; SEI - Set Interrupt disable
    2707/    1852 :                     ; ----------------------------------------------------------------
    2708/    1852 :                     
    2709/    1852 :                     loc_1D92:
    2710/    1852 : 397C 0001 003C      		move.w	#1,cpuModeIntDis(a4)
    2711/    1858 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2712/    185E :                     
    2713/    185E :                     ; ----------------------------------------------------------------
    2714/    185E :                     
    2715/    185E :                     loc_1D9C:
    2716/    185E : 4244                		clr.w	d4
    2717/    1860 : 1818                		move.b	(a0)+,d4
    2718/    1862 : 1580 4000           		move.b	d0,(a2,d4.w)
    2719/    1866 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2720/    186C :                     ; ----------------------------------------------------------------
    2721/    186C :                     
    2722/    186C :                     loc_1DA8:
    2723/    186C : 4244                		clr.w	d4
    2724/    186E : 1818                		move.b	(a0)+,d4
    2725/    1870 : D801                		add.b	d1,d4
    2726/    1872 : 1580 4000           		move.b	d0,(a2,d4.w)
    2727/    1876 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2728/    187C :                     ; ----------------------------------------------------------------
    2729/    187C :                     
    2730/    187C :                     loc_1DB6:				; DATA XREF: ROM:00000C66o
    2731/    187C : 4244                		clr.w	d4
    2732/    187E : 1818                		move.b	(a0)+,d4
    2733/    1880 : 4246                		clr.w	d6
    2734/    1882 : 1C18                		move.b	(a0)+,d6
    2735/    1884 : 1E00                		move.b	d0,d7
    2736/    1886 : 6000 022A           		bra	addr_Write
    2737/    188A :                     ; ----------------------------------------------------------------
    2738/    188A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2739/    1890 :                     ; ----------------------------------------------------------------
    2740/    1890 :                     
    2741/    1890 :                     loc_1DCA:
    2742/    1890 : 4244                		clr.w	d4
    2743/    1892 : 1818                		move.b	(a0)+,d4
    2744/    1894 : 4246                		clr.w	d6
    2745/    1896 : 1C18                		move.b	(a0)+,d6
    2746/    1898 : 4207                		clr.b	d7
    2747/    189A : D801                		add.b	d1,d4
    2748/    189C : DD07                		addx.b	d7,d6
    2749/    189E : 1E00                		move.b	d0,d7
    2750/    18A0 : 6000 0210           		bra	addr_Write
    2751/    18A4 :                     ; ----------------------------------------------------------------
    2752/    18A4 :                     
    2753/    18A4 :                     loc_1DE0:
    2754/    18A4 : 4244                		clr.w	d4
    2755/    18A6 : 1818                		move.b	(a0)+,d4
    2756/    18A8 : 4246                		clr.w	d6
    2757/    18AA : 1C18                		move.b	(a0)+,d6
    2758/    18AC : 4207                		clr.b	d7
    2759/    18AE : D802                		add.b	d2,d4
    2760/    18B0 : DD07                		addx.b	d7,d6
    2761/    18B2 : 1E00                		move.b	d0,d7
    2762/    18B4 : 6000 01FC           		bra	addr_Write
    2763/    18B8 :                     ; ----------------------------------------------------------------
    2764/    18B8 :                     ; STA (oper,X)
    2765/    18B8 :                     
    2766/    18B8 :                     loc_1DF6:
    2767/    18B8 : 4245                		clr.w	d5
    2768/    18BA : 4244                		clr.w	d4
    2769/    18BC : 4246                		clr.w	d6
    2770/    18BE : 1A18                		move.b	(a0)+,d5
    2771/    18C0 : DA01                		add.b	d1,d5
    2772/    18C2 : 1832 5000           		move.b	(a2,d5.w),d4
    2773/    18C6 : DA3C 0001           		add.b	#1,d5
    2774/    18CA : 1C32 5000           		move.b	(a2,d5.w),d6
    2775/    18CE : 1E00                		move.b	d0,d7
    2776/    18D0 : 6000 01E0           		bra	addr_Write
    2777/    18D4 :                     ; ----------------------------------------------------------------
    2778/    18D4 :                     
    2779/    18D4 :                     loc_1E10:
    2780/    18D4 : 4244                		clr.w	d4
    2781/    18D6 : 4245                		clr.w	d5
    2782/    18D8 : 4246                		clr.w	d6
    2783/    18DA : 1A18                		move.b	(a0)+,d5
    2784/    18DC : 1832 5000           		move.b	(a2,d5.w),d4
    2785/    18E0 : DA3C 0001           		add.b	#1,d5
    2786/    18E4 : 1C32 5000           		move.b	(a2,d5.w),d6
    2787/    18E8 : 4207                		clr.b	d7
    2788/    18EA : D802                		add.b	d2,d4
    2789/    18EC : DD07                		addx.b	d7,d6
    2790/    18EE : 1E00                		move.b	d0,d7
    2791/    18F0 : 6000 01C0           		bra	addr_Write
    2792/    18F4 :                     ; ----------------------------------------------------------------
    2793/    18F4 :                     
    2794/    18F4 :                     loc_1E2E:
    2795/    18F4 : 4244                		clr.w	d4
    2796/    18F6 : 1818                		move.b	(a0)+,d4
    2797/    18F8 : 1581 4000           		move.b	d1,(a2,d4.w)
    2798/    18FC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2799/    1902 :                     ; ----------------------------------------------------------------
    2800/    1902 :                     
    2801/    1902 :                     loc_1E3A:
    2802/    1902 : 4244                		clr.w	d4
    2803/    1904 : 1818                		move.b	(a0)+,d4
    2804/    1906 : D802                		add.b	d2,d4
    2805/    1908 : 1581 4000           		move.b	d1,(a2,d4.w)
    2806/    190C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2807/    1912 :                     ; ----------------------------------------------------------------
    2808/    1912 :                     
    2809/    1912 :                     loc_1E48:
    2810/    1912 : 4244                		clr.w	d4
    2811/    1914 : 1818                		move.b	(a0)+,d4
    2812/    1916 : 4246                		clr.w	d6
    2813/    1918 : 1C18                		move.b	(a0)+,d6
    2814/    191A : 1E01                		move.b	d1,d7
    2815/    191C : 6000 0194           		bra	addr_Write
    2816/    1920 :                     ; ----------------------------------------------------------------
    2817/    1920 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2818/    1926 :                     ; ----------------------------------------------------------------
    2819/    1926 :                     
    2820/    1926 :                     loc_1E5C:
    2821/    1926 : 4244                		clr.w	d4
    2822/    1928 : 1818                		move.b	(a0)+,d4
    2823/    192A : 1582 4000           		move.b	d2,(a2,d4.w)
    2824/    192E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2825/    1934 :                     ; ----------------------------------------------------------------
    2826/    1934 :                     
    2827/    1934 :                     loc_1E68:
    2828/    1934 : 4244                		clr.w	d4
    2829/    1936 : 1818                		move.b	(a0)+,d4
    2830/    1938 : D801                		add.b	d1,d4
    2831/    193A : 1582 4000           		move.b	d2,(a2,d4.w)
    2832/    193E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2833/    1944 :                     ; ----------------------------------------------------------------
    2834/    1944 :                     
    2835/    1944 :                     loc_1E76:
    2836/    1944 : 4244                		clr.w	d4
    2837/    1946 : 1818                		move.b	(a0)+,d4
    2838/    1948 : 4246                		clr.w	d6
    2839/    194A : 1C18                		move.b	(a0)+,d6
    2840/    194C : 1E02                		move.b	d2,d7
    2841/    194E : 6000 0162           		bra	addr_Write
    2842/    1952 :                     ; ----------------------------------------------------------------
    2843/    1952 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2844/    1958 :                     ; ----------------------------------------------------------------
    2845/    1958 :                     
    2846/    1958 :                     loc_1E8A:
    2847/    1958 : 1200                		move.b	d0,d1
    2848/    195A : 40C5                		move	sr,d5
    2849/    195C : 0245 000C           		andi.w	#$C,d5
    2850/    1960 : 0203 00F3           		andi.b	#$F3,d3
    2851/    1964 : 8645                		or.w	d5,d3
    2852/    1966 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2853/    196C :                     ; ----------------------------------------------------------------
    2854/    196C :                     
    2855/    196C :                     loc_1E9C:
    2856/    196C : 1400                		move.b	d0,d2
    2857/    196E : 40C5                		move	sr,d5
    2858/    1970 : 0245 000C           		andi.w	#$C,d5
    2859/    1974 : 0203 00F3           		andi.b	#$F3,d3
    2860/    1978 : 8645                		or.w	d5,d3
    2861/    197A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2862/    1980 :                     ; ----------------------------------------------------------------
    2863/    1980 :                     ; TSX
    2864/    1980 :                     
    2865/    1980 :                     loc_1EAE:
    2866/    1980 : 4843                		swap	d3
    2867/    1982 : 1203                		move.b	d3,d1
    2868/    1984 : 4843                		swap	d3
    2869/    1986 : 40C5                		move	sr,d5
    2870/    1988 : 0245 000C           		andi.w	#$C,d5
    2871/    198C : 0203 00F3           		andi.b	#$F3,d3
    2872/    1990 : 8645                		or.w	d5,d3
    2873/    1992 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2874/    1998 :                     ; ----------------------------------------------------------------
    2875/    1998 :                     
    2876/    1998 :                     loc_1EC4:
    2877/    1998 : 1001                		move.b	d1,d0
    2878/    199A : 40C5                		move	sr,d5
    2879/    199C : 0245 000C           		andi.w	#$C,d5
    2880/    19A0 : 0203 00F3           		andi.b	#$F3,d3
    2881/    19A4 : 8645                		or.w	d5,d3
    2882/    19A6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2883/    19AC :                     ; ----------------------------------------------------------------
    2884/    19AC :                     
    2885/    19AC :                     loc_1Ed3:
    2886/    19AC : 4843                		swap	d3
    2887/    19AE : 1601                		move.b	d1,d3
    2888/    19B0 : 4843                		swap	d3
    2889/    19B2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2890/    19B8 :                     ; ----------------------------------------------------------------
    2891/    19B8 :                     
    2892/    19B8 :                     loc_1EE0:
    2893/    19B8 : 1002                		move.b	d2,d0
    2894/    19BA : 40C5                		move	sr,d5
    2895/    19BC : 0245 000C           		andi.w	#$C,d5
    2896/    19C0 : 0203 00F3           		andi.b	#$F3,d3
    2897/    19C4 : 8645                		or.w	d5,d3
    2898/    19C6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2899/    19CC :                     
    2900/    19CC :                     ; ====================================================================
    2901/    19CC :                     ; ----------------------------------------------------------------
    2902/    19CC :                     ; Read request
    2903/    19CC :                     ; 
    2904/    19CC :                     ; d6 - XX00
    2905/    19CC :                     ; d4 - 00XX
    2906/    19CC :                     ; ----------------------------------------------------------------
    2907/    19CC :                     
    2908/    19CC :                     addr_Read:
    2909/    19CC : 4A06                		tst.b	d6		; $8000
    2910/    19CE : 6B1A                		bmi	rdFrom_PRG
    2911/    19D0 :                     	; TODO: $6000-$7FFF
    2912/    19D0 : BC3C 0040           		cmp.b	#$40,d6		; $4000
    2913/    19D4 : 6C22                		bge	rdFrom_APU
    2914/    19D6 : BC3C 0020           		cmp.b	#$20,d6		; $2000
    2915/    19DA : 6C52                		bge	rdFrom_PPU
    2916/    19DC :                     
    2917/    19DC :                     ; ----------------------------------------------------------------
    2918/    19DC :                     
    2919/    19DC :                     rdFrom_RAM:
    2920/    19DC : E14E                		lsl.w	#8,d6
    2921/    19DE : 1C04                		move.b	d4,d6
    2922/    19E0 : 0246 07FF           		andi.w	#$7FF,d6
    2923/    19E4 : 1E32 6000           		move.b	(a2,d6.w),d7
    2924/    19E8 : 4E75                		rts
    2925/    19EA :                     ; ----------------------------------------------------------------
    2926/    19EA :                     
    2927/    19EA :                     rdFrom_PRG:
    2928/    19EA : E14E                		lsl.w	#8,d6
    2929/    19EC : 1C04                		move.b	d4,d6
    2930/    19EE : 0246 7FFF           		andi.w	#$7FFF,d6
    2931/    19F2 : 1E31 6000           		move.b	(a1,d6.w),d7
    2932/    19F6 : 4E75                		rts
    2933/    19F8 :                     ; ----------------------------------------------------------------
    2934/    19F8 :                     
    2935/    19F8 :                     rdFrom_APU:
    2936/    19F8 : 0C04 001F           		cmpi.b	#$1F,d4
    2937/    19FC : 6200 0010           		bhi.w	loc_23A6
    2938/    1A00 :                     
    2939/    1A00 : B83C 0016           		cmp.b	#$16,d4		; $4016
    2940/    1A04 : 670C                		beq.s	APU_Input_1
    2941/    1A06 : B83C 0017           		cmp.b	#$17,d4		; $4017
    2942/    1A0A : 6714                		beq.s	APU_Input_2
    2943/    1A0C :                     
    2944/    1A0C :                     ; ----------------------------------------------------------------
    2945/    1A0C :                     
    2946/    1A0C :                     APU_Rd_Null:
    2947/    1A0C : 4E75                		rts
    2948/    1A0E :                     
    2949/    1A0E :                     ; ----------------------------------------------------------------
    2950/    1A0E :                     
    2951/    1A0E :                     loc_23A6:
    2952/    1A0E : 3E03                		move.w	d3,d7
    2953/    1A10 : 4E75                		rts
    2954/    1A12 :                     
    2955/    1A12 :                     ; ----------------------------------------------------------------
    2956/    1A12 :                     
    2957/    1A12 :                     APU_Input_1:
    2958/    1A12 : 3E2C 0034           		move.w	cpuInputData(a4),d7
    2959/    1A16 : 0247 0001           		andi.w	#1,d7
    2960/    1A1A : E2EC 0034           		lsr	cpuInputData(a4)
    2961/    1A1E : 4E75                		rts
    2962/    1A20 :                     ; ----------------------------------------------------------------
    2963/    1A20 :                     
    2964/    1A20 :                     APU_Input_2:
    2965/    1A20 : 3E2C 0036           		move.w	cpuInputData+2(a4),d7
    2966/    1A24 : 0247 0001           		andi.w	#1,d7
    2967/    1A28 : E2EC 0036           		lsr	cpuInputData+2(a4)
    2968/    1A2C : 4E75                		rts
    2969/    1A2E :                     ; ----------------------------------------------------------------
    2970/    1A2E :                     
    2971/    1A2E :                     rdFrom_PPU:
    2972/    1A2E : 0244 0007           		andi.w	#7,d4
    2973/    1A32 : D844                		add.w	d4,d4
    2974/    1A34 : 383B 4006           		move.w	off_23D4(pc,d4.w),d4
    2975/    1A38 : 4EFB 4002           		jmp	off_23D4(pc,d4.w)
    2976/    1A3C :                     ; ----------------------------------------------------------------
    2977/    1A3C : 0010                off_23D4:	dc.w loc_23F4-off_23D4		; $2000
    2978/    1A3E : 0010                		dc.w loc_23F4-off_23D4		; $2001
    2979/    1A40 : 0016                		dc.w rdPPU_Status-off_23D4	; $2002
    2980/    1A42 : 0010                		dc.w loc_23F4-off_23D4		; $2003
    2981/    1A44 : 005C                		dc.w return_241A-off_23D4	; $2004
    2982/    1A46 : 0010                		dc.w loc_23F4-off_23D4		; $2005
    2983/    1A48 : 0010                		dc.w loc_23F4-off_23D4		; $2006
    2984/    1A4A : 005E                		dc.w rdPPU_Data-off_23D4	; $2007
    2985/    1A4C :                     ; ----------------------------------------------------------------
    2986/    1A4C :                     
    2987/    1A4C :                     loc_23F4:
    2988/    1A4C : 3E31 3000           		move.w	(a1,d3.w),d7
    2989/    1A50 : 4E75                		rts
    2990/    1A52 :                     ; ----------------------------------------------------------------
    2991/    1A52 :                     
    2992/    1A52 :                     rdPPU_Status:
    2993/    1A52 : 397C 0000 004E      		move.w	#0,ppuAddrLatch(a4)
    2994/    1A58 : 3E2C 0054           		move.w	ppuStatus(a4),d7
    2995/    1A5C : 397C 0000 0054      		move.w	#0,ppuStatus(a4)
    2996/    1A62 :                     
    2997/    1A62 :                     	; sprite 0 beam hit
    2998/    1A62 : 46FC 2700           		move.w	#$2700,sr
    2999/    1A66 : 382C 004C           		move.w	ppuSp0Ypos(a4),d4
    3000/    1A6A : 3A2E 0008           		move.w	8(a6),d5
    3001/    1A6E : E04D                		lsr.w	#8,d5
    3002/    1A70 : B805                		cmp.b	d5,d4
    3003/    1A72 : 6504                		bcs.s	return_2418
    3004/    1A74 : 0047 0040           		ori.w	#$40,d7
    3005/    1A78 :                     return_2418:
    3006/    1A78 : 382C 0056           		move.w	vdpHintSp0(a4),d4
    3007/    1A7C : 6704                		beq.s	.no_hit
    3008/    1A7E : 0047 0040           		ori.w	#$40,d7
    3009/    1A82 :                     ; 		clr.w	vdpHintSp0(a4)
    3010/    1A82 :                     .no_hit:
    3011/    1A82 : 3839 00C0 0004      		move.w	(vdp_ctrl),d4
    3012/    1A88 : 0804 0003           		btst	#bitVint,d4
    3013/    1A8C : 6704                		beq.s	.novflag
    3014/    1A8E : 0047 0080           		ori.w	#$80,d7
    3015/    1A92 :                     .novflag:
    3016/    1A92 : 46FC 2000           		move.w	#$2000,sr
    3017/    1A96 : 4E75                		rts
    3018/    1A98 :                     ; ----------------------------------------------------------------
    3019/    1A98 :                     
    3020/    1A98 :                     return_241A:				; DATA XREF: ROM:000023E4o
    3021/    1A98 : 4E75                		rts
    3022/    1A9A :                     ; ----------------------------------------------------------------
    3023/    1A9A :                     
    3024/    1A9A :                     rdPPU_Data:
    3025/    1A9A : 3E2C 0048           		move.w	ppuDataLast(a4),d7
    3026/    1A9E : 382C 0046           		move.w	ppuAddrBase(a4),d4
    3027/    1AA2 : 1973 4000 0049      		move.b	(a3,d4.w),ppuDataLast+1(a4)
    3028/    1AA8 : 382C 0044           		move.w	ppuAddrIncr(a4),d4
    3029/    1AAC : D96C 0046           		add.w	d4,ppuAddrBase(a4)
    3030/    1AB0 : 4E75                		rts
    3031/    1AB2 :                     
    3032/    1AB2 :                     ; ====================================================================
    3033/    1AB2 :                     ; ----------------------------------------------------------------
    3034/    1AB2 :                     ; Write request
    3035/    1AB2 :                     ; 
    3036/    1AB2 :                     ; d6 - XX00
    3037/    1AB2 :                     ; d4 - 00XX
    3038/    1AB2 :                     ; d7 - data
    3039/    1AB2 :                     ; ----------------------------------------------------------------
    3040/    1AB2 :                     
    3041/    1AB2 :                     addr_Write:
    3042/    1AB2 : 4A06                		tst.b	d6		; $8000
    3043/    1AB4 : 6B20                		bmi	wrTo_PRG
    3044/    1AB6 :                     	; TODO: $6000-$7FFF
    3045/    1AB6 : BC3C 0040           		cmp.b	#$40,d6		; $4000
    3046/    1ABA : 6C52                		bge	wrTo_APU
    3047/    1ABC : BC3C 0020           		cmp.b	#$20,d6		; $2000
    3048/    1AC0 : 6C00 0168           		bge	wrTo_PPU
    3049/    1AC4 :                     
    3050/    1AC4 :                     ; ====================================================================
    3051/    1AC4 :                     ; ----------------------------------------------------------------
    3052/    1AC4 :                     ; WRITE request to RAM
    3053/    1AC4 :                     ; ----------------------------------------------------------------
    3054/    1AC4 :                     
    3055/    1AC4 :                     wrTo_RAM:
    3056/    1AC4 : E14E                		lsl.w	#8,d6
    3057/    1AC6 : 1C04                		move.b	d4,d6
    3058/    1AC8 : 0246 07FF           		andi.w	#$7FF,d6
    3059/    1ACC : 1587 6000           		move.b	d7,(a2,d6.w)
    3060/    1AD0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3061/    1AD6 :                     
    3062/    1AD6 :                     ; ====================================================================
    3063/    1AD6 :                     ; ----------------------------------------------------------------
    3064/    1AD6 :                     ; WRITE request to ROM area, mappers
    3065/    1AD6 :                     ; ----------------------------------------------------------------
    3066/    1AD6 :                     
    3067/    1AD6 :                     wrTo_PRG:
    3068/    1AD6 : 0C6C 0003 0030      		cmp.w	#3,cpuMapper(a4)
    3069/    1ADC : 6706                		beq.s	.mapper_3
    3070/    1ADE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3071/    1AE4 :                     
    3072/    1AE4 :                     ; --------------------------------------------------------
    3073/    1AE4 :                     ; Mapper $03, CNROM
    3074/    1AE4 :                     ; 
    3075/    1AE4 :                     ; Bank select ($8000-$FFFF)
    3076/    1AE4 :                     ; 
    3077/    1AE4 :                     ; 7  bit  0
    3078/    1AE4 :                     ; ---- ----
    3079/    1AE4 :                     ; xxDD xxCC
    3080/    1AE4 :                     ;   ||   ||
    3081/    1AE4 :                     ;   ||   ++- Select 8 KB CHR ROM bank for PPU $0000-$1FFF
    3082/    1AE4 :                     ;   ++------ Security diodes config
    3083/    1AE4 :                     ; --------------------------------------------------------
    3084/    1AE4 :                     
    3085/    1AE4 :                     .mapper_3:
    3086/    1AE4 : 2F0C                		move.l	a4,-(sp)
    3087/    1AE6 : 2A6C 0004           		movea.l	emuChrRom(a4),a5
    3088/    1AEA : 3807                		move.w	d7,d4
    3089/    1AEC : C87C 0003           		and.w	#%11,d4
    3090/    1AF0 : E14C                		lsl.w	#8,d4
    3091/    1AF2 : EB4C                		lsl.w	#5,d4
    3092/    1AF4 : DAC4                		adda	d4,a5
    3093/    1AF6 : 284B                		move.l	a3,a4
    3094/    1AF8 : 383C 07FE           		move.w	#($1FFF/4)-1,d4
    3095/    1AFC :                     .copychr:
    3096/    1AFC : 28DD                		move.l	(a5)+,(a4)+
    3097/    1AFE : 51CC FFFC           		dbf	d4,.copychr
    3098/    1B02 : 285F                		move.l	(sp)+,a4
    3099/    1B04 : 6100 05AA           		bsr	Nemul_LoadChr
    3100/    1B08 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3101/    1B0E :                     
    3102/    1B0E :                     ; ====================================================================
    3103/    1B0E :                     ; ----------------------------------------------------------------
    3104/    1B0E :                     ; WRITE to APU
    3105/    1B0E :                     ; ----------------------------------------------------------------
    3106/    1B0E :                     
    3107/    1B0E :                     wrTo_APU:
    3108/    1B0E : 0C04 001F           		cmpi.b	#$1F,d4
    3109/    1B12 : 624A                		bhi.s	APU_Null
    3110/    1B14 : D844                		add.w	d4,d4
    3111/    1B16 : 383B 4006           		move.w	off_2866(pc,d4.w),d4
    3112/    1B1A : 4EFB 4002           		jmp	off_2866(pc,d4.w)
    3113/    1B1E :                     
    3114/    1B1E :                     ; ----------------------------------------------------------------
    3115/    1B1E : 0040                off_2866:	dc.w APU_Null-off_2866
    3116/    1B20 : 0040                		dc.w APU_Null-off_2866
    3117/    1B22 : 0040                		dc.w APU_Null-off_2866
    3118/    1B24 : 0040                		dc.w APU_Null-off_2866
    3119/    1B26 : 0040                		dc.w APU_Null-off_2866
    3120/    1B28 : 0040                		dc.w APU_Null-off_2866
    3121/    1B2A : 0040                		dc.w APU_Null-off_2866
    3122/    1B2C : 0040                		dc.w APU_Null-off_2866
    3123/    1B2E : 0040                		dc.w APU_Null-off_2866
    3124/    1B30 : 0040                		dc.w APU_Null-off_2866
    3125/    1B32 : 0040                		dc.w APU_Null-off_2866
    3126/    1B34 : 0040                		dc.w APU_Null-off_2866
    3127/    1B36 : 0040                		dc.w APU_Null-off_2866
    3128/    1B38 : 0040                		dc.w APU_Null-off_2866
    3129/    1B3A : 0040                		dc.w APU_Null-off_2866
    3130/    1B3C : 0040                		dc.w APU_Null-off_2866
    3131/    1B3E : 0040                		dc.w APU_Null-off_2866
    3132/    1B40 : 0040                		dc.w APU_Null-off_2866
    3133/    1B42 : 0040                		dc.w APU_Null-off_2866
    3134/    1B44 : 0040                		dc.w APU_Null-off_2866
    3135/    1B46 : 00A6                		dc.w APU_OAMDMA-off_2866
    3136/    1B48 : 0040                		dc.w APU_Null-off_2866
    3137/    1B4A : 0046                		dc.w APU_Input-off_2866
    3138/    1B4C : 0040                		dc.w APU_Null-off_2866
    3139/    1B4E : 0040                		dc.w APU_Null-off_2866
    3140/    1B50 : 0040                		dc.w APU_Null-off_2866
    3141/    1B52 : 0040                		dc.w APU_Null-off_2866
    3142/    1B54 : 0040                		dc.w APU_Null-off_2866
    3143/    1B56 : 0040                		dc.w APU_Null-off_2866
    3144/    1B58 : 0040                		dc.w APU_Null-off_2866
    3145/    1B5A : 0040                		dc.w APU_Null-off_2866
    3146/    1B5C : 0040                		dc.w APU_Null-off_2866
    3147/    1B5E :                     
    3148/    1B5E :                     APU_Null:
    3149/    1B5E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3150/    1B64 :                     
    3151/    1B64 :                     ; =============== S U B	R O U T	I N E =======================================
    3152/    1B64 :                     
    3153/    1B64 :                     
    3154/    1B64 :                     APU_Input:				; DATA XREF: ROM:000028BEo
    3155/    1B64 : 4A07                		tst.b	d7
    3156/    1B66 : 67F6                		beq.s	APU_Null
    3157/    1B68 : 6106                		bsr	readInput
    3158/    1B6A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3159/    1B70 :                     
    3160/    1B70 :                     ; =============== S U B	R O U T	I N E =======================================
    3161/    1B70 :                     
    3162/    1B70 :                     
    3163/    1B70 :                     readInput:
    3164/    1B70 : 2F0B                		move.l	a3,-(sp)
    3165/    1B72 : 47F9 00A1 0003      		lea	($A10003).l,a3
    3166/    1B78 : 4BEC 0034           		lea	cpuInputData(a4),a5
    3167/    1B7C : 6108                		bsr	.this_pad
    3168/    1B7E : 544B                		addq.w	#2,a3
    3169/    1B80 : 6104                		bsr	.this_pad		
    3170/    1B82 : 265F                		move.l	(sp)+,a3
    3171/    1B84 : 4E75                		rts
    3172/    1B86 :                     		
    3173/    1B86 :                     .this_pad:
    3174/    1B86 : 16BC 0000           		move.b	#0,(a3)
    3175/    1B8A : 4E71                		nop
    3176/    1B8C : 4E71                		nop
    3177/    1B8E : 1A13                		move.b	(a3),d5
    3178/    1B90 : E50D                		lsl.b	#2,d5
    3179/    1B92 : 0205 00C0           		andi.b	#$C0,d5
    3180/    1B96 : 16BC 0040           		move.b	#$40,(a3)
    3181/    1B9A : 4E71                		nop
    3182/    1B9C : 4E71                		nop
    3183/    1B9E : 1813                		move.b	(a3),d4
    3184/    1BA0 : 0204 003F           		andi.b	#$3F,d4
    3185/    1BA4 : 8A04                		or.b	d4,d5
    3186/    1BA6 : 4605                		not.b	d5
    3187/    1BA8 : 4244                		clr.w	d4
    3188/    1BAA : E30D                		lsl.b	#1,d5
    3189/    1BAC : D904                		addx.b	d4,d4
    3190/    1BAE : E34D                		lsl.w	#1,d5
    3191/    1BB0 : E30D                		lsl.b	#1,d5
    3192/    1BB2 : D904                		addx.b	d4,d4
    3193/    1BB4 : E24D                		lsr.w	#1,d5
    3194/    1BB6 : E30D                		lsl.b	#1,d5
    3195/    1BB8 : D904                		addx.b	d4,d4
    3196/    1BBA : E30D                		lsl.b	#1,d5
    3197/    1BBC : D904                		addx.b	d4,d4
    3198/    1BBE : 8805                		or.b	d5,d4
    3199/    1BC0 : 3AC4                		move.w	d4,(a5)+
    3200/    1BC2 : 4E75                		rts
    3201/    1BC4 :                     
    3202/    1BC4 :                     
    3203/    1BC4 :                     ; =============== S U B	R O U T	I N E =======================================
    3204/    1BC4 :                     
    3205/    1BC4 :                     
    3206/    1BC4 :                     APU_OAMDMA:
    3207/    1BC4 : 2F07                		move.l	d7,-(sp)
    3208/    1BC6 : 2F0B                		move.l	a3,-(sp)
    3209/    1BC8 :                     		
    3210/    1BC8 : E14F                		lsl.w	#8,d7
    3211/    1BCA : 3C2C 0050           		move.w	ppuOamUnk(a4),d6
    3212/    1BCE : 0A46 0001           		eori.w	#1,d6
    3213/    1BD2 : 1E34 6042           		move.b	ppuOamAddr(a4,d6.w),d7
    3214/    1BD6 : 4BF2 7000           		lea	(a2,d7.w),a5
    3215/    1BDA : 1947 004D           		move.b	d7,ppuSp0Ypos+1(a4)		; sprite 0 ypos
    3216/    1BDE :                     
    3217/    1BDE : 47EC 00E2           		lea 	oamSprData(a4),a3
    3218/    1BE2 : 7A3F                		moveq	#$3F,d5
    3219/    1BE4 : 7E00                		moveq	#0,d7
    3220/    1BE6 :                     .lp_sprnormal:
    3221/    1BE6 : 1E1D                		move.b	(a5)+,d7
    3222/    1BE8 : 3C07                		move.w	d7,d6
    3223/    1BEA : 0646 0079           		addi.w	#$79,d6
    3224/    1BEE : 36C6                		move.w	d6,(a3)+
    3225/    1BF0 : 7C40                		moveq	#64,d6
    3226/    1BF2 : 9C05                		sub.b	d5,d6
    3227/    1BF4 : 36C6                		move.w	d6,(a3)+
    3228/    1BF6 : 1E1D                		move.b	(a5)+,d7
    3229/    1BF8 : 3C07                		move.w	d7,d6
    3230/    1BFA : 0046 0100           		ori.w	#$100,d6
    3231/    1BFE : 1E1D                		move.b	(a5)+,d7
    3232/    1C00 : 3807                		move.w	d7,d4
    3233/    1C02 : E51C                		rol.b	#2,d4
    3234/    1C04 : E34C                		lsl.w	#1,d4
    3235/    1C06 : E70C                		lsl.b	#3,d4
    3236/    1C08 : EF4C                		lsl.w	#7,d4
    3237/    1C0A : 8846                		or.w	d6,d4
    3238/    1C0C : 0A44 8000           		eori.w	#$8000,d4
    3239/    1C10 : 36C4                		move.w	d4,(a3)+
    3240/    1C12 : 1E1D                		move.b	(a5)+,d7
    3241/    1C14 : 3C07                		move.w	d7,d6
    3242/    1C16 : 0646 0080           		addi.w	#$80,d6
    3243/    1C1A : 36C6                		move.w	d6,(a3)+
    3244/    1C1C : 51CD FFC8           		dbf	d5,.lp_sprnormal
    3245/    1C20 : 265F                		move.l	(sp)+,a3
    3246/    1C22 : 2E1F                		move.l	(sp)+,d7
    3247/    1C24 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3248/    1C2A :                     
    3249/    1C2A :                     
    3250/    1C2A :                     ; =============== S U B	R O U T	I N E =======================================
    3251/    1C2A :                     
    3252/    1C2A :                     
    3253/    1C2A :                     wrTo_PPU:
    3254/    1C2A : 0244 0007           		andi.w	#7,d4
    3255/    1C2E : D844                		add.w	d4,d4
    3256/    1C30 : 383B 4006           		move.w	off_29F6(pc,d4.w),d4
    3257/    1C34 : 4EFB 4002           		jmp	off_29F6(pc,d4.w)
    3258/    1C38 :                     
    3259/    1C38 :                     ; ----------------------------------------------------------------
    3260/    1C38 : 0010                off_29F6:	dc.w loc_2A16-off_29F6 ; $2000
    3261/    1C3A : 0058                		dc.w loc_2A5E-off_29F6 ; $2001
    3262/    1C3C : 00E0                		dc.w loc_2ACC-off_29F6 ; $2002
    3263/    1C3E : 00E6                		dc.w loc_2AD0-off_29F6 ; $2003
    3264/    1C40 : 00FA                		dc.w loc_2AE2-off_29F6 ; $2004
    3265/    1C42 : 008C                		dc.w wrPPU_Scroll-off_29F6 ; $2005
    3266/    1C44 : 0100                		dc.w loc_2AE6-off_29F6 ; $2006
    3267/    1C46 : 0114                		dc.w wrPPU_Data-off_29F6 ; $2007
    3268/    1C48 :                     
    3269/    1C48 :                     ; ----------------------------------------------------------------
    3270/    1C48 :                     ; $2000
    3271/    1C48 :                     ; ----------------------------------------------------------------
    3272/    1C48 :                     
    3273/    1C48 :                     loc_2A16:
    3274/    1C48 :                     
    3275/    1C48 :                     	; NMI on/off
    3276/    1C48 : 4246                		clr.w	d6
    3277/    1C4A : E30F                		lsl.b	#1,d7			; $80
    3278/    1C4C : 6404                		bcc.s	.noVintFlag
    3279/    1C4E : 1C3C 0080           		move.b	#$80,d6			; NMI ON
    3280/    1C52 :                     .noVintFlag:
    3281/    1C52 : 3946 0052           		move.w	d6,ppuNmiFlag(a4)
    3282/    1C56 :                     		
    3283/    1C56 :                     	; 8x8 or 8x16 sprites
    3284/    1C56 : 4246                		clr.w	d6
    3285/    1C58 : E50F                		lsl.b	#2,d7
    3286/    1C5A : 6402                		bcc.s	loc_2A2C
    3287/    1C5C : 7C01                		moveq	#1,d6
    3288/    1C5E :                     loc_2A2C:
    3289/    1C5E : 3946 004A           		move.w	d6,ppuSprWide(a4)
    3290/    1C62 :                     		
    3291/    1C62 :                     	; PPU VRAM BG bank/Sprites bank
    3292/    1C62 : 1C07                		move.b	d7,d6
    3293/    1C64 : 0246 00C0           		andi.w	#$C0,d6
    3294/    1C68 : BC6C 0040           		cmp.w	ppuChrBank(a4),d6
    3295/    1C6C : 6708                		beq.s	.no_reload
    3296/    1C6E : 3946 0040           		move.w	d6,ppuChrBank(a4)
    3297/    1C72 : 6100 043C           		bsr	Nemul_LoadChr
    3298/    1C76 :                     .no_reload:
    3299/    1C76 :                     
    3300/    1C76 :                     	; PPU VRAM increment
    3301/    1C76 : 7C01                		moveq	#1,d6
    3302/    1C78 : E70F                		lsl.b	#3,d7
    3303/    1C7A : 6402                		bcc.s	.nrml_incr
    3304/    1C7C : 7C20                		moveq	#$20,d6
    3305/    1C7E :                     .nrml_incr:
    3306/    1C7E : 3946 0044           		move.w	d6,ppuAddrIncr(a4)
    3307/    1C82 :                     
    3308/    1C82 :                     	; PPU Name table base
    3309/    1C82 : 0247 00C0           		andi.w	#$C0,d7
    3310/    1C86 : 3947 003E           		move.w	d7,ppuNTblBase(a4)
    3311/    1C8A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3312/    1C90 :                     
    3313/    1C90 :                     ; ----------------------------------------------------------------
    3314/    1C90 :                     ; $2002 - PPU MASK
    3315/    1C90 :                     ; ----------------------------------------------------------------
    3316/    1C90 :                     
    3317/    1C90 :                     loc_2A5E:
    3318/    1C90 : 3C3C 8550           		move.w	#$8500+(($A000)>>9),d6
    3319/    1C94 : 4846                		swap	d6
    3320/    1C96 : 3C2C 002C           		move.w	vdpReg01(a4),d6		; REGISTER 81
    3321/    1C9A : CC3C 00BF           		and.b	#$BF,d6
    3322/    1C9E : 0807 0003           		btst	#3,d7
    3323/    1CA2 : 6704                		beq.s	.hidebg
    3324/    1CA4 : 0006 0040           		ori.b	#$40,d6
    3325/    1CA8 :                     .hidebg:
    3326/    1CA8 : 4846                		swap	d6
    3327/    1CAA : 0807 0004           		btst	#4,d7
    3328/    1CAE : 6704                		beq.s	.hidesp
    3329/    1CB0 : 3C3C 855E           		move.w	#$8500+(($BC00)>>9),d6
    3330/    1CB4 :                     .hidesp:
    3331/    1CB4 : 2D46 0004           		move.l	d6,4(a6)
    3332/    1CB8 : 4846                		swap	d6
    3333/    1CBA : 3946 002C           		move.w	d6,vdpReg01(a4)
    3334/    1CBE :                     
    3335/    1CBE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3336/    1CC4 :                     
    3337/    1CC4 :                     ; ----------------------------------------------------------------
    3338/    1CC4 :                     ; $2005 - PPU SCROLL
    3339/    1CC4 :                     ; -----------------------------------------------------------------
    3340/    1CC4 :                     
    3341/    1CC4 :                     wrPPU_Scroll:
    3342/    1CC4 : 3807                		move.w	d7,d4
    3343/    1CC6 : 0244 00FF           		andi.w	#$FF,d4
    3344/    1CCA : 3C2C 003E           		move.w	ppuNTblBase(a4),d6
    3345/    1CCE : 0A6C 0001 004E      		eori.w	#1,ppuAddrLatch(a4)
    3346/    1CD4 : 6718                		beq.s	loc_2AA4
    3347/    1CD6 : CC7C 0001           		and.w	#1,d6
    3348/    1CDA : E14E                		lsl.w	#8,d6
    3349/    1CDC : D846                		add.w	d6,d4
    3350/    1CDE : 4444                		neg.w	d4
    3351/    1CE0 : 3944 005A           		move.w	d4,vdpScrlX(a4)
    3352/    1CE4 : 3944 005C           		move.w	d4,vdpScrlX+2(a4)
    3353/    1CE8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3354/    1CEE :                     
    3355/    1CEE :                     ; --------------------------------------------------------
    3356/    1CEE :                     ; Vertical
    3357/    1CEE :                     ; --------------------------------------------------------
    3358/    1CEE :                     
    3359/    1CEE :                     loc_2AA4:
    3360/    1CEE : 5044                		addq.w	#8,d4
    3361/    1CF0 : E30E                		lsl.b	#1,d6
    3362/    1CF2 : 6512                		bcs.s	loc_2ABE
    3363/    1CF4 : 3944 005E           		move.w	d4,vdpScrlY(a4)
    3364/    1CF8 : D87C 0110           		add.w	#$110,d4
    3365/    1CFC : 3944 0060           		move.w	d4,vdpScrlY+2(a4)
    3366/    1D00 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3367/    1D06 :                     loc_2ABE:
    3368/    1D06 : 3944 0060           		move.w	d4,vdpScrlY+2(a4)
    3369/    1D0A : D87C 0110           		add.w	#$110,d4
    3370/    1D0E : 3944 005E           		move.w	d4,vdpScrlY(a4)
    3371/    1D12 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3372/    1D18 :                     
    3373/    1D18 :                     ; ----------------------------------------------------------------
    3374/    1D18 :                     
    3375/    1D18 :                     loc_2ACC:				; DATA XREF: ROM:000029FEo
    3376/    1D18 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3377/    1D1E :                     ; ----------------------------------------------------------------
    3378/    1D1E :                     
    3379/    1D1E :                     loc_2AD0:
    3380/    1D1E : 382C 0050           		move.w	ppuOamUnk(a4),d4
    3381/    1D22 : 1987 4042           		move.b	d7,ppuOamAddr(a4,d4.w)
    3382/    1D26 : 0A6C 0001 0050      		eori.w	#1,ppuOamUnk(a4)
    3383/    1D2C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3384/    1D32 :                     ; ----------------------------------------------------------------
    3385/    1D32 :                     
    3386/    1D32 :                     loc_2AE2:
    3387/    1D32 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3388/    1D38 :                     ; ----------------------------------------------------------------
    3389/    1D38 :                     
    3390/    1D38 :                     loc_2AE6:
    3391/    1D38 : 382C 004E           		move.w	ppuAddrLatch(a4),d4
    3392/    1D3C : 1987 4046           		move.b	d7,ppuAddrBase(a4,d4.w)
    3393/    1D40 : 0A6C 0001 004E      		eori.w	#1,ppuAddrLatch(a4)
    3394/    1D46 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3395/    1D4C :                     ; ----------------------------------------------------------------
    3396/    1D4C :                     
    3397/    1D4C :                     wrPPU_Data:
    3398/    1D4C : 382C 0046           		move.w	ppuAddrBase(a4),d4
    3399/    1D50 : 3C2C 0044           		move.w	ppuAddrIncr(a4),d6
    3400/    1D54 : DD6C 0046           		add.w	d6,ppuAddrBase(a4)
    3401/    1D58 : 0244 3FFF           		andi.w	#$3FFF,d4
    3402/    1D5C : 1787 4000           		move.b	d7,(a3,d4.w)
    3403/    1D60 : 0C44 3F00           		cmpi.w	#$3F00,d4
    3404/    1D64 : 6452                		bcc.s	ppuSetColor
    3405/    1D66 : 3A04                		move.w	d4,d5
    3406/    1D68 : 0245 03C0           		andi.w	#$3C0,d5
    3407/    1D6C : 0C45 03C0           		cmpi.w	#$3C0,d5
    3408/    1D70 : 6600 00F6           		bne.w	ppuDrwCell
    3409/    1D74 : 6000 01BE           		bra.w	ppuDrwCellPal
    3410/    1D78 :                     ; ----------------------------------------------------------------
    3411/    1D78 :                     
    3412/    1D78 :                     ppuVdpIndex:
    3413/    1D78 : 0000 0002 0004 0006 		dc.w $0000,$0002,$0004,$0006
    3414/    1D80 : 0020 0022 0024 0026 		dc.w $0020,$0022,$0024,$0026
    3415/    1D88 : 0040 0042 0044 0046 		dc.w $0040,$0042,$0044,$0046
    3416/    1D90 : 0060 0062 0064 0066 		dc.w $0060,$0062,$0064,$0066
    3417/    1D98 : 0010 0012 0014 0016 		dc.w $0010,$0012,$0014,$0016
    3418/    1DA0 : 0030 0032 0034 0036 		dc.w $0030,$0032,$0034,$0036
    3419/    1DA8 : 0050 0052 0054 0056 		dc.w $0050,$0052,$0054,$0056
    3420/    1DB0 : 0070 0072 0074 0076 		dc.w $0070,$0072,$0074,$0076
    3421/    1DB8 :                     		align 2
    3422/    1DB8 :                     
    3423/    1DB8 :                     ppuSetColor:
    3424/    1DB8 : 0244 001F           		andi.w	#$1F,d4
    3425/    1DBC : D844                		add.w	d4,d4
    3426/    1DBE : 383B 40B8           		move.w	ppuVdpIndex(pc,d4.w),d4
    3427/    1DC2 : 3C04                		move.w	d4,d6
    3428/    1DC4 : 3A07                		move.w	d7,d5
    3429/    1DC6 : 0205 003F           		andi.b	#$3F,d5
    3430/    1DCA : DA45                		add.w	d5,d5
    3431/    1DCC : 39BB 501A 4062      		move.w	ppuVdpColors(pc,d5.w),vdpPalette(a4,d4.w)
    3432/    1DD2 : CC7C 000F           		and.w	#$F,d6
    3433/    1DD6 : 660A                		bne.s	.no_bgpal
    3434/    1DD8 : 0844 0004           		bchg	#4,d4
    3435/    1DDC : 39BB 500A 4062      		move.w	ppuVdpColors(pc,d5.w),vdpPalette(a4,d4.w)
    3436/    1DE2 :                     		
    3437/    1DE2 :                     .no_bgpal:
    3438/    1DE2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3439/    1DE8 :                     ; ----------------------------------------------------------------
    3440/    1DE8 :                     
    3441/    1DE8 : 0666                ppuVdpColors:	dc.w $666
    3442/    1DEA : 0820                		dc.w $820
    3443/    1DEC : 0A00                		dc.w $A00
    3444/    1DEE : 0A04                		dc.w $A04
    3445/    1DF0 : 0806                		dc.w $806
    3446/    1DF2 : 0406                		dc.w $406
    3447/    1DF4 : 0006                		dc.w 6
    3448/    1DF6 : 0026                		dc.w $26
    3449/    1DF8 : 0044                		dc.w $44
    3450/    1DFA : 0040                		dc.w $40
    3451/    1DFC : 0060                		dc.w $60
    3452/    1DFE : 0040                		dc.w $40
    3453/    1E00 : 0440                		dc.w $440
    3454/    1E02 : 0000                		dc.w 0
    3455/    1E04 : 0000                		dc.w 0
    3456/    1E06 : 0000                		dc.w 0
    3457/    1E08 : 0AAA                		dc.w $AAA
    3458/    1E0A : 0E60                		dc.w $E60
    3459/    1E0C : 0E40                		dc.w $E40
    3460/    1E0E : 0E28                		dc.w $E28
    3461/    1E10 : 0C2A                		dc.w $C2A
    3462/    1E12 : 082C                		dc.w $82C
    3463/    1E14 : 024C                		dc.w $24C
    3464/    1E16 : 004A                		dc.w $4A
    3465/    1E18 : 0066                		dc.w $66
    3466/    1E1A : 0084                		dc.w $84
    3467/    1E1C : 00A0                		dc.w $A0
    3468/    1E1E : 0480                		dc.w $480
    3469/    1E20 : 0880                		dc.w $880
    3470/    1E22 : 0000                		dc.w 0
    3471/    1E24 : 0000                		dc.w 0
    3472/    1E26 : 0000                		dc.w 0
    3473/    1E28 : 0EEE                		dc.w $EEE
    3474/    1E2A : 0EC6                		dc.w $EC6
    3475/    1E2C : 0EAA                		dc.w $EAA
    3476/    1E2E : 0E8C                		dc.w $E8C
    3477/    1E30 : 0E6E                		dc.w $E6E
    3478/    1E32 : 0C6E                		dc.w $C6E
    3479/    1E34 : 088E                		dc.w $88E
    3480/    1E36 : 02AE                		dc.w $2AE
    3481/    1E38 : 00CC                		dc.w $CC
    3482/    1E3A : 00E8                		dc.w $E8
    3483/    1E3C : 04E6                		dc.w $4E6
    3484/    1E3E : 08E4                		dc.w $8E4
    3485/    1E40 : 0EC4                		dc.w $EC4
    3486/    1E42 : 0444                		dc.w $444
    3487/    1E44 : 0000                		dc.w 0
    3488/    1E46 : 0000                		dc.w 0
    3489/    1E48 : 0EEE                		dc.w $EEE
    3490/    1E4A : 0EEC                		dc.w $EEC
    3491/    1E4C : 0ECC                		dc.w $ECC
    3492/    1E4E : 0ECE                		dc.w $ECE
    3493/    1E50 : 0ECE                		dc.w $ECE
    3494/    1E52 : 0ECE                		dc.w $ECE
    3495/    1E54 : 0CCE                		dc.w $CCE
    3496/    1E56 : 0AEE                		dc.w $AEE
    3497/    1E58 : 08EE                		dc.w $8EE
    3498/    1E5A : 0AEC                		dc.w $AEC
    3499/    1E5C : 08EC                		dc.w $8EC
    3500/    1E5E : 0CEC                		dc.w $CEC
    3501/    1E60 : 0EEC                		dc.w $EEC
    3502/    1E62 : 0CCC                		dc.w $CCC
    3503/    1E64 : 0000                		dc.w 0
    3504/    1E66 : 0000                		dc.w 0
    3505/    1E68 :                     ; ----------------------------------------------------------------
    3506/    1E68 :                     ; Set Cell character
    3507/    1E68 :                     
    3508/    1E68 :                     ppuDrwCell:
    3509/    1E68 :                     	; d4 - ppu address
    3510/    1E68 :                     	; d5 - X pos
    3511/    1E68 :                     	; d6 - Y pos
    3512/    1E68 :                     	; d7 - cell 0-255
    3513/    1E68 :                     
    3514/    1E68 : 3A04                		move.w	d4,d5
    3515/    1E6A : 3C04                		move.w	d4,d6
    3516/    1E6C : CA7C 001F           		and.w	#$1F,d5
    3517/    1E70 : CC7C 03E0           		and.w	#$3E0,d6
    3518/    1E74 : DA45                		add.w	d5,d5
    3519/    1E76 : E54E                		lsl.w	#2,d6
    3520/    1E78 : DC45                		add.w	d5,d6
    3521/    1E7A :                     
    3522/    1E7A : 3A04                		move.w	d4,d5
    3523/    1E7C : E04D                		lsr.w	#8,d5
    3524/    1E7E : E44D                		lsr.w	#2,d5
    3525/    1E80 : 0805 0001           		btst	#1,d5
    3526/    1E84 : 6704                		beq.s	.top_lyr
    3527/    1E86 : DC7C 2000           		add.w	#$2000,d6
    3528/    1E8A :                     .top_lyr:
    3529/    1E8A : 0805 0000           		btst	#0,d5
    3530/    1E8E : 6704                		beq.s	.left_pg
    3531/    1E90 : DC7C 0040           		add.w	#$40,d6
    3532/    1E94 :                     .left_pg:
    3533/    1E94 : 46FC 2700           		move.w	#$2700,sr
    3534/    1E98 : CE7C 00FF           		and.w	#$FF,d7
    3535/    1E9C : 8E7C 8000           		or.w	#$8000,d7
    3536/    1EA0 :                     		
    3537/    1EA0 : 3D46 0004           		move.w	d6,4(a6)
    3538/    1EA4 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3539/    1EAA : 3816                		move.w	(a6),d4
    3540/    1EAC : C87C E000           		and.w	#$E000,d4
    3541/    1EB0 : 8847                		or.w	d7,d4
    3542/    1EB2 : 8C7C 4000           		or.w	#$4000,d6
    3543/    1EB6 : 3D46 0004           		move.w	d6,4(a6)
    3544/    1EBA : 3D7C 0003 0004      		move.w	#3,4(a6)
    3545/    1EC0 : 3C84                		move.w	d4,(a6)
    3546/    1EC2 : C87C 3FFF           		and.w	#$3FFF,d4
    3547/    1EC6 :                     
    3548/    1EC6 : 4A6C 002E           		tst.w	ppuMirror(a4)		; check horizontal mirror
    3549/    1ECA : 6634                		bne.s	.vermirror
    3550/    1ECC :                     
    3551/    1ECC : CC7C 3FFF           		and.w	#$3FFF,d6
    3552/    1ED0 : 0846 0006           		bchg	#6,d6
    3553/    1ED4 : 3D46 0004           		move.w	d6,4(a6)
    3554/    1ED8 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3555/    1EDE : 3816                		move.w	(a6),d4
    3556/    1EE0 : C87C E000           		and.w	#$E000,d4
    3557/    1EE4 : 8847                		or.w	d7,d4
    3558/    1EE6 : 8C7C 4000           		or.w	#$4000,d6
    3559/    1EEA : 3D46 0004           		move.w	d6,4(a6)
    3560/    1EEE : 3D7C 0003 0004      		move.w	#3,4(a6)
    3561/    1EF4 : 3C84                		move.w	d4,(a6)
    3562/    1EF6 : 46FC 2000           		move.w	#$2000,sr
    3563/    1EFA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3564/    1F00 :                     .vermirror:
    3565/    1F00 : CC7C 3FFF           		and.w	#$3FFF,d6
    3566/    1F04 : DC7C 2000           		add.w	#$2000,d6
    3567/    1F08 : 3D46 0004           		move.w	d6,4(a6)
    3568/    1F0C : 3D7C 0003 0004      		move.w	#3,4(a6)
    3569/    1F12 : 3816                		move.w	(a6),d4
    3570/    1F14 : C87C E000           		and.w	#$E000,d4
    3571/    1F18 : 8847                		or.w	d7,d4
    3572/    1F1A : 8C7C 4000           		or.w	#$4000,d6
    3573/    1F1E : 3D46 0004           		move.w	d6,4(a6)
    3574/    1F22 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3575/    1F28 : 3C84                		move.w	d4,(a6)
    3576/    1F2A :                     
    3577/    1F2A : 46FC 2000           		move.w	#$2000,sr
    3578/    1F2E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3579/    1F34 :                     
    3580/    1F34 :                     ; ----------------------------------------------------------------
    3581/    1F34 :                     ; Pick Tile 16x16 color
    3582/    1F34 :                     
    3583/    1F34 :                     ppuDrwCellPal:
    3584/    1F34 :                     	; d4 - Page
    3585/    1F34 :                     	; d5 - X pos
    3586/    1F34 :                     	; d6 - Y pos
    3587/    1F34 :                     	; d7 - attr
    3588/    1F34 : 3A04                		move.w	d4,d5
    3589/    1F36 : 3C04                		move.w	d4,d6
    3590/    1F38 : CA7C 0007           		and.w	#%111,d5
    3591/    1F3C : E74D                		lsl.w	#3,d5
    3592/    1F3E : CC7C 0038           		and.w	#%111000,d6
    3593/    1F42 : ED4E                		lsl.w	#6,d6
    3594/    1F44 : 4847                		swap	d7
    3595/    1F46 : 3E04                		move.w	d4,d7
    3596/    1F48 : CE7C 0C00           		and.w	#$C00,d7
    3597/    1F4C : E04F                		lsr.w	#8,d7
    3598/    1F4E : E44F                		lsr.w	#2,d7
    3599/    1F50 : 0807 0001           		btst	#1,d7
    3600/    1F54 : 6704                		beq.s	.top_lyr
    3601/    1F56 : DC7C 2000           		add.w	#$2000,d6
    3602/    1F5A :                     .top_lyr:
    3603/    1F5A : 0807 0000           		btst	#0,d7
    3604/    1F5E : 6704                		beq.s	.left_pg
    3605/    1F60 : DC7C 0040           		add.w	#$40,d6
    3606/    1F64 :                     .left_pg:
    3607/    1F64 : 4847                		swap	d7
    3608/    1F66 : 383C 0000           		move.w	#$0000,d4
    3609/    1F6A : D846                		add.w	d6,d4
    3610/    1F6C : D845                		add.w	d5,d4
    3611/    1F6E :                     
    3612/    1F6E :                     	; d4 - VDP address
    3613/    1F6E :                     	; d5 - Palette bits
    3614/    1F6E : 4847                		swap	d7
    3615/    1F70 : 3E04                		move.w	d4,d7
    3616/    1F72 : 4847                		swap	d7
    3617/    1F74 : 611E                		bsr.s	.make_attr
    3618/    1F76 : 4A6C 002E           		tst.w	ppuMirror(a4)		; check horizontal mirror
    3619/    1F7A : 6606                		bne	.vert_mirr
    3620/    1F7C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3621/    1F82 :                     .vert_mirr:
    3622/    1F82 : 4847                		swap	d7
    3623/    1F84 : 3807                		move.w	d7,d4
    3624/    1F86 : 4847                		swap	d7
    3625/    1F88 : D87C 2000           		add.w	#$2000,d4
    3626/    1F8C : 6106                		bsr.s	.make_attr
    3627/    1F8E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3628/    1F94 :                     
    3629/    1F94 :                     ; ----------------------------------------------------------------
    3630/    1F94 :                     ; d4 - VDP plane pos
    3631/    1F94 :                     ; d7 - pal bits
    3632/    1F94 :                     
    3633/    1F94 :                     .make_attr:
    3634/    1F94 : 7A00                		moveq	#0,d5			; TL
    3635/    1F96 : 1A07                		move.b	d7,d5
    3636/    1F98 : CA7C 0003           		and.w	#%11,d5
    3637/    1F9C : E14D                		lsl.w	#8,d5
    3638/    1F9E : EB4D                		lsl.w	#5,d5
    3639/    1FA0 : 4845                		swap	d5
    3640/    1FA2 : 1A07                		move.b	d7,d5
    3641/    1FA4 : CA7C 0003           		and.w	#%11,d5
    3642/    1FA8 : E14D                		lsl.w	#8,d5
    3643/    1FAA : EB4D                		lsl.w	#5,d5
    3644/    1FAC : 6158                		bsr	.pick_color
    3645/    1FAE : D87C 0004           		add.w	#4,d4			; TR
    3646/    1FB2 : 7A00                		moveq	#0,d5
    3647/    1FB4 : 1A07                		move.b	d7,d5
    3648/    1FB6 : CA7C 000C           		and.w	#%1100,d5
    3649/    1FBA : E14D                		lsl.w	#8,d5
    3650/    1FBC : E74D                		lsl.w	#3,d5
    3651/    1FBE : 4845                		swap	d5
    3652/    1FC0 : 1A07                		move.b	d7,d5
    3653/    1FC2 : CA7C 000C           		and.w	#%1100,d5
    3654/    1FC6 : E14D                		lsl.w	#8,d5
    3655/    1FC8 : E74D                		lsl.w	#3,d5
    3656/    1FCA : 613A                		bsr	.pick_color
    3657/    1FCC : 987C 0004           		sub.w	#4,d4			; BL
    3658/    1FD0 : D87C 0100           		add.w	#$100,d4
    3659/    1FD4 : 7A00                		moveq	#0,d5
    3660/    1FD6 : 1A07                		move.b	d7,d5
    3661/    1FD8 : CA7C 0030           		and.w	#%110000,d5
    3662/    1FDC : E14D                		lsl.w	#8,d5
    3663/    1FDE : E34D                		lsl.w	#1,d5
    3664/    1FE0 : 4845                		swap	d5
    3665/    1FE2 : 1A07                		move.b	d7,d5
    3666/    1FE4 : CA7C 0030           		and.w	#%110000,d5
    3667/    1FE8 : E14D                		lsl.w	#8,d5
    3668/    1FEA : E34D                		lsl.w	#1,d5
    3669/    1FEC : 6118                		bsr	.pick_color
    3670/    1FEE : D87C 0004           		add.w	#4,d4			; BR
    3671/    1FF2 : 7A00                		moveq	#0,d5
    3672/    1FF4 : 1A07                		move.b	d7,d5
    3673/    1FF6 : CA7C 00C0           		and.w	#%11000000,d5
    3674/    1FFA : EF4D                		lsl.w	#7,d5
    3675/    1FFC : 4845                		swap	d5
    3676/    1FFE : 1A07                		move.b	d7,d5
    3677/    2000 : CA7C 00C0           		and.w	#%11000000,d5
    3678/    2004 : EF4D                		lsl.w	#7,d5
    3679/    2006 :                     ; 		bsr	.pick_color
    3680/    2006 :                     
    3681/    2006 :                     .pick_color:
    3682/    2006 : 46FC 2700           		move.w	#$2700,sr
    3683/    200A : 3D44 0004           		move.w	d4,4(a6)
    3684/    200E : 3D7C 0003 0004      		move.w	#3,4(a6)
    3685/    2014 : 2C16                		move.l	(a6),d6
    3686/    2016 : CCBC 9FFF 9FFF      		and.l	#$9FFF9FFF,d6
    3687/    201C : 8C85                		or.l	d5,d6
    3688/    201E : 887C 4000           		or.w	#$4000,d4
    3689/    2022 : 3D44 0004           		move.w	d4,4(a6)
    3690/    2026 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3691/    202C : 2C86                		move.l	d6,(a6)
    3692/    202E : C87C 3FFF           		and.w	#$3FFF,d4
    3693/    2032 : D87C 0080           		add.w	#$80,d4
    3694/    2036 : 3D44 0004           		move.w	d4,4(a6)
    3695/    203A : 3D7C 0003 0004      		move.w	#3,4(a6)
    3696/    2040 : 2C16                		move.l	(a6),d6
    3697/    2042 : CCBC 9FFF 9FFF      		and.l	#$9FFF9FFF,d6
    3698/    2048 : 8C85                		or.l	d5,d6
    3699/    204A : 887C 4000           		or.w	#$4000,d4
    3700/    204E : 3D44 0004           		move.w	d4,4(a6)
    3701/    2052 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3702/    2058 : 2C86                		move.l	d6,(a6)
    3703/    205A : C87C 3FFF           		and.w	#$3FFF,d4
    3704/    205E : 987C 0080           		sub.w	#$80,d4
    3705/    2062 : 46FC 2000           		move.w	#$2000,sr
    3706/    2066 : 4E75                		rts
    3707/    2068 :                     
    3708/    2068 :                     ; =============== S U B	R O U T	I N E =======================================
    3709/    2068 :                     
    3710/    2068 :                     
    3711/    2068 :                     romGrabPrg:
    3712/    2068 : 49E8 0010           		lea	$10(a0),a4
    3713/    206C : 0C07 0001           		cmpi.b	#1,d7
    3714/    2070 : 6700 000C           		beq.w	loc_29C0
    3715/    2074 : 0C07 0002           		cmpi.b	#2,d7
    3716/    2078 : 6700 0022           		beq.w	loc_29D8
    3717/    207C : 4E42                		trap	#2
    3718/    207E :                     ; ----------------------------------------------------------------
    3719/    207E :                     loc_29C0:
    3720/    207E : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3721/    2084 : 47F9 FFFF 4000      		lea	(RAM_Fami_ROM+$4000).l,a3
    3722/    208A : 2E3C 0000 0FFF      		move.l	#$FFF,d7
    3723/    2090 :                     .rom_1:
    3724/    2090 : 261C                		move.l	(a4)+,d3
    3725/    2092 : 2AC3                		move.l	d3,(a5)+
    3726/    2094 : 26C3                		move.l	d3,(a3)+
    3727/    2096 : 51CF FFF8           		dbf	d7,.rom_1
    3728/    209A : 4E75                		rts
    3729/    209C :                     ; ----------------------------------------------------------------
    3730/    209C :                     
    3731/    209C :                     loc_29D8:
    3732/    209C : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3733/    20A2 : 2E3C 0000 1FFF      		move.l	#$1FFF,d7
    3734/    20A8 :                     loc_29E2:
    3735/    20A8 : 2ADC                		move.l	(a4)+,(a5)+
    3736/    20AA : 51CF FFFC           		dbf	d7,loc_29E2
    3737/    20AE : 4E75                		rts
    3738/    20B0 :                     
    3739/    20B0 :                     ; =============== S U B	R O U T	I N E =======================================
    3740/    20B0 :                     
    3741/    20B0 :                     ; a6 - $C00000
    3742/    20B0 :                     ; a4 - RAM_Fami_Emu
    3743/    20B0 :                     
    3744/    20B0 :                     Nemul_LoadChr:
    3745/    20B0 : 46FC 2700           		move.w	#$2700,sr
    3746/    20B4 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
    3747/    20BA : 2D7C 4000 0000 0004 		move.l	#$40000000,4(a6)
    3748/    20C2 : 7A00                		moveq	#0,d5
    3749/    20C4 : 3C2C 0040           		move.w	ppuChrBank(a4),d6
    3750/    20C8 : 6100 0014           		bsr.w	.make_chr
    3751/    20CC : 7A08                		moveq	#8,d5
    3752/    20CE : 3C2C 0040           		move.w	ppuChrBank(a4),d6
    3753/    20D2 : E30E                		lsl.b	#1,d6
    3754/    20D4 : 6100 0008           		bsr.w	.make_chr
    3755/    20D8 : 46FC 2000           		move.w	#$2000,sr
    3756/    20DC : 4E75                		rts
    3757/    20DE :                     
    3758/    20DE :                     .make_chr:
    3759/    20DE : 2A4B                		movea.l	a3,a5
    3760/    20E0 : E30E                		lsl.b	#1,d6
    3761/    20E2 : 6406                		bcc.s	loc_8DBA
    3762/    20E4 : DBFC 0000 1000      		adda.l	#$1000,a5
    3763/    20EA :                     loc_8DBA:
    3764/    20EA : 48E7 FF00           		movem.l	d0-d2/d3-d7,-(sp)
    3765/    20EE : 2E3C 0000 00FF      		move.l	#$FF,d7
    3766/    20F4 :                     loc_8DC4:
    3767/    20F4 : 7607                		moveq	#7,d3
    3768/    20F6 :                     loc_8DC6:
    3769/    20F6 : 1215                		move.b	(a5),d1
    3770/    20F8 : 142D 0008           		move.b	8(a5),d2
    3771/    20FC : 7000                		moveq	#0,d0
    3772/    20FE : 7C07                		moveq	#7,d6
    3773/    2100 :                     loc_8DD0:
    3774/    2100 : D402                		add.b	d2,d2
    3775/    2102 : D140                		addx.w	d0,d0
    3776/    2104 : D201                		add.b	d1,d1
    3777/    2106 : D140                		addx.w	d0,d0
    3778/    2108 : 51CE FFF6           		dbf	d6,loc_8DD0
    3779/    210C : 7800                		moveq	#0,d4
    3780/    210E : 7C07                		moveq	#7,d6
    3781/    2110 :                     loc_8DE0:
    3782/    2110 : 1200                		move.b	d0,d1
    3783/    2112 : E448                		lsr.w	#2,d0
    3784/    2114 : 0281 0000 0003      		andi.l	#3,d1
    3785/    211A : 6702                		beq.s	loc_8DEE
    3786/    211C : 8205                		or.b	d5,d1
    3787/    211E :                     loc_8DEE:
    3788/    211E : 8801                		or.b	d1,d4
    3789/    2120 : E89C                		ror.l	#4,d4
    3790/    2122 : 51CE FFEC           		dbf	d6,loc_8DE0
    3791/    2126 : 2C84                		move.l	d4,(a6)
    3792/    2128 : 528D                		addq.l	#1,a5
    3793/    212A : 51CB FFCA           		dbf	d3,loc_8DC6
    3794/    212E : 508D                		addq.l	#8,a5
    3795/    2130 : 51CF FFC2           		dbf	d7,loc_8DC4
    3796/    2134 : 4CDF 00FF           		movem.l	(sp)+,d0-d2/d3-d7
    3797/    2138 :                     return_8E08:
    3798/    2138 : 4E75                		rts
    3799/    213A :                     
    3800/    213A :                     ; ====================================================================
    3801/    213A :                     
    3802/    213A :                     		align $8000
    3803/    8000 :                     EndOfRom:
    3804/    8000 :                     
    3805/    8000 :                     ; ====================================================================
    3806/    8000 :                     ; ----------------------------------------------------------------
    3807/    8000 :                     ; ROM are here
    3808/    8000 :                     ; ----------------------------------------------------------------
    3809/    8000 :                     
    3810/    8000 :                     ROM_FILE:	binclude "roms/karateka.nes"
    3811/    E010 :                     
 AS V1.42 Beta [Bld 118] - source file md.asm - page 2 - 10/15/2020 18:09:24


  symbol table (* = unused):
  ------------------------

 ADDR_READ :                   19CC C |  ADDR_WRITE :                  1AB2 C |
 APU_INPUT :                   1B64 C |  APU_INPUT_1 :                 1A12 C |
 APU_INPUT_2 :                 1A20 C |  APU_NULL :                    1B5E C |
 APU_OAMDMA :                  1BC4 C |  APU_OAMDMA.LP_SPRNORMAL :     1BE6 C |
*APU_RD_NULL :                 1A0C C |
*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BITDISPENBL :                    6 - |
*BITDMA :                         1 - | *BITDMAENBL :                     4 - |
*BITHINT :                        2 - | *BITHINTENBL :                    4 - |
*BITHVSTOP :                      1 - | *BITJOYA :                        6 - |
*BITJOYB :                        4 - | *BITJOYC :                        5 - |
*BITJOYDOWN :                     1 - | *BITJOYLEFT :                     2 - |
*BITJOYMODE :                     3 - | *BITJOYRIGHT :                    3 - |
*BITJOYSTART :                    7 - | *BITJOYUP :                       0 - |
*BITJOYX :                        2 - | *BITJOYY :                        1 - |
*BITJOYZ :                        0 - | *BITV30 :                         3 - |
 BITVINT :                        3 - | *BITVINTENBL :                    5 - |
*BRANCHEXT :                      0 - |  BYTE_910 :                     34E C |
*CASESENSITIVE :                  0 - |  CLRSTACK :                     244 C |
*CONSTPI :        3.141592653589793 - |  CPUENTRY :                    7FFC - |
 CPUFAMIVINT :                   32 C |  CPUFLAG2 :                      3A C |
 CPUINPUTDATA :                  34 C |  CPUIRQ :                      7FFE - |
 CPUMAPPER :                     30 C |  CPUMODEDEC :                    38 C |
 CPUMODEINTDIS :                 3C C |  CPUNMI :                      7FFA - |
*CPUSPRHINT :                    2A C | *DATE :                  10/15/2020 - |
*DISPENBL :                      40 - | *DMAENBL :                       10 - |
*DOTTEDSTRUCTS :                  0 - | *DOVINT :                       57C C |
 EMUCHRROM :                      4 C |  EMULOOP :                      552 C |
 EMUPRGROM :                      0 C |  EMUSTART :                     4F0 C |
 EMUVINT :                      558 C |  ENDOFROM :                    8000 C |
*FALSE :                          0 - |  FAMIMDVINT :                    58 C |
 FAMIVINT :                     566 C |  FAMIVINTSAVE :                   8 C |
 FAMIVINTSAVE2 :                 28 C |  FAMI_INITVIDEO :               2B6 C |
 FAMI_INITVIDEO.LOOPBG :        2DC C |  FAMI_INITVIDEO.LOOPFG :        2C8 C |
 FAMI_LOADROM :                 45E C |  FAMI_LOADROM.CLRRAM :          474 C |
 FAMI_LOADROM.CLRVRAM :         486 C | *FULLPMMU :                       1 - |
 GLBL_LASTORG :                   0 - |  GLBL_LASTPC :                    0 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*HINTENBL :                      10 - | *HVSTOP :                         2 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - | *JOYA :                          40 - |
*JOYB :                          10 - | *JOYC :                          20 - |
*JOYDOWN :                        2 - | *JOYLEFT :                        4 - |
*JOYMODE :                      800 - | *JOYRIGHT :                       8 - |
*JOYSTART :                      80 - | *JOYUP :                          1 - |
*JOYX :                         400 - | *JOYY :                         200 - |
*JOYZ :                         100 - | *LISTON :                         3 - |
 LIST_INITREGS :                26E C |  LOC_1002 :                     99E C |
 LOC_1030 :                     9D0 C |  LOC_1042 :                     9E4 C |
 LOC_1060 :                     A04 C |  LOC_1080 :                     A26 C |
 LOC_10A2 :                     A4A C |  LOC_10C6 :                     A70 C |
 LOC_10D0 :                     A7A C |  LOC_10D4 :                     A80 C |
 LOC_10DE :                     A8A C |  LOC_10E2 :                     A90 C |
 LOC_10EC :                     A9A C |  LOC_10F0 :                     AA0 C |
 LOC_1106 :                     AB6 C |  LOC_110E :                     ABE C |
 LOC_1116 :                     AC6 C |  LOC_111A :                     ACC C |
 LOC_1136 :                     AE6 C |  LOC_113E :                     AEE C |
 LOC_1146 :                     AF6 C |  LOC_114A :                     AFC C |
 LOC_1154 :                     B06 C |  LOC_1158 :                     B0C C |
 LOC_1162 :                     B16 C |  LOC_1166 :                     B1C C |
 LOC_1170 :                     B26 C |  LOC_118E :                     B50 C |
 LOC_1198 :                     B5A C |  LOC_119C :                     B60 C |
 LOC_11A6 :                     B6A C |  LOC_11AA :                     B70 C |
 LOC_11B2 :                     B7A C |  LOC_11BC :                     B86 C |
 LOC_11C6 :                     B92 C |  LOC_11CE :                     B9C C |
 LOC_11EE :                     BBE C |  LOC_1214 :                     BE6 C |
 LOC_123C :                     C10 C |  LOC_1268 :                     C3C C |
 LOC_129A :                     C6E C |  LOC_12CC :                     CA0 C |
 LOC_1302 :                     CDA C |  LOC_133C :                     D18 C |
 LOC_135C :                     D3A C |  LOC_1382 :                     D62 C |
 LOC_13AE :                     D8E C |  LOC_13CE :                     DB0 C |
 LOC_13F4 :                     DD8 C |  LOC_1420 :                     E04 C |
 LOC_1438 :                     E1E C |  LOC_1452 :                     E3A C |
 LOC_146E :                     E58 C |  LOC_148C :                     E78 C |
 LOC_149E :                     E8C C |  LOC_14B0 :                     EA0 C |
 LOC_14C4 :                     EB6 C |  LOC_14DE :                     ED2 C |
 LOC_14FA :                     EF0 C |  LOC_151A :                     F10 C |
 LOC_1540 :                     F36 C |  LOC_1566 :                     F5C C |
 LOC_1590 :                     F8A C |  LOC_15BE :                     FBC C |
 LOC_15D3 :                     FD6 C |  LOC_15F0 :                     FF2 C |
 LOC_160C :                    1010 C |  LOC_162A :                    1030 C |
 LOC_163C :                    1044 C |  LOC_164E :                    1058 C |
 LOC_1660 :                    1072 C |  LOC_1660.TO_ROM :             109A C |
 LOC_167C :                    10AA C |  LOC_1686 :                    10B4 C |
 LOC_16A4 :                    10DE C |  LOC_16B6 :                    10F2 C |
 LOC_16CE :                    110C C |  LOC_16E8 :                    1128 C |
 LOC_1708 :                    1148 C |  LOC_172E :                    116E C |
 LOC_1754 :                    1194 C |  LOC_177E :                    11C2 C |
 LOC_17AC :                    11F4 C |  LOC_17BE :                    1208 C |
 LOC_17D3 :                    1222 C |  LOC_17F0 :                    123E C |
 LOC_1810 :                    125E C |  LOC_1836 :                    1284 C |
 LOC_1848 :                    1298 C |  LOC_1860 :                    12B2 C |
 LOC_187A :                    12CE C |  LOC_189A :                    12EE C |
 LOC_18C0 :                    1314 C |  LOC_18D2 :                    1328 C |
 LOC_18F0 :                    1348 C |  LOC_1910 :                    136A C |
 LOC_1932 :                    138E C |  LOC_1956 :                    13B4 C |
 LOC_195C :                    13BC C |  LOC_1970 :                    13D2 C |
 LOC_198A :                    13EE C |  LOC_19A6 :                    140C C |
 LOC_19C6 :                    142C C |  LOC_19EC :                    1452 C |
 LOC_1A12 :                    1478 C |  LOC_1A3C :                    14A6 C |
 LOC_1A6A :                    14D8 C |  LOC_1A78 :                    14E8 C |
 LOC_1A88 :                    14FC C |  LOC_1AA6 :                    151C C |
 LOC_1AB6 :                    1530 C |  LOC_1ACA :                    1546 C |
 LOC_1AEA :                    1568 C |  LOC_1B0C :                    158C C |
 LOC_1B30 :                    15B2 C |  LOC_1B56 :                    15DA C |
 LOC_1B6A :                    15F0 C |  LOC_1B8A :                    1612 C |
 LOC_1BAC :                    1636 C |  LOC_1BD0 :                    165C C |
 LOC_1BF6 :                    1684 C |  LOC_1BF6.NONINT :             16AA C |
 LOC_1C32 :                    16D8 C |  LOC_1C52 :                    1700 C |
 LOC_1C6A :                    171A C |  LOC_1C88 :                    173A C |
 LOC_1CA8 :                    175C C |  LOC_1CCC :                    1780 C |
 LOC_1CF6 :                    17AA C |  LOC_1D20 :                    17D4 C |
 LOC_1D4E :                    1806 C |  LOC_1D80 :                    183C C |
 LOC_1D88 :                    1846 C |  LOC_1D92 :                    1852 C |
 LOC_1D9C :                    185E C |  LOC_1DA8 :                    186C C |
 LOC_1DB6 :                    187C C |  LOC_1DCA :                    1890 C |
 LOC_1DE0 :                    18A4 C |  LOC_1DF6 :                    18B8 C |
 LOC_1E10 :                    18D4 C |  LOC_1E2E :                    18F4 C |
 LOC_1E3A :                    1902 C |  LOC_1E48 :                    1912 C |
 LOC_1E5C :                    1926 C |  LOC_1E68 :                    1934 C |
 LOC_1E76 :                    1944 C |  LOC_1E8A :                    1958 C |
 LOC_1E9C :                    196C C |  LOC_1EAE :                    1980 C |
 LOC_1EC4 :                    1998 C |  LOC_1ED3 :                    19AC C |
 LOC_1EE0 :                    19B8 C |  LOC_210 :                      214 C |
 LOC_23A6 :                    1A0E C |  LOC_23F4 :                    1A4C C |
 LOC_270 :                      26A C |  LOC_29C0 :                    207E C |
 LOC_29C0.ROM_1 :              2090 C |  LOC_29D8 :                    209C C |
 LOC_29E2 :                    20A8 C |  LOC_2A16 :                    1C48 C |
 LOC_2A16.NOVINTFLAG :         1C52 C |  LOC_2A2C :                    1C5E C |
 LOC_2A2C.NO_RELOAD :          1C76 C |  LOC_2A2C.NRML_INCR :          1C7E C |
 LOC_2A5E :                    1C90 C |  LOC_2A5E.HIDEBG :             1CA8 C |
 LOC_2A5E.HIDESP :             1CB4 C |  LOC_2AA4 :                    1CEE C |
 LOC_2ABE :                    1D06 C |  LOC_2ACC :                    1D18 C |
 LOC_2AD0 :                    1D1E C |  LOC_2AE2 :                    1D32 C |
 LOC_2AE6 :                    1D38 C |  LOC_51E :                      30A C |
 LOC_8DA :                      318 C |  LOC_8DBA :                    20EA C |
 LOC_8DC4 :                    20F4 C |  LOC_8DC6 :                    20F6 C |
 LOC_8DD0 :                    2100 C |  LOC_8DE0 :                    2110 C |
 LOC_8DEE :                    211E C |  LOC_8E0 :                      31E C |
 LOC_8F0 :                      32E C |  LOC_904 :                      342 C |
 LOC_9F4 :                      4CE C |  LOC_A10 :                      4E2 C |
 LOC_E34 :                      7B8 C |  LOC_E44 :                      7CA C |
 LOC_E5A :                      7E2 C |  LOC_E72 :                      7FC C |
 LOC_E8E :                      818 C |  LOC_EB0 :                      83A C |
 LOC_ED2 :                      85C C |  LOC_EF8 :                      886 C |
 LOC_F22 :                      8B4 C |  LOC_F36 :                      8CA C |
 LOC_F50 :                      8E6 C |  LOC_F6C :                      904 C |
 LOC_F8C :                      924 C |  LOC_FB2 :                      94A C |
 LOC_FD8 :                      970 C | *MACEXP :                         7 - |
*MARS :                           0 - | *MARSCD :                         0 - |
*MCD :                            0 - | *MD_BANK_SRAM :              A130F1 - |
 MD_ENTRY :                     202 C |  MD_ERROR :                     200 C |
 MD_HINT :                      44C C |  MD_INIT :                      362 C |
 MD_INIT.WAIT :                 382 C | *MD_MARS_ID :                A130EC - |
 MD_VINT :                      3AE C |  MD_VINT.WAIT :                 3F8 C |
 MD_VINT.WAIT2 :                42E C | *MOMCPU :                     68000 - |
*MOMCPUNAME :                 68000 - |  MOSCPU :                       5B4 C |
 MOS_BRK :                      B2C C |  MOS_NULL :                     7B4 C |
 NEMUL_LOADCHR :               20B0 C |  NEMUL_LOADCHR.MAKE_CHR :      20DE C |
*NESTMAX :                      100 - |  OAMSPRDATA :                    E2 C |
 OFF_23D4 :                    1A3C C |  OFF_2866 :                    1B1E C |
 OFF_29F6 :                    1C38 C |  OLD_MD :                       23E C |
*PACKING :                        0 - | *PADDING :                        0 - |
*PADDINGSOFAR :                   0 - |  PPUADDRBASE :                   46 C |
 PPUADDRINCR :                   44 C |  PPUADDRLATCH :                  4E C |
 PPUCHRBANK :                    40 C |  PPUDATALAST :                   48 C |
 PPUDRWCELL :                  1E68 C |  PPUDRWCELL.LEFT_PG :          1E94 C |
 PPUDRWCELL.TOP_LYR :          1E8A C |  PPUDRWCELL.VERMIRROR :        1F00 C |
 PPUDRWCELLPAL :               1F34 C |  PPUDRWCELLPAL.LEFT_PG :       1F64 C |
 PPUDRWCELLPAL.MAKE_ATTR :     1F94 C |  PPUDRWCELLPAL.PICK_COLOR :    2006 C |
 PPUDRWCELLPAL.TOP_LYR :       1F5A C |  PPUDRWCELLPAL.VERT_MIRR :     1F82 C |
 PPUMIRROR :                     2E C |  PPUNMIFLAG :                    52 C |
 PPUNTBLBASE :                   3E C |  PPUOAMADDR :                    42 C |
 PPUOAMUNK :                     50 C |  PPUSETCOLOR :                 1DB8 C |
 PPUSETCOLOR.NO_BGPAL :        1DE2 C |  PPUSP0YPOS :                    4C C |
 PPUSPRWIDE :                    4A C |  PPUSTATUS :                     54 C |
 PPUVDPCOLORS :                1DE8 C |  PPUVDPINDEX :                 1D78 C |
*PSG_CTRL :                  C00011 - |  RAM_EMULOOP :     FFFFFFFFFFFF8FF0 C |
 RAM_FAMI_EMU :            FFFF8000 - |  RAM_FAMI_PPU :            FFFFA000 - |
 RAM_FAMI_RAM :            FFFF9000 - |  RAM_FAMI_ROM :            FFFF0000 - |
 RDFROM_APU :                  19F8 C |  RDFROM_PPU :                  1A2E C |
 RDFROM_PRG :                  19EA C | *RDFROM_RAM :                  19DC C |
 RDPPU_DATA :                  1A9A C |  RDPPU_STATUS :                1A52 C |
 READINPUT :                   1B70 C |  READINPUT.THIS_PAD :          1B86 C |
*RELAXED :                        0 - |  RETURN_2418 :                 1A78 C |
 RETURN_2418.NOVFLAG :         1A92 C |  RETURN_2418.NO_HIT :          1A82 C |
 RETURN_241A :                 1A98 C | *RETURN_8E08 :                 2138 C |
 ROMGRABPRG :                  2068 C |  ROM_FILE :                    8000 C |
 SOUND_LOADZ80 :                314 C |  SOUND_PSGINIT :                32C C |
*SYSCD_ARGS_M :              A12010 - | *SYSCD_ARGS_S :              A12020 - |
*SYSCD_BUS :                 A12000 - | *SYSCD_CDCHOST :             A12008 - |
*SYSCD_CDCMODE :             A12004 - | *SYSCD_COMM_M :              A1200E - |
*SYSCD_COMM_S :              A1200F - | *SYSCD_HINT :                A12006 - |
*SYSCD_MEMORY :              A12003 - | *SYSCD_PRGRAM :               20000 - |
*SYSCD_STOPWTCH :            A12008 - | *SYSCD_WORDRAM :             200000 - |
*SYS_CTRL_1 :                A10009 - | *SYS_CTRL_2 :                A1000B - |
*SYS_CTRL_3 :                A1000D - | *SYS_DATA_1 :                A10003 - |
*SYS_DATA_2 :                A10005 - | *SYS_DATA_3 :                A10007 - |
*SYS_EXRAM :                 200000 - | *SYS_IO :                    A10001 - |
*SYS_TMSS :                  A14000 - | *TIME :                    18:09:24 - |
*TRUE :                           1 - | *VARNULLVRAM :                  7FF - |
 VDPHINTSP0 :                    56 C |  VDPPALETTE :                    62 C |
 VDPREG01 :                      2C C |  VDPSCRLX :                      5A C |
 VDPSCRLY :                      5E C |  VDP_CTRL :                  C00004 - |
*VDP_DATA :                  C00000 - | *VDP_PALETTE :             C0000000 - |
*VDP_VSRAM :               40000010 - | *VERSION :                     142F - |
 VIDEO_INIT :                   33A C | *VINTENBL :                      20 - |
 WRPPU_DATA :                  1D4C C |  WRPPU_SCROLL :                1CC4 C |
 WRTO_APU :                    1B0E C |  WRTO_PPU :                    1C2A C |
 WRTO_PRG :                    1AD6 C |  WRTO_PRG.COPYCHR :            1AFC C |
 WRTO_PRG.MAPPER_3 :           1AE4 C | *WRTO_RAM :                    1AC4 C |
*YM_CTRL_1 :                 A04000 - | *YM_CTRL_2 :                 A04002 - |
*YM_DATA_1 :                 A04001 - | *YM_DATA_2 :                 A04003 - |
 Z80_BUS :                   A11100 - | *Z80_CPU :                   A00000 - |
 Z80_RESET :                 A11200 - | *ZBANK :                       6000 - |
*ZPSG_CTRL :                   7F11 - | *ZVDP_CTRL :                   7F04 - |
*ZVDP_DATA :                   7F00 - | *ZYM_CTRL_1 :                  4000 - |
*ZYM_CTRL_2 :                  4002 - | *ZYM_DATA_1 :                  4001 - |
*ZYM_DATA_2 :                  4003 - |

    439 symbols
    117 unused symbols

 AS V1.42 Beta [Bld 118] - source file md.asm - page 3 - 10/15/2020 18:09:24


  defined macros:
  ---------------

FINISH                                | ISO_FILE                             
ISO_SETFS                             | ORG                                  
ROMPAD                                | STRUCT                               

      6 macros

 AS V1.42 Beta [Bld 118] - source file md.asm - page 4 - 10/15/2020 18:09:24


  defined functions:
  ------------------

NOTZ80                                | LOCATE                               
MAPSIZE                               | DOUBLEWORD                           
M68K_ADDR                             |

 AS V1.42 Beta [Bld 118] - source file md.asm - page 5 - 10/15/2020 18:09:24


  codepages:
  ----------

STANDARD (0 changed characters)


0.06 seconds assembly time

   4120 lines source file
   4132 lines incl. macro expansions
      3 passes
      0 errors
      0 warnings
