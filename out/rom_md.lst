 AS V1.42 Beta [Bld 118] - source file md.asm - page 1 - 10/13/2020 3:07:37


       1/       0 :                     ; ===========================================================================
       2/       0 :                     ; +-----------------------------------------------------------------+
       3/       0 :                     ; FamiDrive beta
       4/       0 :                     ; 
       5/       0 :                     ; A Modification of Nemul by Mairtrus
       6/       0 :                     ; (credit him for his original attempt)
       7/       0 :                     ; 
       8/       0 :                     ; Fixed stuff, now works on real hardware
       9/       0 :                     ; +-----------------------------------------------------------------+
      10/       0 :                     
      11/       0 :                     		include	"system/macros.asm"	; Assembler macros
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; MACROS
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; --------------------------------------------------------
(1)    7/       0 :                     ; AS Main settings
(1)    8/       0 :                     ; --------------------------------------------------------
(1)    9/       0 :                     
(1)   10/       0 :                     		!org 0				; Start at 0
(1)   11/       0 :                     		cpu 		68000		; BASE CPU is 68k (manually changed later)
(1)   12/       0 :                     		padding		off		; Dont pad dc.b
(1)   13/       0 :                     		listing 	purecode	; Want listing file, but only the final code in expanded macros
(1)   14/       0 :                     		supmode 	on 		; Supervisor mode
(1)   15/       0 :                     		dottedstructs	off		; If needed
(1)   16/       0 :                     		page 		0
(1)   17/       0 :                     
(1)   18/       0 :                     ; ====================================================================
(1)   19/       0 :                     ; ---------------------------------------------
(1)   20/       0 :                     ; Functions
(1)   21/       0 :                     ; ---------------------------------------------
(1)   22/       0 :                     
(1)   23/       0 :                     ; Fix (address).w
(1)   24/       0 :                     m68k_addr 	function x,-(-x)&$FFFFFFFF					; Allow usage of negative addresses as .w
(1)   25/       0 :                     doubleword 	function l,r,(l<<16&$FFFF0000|r&$FFFF)				; LLLL RRRR
(1)   26/       0 :                     
(1)   27/       0 :                     mapsize		function l,r,( ((l-1)/8)<<16&$FFFF0000|((r-1)/8)&$FFFF )	; for cell w/h use doubleword
(1)   28/       0 :                     locate		function a,b,c,(c&$FF)|(b<<8&$FF00)|(a<<16&$FF0000)		; Layer|X pos|Y pos for some video routines
(1)   29/       0 :                     
(1)   30/       0 :                     ; ====================================================================
(1)   31/       0 :                     ; ---------------------------------------------
(1)   32/       0 :                     ; Macros
(1)   33/       0 :                     ; ---------------------------------------------
(1)   34/       0 :                     
(1)   35/       0 :                     ; -------------------------------------
(1)   36/       0 :                     ; Reserve memory space
(1)   37/       0 :                     ; -------------------------------------
(1)   38/       0 :                     
(1)   39/       0 :                     struct		macro thisinput			; Reserve memory address
(1)   40/       0 :                     GLBL_LASTPC	set *
(1)   41/       0 :                     		dephase
(1)   42/       0 :                     GLBL_LASTORG	set *
(1)   43/       0 :                     		phase thisinput
(1)   44/       0 :                     		endm
(1)   45/       0 :                     		
(1)   46/       0 :                     ; -------------------------------------
(1)   47/       0 :                     ; Finish
(1)   48/       0 :                     ; -------------------------------------
(1)   49/       0 :                     
(1)   50/       0 :                     finish		macro				; Then finish
(1)   51/       0 :                     		!org GLBL_LASTORG
(1)   52/       0 :                     		phase GLBL_LASTPC
(1)   53/       0 :                     		endm
(1)   54/       0 :                     
(1)   55/       0 :                     ; -------------------------------------
(1)   56/       0 :                     ; ZERO Fill padding
(1)   57/       0 :                     ; -------------------------------------
(1)   58/       0 :                     
(1)   59/       0 :                     rompad		macro address			; Zero fill
(1)   60/       0 :                     diff := address - *
(1)   61/       0 :                     		if diff < 0
(1)   62/       0 :                     			error "too much stuff before org $\{address} ($\{(-diff)} bytes)"
(1)   63/       0 :                     		else
(1)   64/       0 :                     			while diff > 1024
(1)   65/       0 :                     				; AS can only generate 1 kb of code on a single line
(1)   66/       0 :                     				dc.b [1024]0
(1)   67/       0 :                     diff := diff - 1024
(1)   68/       0 :                     			endm
(1)   69/       0 :                     			dc.b [diff]0
(1)   70/       0 :                     		endif
(1)   71/       0 :                     	endm
(1)   72/       0 :                     	
(1)   73/       0 :                     ; -------------------------------------
(1)   74/       0 :                     ; ORG
(1)   75/       0 :                     ;
(1)   76/       0 :                     ; (from s2disasm)
(1)   77/       0 :                     ; -------------------------------------
(1)   78/       0 :                     
(1)   79/       0 : =$0                 paddingSoFar set 0
(1)   80/       0 :                     ; 128 = 80h = z80, 32988 = 80DCh = z80unDoC 
(1)   81/       0 :                     notZ80 function cpu,(cpu<>128)&&(cpu<>32988)
(1)   82/       0 :                     
(1)   83/       0 :                     ; make org safer (impossible to overwrite previously assembled bytes) and count padding
(1)   84/       0 :                     ; and also make it work in Z80 code without creating a new segment
(1)   85/       0 :                     org macro address
(1)   86/       0 :                     	if notZ80(MOMCPU)
(1)   87/       0 :                     		if address < *
(1)   88/       0 :                     			error "too much stuff before org $\{address} ($\{(*-address)} bytes)"
(1)   89/       0 :                     		elseif address > *
(1)   90/       0 :                     paddingSoFar	set paddingSoFar + address - *
(1)   91/       0 :                     			!org address
(1)   92/       0 :                     		endif
(1)   93/       0 :                     	else
(1)   94/       0 :                     		if address < $
(1)   95/       0 :                     			error "too much stuff before org 0\{address}h (0\{($-address)}h bytes)"
(1)   96/       0 :                     		else
(1)   97/       0 :                     			while address > $
(1)   98/       0 :                     				db 0
(1)   99/       0 :                     			endm
(1)  100/       0 :                     		endif
(1)  101/       0 :                     	endif
(1)  102/       0 :                         endm
(1)  103/       0 :                     
(1)  104/       0 :                     ; ====================================================================
(1)  105/       0 :                     ; ---------------------------------------------
(1)  106/       0 :                     ; Mega CD only
(1)  107/       0 :                     ; ---------------------------------------------
(1)  108/       0 :                     
(1)  109/       0 :                     ; Set a ISO file
(1)  110/       0 :                     ; NOTE: a valid ISO head is required ($8000 to $B7FF)
(1)  111/       0 :                     
(1)  112/       0 :                     iso_setfs	macro type,start,end
(1)  113/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  114/       0 :                     		dc.b 0						; zero
(1)  115/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  116/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  117/       0 :                     		dc.l start>>11					; Start sector, big
(1)  118/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  119/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  120/       0 :                     		dc.l end-start					; Filesize, big
(1)  121/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  122/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  123/       0 :                     		dc.b 2						; File flags
(1)  124/       0 :                     		dc.b 0,0
(1)  125/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  126/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  127/       0 :                     		dc.b 1,type
(1)  128/       0 :                     .fend:
(1)  129/       0 :                     		endm
(1)  130/       0 :                     		
(1)  131/       0 :                     iso_file	macro filename,start,end
(1)  132/       0 :                     .fstrt:		dc.b .fend-.fstrt				; Block size
(1)  133/       0 :                     		dc.b 0						; zero
(1)  134/       0 :                     		dc.b (start>>11&$FF),(start>>19&$FF)		; Start sector, little
(1)  135/       0 :                     		dc.b (start>>27&$FF),(start>>35&$FF)
(1)  136/       0 :                     		dc.l start>>11					; Start sector, big
(1)  137/       0 :                     		dc.b ((end-start)&$FF),((end-start)>>8&$FF)	; Filesize, little
(1)  138/       0 :                     		dc.b ((end-start)>>16&$FF),((end-start)>>24&$FF)
(1)  139/       0 :                     		dc.l end-start					; Filesize, big
(1)  140/       0 :                     		dc.b (2018-1900)+1				; Year
(1)  141/       0 :                     		dc.b 0,0,0,0,0,0				; TODO
(1)  142/       0 :                     		dc.b 0						; File flags
(1)  143/       0 :                     		dc.b 0,0
(1)  144/       0 :                     		dc.b 1,0					; Volume sequence number, little
(1)  145/       0 :                     		dc.b 0,1					; Volume sequence number, big
(1)  146/       0 :                     		dc.b .flend-.flen
(1)  147/       0 :                     .flen:		dc.b filename,";1"
(1)  148/       0 :                     .flend:		dc.b 0
(1)  149/       0 :                     .fend:
(1)  150/       0 :                     		endm
(1)  151/       0 :                     		
(1)  152/       0 :                     ; ====================================================================
(1)  153/       0 :                     ; ---------------------------------------------
(1)  154/       0 :                     ; 32X only
(1)  155/       0 :                     ; ---------------------------------------------
(1)  156/       0 :                     
      12/       0 :                     		include	"system/md/const.asm"	; RAM / Variables are here
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Engine settings
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 :                     ; MDRAM_START	equ	$FFFF9000
(1)    7/       0 :                     ; MAX_MDERAM	equ 	$200		; MAX RAM for Game modes
(1)    8/       0 :                     
(1)    9/       0 :                     ; ====================================================================
(1)   10/       0 :                     ; ----------------------------------------------------------------
(1)   11/       0 :                     ; Aliases
(1)   12/       0 :                     ; ----------------------------------------------------------------
(1)   13/       0 :                     
(1)   14/       0 :                     ; Controller_1	equ RAM_InputData
(1)   15/       0 :                     ; Controller_2	equ RAM_InputData+sizeof_input
(1)   16/       0 :                     
(1)   17/       0 : =$C0000000          Vdp_palette	equ $C0000000		; Palette
(1)   18/       0 : =$40000010          Vdp_vsram	equ $40000010		; Vertical scroll
(1)   19/       0 :                     
(1)   20/       0 :                     ; ====================================================================
(1)   21/       0 :                     ; ----------------------------------------------------------------
(1)   22/       0 :                     ; Variables
(1)   23/       0 :                     ; ----------------------------------------------------------------
(1)   24/       0 :                     
(1)   25/       0 :                     ; --------------------------------------------------------
(1)   26/       0 :                     ; controller
(1)   27/       0 :                     ; --------------------------------------------------------
(1)   28/       0 :                     
(1)   29/       0 : =$1                 JoyUp		equ $0001
(1)   30/       0 : =$2                 JoyDown		equ $0002
(1)   31/       0 : =$4                 JoyLeft		equ $0004
(1)   32/       0 : =$8                 JoyRight	equ $0008
(1)   33/       0 : =$10                JoyB		equ $0010
(1)   34/       0 : =$20                JoyC		equ $0020
(1)   35/       0 : =$40                JoyA		equ $0040
(1)   36/       0 : =$80                JoyStart	equ $0080
(1)   37/       0 : =$100               JoyZ		equ $0100
(1)   38/       0 : =$200               JoyY		equ $0200
(1)   39/       0 : =$400               JoyX		equ $0400
(1)   40/       0 : =$800               JoyMode		equ $0800
(1)   41/       0 :                     
(1)   42/       0 :                     ; right byte only
(1)   43/       0 : =$0                 bitJoyUp	equ 0
(1)   44/       0 : =$1                 bitJoyDown	equ 1
(1)   45/       0 : =$2                 bitJoyLeft	equ 2
(1)   46/       0 : =$3                 bitJoyRight	equ 3
(1)   47/       0 : =$4                 bitJoyB		equ 4
(1)   48/       0 : =$5                 bitJoyC		equ 5
(1)   49/       0 : =$6                 bitJoyA		equ 6
(1)   50/       0 : =$7                 bitJoyStart	equ 7
(1)   51/       0 :                     
(1)   52/       0 :                     ; left byte only
(1)   53/       0 : =$0                 bitJoyZ		equ 0
(1)   54/       0 : =$1                 bitJoyY		equ 1
(1)   55/       0 : =$2                 bitJoyX		equ 2
(1)   56/       0 : =$3                 bitJoyMode	equ 3
(1)   57/       0 :                     
(1)   58/       0 :                     ; --------------------------------------------------------
(1)   59/       0 :                     ; vdp_ctrl READ bits
(1)   60/       0 :                     ; --------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 : =$2                 bitHint		equ 2
(1)   63/       0 : =$3                 bitVint		equ 3
(1)   64/       0 : =$1                 bitDma		equ 1
(1)   65/       0 :                     
(1)   66/       0 :                     ; --------------------------------------------------------
(1)   67/       0 :                     ; VDP register vars
(1)   68/       0 :                     ; --------------------------------------------------------
(1)   69/       0 :                     
(1)   70/       0 :                     ; Register $80
(1)   71/       0 : =$2                 HVStop		equ $02
(1)   72/       0 : =$10                HintEnbl	equ $10
(1)   73/       0 : =$1                 bitHVStop	equ 1
(1)   74/       0 : =$4                 bitHintEnbl	equ 4
(1)   75/       0 :                     
(1)   76/       0 :                     ; Register $81
(1)   77/       0 : =$40                DispEnbl 	equ $40
(1)   78/       0 : =$20                VintEnbl 	equ $20
(1)   79/       0 : =$10                DmaEnbl		equ $10
(1)   80/       0 : =$6                 bitDispEnbl	equ 6
(1)   81/       0 : =$5                 bitVintEnbl	equ 5
(1)   82/       0 : =$4                 bitDmaEnbl	equ 4
(1)   83/       0 : =$3                 bitV30		equ 3
(1)   84/       0 :                     
(1)   85/       0 :                     ; --------------------------------------------------------
(1)   86/       0 :                     ; Misc
(1)   87/       0 :                     ; --------------------------------------------------------
(1)   88/       0 :                     
(1)   89/       0 : =$7FF               varNullVram	equ $7FF
(1)   90/       0 :                     
      13/       0 :                     		include	"system/md/map.asm"	; Genesis hardware map
(1)    1/       0 :                     ; ====================================================================
(1)    2/       0 :                     ; ----------------------------------------------------------------
(1)    3/       0 :                     ; Genesis / Mega drive 68k map
(1)    4/       0 :                     ; ----------------------------------------------------------------
(1)    5/       0 :                     
(1)    6/       0 : =$200000            sys_exram	equ	$200000		; External RAM
(1)    7/       0 : =$A00000            z80_cpu		equ	$A00000		; Z80 CPU, size: $2000
(1)    8/       0 : =$A04000            ym_ctrl_1	equ	$A04000		; YM2612 reg 1
(1)    9/       0 : =$A04001            ym_data_1	equ	$A04001		; YM2612 reg 2
(1)   10/       0 : =$A04002            ym_ctrl_2	equ	$A04002		; YM2612 reg 1
(1)   11/       0 : =$A04003            ym_data_2	equ	$A04003		; YM2612 reg 2
(1)   12/       0 : =$A10001            sys_io		equ	$A10001		; bits: OVRSEAS(7)|PAL(6)|DISK(5)|VER(3-0)
(1)   13/       0 : =$A10003            sys_data_1	equ	$A10003		; Port 1 DATA
(1)   14/       0 : =$A10005            sys_data_2	equ	$A10005		; Port 2 DATA
(1)   15/       0 : =$A10007            sys_data_3	equ	$A10007		; Modem DATA
(1)   16/       0 : =$A10009            sys_ctrl_1	equ	$A10009		; Port 1 CTRL
(1)   17/       0 : =$A1000B            sys_ctrl_2	equ	$A1000B		; Port 2 CTRL
(1)   18/       0 : =$A1000D            sys_ctrl_3	equ	$A1000D		; Modem CTRL
(1)   19/       0 : =$A14000            sys_tmss	equ	$A14000		; write "SEGA" here for ver > 0
(1)   20/       0 : =$A11100            z80_bus 	equ	$A11100		; only use bit 0 (bit 8 as WORD)
(1)   21/       0 : =$A11200            z80_reset	equ	$A11200		; WRITE only ($0000 reset/$0100 cancel)
(1)   22/       0 : =$A130EC            md_mars_id	equ	$A130EC		; MARS ID "MARS"
(1)   23/       0 : =$A130F1            md_bank_sram	equ	$A130F1		; Make SRAM visible at $200000
(1)   24/       0 : =$C00000            vdp_data	equ	$C00000		; video data port
(1)   25/       0 : =$C00004            vdp_ctrl	equ	$C00004		; video control port
(1)   26/       0 : =$C00011            psg_ctrl	equ	$C00011		; PSG control
(1)   27/       0 :                     
(1)   28/       0 :                     ; ----------------------------------------------------------------
(1)   29/       0 :                     ; Genesis / Mega drive Z80 map
(1)   30/       0 :                     ; ----------------------------------------------------------------
(1)   31/       0 :                     
(1)   32/       0 : =$4000              zym_ctrl_1	equ	$4000		; YM2612 reg 1
(1)   33/       0 : =$4001              zym_data_1	equ	$4001		; YM2612 reg 2
(1)   34/       0 : =$4002              zym_ctrl_2	equ	$4002		; YM2612 reg 1
(1)   35/       0 : =$4003              zym_data_2	equ	$4003		; YM2612 reg 2
(1)   36/       0 : =$6000              zbank		equ	$6000		; ROM BANK 24bits %XXXXXXXX X0000000 00000000
(1)   37/       0 : =$7F00              zvdp_data	equ	$7F00		; video data port
(1)   38/       0 : =$7F04              zvdp_ctrl	equ	$7F04		; video control port
(1)   39/       0 : =$7F11              zpsg_ctrl	equ	$7F11		; PSG control
(1)   40/       0 :                     
(1)   41/       0 :                     ; ----------------------------------------------------------------
(1)   42/       0 :                     ; If a SEGA CD is attached
(1)   43/       0 :                     ; ----------------------------------------------------------------
(1)   44/       0 :                     
(1)   45/       0 : =$20000             syscd_prgram	equ	$020000		; SubCPU PRG-RAM, up to $1FFFF, banked
(1)   46/       0 : =$200000            syscd_wordram	equ	$200000		; WORD-RAM seen in MAIN-CPU
(1)   47/       0 : =$A12000            syscd_bus	equ	$A12000		; WORD | Sub-CPU BUS/RESET
(1)   48/       0 : =$A12003            syscd_memory	equ	$A12003		; BYTE | Sub-CPU memory mode
(1)   49/       0 : =$A12004            syscd_cdcmode	equ	$A12004		; WORD | CDC Mode
(1)   50/       0 : =$A12006            syscd_hint	equ	$A12006		; WORD | VDP HBlank jump ($FFxxxx)
(1)   51/       0 : =$A12008            syscd_cdchost	equ	$A12008		; WORD | CDC Host
(1)   52/       0 : =$A12008            syscd_stopwtch	equ	$A12008		; WORD | Stopwatch
(1)   53/       0 : =$A1200E            syscd_comm_m	equ	$A1200E		; BYTE | MainCPU R/W comm byte
(1)   54/       0 : =$A1200F            syscd_comm_s	equ	$A1200F		; BYTE | Sub-CPU Read comm byte
(1)   55/       0 : =$A12010            syscd_args_m	equ	$A12010		; DATA | comm R/W list, max size: $E
(1)   56/       0 : =$A12020            syscd_args_s	equ	$A12020		; DATA | comm Read list, max size: $E
(1)   57/       0 :                     
(1)   58/       0 :                     ; ----------------------------------------------------------------
(1)   59/       0 :                     ; If a 32X is attached
(1)   60/       0 :                     ; ----------------------------------------------------------------
(1)   61/       0 :                     
(1)   62/       0 :                     ; TODO
(1)   63/       0 :                     
      14/       0 :                     
      15/       0 :                     ; ====================================================================
      16/       0 :                     ; ----------------------------------------------------------------
      17/       0 :                     ; Emulator variables
      18/       0 :                     ; ----------------------------------------------------------------
      19/       0 :                     
      20/       0 :                     ; ------------------------------------------------
      21/       0 :                     ; RAM
      22/       0 :                     ; ------------------------------------------------
      23/       0 :                     
      24/       0 : =$FFFF0000          RAM_Fami_ROM	equ $FFFF0000		; PRG-ROM
      25/       0 : =$FFFF8000          RAM_Fami_Emu	equ $FFFF8000		; Emulator buffer
      26/       0 : =$FFFF9000          RAM_Fami_RAM	equ $FFFF9000		; RAM size: $800
      27/       0 : =$FFFFA000          RAM_Fami_PPU	equ $FFFFA000		; PPU size: $3EF8 (TODO: still uses negative variables)
      28/       0 :                     
      29/       0 :                     ; ----------------------------------------------------------------
      30/       0 :                     ; CPU
      31/       0 :                     ; ----------------------------------------------------------------
      32/       0 :                     
      33/       0 : =$7FFA              cpuNMI		equ $7FFA
      34/       0 : =$7FFC              cpuEntry	equ $7FFC
      35/       0 : =$7FFE              cpuIRQ		equ $7FFE
      36/       0 :                     
      37/       0 :                     ; ----------------------------------------------------------------
      38/       0 :                     ; Emulator
      39/       0 :                     ; ---------------------------------------------------------------
      40/       0 :                     
      41/       0 : (MACRO)             		struct RAM_Fami_Emu+$FF0
      41/       0 : =$0                 GLBL_LASTPC     set *
      41/       0 :                                     dephase
      41/       0 : =$0                 GLBL_LASTORG    set *
      41/FFFFFFFFFFFF8FF0 :                                     phase RAM_FAMI_EMU+$FF0
      42/FFFFFFFFFFFF8FF0 :                     RAM_EmuLoop	ds.w 3
      43/FFFFFFFFFFFF8FF6 : (MACRO)             		finish
      43/FFFFFFFFFFFF8FF0 :                                     !org GLBL_LASTORG
      43/       0 :                                     phase GLBL_LASTPC
      44/       0 :                     
      45/       0 :                     ; ----------------------------------------------------------------
      46/       0 :                     ; Unsorted
      47/       0 :                     ; ----------------------------------------------------------------
      48/       0 :                     
      49/       0 : (MACRO)             		struct 0
      49/       0 : =$0                 GLBL_LASTPC     set *
      49/       0 :                                     dephase
      49/       0 : =$0                 GLBL_LASTORG    set *
      49/       0 :                                     phase 0
      50/       0 :                     emuPrgRom	ds.l 1
      51/       4 :                     emuChrRom	ds.l 1
      52/       8 :                     cpuSprHint	ds.w 1;equ -$38
      53/       A :                     vdpReg01	ds.w 1;equ -$36
      54/       C :                     ppuMirror	ds.w 1;equ -$34
      55/       E :                     cpuMapper	ds.w 1;equ -$32
      56/      10 :                     cpuFamiVint	ds.w 1;equ -$30
      57/      12 :                     cpuInputData	ds.w 2;equ -$28
      58/      16 :                     cpuModeDec	ds.w 1;equ -$22
      59/      18 :                     cpuFlag2	ds.w 1;equ -$20
      60/      1A :                     cpuModeIntDis	ds.w 1;equ -$1E
      61/      1C :                     ppuNTblBase	ds.w 1;equ -$1A
      62/      1E :                     ppuChrBank	ds.w 1;equ -$18
      63/      20 :                     ppuOamAddr	ds.w 1;equ -$16
      64/      22 :                     ppuAddrIncr	ds.w 1;equ -$14
      65/      24 :                     ppuAddrBase	ds.w 1;equ -$12
      66/      26 :                     ppuDataLast	ds.w 1;equ -$10
      67/      28 :                     ppuSprWide	ds.w 1;equ -$E
      68/      2A :                     ppuSp0Ypos	ds.w 1;equ -$C
      69/      2C :                     ppuAddrLatch	ds.w 1;equ -$A
      70/      2E :                     ppuOamUnk	ds.w 1;equ -6
      71/      30 :                     ppuNmiFlag	ds.w 1;equ -4
      72/      32 :                     ppuStatus	ds.w 1;equ -2
      73/      34 :                     vdpHintSp0	ds.w 1
      74/      36 :                     FamiMdVint	ds.w 1
      75/      38 :                     vdpScrlX	ds.l 1
      76/      3C :                     vdpScrlY	ds.l 1
      77/      40 :                     vdpPalette	ds.w 64
      78/      C0 :                     oamSprData	ds.w 8*70
      79/     520 : (MACRO)             		finish
      79/       0 :                                     !org GLBL_LASTORG
      79/       0 :                                     phase GLBL_LASTPC
      80/       0 :                     
      81/       0 :                     ; ====================================================================
      82/       0 :                     ; Header
      83/       0 :                     ; ====================================================================
      84/       0 :                     
      85/       0 : 0000 0000           		dc.l 0
      86/       4 : 0000 0202           		dc.l MD_Entry
      87/       8 : 0000 0200           		dc.l MD_Error
      88/       C : 0000 0200           		dc.l MD_Error
      89/      10 : 0000 0200           		dc.l MD_Error
      90/      14 : 0000 0200           		dc.l MD_Error
      91/      18 : 0000 0200           		dc.l MD_Error
      92/      1C : 0000 0200           		dc.l MD_Error
      93/      20 : 0000 0200           		dc.l MD_Error
      94/      24 : 0000 0200           		dc.l MD_Error
      95/      28 : 0000 0200           		dc.l MD_Error
      96/      2C : 0000 0200           		dc.l MD_Error
      97/      30 : 0000 0200           		dc.l MD_Error
      98/      34 : 0000 0200           		dc.l MD_Error
      99/      38 : 0000 0200           		dc.l MD_Error
     100/      3C : 0000 0200           		dc.l MD_Error
     101/      40 : 0000 0200           		dc.l MD_Error
     102/      44 : 0000 0200           		dc.l MD_Error
     103/      48 : 0000 0200           		dc.l MD_Error
     104/      4C : 0000 0200           		dc.l MD_Error
     105/      50 : 0000 0200           		dc.l MD_Error
     106/      54 : 0000 0200           		dc.l MD_Error
     107/      58 : 0000 0200           		dc.l MD_Error
     108/      5C : 0000 0200           		dc.l MD_Error
     109/      60 : 0000 0200           		dc.l MD_Error
     110/      64 : 0000 0200           		dc.l MD_Error
     111/      68 : 0000 0200           		dc.l MD_Error
     112/      6C : 0000 0200           		dc.l MD_Error
     113/      70 : 0000 044C           		dc.l MD_Hint
     114/      74 : 0000 0200           		dc.l MD_Error
     115/      78 : 0000 03AE           		dc.l MD_Vint
     116/      7C : 0000 0200           		dc.l MD_Error
     117/      80 : 0000 0200           		dc.l MD_Error
     118/      84 : 0000 0200           		dc.l MD_Error
     119/      88 : 0000 0200           		dc.l MD_Error
     120/      8C : 0000 0200           		dc.l MD_Error
     121/      90 : 0000 0200           		dc.l MD_Error
     122/      94 : 0000 0200           		dc.l MD_Error
     123/      98 : 0000 0200           		dc.l MD_Error
     124/      9C : 0000 0200           		dc.l MD_Error
     125/      A0 : 0000 0200           		dc.l MD_Error
     126/      A4 : 0000 0200           		dc.l MD_Error
     127/      A8 : 0000 0200           		dc.l MD_Error
     128/      AC : 0000 0200           		dc.l MD_Error
     129/      B0 : 0000 0200           		dc.l MD_Error
     130/      B4 : 0000 0200           		dc.l MD_Error
     131/      B8 : 0000 0200           		dc.l MD_Error
     132/      BC : 0000 0200           		dc.l MD_Error
     133/      C0 : 0000 0202           		dc.l MD_Entry
     134/      C4 : 0000 0202           		dc.l MD_Entry
     135/      C8 : 0000 0202           		dc.l MD_Entry
     136/      CC : 0000 0202           		dc.l MD_Entry
     137/      D0 : 0000 0202           		dc.l MD_Entry
     138/      D4 : 0000 0202           		dc.l MD_Entry
     139/      D8 : 0000 0202           		dc.l MD_Entry
     140/      DC : 0000 0202           		dc.l MD_Entry
     141/      E0 : 0000 0202           		dc.l MD_Entry
     142/      E4 : 0000 0202           		dc.l MD_Entry
     143/      E8 : 0000 0202           		dc.l MD_Entry
     144/      EC : 0000 0202           		dc.l MD_Entry
     145/      F0 : 0000 0202           		dc.l MD_Entry
     146/      F4 : 0000 0202           		dc.l MD_Entry
     147/      F8 : 0000 0202           		dc.l MD_Entry
     148/      FC : 0000 0202           		dc.l MD_Entry
     149/     100 : 5345 4741 204D 4547 		dc.b "SEGA MEGA DRIVE "
                    4120 4452 4956 4520 
     150/     110 : 2843 2947 4636 3420 		dc.b "(C)GF64 2020.???"
                    3230 3230 2E3F 3F3F 
     151/     120 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     152/     150 : 4661 6D69 4472 6976 		dc.b "FamiDrive                                       "
                    6520 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
     153/     180 : 474D 2048 4F4D 4542 		dc.b "GM HOMEBREW-00"
                    5245 572D 3030      
     154/     18E : 0000                		dc.w 0
     155/     190 : 0000                		dc.w 0
     156/     192 : 2020 2020 2020 2020 		dc.b "              "
                    2020 2020 2020      
     157/     1A0 : 0000 0000           		dc.l 0
     158/     1A4 : 0000 7FFF           		dc.l EndOfRom-1
     159/     1A8 : 00FF 0000           		dc.l $FF0000
     160/     1AC : 00FF FFFF           		dc.l $FFFFFF
     161/     1B0 : 2020 2020           		dc.l $20202020
     162/     1B4 : 2020 2020           		dc.l $20202020
     163/     1B8 : 2020 2020           		dc.l $20202020
     164/     1BC : 2020 2020 2020 2020 		dc.b "                                                    "
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020 2020 2020 
                    2020 2020           
     165/     1F0 : 4A55 4520 2020 2020 		dc.b "JUE             "
                    2020 2020 2020 2020 
     166/     200 :                     
     167/     200 :                     ; ====================================================================
     168/     200 :                     ; ----------------------------------------------------------------
     169/     200 :                     ; Error
     170/     200 :                     ; ----------------------------------------------------------------
     171/     200 :                     
     172/     200 :                     MD_Error:
     173/     200 : 60FE                		bra.s	MD_Error
     174/     202 :                     
     175/     202 :                     ; ====================================================================
     176/     202 :                     ; ----------------------------------------------------------------
     177/     202 :                     ; Entry
     178/     202 :                     ; ----------------------------------------------------------------
     179/     202 :                     
     180/     202 :                     MD_Entry:
     181/     202 : 46FC 2700           		move	#$2700,sr
     182/     206 : 4AB9 00A1 0008      		tst.l	($A10008).l
     183/     20C : 6606                		bne.s	loc_210
     184/     20E : 4A79 00A1 000C      		tst.w	($A1000C).l
     185/     214 :                     loc_210:
     186/     214 : 6600 0054           		bne.w	loc_270
     187/     218 : 4BF9 0000 026E      		lea	(list_InitRegs).l,a5
     188/     21E : 4C9D 00E0           		movem.w	(a5)+,d5-d7
     189/     222 : 4CDD 1F00           		movem.l	(a5)+,a0-a4
     190/     226 : 1039 00A1 0001      		move.b	($A10001).l,d0
     191/     22C : 0200 000F           		andi.b	#$F,d0
     192/     230 : 6700 000C           		beq.w	old_md
     193/     234 : 23FC 5345 4741 00A1 		move.l	#"SEGA",($A14000).l
                    4000                
     194/     23E :                     old_md:
     195/     23E : 4280                		clr.l	d0
     196/     240 : 2C40                		movea.l	d0,a6
     197/     242 : 4E66                		move	a6,usp
     198/     244 :                     clrstack:
     199/     244 : 2D00                		move.l	d0,-(a6)
     200/     246 : 51CE FFFC           		dbf	d6,clrstack
     201/     24A : 6100 00C8           		bsr	Sound_LoadZ80
     202/     24E : 6100 00DC           		bsr	Sound_PsgInit
     203/     252 : 6100 00E6           		bsr	Video_Init
     204/     256 : 4CD6 7FFF           		movem.l	(a6),d0-a6
     205/     25A : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     206/     262 : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     207/     26A :                     loc_270:
     208/     26A : 6000 00F6           		bra.w	MD_Init
     209/     26E :                     ; ----------------------------------------------------------------
     210/     26E : 8000                list_InitRegs:	dc.w $8000		; d5
     211/     270 : 3FFF                		dc.w $3FFF		; d6
     212/     272 : 0100                		dc.w $100		; d7
     213/     274 : 00A0 0000           		dc.l $A00000		; a0
     214/     278 : 00A1 1100           		dc.l $A11100		; a1
     215/     27C : 00A1 1200           		dc.l $A11200		; a2
     216/     280 : 00C0 0000           		dc.l $C00000		; a3
     217/     284 : 00C0 0004           		dc.l $C00004		; a4
     218/     288 : AF01 D91F 1127 0021 		dc.b $AF, 1, $D9, $1F, $11, $27, 0, $21, $26, 0, $F9, $77
                    2600 F977           
     219/     294 : EDB0 DDE1 FDE1 ED47 		dc.b $ED, $B0, $DD, $E1, $FD, $E1, $ED,	$47, $ED, $4F
                    ED4F                
     220/     29E : D1E1 F108 D9C1 D1E1 		dc.b $D1, $E1, $F1, 8, $D9, $C1, $D1, $E1, $F1,	$F9, $F3
                    F1F9 F3             
     221/     2A9 : ED56 36E9 E981 048F 		dc.b $ED, $56, $36, $E9, $E9, $81, 4, $8F, 1
                    01                  
     222/     2B2 : 9F                  		dc.b $9F
     223/     2B3 : BF                  		dc.b $BF
     224/     2B4 : DF                  		dc.b $DF
     225/     2B5 : FF                  		dc.b $FF
     226/     2B6 :                     ; ----------------------------------------------------------------
     227/     2B6 :                     
     228/     2B6 :                     ; =============== S U B	R O U T	I N E =======================================
     229/     2B6 :                     
     230/     2B6 :                     Fami_InitVideo:
     231/     2B6 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     232/     2BC : 3E3C 0FFF           		move.w	#$FFF,d7
     233/     2C0 : 2D7C 4000 0003 0004 		move.l	#$40000003,4(a6)
     234/     2C8 :                     .loopfg:
     235/     2C8 : 3CBC 0200           		move.w	#$200,(a6)
     236/     2CC : 51CF FFFA           		dbf	d7,.loopfg
     237/     2D0 : 3E3C 0FFF           		move.w	#$FFF,d7
     238/     2D4 : 2D7C 6000 0003 0004 		move.l	#$60000003,4(a6)
     239/     2DC :                     .loopbg:
     240/     2DC : 3CBC 0200           		move.w	#$200,(a6)
     241/     2E0 : 51CF FFFA           		dbf	d7,.loopbg
     242/     2E4 : 2D7C 6800 0002 0004 		move.l	#$68000002,4(a6)
     243/     2EC : 2CBC 0000 0000      		move.l	#0,(a6)
     244/     2F2 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     245/     2FA : 2CBC 0000 0000      		move.l	#0,(a6)
     246/     300 : 7E3F                		moveq	#$3F,d7
     247/     302 : 2D7C C000 0000 0004 		move.l	#$C0000000,4(a6)
     248/     30A :                     
     249/     30A :                     loc_51E:
     250/     30A : 3CBC 0000           		move.w	#0,(a6)
     251/     30E : 51CF FFFA           		dbf	d7,loc_51E
     252/     312 : 4E75                		rts
     253/     314 :                     
     254/     314 :                     ; =============== S U B	R O U T	I N E =======================================
     255/     314 :                     
     256/     314 :                     
     257/     314 :                     Sound_LoadZ80:
     258/     314 : 3287                		move.w	d7,(a1)
     259/     316 : 3487                		move.w	d7,(a2)
     260/     318 :                     
     261/     318 :                     loc_8DA:
     262/     318 : 0111                		btst	d0,(a1)
     263/     31A : 66FC                		bne.s	loc_8DA
     264/     31C : 7425                		moveq	#$25,d2
     265/     31E :                     loc_8E0:
     266/     31E : 10DD                		move.b	(a5)+,(a0)+
     267/     320 : 51CA FFFC           		dbf	d2,loc_8E0
     268/     324 : 3480                		move.w	d0,(a2)
     269/     326 : 3280                		move.w	d0,(a1)
     270/     328 : 3487                		move.w	d7,(a2)
     271/     32A : 4E75                		rts
     272/     32C :                     ; End of function Sound_LoadZ80
     273/     32C :                     
     274/     32C :                     
     275/     32C :                     ; =============== S U B	R O U T	I N E =======================================
     276/     32C :                     
     277/     32C :                     
     278/     32C :                     Sound_PsgInit:
     279/     32C : 7203                		moveq	#3,d1
     280/     32E :                     
     281/     32E :                     loc_8F0:
     282/     32E : 175D 0011           		move.b	(a5)+,$11(a3)
     283/     332 : 51C9 FFFA           		dbf	d1,loc_8F0
     284/     336 : 3480                		move.w	d0,(a2)
     285/     338 : 4E75                		rts
     286/     33A :                     ; End of function Sound_PsgInit
     287/     33A :                     
     288/     33A :                     
     289/     33A :                     ; =============== S U B	R O U T	I N E =======================================
     290/     33A :                     
     291/     33A :                     
     292/     33A :                     Video_Init:
     293/     33A : 7017                		moveq	#$17,d0
     294/     33C : 41F9 0000 034E      		lea	(byte_910).l,a0
     295/     342 :                     loc_904:
     296/     342 : 1A18                		move.b	(a0)+,d5
     297/     344 : 3885                		move.w	d5,(a4)
     298/     346 : DA47                		add.w	d7,d5
     299/     348 : 51C8 FFF8           		dbf	d0,loc_904
     300/     34C : 4E75                		rts
     301/     34E :                     
     302/     34E :                     ; ----------------------------------------------------------------
     303/     34E :                     byte_910:
     304/     34E : 14                  		dc.b $14			; HBlank int on, HV Counter on
     305/     34F : 64                  		dc.b $64			; Display ON, VBlank int on
     306/     350 : 30                  		dc.b (($C000)>>10)		; ForeGrd at VRAM $C000 (%00xxx000)
     307/     351 : 34                  		dc.b (($D000)>>10)		; Window  at VRAM $D000 (%00xxxxy0)
     308/     352 : 07                  		dc.b (($E000)>>13)		; BackGrd at VRAM $E000 (%00000xxx)
     309/     353 : 5E                  		dc.b (($BC00)>>9)		; Sprites at VRAM $BC00 (%0xxxxxxy)
     310/     354 : 00                  		dc.b $00			; Nothing
     311/     355 : 00                  		dc.b $00			; Background color
     312/     356 : 00                  		dc.b $00			; Nothing
     313/     357 : 00                  		dc.b $00			; Nothing
     314/     358 : DF                  		dc.b $DF			; HInt value
     315/     359 : 00                  		dc.b (%000|%00)			; No ExtInt, Scroll: VSCR:full HSCR:full
     316/     35A : 00                  		dc.b $00			; H40, No shadow mode, Normal resolution
     317/     35B : 2E                  		dc.b (($B800)>>10)		; HScroll at VRAM $B800 (%00xxxxxx)
     318/     35C : 00                  		dc.b $00			; Nothing
     319/     35D : 02                  		dc.b $02			; VDP Auto increment by $02
     320/     35E : 11                  		dc.b (%01<<4)|%01		; Layer size: V32 H64
     321/     35F : 00                  		dc.b $00
     322/     360 : 00                  		dc.b $00
     323/     361 :                     		align 2
     324/     362 :                     
     325/     362 :                     ; ====================================================================
     326/     362 :                     
     327/     362 :                     MD_Init:
     328/     362 : 13FC 0040 00A1 0009 		move.b	#$40,($A10009).l
     329/     36A : 13FC 0040 00A1 000B 		move.b	#$40,($A1000B).l
     330/     372 : 33FC 0100 00A1 1100 		move.w	#$100,(z80_bus).l		; Stop Z80
     331/     37A : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     332/     382 :                     .wait:
     333/     382 : 0839 0000 00A1 1100 		btst	#0,(z80_bus).l			; Wait bus
     334/     38A : 66F6                		bne.s	.wait
     335/     38C :                     
     336/     38C : 33FC 0000 00A1 1200 		move.w	#0,(z80_reset).l		; Reset request
     337/     394 : 4E71                		nop
     338/     396 : 4E71                		nop
     339/     398 : 4E71                		nop
     340/     39A : 33FC 0000 00A1 1100 		move.w	#0,(z80_bus).l			; Start Z80
     341/     3A2 : 33FC 0100 00A1 1200 		move.w	#$100,(z80_reset).l		; Reset cancel
     342/     3AA :                     		
     343/     3AA : 6000 015C           		bra	emuStart
     344/     3AE :                     
     345/     3AE :                     ; ====================================================================
     346/     3AE :                     ; ----------------------------------------------------------------
     347/     3AE :                     ; VBlank
     348/     3AE :                     ; ----------------------------------------------------------------
     349/     3AE :                     
     350/     3AE :                     MD_Vint:
     351/     3AE : 48E7 FFFE           		movem.l	d0-d7/a0-a6,-(sp)
     352/     3B2 :                     
     353/     3B2 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
     354/     3B8 : 2D7C 7800 0002 0004 		move.l	#$78000002,4(a6)
     355/     3C0 : 2CAC 0038           		move.l	vdpScrlX(a4),(a6)
     356/     3C4 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     357/     3CC : 2CAC 003C           		move.l	vdpScrlY(a4),(a6)
     358/     3D0 : 2D7C 9401 9318 0004 		move.l	#$94019318,4(a6)
     359/     3D8 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     360/     3E0 : 2D7C 96C0 9560 0004 		move.l	#$96009500+(((RAM_Fami_Emu+oamSprData)<<7)&$FF0000)|(((RAM_Fami_Emu+oamSprData)>>1)&$FF),4(a6)
     361/     3E8 : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+oamSprData)>>17)&$7F),4(a6)
     362/     3EE : 3D7C 7C00 0004      		move.w	#$7C00,4(a6)
     363/     3F4 : 3F3C 0082           		move.w	#$0002|$80,-(sp)
     364/     3F8 : 0839 0000 00A1 1100 .wait:		btst	#0,(z80_bus).l
     365/     400 : 66F6                		bne.s	.wait
     366/     402 : 3D5F 0004           		move.w	(sp)+,4(a6)
     367/     406 : 33FC 0100 00A1 1100 		move.w	#$0100,(z80_bus).l
     368/     40E : 2D7C 9400 9340 0004 		move.l	#$94009340,4(a6)
     369/     416 : 2D7C 96C0 9520 0004 		move.l	#$96009500+(((RAM_Fami_Emu+vdpPalette)<<7)&$FF0000)|(((RAM_Fami_Emu+vdpPalette)>>1)&$FF),4(a6)
     370/     41E : 3D7C 977F 0004      		move.w	#$9700|(((RAM_Fami_Emu+vdpPalette)>>17)&$7F),4(a6)
     371/     424 : 3D7C C000 0004      		move.w	#$C000,4(a6)
     372/     42A : 3F3C 0080           		move.w	#$0000|$80,-(sp)
     373/     42E : 0839 0000 00A1 1100 .wait2:		btst	#0,(z80_bus).l
     374/     436 : 66F6                		bne.s	.wait2
     375/     438 : 3D5F 0004           		move.w	(sp)+,4(a6)
     376/     43C :                     
     377/     43C : 426C 0034           		clr.w	vdpHintSp0(a4)
     378/     440 : 397C 0001 0036      		move.w	#1,FamiMdVint(a4)
     379/     446 : 4CDF 7FFF           		movem.l	(sp)+,d0-d7/a0-a6
     380/     44A : 4E73                		rte
     381/     44C :                     
     382/     44C :                     ; ====================================================================
     383/     44C :                     ; ----------------------------------------------------------------
     384/     44C :                     ; HBlank
     385/     44C :                     ; ----------------------------------------------------------------
     386/     44C :                     
     387/     44C :                     MD_Hint:
     388/     44C : 46FC 2700           		move.w	#$2700,sr
     389/     450 : 3D7C 8ADF 0004      		move.w	#$8ADF,4(a6)
     390/     456 : 397C 0001 0034      		move.w	#1,vdpHintSp0(a4)
     391/     45C :                     ; 		move.l	#$C0080000,4(a6)		; for TESTING only
     392/     45C :                     ; 		move.w	#0,(a6)
     393/     45C : 2D7C 7800 0002 0004 		move.l	#$78000002,4(a6)
     394/     464 : 2CAC 0038           		move.l	vdpScrlX(a4),(a6)
     395/     468 : 2D7C 4000 0010 0004 		move.l	#$40000010,4(a6)
     396/     470 : 2CAC 003C           		move.l	vdpScrlY(a4),(a6)
     397/     474 : 4E73                		rte
     398/     476 :                     
     399/     476 :                     ; ====================================================================
     400/     476 :                     ; ----------------------------------------------------------------
     401/     476 :                     ; Load ROM
     402/     476 :                     ; ----------------------------------------------------------------
     403/     476 :                     
     404/     476 :                     Fami_LoadRom:
     405/     476 : 2010                		move.l	(a0),d0		; Read and Load	Fami ROM
     406/     478 : 0C80 4E45 531A      		cmpi.l	#$4E45531A,d0
     407/     47E : 66FE                		bne.s	*
     408/     480 :                     
     409/     480 : 4BF9 FFFF 9000      		lea	(RAM_Fami_RAM).l,a5
     410/     486 : 7000                		moveq	#0,d0
     411/     488 : 323C 01FF           		move.w	#$7FF/4,d1
     412/     48C :                     .clrram:
     413/     48C : 2AC0                		move.l	d0,(a5)+
     414/     48E : 51C9 FFFC           		dbf	d1,.clrram
     415/     492 : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     416/     498 : 7000                		moveq	#0,d0
     417/     49A : 323C 1000           		move.w	#$4000/4,d1
     418/     49E :                     .clrvram:
     419/     49E : 2AC0                		move.l	d0,(a5)+
     420/     4A0 : 51C9 FFFC           		dbf	d1,.clrvram
     421/     4A4 : 4DF9 00C0 0000      		lea 	($C00000),a6
     422/     4AA : 6100 FE0A           		bsr	Fami_InitVideo
     423/     4AE :                     
     424/     4AE : 47F9 FFFF 8000      		lea	(RAM_Fami_Emu).l,a3
     425/     4B4 : 7E00                		moveq	#0,d7			; PRG-ROM copy
     426/     4B6 : 1E28 0004           		move.b	4(a0),d7
     427/     4BA : 6100 19A8           		bsr	romGrabPrg
     428/     4BE : 1E28 0006           		move.b	6(a0),d7		; PPU mirroring
     429/     4C2 : 1C28 0007           		move.b	7(a0),d6
     430/     4C6 : CE7C 00F0           		and.w	#%11110000,d7
     431/     4CA : CC7C 00F0           		and.w	#%11110000,d6
     432/     4CE : E84F                		lsr.w	#4,d7
     433/     4D0 : 8E46                		or.w	d6,d7
     434/     4D2 : 3747 000E           		move.w	d7,cpuMapper(a3)
     435/     4D6 :                     	
     436/     4D6 :                     	; Mirror check
     437/     4D6 : 3E3C 0000           		move.w	#0,d7			; 0 - horizontal
     438/     4DA : 0828 0000 0006      		btst	#0,6(a0)		; PPU mirroring
     439/     4E0 : 6704                		beq.s	loc_9F4
     440/     4E2 : 3E3C 0001           		move.w	#1,d7			; 1 - vertical
     441/     4E6 :                     loc_9F4:
     442/     4E6 : 3747 000C           		move.w	d7,ppuMirror(a3)
     443/     4EA :                     		
     444/     4EA :                     	; COPY CHR-ROM TO RAM
     445/     4EA : 4BF9 FFFF A000      		lea	(RAM_Fami_PPU).l,a5
     446/     4F0 : 274C 0004           		move.l	a4,emuChrRom(a3)
     447/     4F4 : 2E3C 0000 07FF      		move.l	#$7FF,d7
     448/     4FA :                     loc_A10:
     449/     4FA : 2ADC                		move.l	(a4)+,(a5)+
     450/     4FC : 51CF FFFC           		dbf	d7,loc_A10
     451/     500 : D0FC 0010           		adda	#$10,a0
     452/     504 : 2688                		move.l	a0,emuPrgRom(a3)
     453/     506 : 4E75                		rts
     454/     508 :                     
     455/     508 :                     ; ====================================================================
     456/     508 :                     ; ----------------------------------------------------------------
     457/     508 :                     ; Emulator start
     458/     508 :                     ; ----------------------------------------------------------------
     459/     508 :                     
     460/     508 :                     emuStart:
     461/     508 : 41F9 0000 8000      		lea	(ROM_FILE).l,a0
     462/     50E : 6100 FF66           		bsr	Fami_LoadRom
     463/     512 :                     		
     464/     512 : 4DF9 00C0 0000      		lea	($C00000).l,a6
     465/     518 : 49F8 8000           		lea 	(RAM_Fami_Emu),a4
     466/     51C : 47F8 A000           		lea	(RAM_Fami_PPU).w,a3
     467/     520 : 45F8 9000           		lea	(RAM_Fami_RAM).w,a2
     468/     524 : 43F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a1	; PRG base
     469/     52A : 2049                		movea.l	a1,a0
     470/     52C : 303C 7FFC           		move.w	#cpuEntry,d0		; go to Entry
     471/     530 : D0C0                		add.w	d0,a0
     472/     532 : 1028 0001           		move.b	1(a0),d0
     473/     536 : E148                		lsl.w	#8,d0
     474/     538 : 1010                		move.b	(a0),d0
     475/     53A : C07C 7FFF           		and.w	#$7FFF,d0
     476/     53E : 2049                		movea.l	a1,a0
     477/     540 : D0C0                		adda	d0,a0
     478/     542 : 397C 8174 000A      		move.w	#$8174,vdpReg01(a4)
     479/     548 : 33FC 4EF9 FFFF 8FF0 		move.w	#$4EF9,(RAM_EmuLoop).l
     480/     550 : 23FC 0000 0566 FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
     481/     55A :                     
     482/     55A : 7000                		moveq	#0,d0
     483/     55C : 7200                		moveq	#0,d1
     484/     55E : 7400                		moveq	#0,d2
     485/     560 : 263C 0100 2000      		move.l	#$01002000,d3
     486/     566 :                     
     487/     566 :                     ; --------------------------------------------------------
     488/     566 :                     ; a0 - Fami CPU current PC
     489/     566 :                     ; a1 - Fami PRG address
     490/     566 :                     ; a2 - Fami RAM address (for zero addressing)
     491/     566 :                     ; a3 - Fami PPU Buffer
     492/     566 :                     ; a4 - Fami EMU Buffer
     493/     566 :                     ; a5 - Used on temporal tasks
     494/     566 :                     ; a6 - VDP data point
     495/     566 :                     ; 
     496/     566 :                     ; d0 - A register
     497/     566 :                     ; d1 - X register
     498/     566 :                     ; d2 - Y register
     499/     566 :                     ; d3 - Fami STACK Point | MD current sr
     500/     566 :                     ; d4 - free
     501/     566 :                     ; d5 - free
     502/     566 :                     ; d6 - free
     503/     566 :                     ; d7 - emu temporal input/output
     504/     566 :                     ; --------------------------------------------------------
     505/     566 :                     
     506/     566 :                     ; ------------------------------------------------
     507/     566 :                     ; Main Loop
     508/     566 :                     ; ------------------------------------------------
     509/     566 :                     
     510/     566 :                     emuLoop:
     511/     566 : 4A6C 0036           		tst.w	FamiMdVint(a4)
     512/     56A : 660E                		bne.s	famiVInt
     513/     56C :                     emuVint:
     514/     56C : 4244                		clr.w	d4
     515/     56E : 1818                		move.b	(a0)+,d4
     516/     570 : D844                		add.w	d4,d4
     517/     572 : 383B 4050           		move.w	mosCpu(pc,d4.w),d4
     518/     576 : 4EFB 404C           		jmp	mosCpu(pc,d4.w)
     519/     57A :                     
     520/     57A :                     ; ------------------------------------------------
     521/     57A :                     ; VBlank
     522/     57A :                     ; ------------------------------------------------
     523/     57A :                     
     524/     57A :                     famiVInt:
     525/     57A : 426C 0036           		clr.w	FamiMdVint(a4)
     526/     57E : 397C 0080 0032      		move.w	#$80,ppuStatus(a4)
     527/     584 : 4A6C 0010           		tst.w	cpuFamiVint(a4)
     528/     588 : 66E2                		bne.s	emuVint
     529/     58A : 4A6C 0030           		tst.w	ppuNmiFlag(a4)
     530/     58E : 67DC                		beq.s	emuVint
     531/     590 :                     
     532/     590 :                     ; ------------------------------------------------
     533/     590 :                     doVint:
     534/     590 : 23FC 0000 056C FFFF 		move.l	#emuVint,(RAM_EmuLoop+2).l
                    8FF2                
     535/     59A : 397C 0001 0010      		move.w	#1,cpuFamiVint(a4)
     536/     5A0 :                     
     537/     5A0 : 48E7 0884           		movem.l	d4/a0/a5,-(sp)
     538/     5A4 : 3F03                		move.w	d3,-(sp)
     539/     5A6 : 41F9 FFFF 0000      		lea 	(RAM_Fami_ROM),a0	; PRG base
     540/     5AC : 3C3C 7FFA           		move.w	#cpuNMI,d6		; go to NMI
     541/     5B0 : D0C6                		add.w	d6,a0
     542/     5B2 : 1C28 0001           		move.b	1(a0),d6
     543/     5B6 : E14E                		lsl.w	#8,d6
     544/     5B8 : 1C10                		move.b	(a0),d6
     545/     5BA : CC7C 7FFF           		and.w	#$7FFF,d6
     546/     5BE : 2049                		movea.l	a1,a0
     547/     5C0 : D0C6                		add.w	d6,a0
     548/     5C2 : 60A8                		bra	emuVint
     549/     5C4 :                     		
     550/     5C4 :                     ; ----------------------------------------------------------------
     551/     5C4 : 0566                mosCpu:		dc.w mos_BRK-mosCpu	; $00
     552/     5C6 : 0E86                		dc.w loc_1A12-mosCpu
     553/     5C8 : 0200                		dc.w mos_Null-mosCpu
     554/     5CA : 0200                		dc.w mos_Null-mosCpu
     555/     5CC : 0200                		dc.w mos_Null-mosCpu
     556/     5CE : 0DE0                		dc.w loc_1970-mosCpu
     557/     5D0 : 041E                		dc.w loc_1042-mosCpu
     558/     5D2 : 0200                		dc.w mos_Null-mosCpu
     559/     5D4 : 0EEE                		dc.w loc_1A78-mosCpu	; $08
     560/     5D6 : 0DCA                		dc.w loc_195C-mosCpu	; $09 - ORA #$xx
     561/     5D8 : 040A                		dc.w loc_1030-mosCpu
     562/     5DA : 0200                		dc.w mos_Null-mosCpu
     563/     5DC : 0200                		dc.w mos_Null-mosCpu
     564/     5DE : 0E1A                		dc.w loc_19A6-mosCpu
     565/     5E0 : 0460                		dc.w loc_1080-mosCpu
     566/     5E2 : 0200                		dc.w mos_Null-mosCpu
     567/     5E4 : 0556                		dc.w loc_1166-mosCpu	; $10
     568/     5E6 : 0EB0                		dc.w loc_1A3C-mosCpu
     569/     5E8 : 0200                		dc.w mos_Null-mosCpu
     570/     5EA : 0200                		dc.w mos_Null-mosCpu
     571/     5EC : 0200                		dc.w mos_Null-mosCpu
     572/     5EE : 0DFC                		dc.w loc_198A-mosCpu
     573/     5F0 : 043E                		dc.w loc_1060-mosCpu
     574/     5F2 : 0200                		dc.w mos_Null-mosCpu
     575/     5F4 : 05AA                		dc.w loc_11AA-mosCpu	; $18
     576/     5F6 : 0E60                		dc.w loc_19EC-mosCpu
     577/     5F8 : 0200                		dc.w mos_Null-mosCpu
     578/     5FA : 0200                		dc.w mos_Null-mosCpu
     579/     5FC : 0200                		dc.w mos_Null-mosCpu
     580/     5FE : 0E3A                		dc.w loc_19C6-mosCpu
     581/     600 : 0484                		dc.w loc_10A2-mosCpu
     582/     602 : 0200                		dc.w mos_Null-mosCpu
     583/     604 : 0AC0                		dc.w loc_167C-mosCpu	; $20
     584/     606 : 03B2                		dc.w loc_FD8-mosCpu
     585/     608 : 0200                		dc.w mos_Null-mosCpu
     586/     60A : 0200                		dc.w mos_Null-mosCpu
     587/     60C : 04DA                		dc.w loc_10F0-mosCpu
     588/     60E : 030C                		dc.w loc_F36-mosCpu
     589/     610 : 0F48                		dc.w loc_1ACA-mosCpu
     590/     612 : 0200                		dc.w mos_Null-mosCpu
     591/     614 : 0F20                		dc.w loc_1AA6-mosCpu	; $28
     592/     616 : 02F6                		dc.w loc_F22-mosCpu
     593/     618 : 0F32                		dc.w loc_1AB6-mosCpu
     594/     61A : 0200                		dc.w mos_Null-mosCpu
     595/     61C : 0506                		dc.w loc_111A-mosCpu
     596/     61E : 0346                		dc.w loc_F6C-mosCpu
     597/     620 : 0F8E                		dc.w loc_1B0C-mosCpu
     598/     622 : 0200                		dc.w mos_Null-mosCpu
     599/     624 : 0536                		dc.w loc_114A-mosCpu	; $30
     600/     626 : 03DC                		dc.w loc_1002-mosCpu
     601/     628 : 0200                		dc.w mos_Null-mosCpu
     602/     62A : 0200                		dc.w mos_Null-mosCpu
     603/     62C : 0200                		dc.w mos_Null-mosCpu
     604/     62E : 0328                		dc.w loc_F50-mosCpu
     605/     630 : 0F6A                		dc.w loc_1AEA-mosCpu
     606/     632 : 0200                		dc.w mos_Null-mosCpu
     607/     634 : 11FE                		dc.w loc_1D80-mosCpu	; $38
     608/     636 : 038C                		dc.w loc_FB2-mosCpu
     609/     638 : 0200                		dc.w mos_Null-mosCpu
     610/     63A : 0200                		dc.w mos_Null-mosCpu
     611/     63C : 0200                		dc.w mos_Null-mosCpu
     612/     63E : 0366                		dc.w loc_F8C-mosCpu
     613/     640 : 0FB4                		dc.w loc_1B30-mosCpu
     614/     642 : 0200                		dc.w mos_Null-mosCpu
     615/     644 : 1086                		dc.w loc_1BF6-mosCpu	; $40 - RTI
     616/     646 : 098E                		dc.w loc_1566-mosCpu
     617/     648 : 0200                		dc.w mos_Null-mosCpu
     618/     64A : 0200                		dc.w mos_Null-mosCpu
     619/     64C : 0200                		dc.w mos_Null-mosCpu
     620/     64E : 08E8                		dc.w loc_14C4-mosCpu
     621/     650 : 0D36                		dc.w loc_18D2-mosCpu
     622/     652 : 0200                		dc.w mos_Null-mosCpu
     623/     654 : 0EDE                		dc.w loc_1A6A-mosCpu	; $48
     624/     656 : 08D2                		dc.w loc_14B0-mosCpu
     625/     658 : 0D22                		dc.w loc_18C0-mosCpu
     626/     65A : 0200                		dc.w mos_Null-mosCpu
     627/     65C : 0A82                		dc.w loc_164E-mosCpu	; $4C - JMP $xxxx
     628/     65E : 0922                		dc.w loc_14FA-mosCpu
     629/     660 : 0D78                		dc.w loc_1910-mosCpu
     630/     662 : 0200                		dc.w mos_Null-mosCpu
     631/     664 : 058A                		dc.w loc_118E-mosCpu	; $50
     632/     666 : 09B8                		dc.w loc_1590-mosCpu
     633/     668 : 0200                		dc.w mos_Null-mosCpu
     634/     66A : 0200                		dc.w mos_Null-mosCpu
     635/     66C : 0200                		dc.w mos_Null-mosCpu
     636/     66E : 0904                		dc.w loc_14DE-mosCpu
     637/     670 : 0D56                		dc.w loc_18F0-mosCpu
     638/     672 : 0200                		dc.w mos_Null-mosCpu
     639/     674 : 05C0                		dc.w loc_11BC-mosCpu	; $58
     640/     676 : 0968                		dc.w loc_1540-mosCpu
     641/     678 : 0200                		dc.w mos_Null-mosCpu
     642/     67A : 0200                		dc.w mos_Null-mosCpu
     643/     67C : 0200                		dc.w mos_Null-mosCpu
     644/     67E : 0942                		dc.w loc_151A-mosCpu
     645/     680 : 0D9C                		dc.w loc_1932-mosCpu
     646/     682 : 0200                		dc.w mos_Null-mosCpu
     647/     684 : 10A2                		dc.w loc_1C32-mosCpu	; $60 - RTS
     648/     686 : 02A6                		dc.w loc_ED2-mosCpu
     649/     688 : 0200                		dc.w mos_Null-mosCpu
     650/     68A : 0200                		dc.w mos_Null-mosCpu
     651/     68C : 0200                		dc.w mos_Null-mosCpu
     652/     68E : 0214                		dc.w loc_E44-mosCpu
     653/     690 : 0FF2                		dc.w loc_1B6A-mosCpu
     654/     692 : 0200                		dc.w mos_Null-mosCpu
     655/     694 : 0F00                		dc.w loc_1A88-mosCpu	; $68
     656/     696 : 0202                		dc.w loc_E34-mosCpu
     657/     698 : 0FDC                		dc.w loc_1B56-mosCpu
     658/     69A : 0200                		dc.w mos_Null-mosCpu
     659/     69C : 0A9C                		dc.w loc_1660-mosCpu	; $6C - JMP ($xxxx)
     660/     69E : 0246                		dc.w loc_E72-mosCpu
     661/     6A0 : 1038                		dc.w loc_1BAC-mosCpu
     662/     6A2 : 0200                		dc.w mos_Null-mosCpu
     663/     6A4 : 059A                		dc.w loc_119C-mosCpu	; $70
     664/     6A6 : 02CC                		dc.w loc_EF8-mosCpu
     665/     6A8 : 0200                		dc.w mos_Null-mosCpu
     666/     6AA : 0200                		dc.w mos_Null-mosCpu
     667/     6AC : 0200                		dc.w mos_Null-mosCpu
     668/     6AE : 022C                		dc.w loc_E5A-mosCpu
     669/     6B0 : 1014                		dc.w loc_1B8A-mosCpu
     670/     6B2 : 0200                		dc.w mos_Null-mosCpu
     671/     6B4 : 1214                		dc.w loc_1D92-mosCpu	; $78
     672/     6B6 : 0284                		dc.w loc_EB0-mosCpu
     673/     6B8 : 0200                		dc.w mos_Null-mosCpu
     674/     6BA : 0200                		dc.w mos_Null-mosCpu
     675/     6BC : 0200                		dc.w mos_Null-mosCpu
     676/     6BE : 0262                		dc.w loc_E8E-mosCpu
     677/     6C0 : 105E                		dc.w loc_1BD0-mosCpu
     678/     6C2 : 0200                		dc.w mos_Null-mosCpu
     679/     6C4 : 0200                		dc.w mos_Null-mosCpu	; $80
     680/     6C6 : 127A                		dc.w loc_1DF6-mosCpu
     681/     6C8 : 0200                		dc.w mos_Null-mosCpu
     682/     6CA : 0200                		dc.w mos_Null-mosCpu
     683/     6CC : 12E0                		dc.w loc_1E5C-mosCpu
     684/     6CE : 1220                		dc.w loc_1D9C-mosCpu
     685/     6D0 : 12AE                		dc.w loc_1E2E-mosCpu
     686/     6D2 : 0200                		dc.w mos_Null-mosCpu
     687/     6D4 : 08BE                		dc.w loc_149E-mosCpu	; $88
     688/     6D6 : 0200                		dc.w mos_Null-mosCpu
     689/     6D8 : 1352                		dc.w loc_1EC4-mosCpu
     690/     6DA : 0200                		dc.w mos_Null-mosCpu
     691/     6DC : 12FE                		dc.w loc_1E76-mosCpu
     692/     6DE : 123E                		dc.w loc_1DB6-mosCpu
     693/     6E0 : 12CC                		dc.w loc_1E48-mosCpu
     694/     6E2 : 0200                		dc.w mos_Null-mosCpu
     695/     6E4 : 04AA                		dc.w loc_10C6-mosCpu	; $90
     696/     6E6 : 1292                		dc.w loc_1E10-mosCpu
     697/     6E8 : 0200                		dc.w mos_Null-mosCpu
     698/     6EA : 0200                		dc.w mos_Null-mosCpu
     699/     6EC : 12EE                		dc.w loc_1E68-mosCpu
     700/     6EE : 122E                		dc.w loc_1DA8-mosCpu
     701/     6F0 : 12BC                		dc.w loc_1E3A-mosCpu
     702/     6F2 : 0200                		dc.w mos_Null-mosCpu
     703/     6F4 : 1372                		dc.w loc_1EE0-mosCpu	; $98
     704/     6F6 : 1266                		dc.w loc_1DE0-mosCpu
     705/     6F8 : 1366                		dc.w loc_1Ed3-mosCpu
     706/     6FA : 0200                		dc.w mos_Null-mosCpu
     707/     6FC : 0200                		dc.w mos_Null-mosCpu
     708/     6FE : 1252                		dc.w loc_1DCA-mosCpu
     709/     700 : 0200                		dc.w mos_Null-mosCpu
     710/     702 : 0200                		dc.w mos_Null-mosCpu
     711/     704 : 0C92                		dc.w loc_1836-mosCpu	; $A0
     712/     706 : 0BAA                		dc.w loc_1754-mosCpu
     713/     708 : 0C02                		dc.w loc_17AC-mosCpu
     714/     70A : 0200                		dc.w mos_Null-mosCpu
     715/     70C : 0CA6                		dc.w loc_1848-mosCpu
     716/     70E : 0B08                		dc.w loc_16B6-mosCpu
     717/     710 : 0C16                		dc.w loc_17BE-mosCpu
     718/     712 : 0200                		dc.w mos_Null-mosCpu
     719/     714 : 1326                		dc.w loc_1E9C-mosCpu	; $A8
     720/     716 : 0AF4                		dc.w loc_16A4-mosCpu	; $A9 - LDA #$xx
     721/     718 : 1312                		dc.w loc_1E8A-mosCpu
     722/     71A : 0200                		dc.w mos_Null-mosCpu
     723/     71C : 0CDC                		dc.w loc_187A-mosCpu
     724/     71E : 0B3E                		dc.w loc_16E8-mosCpu
     725/     720 : 0C4C                		dc.w loc_17F0-mosCpu
     726/     722 : 0200                		dc.w mos_Null-mosCpu
     727/     724 : 04BA                		dc.w loc_10D4-mosCpu
     728/     726 : 0BD4                		dc.w loc_177E-mosCpu
     729/     728 : 0200                		dc.w mos_Null-mosCpu
     730/     72A : 0200                		dc.w mos_Null-mosCpu
     731/     72C : 0CC0                		dc.w loc_1860-mosCpu
     732/     72E : 0B22                		dc.w loc_16CE-mosCpu
     733/     730 : 0C30                		dc.w loc_17d3-mosCpu
     734/     732 : 0200                		dc.w mos_Null-mosCpu
     735/     734 : 05CC                		dc.w loc_11C6-mosCpu
     736/     736 : 0B84                		dc.w loc_172E-mosCpu
     737/     738 : 133A                		dc.w loc_1EAE-mosCpu
     738/     73A : 0200                		dc.w mos_Null-mosCpu
     739/     73C : 0CFC                		dc.w loc_189A-mosCpu
     740/     73E : 0B5E                		dc.w loc_1708-mosCpu
     741/     740 : 0C6C                		dc.w loc_1810-mosCpu
     742/     742 : 0200                		dc.w mos_Null-mosCpu
     743/     744 : 07C0                		dc.w loc_13AE-mosCpu
     744/     746 : 06DA                		dc.w loc_12CC-mosCpu
     745/     748 : 0200                		dc.w mos_Null-mosCpu
     746/     74A : 0200                		dc.w mos_Null-mosCpu
     747/     74C : 07E2                		dc.w loc_13CE-mosCpu
     748/     74E : 05F8                		dc.w loc_11EE-mosCpu
     749/     750 : 0836                		dc.w loc_1420-mosCpu
     750/     752 : 0200                		dc.w mos_Null-mosCpu
     751/     754 : 0A6E                		dc.w loc_163C-mosCpu
     752/     756 : 05D6                		dc.w loc_11CE-mosCpu
     753/     758 : 08AA                		dc.w loc_148C-mosCpu
     754/     75A : 0200                		dc.w mos_Null-mosCpu
     755/     75C : 080A                		dc.w loc_13F4-mosCpu
     756/     75E : 064A                		dc.w loc_123C-mosCpu
     757/     760 : 086C                		dc.w loc_1452-mosCpu
     758/     762 : 0200                		dc.w mos_Null-mosCpu
     759/     764 : 0546                		dc.w loc_1158-mosCpu
     760/     766 : 0710                		dc.w loc_1302-mosCpu
     761/     768 : 0200                		dc.w mos_Null-mosCpu
     762/     76A : 0200                		dc.w mos_Null-mosCpu
     763/     76C : 0200                		dc.w mos_Null-mosCpu
     764/     76E : 0620                		dc.w loc_1214-mosCpu
     765/     770 : 0850                		dc.w loc_1438-mosCpu
     766/     772 : 0200                		dc.w mos_Null-mosCpu
     767/     774 : 05B4                		dc.w loc_11B2-mosCpu
     768/     776 : 06A8                		dc.w loc_129A-mosCpu
     769/     778 : 0200                		dc.w mos_Null-mosCpu
     770/     77A : 0200                		dc.w mos_Null-mosCpu
     771/     77C : 0200                		dc.w mos_Null-mosCpu
     772/     77E : 0676                		dc.w loc_1268-mosCpu
     773/     780 : 088A                		dc.w loc_146E-mosCpu
     774/     782 : 0200                		dc.w mos_Null-mosCpu
     775/     784 : 074A                		dc.w loc_133C-mosCpu
     776/     786 : 119E                		dc.w loc_1D20-mosCpu
     777/     788 : 0200                		dc.w mos_Null-mosCpu
     778/     78A : 0200                		dc.w mos_Null-mosCpu
     779/     78C : 076C                		dc.w loc_135C-mosCpu
     780/     78E : 10E4                		dc.w loc_1C6A-mosCpu
     781/     790 : 09E6                		dc.w loc_15BE-mosCpu
     782/     792 : 0200                		dc.w mos_Null-mosCpu
     783/     794 : 0A5A                		dc.w loc_162A-mosCpu
     784/     796 : 10CA                		dc.w loc_1C52-mosCpu
     785/     798 : 0DC2                		dc.w loc_1956-mosCpu
     786/     79A : 0200                		dc.w mos_Null-mosCpu
     787/     79C : 0794                		dc.w loc_1382-mosCpu
     788/     79E : 1126                		dc.w loc_1CA8-mosCpu
     789/     7A0 : 0A1C                		dc.w loc_15F0-mosCpu
     790/     7A2 : 0200                		dc.w mos_Null-mosCpu
     791/     7A4 : 04CA                		dc.w loc_10E2-mosCpu
     792/     7A6 : 11CC                		dc.w loc_1D4E-mosCpu
     793/     7A8 : 0200                		dc.w mos_Null-mosCpu
     794/     7AA : 0200                		dc.w mos_Null-mosCpu
     795/     7AC : 0200                		dc.w mos_Null-mosCpu
     796/     7AE : 1104                		dc.w loc_1C88-mosCpu
     797/     7B0 : 0A00                		dc.w loc_15d3-mosCpu
     798/     7B2 : 0200                		dc.w mos_Null-mosCpu
     799/     7B4 : 1208                		dc.w loc_1D88-mosCpu
     800/     7B6 : 1174                		dc.w loc_1CF6-mosCpu
     801/     7B8 : 0200                		dc.w mos_Null-mosCpu
     802/     7BA : 0200                		dc.w mos_Null-mosCpu
     803/     7BC : 0200                		dc.w mos_Null-mosCpu
     804/     7BE : 114A                		dc.w loc_1CCC-mosCpu
     805/     7C0 : 0A3A                		dc.w loc_160C-mosCpu
     806/     7C2 : 0200                		dc.w mos_Null-mosCpu
     807/     7C4 :                     ; ----------------------------------------------------------------
     808/     7C4 :                     
     809/     7C4 :                     mos_Null:
     810/     7C4 : 60FE                		bra.s	*
     811/     7C6 :                     
     812/     7C6 :                     ; ----------------------------------------------------------------
     813/     7C6 :                     
     814/     7C6 :                     loc_E34:
     815/     7C6 : 1E18                		move.b	(a0)+,d7
     816/     7C8 : 0003 0004           		ori.b	#4,d3
     817/     7CC : 46C3                		move	d3,sr
     818/     7CE : D107                		addx.b	d7,d0
     819/     7D0 : 40C3                		move	sr,d3
     820/     7D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     821/     7D8 :                     ; ----------------------------------------------------------------
     822/     7D8 :                     
     823/     7D8 :                     loc_E44:
     824/     7D8 : 4246                		clr.w	d6
     825/     7DA : 1C18                		move.b	(a0)+,d6
     826/     7DC : 1E32 6000           		move.b	(a2,d6.w),d7
     827/     7E0 : 0003 0004           		ori.b	#4,d3
     828/     7E4 : 46C3                		move	d3,sr
     829/     7E6 : D107                		addx.b	d7,d0
     830/     7E8 : 40C3                		move	sr,d3
     831/     7EA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     832/     7F0 :                     ; ----------------------------------------------------------------
     833/     7F0 :                     
     834/     7F0 :                     loc_E5A:
     835/     7F0 : 4246                		clr.w	d6
     836/     7F2 : 1C18                		move.b	(a0)+,d6
     837/     7F4 : DC01                		add.b	d1,d6
     838/     7F6 : 1E32 6000           		move.b	(a2,d6.w),d7
     839/     7FA : 0003 0004           		ori.b	#4,d3
     840/     7FE : 46C3                		move	d3,sr
     841/     800 : D107                		addx.b	d7,d0
     842/     802 : 40C3                		move	sr,d3
     843/     804 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     844/     80A :                     ; ----------------------------------------------------------------
     845/     80A :                     
     846/     80A :                     loc_E72:				; DATA XREF: ROM:00000BE6o
     847/     80A : 4244                		clr.w	d4
     848/     80C : 1818                		move.b	(a0)+,d4
     849/     80E : 4246                		clr.w	d6
     850/     810 : 1C18                		move.b	(a0)+,d6
     851/     812 : 6100 1136           		bsr	addr_Read
     852/     816 : 0003 0004           		ori.b	#4,d3
     853/     81A : 46C3                		move	d3,sr
     854/     81C : D107                		addx.b	d7,d0
     855/     81E : 40C3                		move	sr,d3
     856/     820 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     857/     826 :                     ; ----------------------------------------------------------------
     858/     826 :                     
     859/     826 :                     loc_E8E:				; DATA XREF: ROM:00000C26o
     860/     826 : 4244                		clr.w	d4
     861/     828 : 1818                		move.b	(a0)+,d4
     862/     82A : 4246                		clr.w	d6
     863/     82C : 1C18                		move.b	(a0)+,d6
     864/     82E : 4207                		clr.b	d7
     865/     830 : D801                		add.b	d1,d4
     866/     832 : DD07                		addx.b	d7,d6
     867/     834 : 6100 1114           		bsr	addr_Read
     868/     838 : 0003 0004           		ori.b	#4,d3
     869/     83C : 46C3                		move	d3,sr
     870/     83E : D107                		addx.b	d7,d0
     871/     840 : 40C3                		move	sr,d3
     872/     842 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     873/     848 :                     ; ----------------------------------------------------------------
     874/     848 :                     
     875/     848 :                     loc_EB0:				; DATA XREF: ROM:00000C16o
     876/     848 : 4244                		clr.w	d4
     877/     84A : 1818                		move.b	(a0)+,d4
     878/     84C : 4246                		clr.w	d6
     879/     84E : 1C18                		move.b	(a0)+,d6
     880/     850 : 4207                		clr.b	d7
     881/     852 : D802                		add.b	d2,d4
     882/     854 : DD07                		addx.b	d7,d6
     883/     856 : 6100 10F2           		bsr	addr_Read
     884/     85A : 0003 0004           		ori.b	#4,d3
     885/     85E : 46C3                		move	d3,sr
     886/     860 : D107                		addx.b	d7,d0
     887/     862 : 40C3                		move	sr,d3
     888/     864 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     889/     86A :                     ; ----------------------------------------------------------------
     890/     86A :                     
     891/     86A :                     loc_ED2:				; DATA XREF: ROM:00000BB6o
     892/     86A : 4245                		clr.w	d5
     893/     86C : 1A18                		move.b	(a0)+,d5
     894/     86E : DA01                		add.b	d1,d5
     895/     870 : 4244                		clr.w	d4
     896/     872 : 1832 5000           		move.b	(a2,d5.w),d4
     897/     876 : 4246                		clr.w	d6
     898/     878 : 1C32 5001           		move.b	1(a2,d5.w),d6
     899/     87C : 6100 10CC           		bsr	addr_Read
     900/     880 : 0003 0004           		ori.b	#4,d3
     901/     884 : 46C3                		move	d3,sr
     902/     886 : D107                		addx.b	d7,d0
     903/     888 : 40C3                		move	sr,d3
     904/     88A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     905/     890 :                     ; ----------------------------------------------------------------
     906/     890 :                     
     907/     890 :                     loc_EF8:				; DATA XREF: ROM:00000BF6o
     908/     890 : 4245                		clr.w	d5
     909/     892 : 1A18                		move.b	(a0)+,d5
     910/     894 : 4244                		clr.w	d4
     911/     896 : 1832 5000           		move.b	(a2,d5.w),d4
     912/     89A : 4246                		clr.w	d6
     913/     89C : 1C32 5001           		move.b	1(a2,d5.w),d6
     914/     8A0 : 4207                		clr.b	d7
     915/     8A2 : D802                		add.b	d2,d4
     916/     8A4 : DD07                		addx.b	d7,d6
     917/     8A6 : 6100 10A2           		bsr	addr_Read
     918/     8AA : 0003 0004           		ori.b	#4,d3
     919/     8AE : 46C3                		move	d3,sr
     920/     8B0 : D107                		addx.b	d7,d0
     921/     8B2 : 40C3                		move	sr,d3
     922/     8B4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     923/     8BA :                     ; ----------------------------------------------------------------
     924/     8BA :                     
     925/     8BA :                     loc_F22:				; DATA XREF: ROM:00000Ad3o
     926/     8BA : 1E18                		move.b	(a0)+,d7
     927/     8BC : C007                		and.b	d7,d0
     928/     8BE : 40C5                		move	sr,d5
     929/     8C0 : 0245 000C           		andi.w	#$C,d5
     930/     8C4 : 0203 00F3           		andi.b	#$F3,d3
     931/     8C8 : 8645                		or.w	d5,d3
     932/     8CA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     933/     8D0 :                     ; ----------------------------------------------------------------
     934/     8D0 :                     
     935/     8D0 :                     loc_F36:				; DATA XREF: ROM:00000AC6o
     936/     8D0 : 4246                		clr.w	d6
     937/     8D2 : 1C18                		move.b	(a0)+,d6
     938/     8D4 : 1E32 6000           		move.b	(a2,d6.w),d7
     939/     8D8 : C007                		and.b	d7,d0
     940/     8DA : 40C5                		move	sr,d5
     941/     8DC : 0245 000C           		andi.w	#$C,d5
     942/     8E0 : 0203 00F3           		andi.b	#$F3,d3
     943/     8E4 : 8645                		or.w	d5,d3
     944/     8E6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     945/     8EC :                     ; ----------------------------------------------------------------
     946/     8EC :                     
     947/     8EC :                     loc_F50:				; DATA XREF: ROM:00000B06o
     948/     8EC : 4246                		clr.w	d6
     949/     8EE : 1C18                		move.b	(a0)+,d6
     950/     8F0 : DC01                		add.b	d1,d6
     951/     8F2 : 1E32 6000           		move.b	(a2,d6.w),d7
     952/     8F6 : C007                		and.b	d7,d0
     953/     8F8 : 40C5                		move	sr,d5
     954/     8FA : 0245 000C           		andi.w	#$C,d5
     955/     8FE : 0203 00F3           		andi.b	#$F3,d3
     956/     902 : 8645                		or.w	d5,d3
     957/     904 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     958/     90A :                     ; ----------------------------------------------------------------
     959/     90A :                     
     960/     90A :                     loc_F6C:
     961/     90A : 4244                		clr.w	d4
     962/     90C : 1818                		move.b	(a0)+,d4
     963/     90E : 4246                		clr.w	d6
     964/     910 : 1C18                		move.b	(a0)+,d6
     965/     912 : 6100 1036           		bsr	addr_Read
     966/     916 : C007                		and.b	d7,d0
     967/     918 : 40C5                		move	sr,d5
     968/     91A : 0245 000C           		andi.w	#$C,d5
     969/     91E : 0203 00F3           		andi.b	#$F3,d3
     970/     922 : 8645                		or.w	d5,d3
     971/     924 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     972/     92A :                     ; ----------------------------------------------------------------
     973/     92A :                     
     974/     92A :                     loc_F8C:
     975/     92A : 4244                		clr.w	d4
     976/     92C : 1818                		move.b	(a0)+,d4
     977/     92E : 4246                		clr.w	d6
     978/     930 : 1C18                		move.b	(a0)+,d6
     979/     932 : 4207                		clr.b	d7
     980/     934 : D801                		add.b	d1,d4
     981/     936 : DD07                		addx.b	d7,d6
     982/     938 : 6100 1010           		bsr	addr_Read
     983/     93C : C007                		and.b	d7,d0
     984/     93E : 40C5                		move	sr,d5
     985/     940 : 0245 000C           		andi.w	#$C,d5
     986/     944 : 0203 00F3           		andi.b	#$F3,d3
     987/     948 : 8645                		or.w	d5,d3
     988/     94A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
     989/     950 :                     ; ----------------------------------------------------------------
     990/     950 :                     
     991/     950 :                     loc_FB2:				; DATA XREF: ROM:00000B16o
     992/     950 : 4244                		clr.w	d4
     993/     952 : 1818                		move.b	(a0)+,d4
     994/     954 : 4246                		clr.w	d6
     995/     956 : 1C18                		move.b	(a0)+,d6
     996/     958 : 4207                		clr.b	d7
     997/     95A : D802                		add.b	d2,d4
     998/     95C : DD07                		addx.b	d7,d6
     999/     95E : 6100 0FEA           		bsr	addr_Read
    1000/     962 : C007                		and.b	d7,d0
    1001/     964 : 40C5                		move	sr,d5
    1002/     966 : 0245 000C           		andi.w	#$C,d5
    1003/     96A : 0203 00F3           		andi.b	#$F3,d3
    1004/     96E : 8645                		or.w	d5,d3
    1005/     970 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1006/     976 :                     ; ----------------------------------------------------------------
    1007/     976 :                     
    1008/     976 :                     loc_FD8:				; DATA XREF: ROM:00000AB6o
    1009/     976 : 4245                		clr.w	d5
    1010/     978 : 1A18                		move.b	(a0)+,d5
    1011/     97A : DA01                		add.b	d1,d5
    1012/     97C : 4244                		clr.w	d4
    1013/     97E : 1832 5000           		move.b	(a2,d5.w),d4
    1014/     982 : 4246                		clr.w	d6
    1015/     984 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1016/     988 : 6100 0FC0           		bsr	addr_Read
    1017/     98C : C007                		and.b	d7,d0
    1018/     98E : 40C5                		move	sr,d5
    1019/     990 : 0245 000C           		andi.w	#$C,d5
    1020/     994 : 0203 00F3           		andi.b	#$F3,d3
    1021/     998 : 8645                		or.w	d5,d3
    1022/     99A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1023/     9A0 :                     ; ----------------------------------------------------------------
    1024/     9A0 :                     
    1025/     9A0 :                     loc_1002:				; DATA XREF: ROM:00000AF6o
    1026/     9A0 : 4245                		clr.w	d5
    1027/     9A2 : 1A18                		move.b	(a0)+,d5
    1028/     9A4 : 4244                		clr.w	d4
    1029/     9A6 : 1832 5000           		move.b	(a2,d5.w),d4
    1030/     9AA : 4246                		clr.w	d6
    1031/     9AC : 1C32 5001           		move.b	1(a2,d5.w),d6
    1032/     9B0 : 4207                		clr.b	d7
    1033/     9B2 : D802                		add.b	d2,d4
    1034/     9B4 : DD07                		addx.b	d7,d6
    1035/     9B6 : 6100 0F92           		bsr	addr_Read
    1036/     9BA : C007                		and.b	d7,d0
    1037/     9BC : 40C5                		move	sr,d5
    1038/     9BE : 0245 000C           		andi.w	#$C,d5
    1039/     9C2 : 0203 00F3           		andi.b	#$F3,d3
    1040/     9C6 : 8645                		or.w	d5,d3
    1041/     9C8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1042/     9CE :                     ; ----------------------------------------------------------------
    1043/     9CE :                     
    1044/     9CE :                     loc_1030:				; DATA XREF: ROM:00000A5Ao
    1045/     9CE : E308                		lsl.b	#1,d0
    1046/     9D0 : 40C5                		move	sr,d5
    1047/     9D2 : 0245 001D           		andi.w	#$1D,d5
    1048/     9D6 : 0203 00E2           		andi.b	#$E2,d3
    1049/     9DA : 8645                		or.w	d5,d3
    1050/     9DC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1051/     9E2 :                     ; ----------------------------------------------------------------
    1052/     9E2 :                     
    1053/     9E2 :                     loc_1042:
    1054/     9E2 : 4246                		clr.w	d6
    1055/     9E4 : 1C18                		move.b	(a0)+,d6
    1056/     9E6 : 1E32 6000           		move.b	(a2,d6.w),d7
    1057/     9EA : E30F                		lsl.b	#1,d7
    1058/     9EC : 40C5                		move	sr,d5
    1059/     9EE : 0245 001D           		andi.w	#$1D,d5
    1060/     9F2 : 0203 00E2           		andi.b	#$E2,d3
    1061/     9F6 : 8645                		or.w	d5,d3
    1062/     9F8 : 1587 6000           		move.b	d7,(a2,d6.w)
    1063/     9FC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1064/     A02 :                     ; ----------------------------------------------------------------
    1065/     A02 :                     
    1066/     A02 :                     loc_1060:
    1067/     A02 : 4246                		clr.w	d6
    1068/     A04 : 1C18                		move.b	(a0)+,d6
    1069/     A06 : DC01                		add.b	d1,d6
    1070/     A08 : 1E32 6000           		move.b	(a2,d6.w),d7
    1071/     A0C : E30F                		lsl.b	#1,d7
    1072/     A0E : 40C5                		move	sr,d5
    1073/     A10 : 0245 001D           		andi.w	#$1D,d5
    1074/     A14 : 0203 00E2           		andi.b	#$E2,d3
    1075/     A18 : 8645                		or.w	d5,d3
    1076/     A1A : 1587 6000           		move.b	d7,(a2,d6.w)
    1077/     A1E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1078/     A24 :                     ; ----------------------------------------------------------------
    1079/     A24 :                     
    1080/     A24 :                     loc_1080:
    1081/     A24 : 1818                		move.b	(a0)+,d4
    1082/     A26 : 1C18                		move.b	(a0)+,d6
    1083/     A28 : E14E                		lsl.w	#8,d6
    1084/     A2A : 1C04                		move.b	d4,d6
    1085/     A2C : 1E32 6000           		move.b	(a2,d6.w),d7
    1086/     A30 : E30F                		lsl.b	#1,d7
    1087/     A32 : 40C5                		move	sr,d5
    1088/     A34 : 0245 001D           		andi.w	#$1D,d5
    1089/     A38 : 0203 00E2           		andi.b	#$E2,d3
    1090/     A3C : 8645                		or.w	d5,d3
    1091/     A3E : 1587 6000           		move.b	d7,(a2,d6.w)
    1092/     A42 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1093/     A48 :                     ; ----------------------------------------------------------------
    1094/     A48 :                     
    1095/     A48 :                     loc_10A2:				; DATA XREF: ROM:00000AAAo
    1096/     A48 : 1818                		move.b	(a0)+,d4
    1097/     A4A : 1C18                		move.b	(a0)+,d6
    1098/     A4C : E14E                		lsl.w	#8,d6
    1099/     A4E : 1C04                		move.b	d4,d6
    1100/     A50 : DC41                		add.w	d1,d6
    1101/     A52 : 1E32 6000           		move.b	(a2,d6.w),d7
    1102/     A56 : E30F                		lsl.b	#1,d7
    1103/     A58 : 40C5                		move	sr,d5
    1104/     A5A : 0245 001D           		andi.w	#$1D,d5
    1105/     A5E : 0203 00E2           		andi.b	#$E2,d3
    1106/     A62 : 8645                		or.w	d5,d3
    1107/     A64 : 1587 6000           		move.b	d7,(a2,d6.w)
    1108/     A68 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1109/     A6E :                     ; ----------------------------------------------------------------
    1110/     A6E :                     
    1111/     A6E :                     loc_10C6:
    1112/     A6E : 1C18                		move.b	(a0)+,d6
    1113/     A70 : 46C3                		move	d3,sr
    1114/     A72 : 6504                		bcs.s	loc_10D0
    1115/     A74 : 4886                		ext.w	d6
    1116/     A76 : D0C6                		adda.w	d6,a0
    1117/     A78 :                     loc_10D0:
    1118/     A78 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1119/     A7E :                     ; ----------------------------------------------------------------
    1120/     A7E :                     
    1121/     A7E :                     loc_10D4:
    1122/     A7E : 1C18                		move.b	(a0)+,d6
    1123/     A80 : 46C3                		move	d3,sr
    1124/     A82 : 6404                		bcc.s	loc_10DE
    1125/     A84 : 4886                		ext.w	d6
    1126/     A86 : D0C6                		adda.w	d6,a0
    1127/     A88 :                     loc_10DE:
    1128/     A88 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1129/     A8E :                     ; ----------------------------------------------------------------
    1130/     A8E :                     
    1131/     A8E :                     loc_10E2:
    1132/     A8E : 1C18                		move.b	(a0)+,d6
    1133/     A90 : 46C3                		move	d3,sr
    1134/     A92 : 6604                		bne.s	loc_10EC
    1135/     A94 : 4886                		ext.w	d6
    1136/     A96 : D0C6                		adda.w	d6,a0
    1137/     A98 :                     loc_10EC:
    1138/     A98 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1139/     A9E :                     ; ----------------------------------------------------------------
    1140/     A9E :                     
    1141/     A9E :                     loc_10F0:
    1142/     A9E : 4246                		clr.w	d6
    1143/     AA0 : 1C18                		move.b	(a0)+,d6
    1144/     AA2 : 1E32 6000           		move.b	(a2,d6.w),d7
    1145/     AA6 : 1807                		move.b	d7,d4
    1146/     AA8 : 0203 00F1           		andi.b	#$F1,d3
    1147/     AAC : E30F                		lsl.b	#1,d7
    1148/     AAE : 6404                		bcc.s	loc_1106
    1149/     AB0 : 0003 0008           		ori.b	#8,d3
    1150/     AB4 :                     loc_1106:
    1151/     AB4 : E30F                		lsl.b	#1,d7
    1152/     AB6 : 6404                		bcc.s	loc_110E
    1153/     AB8 : 0003 0002           		ori.b	#2,d3
    1154/     ABC :                     loc_110E:
    1155/     ABC : C800                		and.b	d0,d4
    1156/     ABE : 6604                		bne.s	loc_1116
    1157/     AC0 : 0003 0004           		ori.b	#4,d3
    1158/     AC4 :                     loc_1116:
    1159/     AC4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1160/     ACA :                     ; ----------------------------------------------------------------
    1161/     ACA :                     
    1162/     ACA :                     loc_111A:
    1163/     ACA : 4244                		clr.w	d4
    1164/     ACC : 1818                		move.b	(a0)+,d4
    1165/     ACE : 4246                		clr.w	d6
    1166/     AD0 : 1C18                		move.b	(a0)+,d6
    1167/     AD2 : 6100 0E76           		bsr	addr_Read
    1168/     AD6 : 1807                		move.b	d7,d4
    1169/     AD8 : 0203 00F1           		andi.b	#$F1,d3
    1170/     ADC : E30F                		lsl.b	#1,d7
    1171/     ADE : 6404                		bcc.s	loc_1136
    1172/     AE0 : 0003 0008           		ori.b	#8,d3
    1173/     AE4 :                     
    1174/     AE4 :                     loc_1136:
    1175/     AE4 : E30F                		lsl.b	#1,d7
    1176/     AE6 : 6404                		bcc.s	loc_113E
    1177/     AE8 : 0003 0002           		ori.b	#2,d3
    1178/     AEC :                     
    1179/     AEC :                     loc_113E:
    1180/     AEC : C800                		and.b	d0,d4
    1181/     AEE : 6604                		bne.s	loc_1146
    1182/     AF0 : 0003 0004           		ori.b	#4,d3
    1183/     AF4 :                     
    1184/     AF4 :                     loc_1146:
    1185/     AF4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1186/     AFA :                     ; ----------------------------------------------------------------
    1187/     AFA :                     
    1188/     AFA :                     loc_114A:				; DATA XREF: ROM:00000AF2o
    1189/     AFA : 1C18                		move.b	(a0)+,d6
    1190/     AFC : 46C3                		move	d3,sr
    1191/     AFE : 6A04                		bpl.s	loc_1154
    1192/     B00 : 4886                		ext.w	d6
    1193/     B02 : D0C6                		adda.w	d6,a0
    1194/     B04 :                     
    1195/     B04 :                     loc_1154:				; CODE XREF: ROM:0000114Ej
    1196/     B04 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1197/     B0A :                     ; ----------------------------------------------------------------
    1198/     B0A :                     
    1199/     B0A :                     loc_1158:				; DATA XREF: ROM:00000D72o
    1200/     B0A : 1C18                		move.b	(a0)+,d6
    1201/     B0C : 46C3                		move	d3,sr
    1202/     B0E : 6704                		beq.s	loc_1162
    1203/     B10 : 4886                		ext.w	d6
    1204/     B12 : D0C6                		adda.w	d6,a0
    1205/     B14 :                     
    1206/     B14 :                     loc_1162:				; CODE XREF: ROM:0000115Cj
    1207/     B14 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1208/     B1A :                     ; ----------------------------------------------------------------
    1209/     B1A :                     
    1210/     B1A :                     loc_1166:
    1211/     B1A : 1C18                		move.b	(a0)+,d6
    1212/     B1C : 46C3                		move	d3,sr
    1213/     B1E : 6B04                		bmi.s	loc_1170
    1214/     B20 : 4886                		ext.w	d6
    1215/     B22 : D0C6                		adda.w	d6,a0
    1216/     B24 :                     
    1217/     B24 :                     loc_1170:
    1218/     B24 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1219/     B2A :                     
    1220/     B2A :                     ; ----------------------------------------------------------------
    1221/     B2A :                     ; $00 - BRK
    1222/     B2A :                     ; ----------------------------------------------------------------
    1223/     B2A :                     
    1224/     B2A :                     mos_BRK:
    1225/     B2A : 4BF9 FFFF 0000      		lea 	(RAM_Fami_ROM),a5
    1226/     B30 : 3C3C 7FFE           		move.w	#cpuIRQ,d6		; go to IRQ
    1227/     B34 : DAC6                		add.w	d6,a5
    1228/     B36 : 1C2D 0001           		move.b	1(a5),d6
    1229/     B3A : E14E                		lsl.w	#8,d6
    1230/     B3C : 1C15                		move.b	(a5),d6
    1231/     B3E :                     
    1232/     B3E : 397C 0001 001A      		move.w	#1,cpuModeIntDis(a4)
    1233/     B44 : 397C 0001 0018      		move.w	#1,cpuFlag2(a4)
    1234/     B4A : 6000 0542           		bra.w	loc_1686
    1235/     B4E :                     ; ----------------------------------------------------------------
    1236/     B4E :                     
    1237/     B4E :                     loc_118E:
    1238/     B4E : 1C18                		move.b	(a0)+,d6
    1239/     B50 : 46C3                		move	d3,sr
    1240/     B52 : 6904                		bvs.s	loc_1198
    1241/     B54 : 4886                		ext.w	d6
    1242/     B56 : D0C6                		adda.w	d6,a0
    1243/     B58 :                     
    1244/     B58 :                     loc_1198:
    1245/     B58 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1246/     B5E :                     ; ----------------------------------------------------------------
    1247/     B5E :                     
    1248/     B5E :                     loc_119C:
    1249/     B5E : 1C18                		move.b	(a0)+,d6
    1250/     B60 : 46C3                		move	d3,sr
    1251/     B62 : 6804                		bvc.s	loc_11A6
    1252/     B64 : 4886                		ext.w	d6
    1253/     B66 : D0C6                		adda.w	d6,a0
    1254/     B68 :                     
    1255/     B68 :                     loc_11A6:				; CODE XREF: ROM:000011A0j
    1256/     B68 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1257/     B6E :                     ; ----------------------------------------------------------------
    1258/     B6E :                     
    1259/     B6E :                     loc_11AA:				; DATA XREF: ROM:00000A92o
    1260/     B6E : 0203 00EE           		andi.b	#$EE,d3
    1261/     B72 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1262/     B78 :                     
    1263/     B78 :                     ; ----------------------------------------------------------------
    1264/     B78 :                     ; CLD - Clear Decimal mode
    1265/     B78 :                     ; ----------------------------------------------------------------
    1266/     B78 :                     
    1267/     B78 :                     loc_11B2:
    1268/     B78 : 397C 0000 0016      		move.w	#0,cpuModeDec(a4)
    1269/     B7E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1270/     B84 :                     
    1271/     B84 :                     ; ----------------------------------------------------------------
    1272/     B84 :                     ; CLI - Clear Interrupt disable
    1273/     B84 :                     ; ----------------------------------------------------------------
    1274/     B84 :                     
    1275/     B84 :                     loc_11BC:
    1276/     B84 : 397C 0000 001A      		move.w	#0,cpuModeIntDis(a4)
    1277/     B8A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1278/     B90 :                     
    1279/     B90 :                     ; ----------------------------------------------------------------
    1280/     B90 :                     
    1281/     B90 :                     loc_11C6:				; DATA XREF: ROM:00000D12o
    1282/     B90 : 0203 00FD           		andi.b	#$FD,d3
    1283/     B94 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1284/     B9A :                     ; ----------------------------------------------------------------
    1285/     B9A :                     
    1286/     B9A :                     loc_11CE:				; DATA XREF: ROM:00000D56o
    1287/     B9A : 1E18                		move.b	(a0)+,d7
    1288/     B9C : B007                		cmp.b	d7,d0
    1289/     B9E : 40C5                		move	sr,d5
    1290/     BA0 : 0245 000D           		andi.w	#$D,d5
    1291/     BA4 : 0A05 0001           		eori.b	#1,d5
    1292/     BA8 : 0203 0002           		andi.b	#2,d3
    1293/     BAC : 8605                		or.b	d5,d3
    1294/     BAE : 0205 0001           		andi.b	#1,d5
    1295/     BB2 : E90D                		lsl.b	#4,d5
    1296/     BB4 : 8605                		or.b	d5,d3
    1297/     BB6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1298/     BBC :                     ; ----------------------------------------------------------------
    1299/     BBC :                     
    1300/     BBC :                     loc_11EE:				; DATA XREF: ROM:00000D46o
    1301/     BBC : 4246                		clr.w	d6
    1302/     BBE : 1C18                		move.b	(a0)+,d6
    1303/     BC0 : 1E32 6000           		move.b	(a2,d6.w),d7
    1304/     BC4 : B007                		cmp.b	d7,d0
    1305/     BC6 : 40C5                		move	sr,d5
    1306/     BC8 : 0245 000D           		andi.w	#$D,d5
    1307/     BCC : 0A05 0001           		eori.b	#1,d5
    1308/     BD0 : 0203 0002           		andi.b	#2,d3
    1309/     BD4 : 8605                		or.b	d5,d3
    1310/     BD6 : 0205 0001           		andi.b	#1,d5
    1311/     BDA : E90D                		lsl.b	#4,d5
    1312/     BDC : 8605                		or.b	d5,d3
    1313/     BDE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1314/     BE4 :                     ; ----------------------------------------------------------------
    1315/     BE4 :                     
    1316/     BE4 :                     loc_1214:				; DATA XREF: ROM:00000D86o
    1317/     BE4 : 4246                		clr.w	d6
    1318/     BE6 : 1C18                		move.b	(a0)+,d6
    1319/     BE8 : DC01                		add.b	d1,d6
    1320/     BEA : 1E32 6000           		move.b	(a2,d6.w),d7
    1321/     BEE : B007                		cmp.b	d7,d0
    1322/     BF0 : 40C5                		move	sr,d5
    1323/     BF2 : 0245 000D           		andi.w	#$D,d5
    1324/     BF6 : 0A05 0001           		eori.b	#1,d5
    1325/     BFA : 0203 0002           		andi.b	#2,d3
    1326/     BFE : 8605                		or.b	d5,d3
    1327/     C00 : 0205 0001           		andi.b	#1,d5
    1328/     C04 : E90D                		lsl.b	#4,d5
    1329/     C06 : 8605                		or.b	d5,d3
    1330/     C08 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1331/     C0E :                     ; ----------------------------------------------------------------
    1332/     C0E :                     
    1333/     C0E :                     loc_123C:				; DATA XREF: ROM:00000d36o
    1334/     C0E : 4244                		clr.w	d4
    1335/     C10 : 1818                		move.b	(a0)+,d4
    1336/     C12 : 4246                		clr.w	d6
    1337/     C14 : 1C18                		move.b	(a0)+,d6
    1338/     C16 : 6100 0D32           		bsr	addr_Read
    1339/     C1A : B007                		cmp.b	d7,d0
    1340/     C1C : 40C5                		move	sr,d5
    1341/     C1E : 0245 000D           		andi.w	#$D,d5
    1342/     C22 : 0A05 0001           		eori.b	#1,d5
    1343/     C26 : 0203 0002           		andi.b	#2,d3
    1344/     C2A : 8605                		or.b	d5,d3
    1345/     C2C : 0205 0001           		andi.b	#1,d5
    1346/     C30 : E90D                		lsl.b	#4,d5
    1347/     C32 : 8605                		or.b	d5,d3
    1348/     C34 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1349/     C3A :                     ; ----------------------------------------------------------------
    1350/     C3A :                     
    1351/     C3A :                     loc_1268:				; DATA XREF: ROM:00000DA6o
    1352/     C3A : 4244                		clr.w	d4
    1353/     C3C : 1818                		move.b	(a0)+,d4
    1354/     C3E : 4246                		clr.w	d6
    1355/     C40 : 1C18                		move.b	(a0)+,d6
    1356/     C42 : 4207                		clr.b	d7
    1357/     C44 : D801                		add.b	d1,d4
    1358/     C46 : DD07                		addx.b	d7,d6
    1359/     C48 : 6100 0D00           		bsr	addr_Read
    1360/     C4C : B007                		cmp.b	d7,d0
    1361/     C4E : 40C5                		move	sr,d5
    1362/     C50 : 0245 000D           		andi.w	#$D,d5
    1363/     C54 : 0A05 0001           		eori.b	#1,d5
    1364/     C58 : 0203 0002           		andi.b	#2,d3
    1365/     C5C : 8605                		or.b	d5,d3
    1366/     C5E : 0205 0001           		andi.b	#1,d5
    1367/     C62 : E90D                		lsl.b	#4,d5
    1368/     C64 : 8605                		or.b	d5,d3
    1369/     C66 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1370/     C6C :                     ; ----------------------------------------------------------------
    1371/     C6C :                     
    1372/     C6C :                     loc_129A:				; DATA XREF: ROM:00000D96o
    1373/     C6C : 4244                		clr.w	d4
    1374/     C6E : 1818                		move.b	(a0)+,d4
    1375/     C70 : 4246                		clr.w	d6
    1376/     C72 : 1C18                		move.b	(a0)+,d6
    1377/     C74 : 4207                		clr.b	d7
    1378/     C76 : D802                		add.b	d2,d4
    1379/     C78 : DD07                		addx.b	d7,d6
    1380/     C7A : 6100 0CCE           		bsr	addr_Read
    1381/     C7E : B007                		cmp.b	d7,d0
    1382/     C80 : 40C5                		move	sr,d5
    1383/     C82 : 0245 000D           		andi.w	#$D,d5
    1384/     C86 : 0A05 0001           		eori.b	#1,d5
    1385/     C8A : 0203 0002           		andi.b	#2,d3
    1386/     C8E : 8605                		or.b	d5,d3
    1387/     C90 : 0205 0001           		andi.b	#1,d5
    1388/     C94 : E90D                		lsl.b	#4,d5
    1389/     C96 : 8605                		or.b	d5,d3
    1390/     C98 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1391/     C9E :                     ; ----------------------------------------------------------------
    1392/     C9E :                     
    1393/     C9E :                     loc_12CC:				; DATA XREF: ROM:00000d63o
    1394/     C9E : 4245                		clr.w	d5
    1395/     CA0 : 1A18                		move.b	(a0)+,d5
    1396/     CA2 : DA01                		add.b	d1,d5
    1397/     CA4 : 4244                		clr.w	d4
    1398/     CA6 : 1832 5000           		move.b	(a2,d5.w),d4
    1399/     CAA : 4246                		clr.w	d6
    1400/     CAC : 1C32 5001           		move.b	1(a2,d5.w),d6
    1401/     CB0 : 6100 0C98           		bsr	addr_Read
    1402/     CB4 : B007                		cmp.b	d7,d0
    1403/     CB6 : 40C5                		move	sr,d5
    1404/     CB8 : 0245 000D           		andi.w	#$D,d5
    1405/     CBC : 0A05 0001           		eori.b	#1,d5
    1406/     CC0 : 0203 0002           		andi.b	#2,d3
    1407/     CC4 : 8605                		or.b	d5,d3
    1408/     CC6 : 0205 0001           		andi.b	#1,d5
    1409/     CCA : E90D                		lsl.b	#4,d5
    1410/     CCC : 8605                		or.b	d5,d3
    1411/     CCE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1412/     CD4 :                     ; ----------------------------------------------------------------
    1413/     CD4 :                     
    1414/     CD4 :                     loc_1302:				; DATA XREF: ROM:00000D76o
    1415/     CD4 : 4245                		clr.w	d5
    1416/     CD6 : 1A18                		move.b	(a0)+,d5
    1417/     CD8 : 4244                		clr.w	d4
    1418/     CDA : 1832 5000           		move.b	(a2,d5.w),d4
    1419/     CDE : 4246                		clr.w	d6
    1420/     CE0 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1421/     CE4 : 4207                		clr.b	d7
    1422/     CE6 : D802                		add.b	d2,d4
    1423/     CE8 : DD07                		addx.b	d7,d6
    1424/     CEA : 6100 0C5E           		bsr	addr_Read
    1425/     CEE : B007                		cmp.b	d7,d0
    1426/     CF0 : 40C5                		move	sr,d5
    1427/     CF2 : 0245 000D           		andi.w	#$D,d5
    1428/     CF6 : 0A05 0001           		eori.b	#1,d5
    1429/     CFA : 0203 0002           		andi.b	#2,d3
    1430/     CFE : 8605                		or.b	d5,d3
    1431/     D00 : 0205 0001           		andi.b	#1,d5
    1432/     D04 : E90D                		lsl.b	#4,d5
    1433/     D06 : 8605                		or.b	d5,d3
    1434/     D08 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1435/     D0E :                     ; ----------------------------------------------------------------
    1436/     D0E :                     
    1437/     D0E :                     loc_133C:				; DATA XREF: ROM:00000DB2o
    1438/     D0E : 1E18                		move.b	(a0)+,d7
    1439/     D10 : B207                		cmp.b	d7,d1
    1440/     D12 : 40C5                		move	sr,d5
    1441/     D14 : 0245 000D           		andi.w	#$D,d5
    1442/     D18 : 0A05 0001           		eori.b	#1,d5
    1443/     D1C : 0203 0002           		andi.b	#2,d3
    1444/     D20 : 8605                		or.b	d5,d3
    1445/     D22 : 0205 0001           		andi.b	#1,d5
    1446/     D26 : E90D                		lsl.b	#4,d5
    1447/     D28 : 8605                		or.b	d5,d3
    1448/     D2A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1449/     D30 :                     ; ----------------------------------------------------------------
    1450/     D30 :                     
    1451/     D30 :                     loc_135C:				; DATA XREF: ROM:00000DC2o
    1452/     D30 : 4246                		clr.w	d6
    1453/     D32 : 1C18                		move.b	(a0)+,d6
    1454/     D34 : 1E32 6000           		move.b	(a2,d6.w),d7
    1455/     D38 : B207                		cmp.b	d7,d1
    1456/     D3A : 40C5                		move	sr,d5
    1457/     D3C : 0245 000D           		andi.w	#$D,d5
    1458/     D40 : 0A05 0001           		eori.b	#1,d5
    1459/     D44 : 0203 0002           		andi.b	#2,d3
    1460/     D48 : 8605                		or.b	d5,d3
    1461/     D4A : 0205 0001           		andi.b	#1,d5
    1462/     D4E : E90D                		lsl.b	#4,d5
    1463/     D50 : 8605                		or.b	d5,d3
    1464/     D52 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1465/     D58 :                     ; ----------------------------------------------------------------
    1466/     D58 :                     
    1467/     D58 :                     loc_1382:				; DATA XREF: ROM:00000DE2o
    1468/     D58 : 4244                		clr.w	d4
    1469/     D5A : 1818                		move.b	(a0)+,d4
    1470/     D5C : 4246                		clr.w	d6
    1471/     D5E : 1C18                		move.b	(a0)+,d6
    1472/     D60 : 6100 0BE8           		bsr	addr_Read
    1473/     D64 : B207                		cmp.b	d7,d1
    1474/     D66 : 40C5                		move	sr,d5
    1475/     D68 : 0245 000D           		andi.w	#$D,d5
    1476/     D6C : 0A05 0001           		eori.b	#1,d5
    1477/     D70 : 0203 0002           		andi.b	#2,d3
    1478/     D74 : 8605                		or.b	d5,d3
    1479/     D76 : 0205 0001           		andi.b	#1,d5
    1480/     D7A : E90D                		lsl.b	#4,d5
    1481/     D7C : 8605                		or.b	d5,d3
    1482/     D7E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1483/     D84 :                     ; ----------------------------------------------------------------
    1484/     D84 :                     
    1485/     D84 :                     loc_13AE:				; DATA XREF: ROM:00000d62o
    1486/     D84 : 1E18                		move.b	(a0)+,d7
    1487/     D86 : B407                		cmp.b	d7,d2
    1488/     D88 : 40C5                		move	sr,d5
    1489/     D8A : 0245 000D           		andi.w	#$D,d5
    1490/     D8E : 0A05 0001           		eori.b	#1,d5
    1491/     D92 : 0203 0002           		andi.b	#2,d3
    1492/     D96 : 8605                		or.b	d5,d3
    1493/     D98 : 0205 0001           		andi.b	#1,d5
    1494/     D9C : E90D                		lsl.b	#4,d5
    1495/     D9E : 8605                		or.b	d5,d3
    1496/     DA0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1497/     DA6 :                     ; ----------------------------------------------------------------
    1498/     DA6 :                     
    1499/     DA6 :                     loc_13CE:				; DATA XREF: ROM:00000D42o
    1500/     DA6 : 4246                		clr.w	d6
    1501/     DA8 : 1C18                		move.b	(a0)+,d6
    1502/     DAA : 1E32 6000           		move.b	(a2,d6.w),d7
    1503/     DAE : B407                		cmp.b	d7,d2
    1504/     DB0 : 40C5                		move	sr,d5
    1505/     DB2 : 0245 000D           		andi.w	#$D,d5
    1506/     DB6 : 0A05 0001           		eori.b	#1,d5
    1507/     DBA : 0203 0002           		andi.b	#2,d3
    1508/     DBE : 8605                		or.b	d5,d3
    1509/     DC0 : 0205 0001           		andi.b	#1,d5
    1510/     DC4 : E90D                		lsl.b	#4,d5
    1511/     DC6 : 8605                		or.b	d5,d3
    1512/     DC8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1513/     DCE :                     ; ----------------------------------------------------------------
    1514/     DCE :                     
    1515/     DCE :                     loc_13F4:				; DATA XREF: ROM:00000d32o
    1516/     DCE : 4244                		clr.w	d4
    1517/     DD0 : 1818                		move.b	(a0)+,d4
    1518/     DD2 : 4246                		clr.w	d6
    1519/     DD4 : 1C18                		move.b	(a0)+,d6
    1520/     DD6 : 6100 0B72           		bsr	addr_Read
    1521/     DDA : B407                		cmp.b	d7,d2
    1522/     DDC : 40C5                		move	sr,d5
    1523/     DDE : 0245 000D           		andi.w	#$D,d5
    1524/     DE2 : 0A05 0001           		eori.b	#1,d5
    1525/     DE6 : 0203 0002           		andi.b	#2,d3
    1526/     DEA : 8605                		or.b	d5,d3
    1527/     DEC : 0205 0001           		andi.b	#1,d5
    1528/     DF0 : E90D                		lsl.b	#4,d5
    1529/     DF2 : 8605                		or.b	d5,d3
    1530/     DF4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1531/     DFA :                     ; ----------------------------------------------------------------
    1532/     DFA :                     
    1533/     DFA :                     loc_1420:				; DATA XREF: ROM:00000D4Ao
    1534/     DFA : 4246                		clr.w	d6
    1535/     DFC : 1C18                		move.b	(a0)+,d6
    1536/     DFE : 5332 6000           		subq.b	#1,(a2,d6.w)
    1537/     E02 : 40C5                		move	sr,d5
    1538/     E04 : 0245 000C           		andi.w	#$C,d5
    1539/     E08 : 0203 00F3           		andi.b	#$F3,d3
    1540/     E0C : 8645                		or.w	d5,d3
    1541/     E0E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1542/     E14 :                     ; ----------------------------------------------------------------
    1543/     E14 :                     
    1544/     E14 :                     loc_1438:				; DATA XREF: ROM:00000D8Ao
    1545/     E14 : 4246                		clr.w	d6
    1546/     E16 : 1C18                		move.b	(a0)+,d6
    1547/     E18 : DC01                		add.b	d1,d6
    1548/     E1A : 5332 6000           		subq.b	#1,(a2,d6.w)
    1549/     E1E : 40C5                		move	sr,d5
    1550/     E20 : 0245 000C           		andi.w	#$C,d5
    1551/     E24 : 0203 00F3           		andi.b	#$F3,d3
    1552/     E28 : 8645                		or.w	d5,d3
    1553/     E2A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1554/     E30 :                     ; ----------------------------------------------------------------
    1555/     E30 :                     
    1556/     E30 :                     loc_1452:				; DATA XREF: ROM:00000d3Ao
    1557/     E30 : 1818                		move.b	(a0)+,d4
    1558/     E32 : 1C18                		move.b	(a0)+,d6
    1559/     E34 : E14E                		lsl.w	#8,d6
    1560/     E36 : 1C04                		move.b	d4,d6
    1561/     E38 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1562/     E3C : 40C5                		move	sr,d5
    1563/     E3E : 0245 000C           		andi.w	#$C,d5
    1564/     E42 : 0203 00F3           		andi.b	#$F3,d3
    1565/     E46 : 8645                		or.w	d5,d3
    1566/     E48 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1567/     E4E :                     ; ----------------------------------------------------------------
    1568/     E4E :                     
    1569/     E4E :                     loc_146E:				; DATA XREF: ROM:00000DAAo
    1570/     E4E : 1818                		move.b	(a0)+,d4
    1571/     E50 : 1C18                		move.b	(a0)+,d6
    1572/     E52 : E14E                		lsl.w	#8,d6
    1573/     E54 : 1C04                		move.b	d4,d6
    1574/     E56 : DC41                		add.w	d1,d6
    1575/     E58 : 5332 6000           		subq.b	#1,(a2,d6.w)
    1576/     E5C : 40C5                		move	sr,d5
    1577/     E5E : 0245 000C           		andi.w	#$C,d5
    1578/     E62 : 0203 00F3           		andi.b	#$F3,d3
    1579/     E66 : 8645                		or.w	d5,d3
    1580/     E68 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1581/     E6E :                     ; ----------------------------------------------------------------
    1582/     E6E :                     
    1583/     E6E :                     loc_148C:				; DATA XREF: ROM:00000D5Ao
    1584/     E6E : 5301                		subq.b	#1,d1
    1585/     E70 : 40C5                		move	sr,d5
    1586/     E72 : 0245 000C           		andi.w	#$C,d5
    1587/     E76 : 0203 00F3           		andi.b	#$F3,d3
    1588/     E7A : 8645                		or.w	d5,d3
    1589/     E7C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1590/     E82 :                     ; ----------------------------------------------------------------
    1591/     E82 :                     
    1592/     E82 :                     loc_149E:				; DATA XREF: ROM:00000C52o
    1593/     E82 : 5302                		subq.b	#1,d2
    1594/     E84 : 40C5                		move	sr,d5
    1595/     E86 : 0245 000C           		andi.w	#$C,d5
    1596/     E8A : 0203 00F3           		andi.b	#$F3,d3
    1597/     E8E : 8645                		or.w	d5,d3
    1598/     E90 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1599/     E96 :                     ; ----------------------------------------------------------------
    1600/     E96 :                     
    1601/     E96 :                     loc_14B0:				; DATA XREF: ROM:00000B56o
    1602/     E96 : 1E18                		move.b	(a0)+,d7
    1603/     E98 : BF00                		eor.b	d7,d0
    1604/     E9A : 40C5                		move	sr,d5
    1605/     E9C : 0245 000C           		andi.w	#$C,d5
    1606/     EA0 : 0203 00F3           		andi.b	#$F3,d3
    1607/     EA4 : 8645                		or.w	d5,d3
    1608/     EA6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1609/     EAC :                     ; ----------------------------------------------------------------
    1610/     EAC :                     
    1611/     EAC :                     loc_14C4:				; DATA XREF: ROM:00000B46o
    1612/     EAC : 4246                		clr.w	d6
    1613/     EAE : 1C18                		move.b	(a0)+,d6
    1614/     EB0 : 1E32 6000           		move.b	(a2,d6.w),d7
    1615/     EB4 : BF00                		eor.b	d7,d0
    1616/     EB6 : 40C5                		move	sr,d5
    1617/     EB8 : 0245 000C           		andi.w	#$C,d5
    1618/     EBC : 0203 00F3           		andi.b	#$F3,d3
    1619/     EC0 : 8645                		or.w	d5,d3
    1620/     EC2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1621/     EC8 :                     ; ----------------------------------------------------------------
    1622/     EC8 :                     
    1623/     EC8 :                     loc_14DE:				; DATA XREF: ROM:00000B86o
    1624/     EC8 : 4246                		clr.w	d6
    1625/     ECA : 1C18                		move.b	(a0)+,d6
    1626/     ECC : DC01                		add.b	d1,d6
    1627/     ECE : 1E32 6000           		move.b	(a2,d6.w),d7
    1628/     ED2 : BF00                		eor.b	d7,d0
    1629/     ED4 : 40C5                		move	sr,d5
    1630/     ED6 : 0245 000C           		andi.w	#$C,d5
    1631/     EDA : 0203 00F3           		andi.b	#$F3,d3
    1632/     EDE : 8645                		or.w	d5,d3
    1633/     EE0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1634/     EE6 :                     ; ----------------------------------------------------------------
    1635/     EE6 :                     
    1636/     EE6 :                     loc_14FA:				; DATA XREF: ROM:00000B66o
    1637/     EE6 : 4244                		clr.w	d4
    1638/     EE8 : 1818                		move.b	(a0)+,d4
    1639/     EEA : 4246                		clr.w	d6
    1640/     EEC : 1C18                		move.b	(a0)+,d6
    1641/     EEE : 6100 0A5A           		bsr	addr_Read
    1642/     EF2 : BF00                		eor.b	d7,d0
    1643/     EF4 : 40C5                		move	sr,d5
    1644/     EF6 : 0245 000C           		andi.w	#$C,d5
    1645/     EFA : 0203 00F3           		andi.b	#$F3,d3
    1646/     EFE : 8645                		or.w	d5,d3
    1647/     F00 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1648/     F06 :                     ; ----------------------------------------------------------------
    1649/     F06 :                     
    1650/     F06 :                     loc_151A:				; DATA XREF: ROM:00000BA6o
    1651/     F06 : 4244                		clr.w	d4
    1652/     F08 : 1818                		move.b	(a0)+,d4
    1653/     F0A : 4246                		clr.w	d6
    1654/     F0C : 1C18                		move.b	(a0)+,d6
    1655/     F0E : 4207                		clr.b	d7
    1656/     F10 : D801                		add.b	d1,d4
    1657/     F12 : DD07                		addx.b	d7,d6
    1658/     F14 : 6100 0A34           		bsr	addr_Read
    1659/     F18 : BF00                		eor.b	d7,d0
    1660/     F1A : 40C5                		move	sr,d5
    1661/     F1C : 0245 000C           		andi.w	#$C,d5
    1662/     F20 : 0203 00F3           		andi.b	#$F3,d3
    1663/     F24 : 8645                		or.w	d5,d3
    1664/     F26 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1665/     F2C :                     ; ----------------------------------------------------------------
    1666/     F2C :                     
    1667/     F2C :                     loc_1540:				; DATA XREF: ROM:00000B96o
    1668/     F2C : 4244                		clr.w	d4
    1669/     F2E : 1818                		move.b	(a0)+,d4
    1670/     F30 : 4246                		clr.w	d6
    1671/     F32 : 1C18                		move.b	(a0)+,d6
    1672/     F34 : 4207                		clr.b	d7
    1673/     F36 : D802                		add.b	d2,d4
    1674/     F38 : DD07                		addx.b	d7,d6
    1675/     F3A : 6100 0A0E           		bsr	addr_Read
    1676/     F3E : BF00                		eor.b	d7,d0
    1677/     F40 : 40C5                		move	sr,d5
    1678/     F42 : 0245 000C           		andi.w	#$C,d5
    1679/     F46 : 0203 00F3           		andi.b	#$F3,d3
    1680/     F4A : 8645                		or.w	d5,d3
    1681/     F4C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1682/     F52 :                     ; ----------------------------------------------------------------
    1683/     F52 :                     
    1684/     F52 :                     loc_1566:				; DATA XREF: ROM:00000B36o
    1685/     F52 : 4245                		clr.w	d5
    1686/     F54 : 1A18                		move.b	(a0)+,d5
    1687/     F56 : DA01                		add.b	d1,d5
    1688/     F58 : 4244                		clr.w	d4
    1689/     F5A : 1832 5000           		move.b	(a2,d5.w),d4
    1690/     F5E : 4246                		clr.w	d6
    1691/     F60 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1692/     F64 : 6100 09E4           		bsr	addr_Read
    1693/     F68 : BF00                		eor.b	d7,d0
    1694/     F6A : 40C5                		move	sr,d5
    1695/     F6C : 0245 000C           		andi.w	#$C,d5
    1696/     F70 : 0203 00F3           		andi.b	#$F3,d3
    1697/     F74 : 8645                		or.w	d5,d3
    1698/     F76 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1699/     F7C :                     ; ----------------------------------------------------------------
    1700/     F7C :                     
    1701/     F7C :                     loc_1590:
    1702/     F7C : 4245                		clr.w	d5
    1703/     F7E : 1A18                		move.b	(a0)+,d5
    1704/     F80 : 4244                		clr.w	d4
    1705/     F82 : 1832 5000           		move.b	(a2,d5.w),d4
    1706/     F86 : 4246                		clr.w	d6
    1707/     F88 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1708/     F8C : 4207                		clr.b	d7
    1709/     F8E : D802                		add.b	d2,d4
    1710/     F90 : DD07                		addx.b	d7,d6
    1711/     F92 : 6100 09B6           		bsr	addr_Read
    1712/     F96 : BF00                		eor.b	d7,d0
    1713/     F98 : 40C5                		move	sr,d5
    1714/     F9A : 0245 000C           		andi.w	#$C,d5
    1715/     F9E : 0203 00F3           		andi.b	#$F3,d3
    1716/     FA2 : 8645                		or.w	d5,d3
    1717/     FA4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1718/     FAA :                     ; ----------------------------------------------------------------
    1719/     FAA :                     
    1720/     FAA :                     loc_15BE:
    1721/     FAA : 4246                		clr.w	d6
    1722/     FAC : 1C18                		move.b	(a0)+,d6
    1723/     FAE : 5232 6000           		addq.b	#1,(a2,d6.w)
    1724/     FB2 : 40C5                		move	sr,d5
    1725/     FB4 : 0245 000C           		andi.w	#$C,d5
    1726/     FB8 : 0203 00F3           		andi.b	#$F3,d3
    1727/     FBC : 8645                		or.w	d5,d3
    1728/     FBE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1729/     FC4 :                     ; ----------------------------------------------------------------
    1730/     FC4 :                     
    1731/     FC4 :                     loc_15d3:
    1732/     FC4 : 4246                		clr.w	d6
    1733/     FC6 : 1C18                		move.b	(a0)+,d6
    1734/     FC8 : DC01                		add.b	d1,d6
    1735/     FCA : 5232 6000           		addq.b	#1,(a2,d6.w)
    1736/     FCE : 40C5                		move	sr,d5
    1737/     FD0 : 0245 000C           		andi.w	#$C,d5
    1738/     FD4 : 0203 00F3           		andi.b	#$F3,d3
    1739/     FD8 : 8645                		or.w	d5,d3
    1740/     FDA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1741/     FE0 :                     ; ----------------------------------------------------------------
    1742/     FE0 :                     
    1743/     FE0 :                     loc_15F0:
    1744/     FE0 : 1818                		move.b	(a0)+,d4
    1745/     FE2 : 1C18                		move.b	(a0)+,d6
    1746/     FE4 : E14E                		lsl.w	#8,d6
    1747/     FE6 : 1C04                		move.b	d4,d6
    1748/     FE8 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1749/     FEC : 40C5                		move	sr,d5
    1750/     FEE : 0245 000C           		andi.w	#$C,d5
    1751/     FF2 : 0203 00F3           		andi.b	#$F3,d3
    1752/     FF6 : 8645                		or.w	d5,d3
    1753/     FF8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1754/     FFE :                     ; ----------------------------------------------------------------
    1755/     FFE :                     
    1756/     FFE :                     loc_160C:
    1757/     FFE : 1818                		move.b	(a0)+,d4
    1758/    1000 : 1C18                		move.b	(a0)+,d6
    1759/    1002 : E14E                		lsl.w	#8,d6
    1760/    1004 : 1C04                		move.b	d4,d6
    1761/    1006 : DC41                		add.w	d1,d6
    1762/    1008 : 5232 6000           		addq.b	#1,(a2,d6.w)
    1763/    100C : 40C5                		move	sr,d5
    1764/    100E : 0245 000C           		andi.w	#$C,d5
    1765/    1012 : 0203 00F3           		andi.b	#$F3,d3
    1766/    1016 : 8645                		or.w	d5,d3
    1767/    1018 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1768/    101E :                     ; ----------------------------------------------------------------
    1769/    101E :                     
    1770/    101E :                     loc_162A:
    1771/    101E : 5201                		addq.b	#1,d1
    1772/    1020 : 40C5                		move	sr,d5
    1773/    1022 : 0245 000C           		andi.w	#$C,d5
    1774/    1026 : 0203 00F3           		andi.b	#$F3,d3
    1775/    102A : 8645                		or.w	d5,d3
    1776/    102C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1777/    1032 :                     ; ----------------------------------------------------------------
    1778/    1032 :                     
    1779/    1032 :                     loc_163C:
    1780/    1032 : 5202                		addq.b	#1,d2
    1781/    1034 : 40C5                		move	sr,d5
    1782/    1036 : 0245 000C           		andi.w	#$C,d5
    1783/    103A : 0203 00F3           		andi.b	#$F3,d3
    1784/    103E : 8645                		or.w	d5,d3
    1785/    1040 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1786/    1046 :                     ; ----------------------------------------------------------------
    1787/    1046 :                     ; $4C - JMP $xxxx
    1788/    1046 :                     ; ----------------------------------------------------------------
    1789/    1046 :                     
    1790/    1046 :                     loc_164E:
    1791/    1046 : 7C00                		moveq	#0,d6
    1792/    1048 : 1C28 0001           		move.b	1(a0),d6
    1793/    104C : E14E                		lsl.w	#8,d6
    1794/    104E : 1C10                		move.b	(a0),d6
    1795/    1050 :                     ; 		lea	(a2,d6.l),a0
    1796/    1050 :                     		
    1797/    1050 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1798/    1056 : 2049                		movea.l a1,a0
    1799/    1058 : D1C6                		add.l 	d6,a0
    1800/    105A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1801/    1060 :                     
    1802/    1060 :                     ; ----------------------------------------------------------------
    1803/    1060 :                     ; $6C - JMP ($xxxx)
    1804/    1060 :                     ; ----------------------------------------------------------------
    1805/    1060 :                     
    1806/    1060 :                     loc_1660:
    1807/    1060 : 7800                		moveq	#0,d4
    1808/    1062 : 1C28 0001           		move.b	1(a0),d6
    1809/    1066 : E14E                		lsl.w	#8,d6
    1810/    1068 : 1C10                		move.b	(a0),d6
    1811/    106A : 1832 6001           		move.b	1(a2,d6.w),d4
    1812/    106E : E14C                		lsl.w	#8,d4
    1813/    1070 : 1832 6000           		move.b	(a2,d6.w),d4
    1814/    1074 :                     		
    1815/    1074 :                     ; 		lea	(a2,d4.l),a0
    1816/    1074 : C8BC 0000 7FFF      		and.l	#$7FFF,d4
    1817/    107A : 2049                		movea.l a1,a0
    1818/    107C : D1C4                		add.l 	d4,a0
    1819/    107E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1820/    1084 :                     
    1821/    1084 :                     ; ----------------------------------------------------------------
    1822/    1084 :                     ; $6C - JSR $xxxx
    1823/    1084 :                     ; ----------------------------------------------------------------
    1824/    1084 :                     
    1825/    1084 :                     loc_167C:
    1826/    1084 : 7C00                		moveq	#0,d6
    1827/    1086 : 1818                		move.b	(a0)+,d4
    1828/    1088 : 1C10                		move.b	(a0),d6
    1829/    108A : E14E                		lsl.w	#8,d6
    1830/    108C : 1C04                		move.b	d4,d6
    1831/    108E :                     
    1832/    108E :                     loc_1686:
    1833/    108E : 4843                		swap	d3
    1834/    1090 : 3808                		move.w	a0,d4
    1835/    1092 : 1A04                		move.b	d4,d5
    1836/    1094 : E04C                		lsr.w	#8,d4
    1837/    1096 : 883C 0080           		or.b	#$80,d4
    1838/    109A : 1584 3000           		move.b	d4,(a2,d3.w)
    1839/    109E : 5303                		subq.b	#1,d3
    1840/    10A0 : 1585 3000           		move.b	d5,(a2,d3.w)
    1841/    10A4 : 5303                		subq.b	#1,d3
    1842/    10A6 : 4843                		swap	d3
    1843/    10A8 :                     ; 		lea	(a2,d6.l),a0
    1844/    10A8 :                     
    1845/    10A8 : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    1846/    10AE : 2049                		movea.l a1,a0
    1847/    10B0 : D1C6                		add.l 	d6,a0
    1848/    10B2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1849/    10B8 :                     ; ----------------------------------------------------------------
    1850/    10B8 :                     ; $A9 - LDA #$xx
    1851/    10B8 :                     ; ----------------------------------------------------------------
    1852/    10B8 :                     
    1853/    10B8 :                     loc_16A4:
    1854/    10B8 : 1018                		move.b	(a0)+,d0
    1855/    10BA : 40C5                		move	sr,d5
    1856/    10BC : 0245 000C           		andi.w	#$C,d5
    1857/    10C0 : 0203 00F3           		andi.b	#$F3,d3
    1858/    10C4 : 8645                		or.w	d5,d3
    1859/    10C6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1860/    10CC :                     ; ----------------------------------------------------------------
    1861/    10CC :                     
    1862/    10CC :                     loc_16B6:
    1863/    10CC : 4246                		clr.w	d6
    1864/    10CE : 1C18                		move.b	(a0)+,d6
    1865/    10D0 : 1032 6000           		move.b	(a2,d6.w),d0
    1866/    10D4 : 40C5                		move	sr,d5
    1867/    10D6 : 0245 000C           		andi.w	#$C,d5
    1868/    10DA : 0203 00F3           		andi.b	#$F3,d3
    1869/    10DE : 8645                		or.w	d5,d3
    1870/    10E0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1871/    10E6 :                     ; ----------------------------------------------------------------
    1872/    10E6 :                     
    1873/    10E6 :                     loc_16CE:				; DATA XREF: ROM:00000D06o
    1874/    10E6 : 4246                		clr.w	d6
    1875/    10E8 : 1C18                		move.b	(a0)+,d6
    1876/    10EA : DC01                		add.b	d1,d6
    1877/    10EC : 1032 6000           		move.b	(a2,d6.w),d0
    1878/    10F0 : 40C5                		move	sr,d5
    1879/    10F2 : 0245 000C           		andi.w	#$C,d5
    1880/    10F6 : 0203 00F3           		andi.b	#$F3,d3
    1881/    10FA : 8645                		or.w	d5,d3
    1882/    10FC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1883/    1102 :                     ; ----------------------------------------------------------------
    1884/    1102 :                     
    1885/    1102 :                     loc_16E8:				; DATA XREF: ROM:00000CE6o
    1886/    1102 : 4244                		clr.w	d4
    1887/    1104 : 1818                		move.b	(a0)+,d4
    1888/    1106 : 4246                		clr.w	d6
    1889/    1108 : 1C18                		move.b	(a0)+,d6
    1890/    110A : 6100 083E           		bsr	addr_Read
    1891/    110E : 1007                		move.b	d7,d0
    1892/    1110 : 40C5                		move	sr,d5
    1893/    1112 : 0245 000C           		andi.w	#$C,d5
    1894/    1116 : 0203 00F3           		andi.b	#$F3,d3
    1895/    111A : 8645                		or.w	d5,d3
    1896/    111C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1897/    1122 :                     ; ----------------------------------------------------------------
    1898/    1122 :                     
    1899/    1122 :                     loc_1708:				; DATA XREF: ROM:00000D26o
    1900/    1122 : 4244                		clr.w	d4
    1901/    1124 : 1818                		move.b	(a0)+,d4
    1902/    1126 : 4246                		clr.w	d6
    1903/    1128 : 1C18                		move.b	(a0)+,d6
    1904/    112A : 4207                		clr.b	d7
    1905/    112C : D801                		add.b	d1,d4
    1906/    112E : DD07                		addx.b	d7,d6
    1907/    1130 : 6100 0818           		bsr	addr_Read
    1908/    1134 : 1007                		move.b	d7,d0
    1909/    1136 : 40C5                		move	sr,d5
    1910/    1138 : 0245 000C           		andi.w	#$C,d5
    1911/    113C : 0203 00F3           		andi.b	#$F3,d3
    1912/    1140 : 8645                		or.w	d5,d3
    1913/    1142 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1914/    1148 :                     ; ----------------------------------------------------------------
    1915/    1148 :                     
    1916/    1148 :                     loc_172E:				; DATA XREF: ROM:00000D16o
    1917/    1148 : 4244                		clr.w	d4
    1918/    114A : 1818                		move.b	(a0)+,d4
    1919/    114C : 4246                		clr.w	d6
    1920/    114E : 1C18                		move.b	(a0)+,d6
    1921/    1150 : 4207                		clr.b	d7
    1922/    1152 : D802                		add.b	d2,d4
    1923/    1154 : DD07                		addx.b	d7,d6
    1924/    1156 : 6100 07F2           		bsr	addr_Read
    1925/    115A : 1007                		move.b	d7,d0
    1926/    115C : 40C5                		move	sr,d5
    1927/    115E : 0245 000C           		andi.w	#$C,d5
    1928/    1162 : 0203 00F3           		andi.b	#$F3,d3
    1929/    1166 : 8645                		or.w	d5,d3
    1930/    1168 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1931/    116E :                     ; ----------------------------------------------------------------
    1932/    116E :                     
    1933/    116E :                     loc_1754:				; DATA XREF: ROM:00000CB6o
    1934/    116E : 4245                		clr.w	d5
    1935/    1170 : 1A18                		move.b	(a0)+,d5
    1936/    1172 : DA01                		add.b	d1,d5
    1937/    1174 : 4244                		clr.w	d4
    1938/    1176 : 1832 5000           		move.b	(a2,d5.w),d4
    1939/    117A : 4246                		clr.w	d6
    1940/    117C : 1C32 5001           		move.b	1(a2,d5.w),d6
    1941/    1180 : 6100 07C8           		bsr	addr_Read
    1942/    1184 : 1007                		move.b	d7,d0
    1943/    1186 : 40C5                		move	sr,d5
    1944/    1188 : 0245 000C           		andi.w	#$C,d5
    1945/    118C : 0203 00F3           		andi.b	#$F3,d3
    1946/    1190 : 8645                		or.w	d5,d3
    1947/    1192 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1948/    1198 :                     ; ----------------------------------------------------------------
    1949/    1198 :                     
    1950/    1198 :                     loc_177E:				; DATA XREF: ROM:00000CF6o
    1951/    1198 : 4245                		clr.w	d5
    1952/    119A : 1A18                		move.b	(a0)+,d5
    1953/    119C : 4244                		clr.w	d4
    1954/    119E : 1832 5000           		move.b	(a2,d5.w),d4
    1955/    11A2 : 4246                		clr.w	d6
    1956/    11A4 : 1C32 5001           		move.b	1(a2,d5.w),d6
    1957/    11A8 : 4207                		clr.b	d7
    1958/    11AA : D802                		add.b	d2,d4
    1959/    11AC : DD07                		addx.b	d7,d6
    1960/    11AE : 6100 079A           		bsr	addr_Read
    1961/    11B2 : 1007                		move.b	d7,d0
    1962/    11B4 : 40C5                		move	sr,d5
    1963/    11B6 : 0245 000C           		andi.w	#$C,d5
    1964/    11BA : 0203 00F3           		andi.b	#$F3,d3
    1965/    11BE : 8645                		or.w	d5,d3
    1966/    11C0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1967/    11C6 :                     ; ----------------------------------------------------------------
    1968/    11C6 :                     
    1969/    11C6 :                     loc_17AC:				; DATA XREF: ROM:00000CBAo
    1970/    11C6 : 1218                		move.b	(a0)+,d1
    1971/    11C8 : 40C5                		move	sr,d5
    1972/    11CA : 0245 000C           		andi.w	#$C,d5
    1973/    11CE : 0203 00F3           		andi.b	#$F3,d3
    1974/    11D2 : 8645                		or.w	d5,d3
    1975/    11D4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1976/    11DA :                     ; ----------------------------------------------------------------
    1977/    11DA :                     
    1978/    11DA :                     loc_17BE:				; DATA XREF: ROM:00000CCAo
    1979/    11DA : 4246                		clr.w	d6
    1980/    11DC : 1C18                		move.b	(a0)+,d6
    1981/    11DE : 1232 6000           		move.b	(a2,d6.w),d1
    1982/    11E2 : 40C5                		move	sr,d5
    1983/    11E4 : 0245 000C           		andi.w	#$C,d5
    1984/    11E8 : 0203 00F3           		andi.b	#$F3,d3
    1985/    11EC : 8645                		or.w	d5,d3
    1986/    11EE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1987/    11F4 :                     ; ----------------------------------------------------------------
    1988/    11F4 :                     
    1989/    11F4 :                     loc_17d3:				; DATA XREF: ROM:00000D0Ao
    1990/    11F4 : 4246                		clr.w	d6
    1991/    11F6 : 1C18                		move.b	(a0)+,d6
    1992/    11F8 : DC02                		add.b	d2,d6
    1993/    11FA : 1232 6000           		move.b	(a2,d6.w),d1
    1994/    11FE : 40C5                		move	sr,d5
    1995/    1200 : 0245 000C           		andi.w	#$C,d5
    1996/    1204 : 0203 00F3           		andi.b	#$F3,d3
    1997/    1208 : 8645                		or.w	d5,d3
    1998/    120A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    1999/    1210 :                     ; ----------------------------------------------------------------
    2000/    1210 :                     
    2001/    1210 :                     loc_17F0:				; DATA XREF: ROM:00000CEAo
    2002/    1210 : 4244                		clr.w	d4
    2003/    1212 : 1818                		move.b	(a0)+,d4
    2004/    1214 : 4246                		clr.w	d6
    2005/    1216 : 1C18                		move.b	(a0)+,d6
    2006/    1218 : 6100 0730           		bsr	addr_Read
    2007/    121C : 1207                		move.b	d7,d1
    2008/    121E : 40C5                		move	sr,d5
    2009/    1220 : 0245 000C           		andi.w	#$C,d5
    2010/    1224 : 0203 00F3           		andi.b	#$F3,d3
    2011/    1228 : 8645                		or.w	d5,d3
    2012/    122A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2013/    1230 :                     ; ----------------------------------------------------------------
    2014/    1230 :                     
    2015/    1230 :                     loc_1810:				; DATA XREF: ROM:00000D2Ao
    2016/    1230 : 4244                		clr.w	d4
    2017/    1232 : 1818                		move.b	(a0)+,d4
    2018/    1234 : 4246                		clr.w	d6
    2019/    1236 : 1C18                		move.b	(a0)+,d6
    2020/    1238 : 4207                		clr.b	d7
    2021/    123A : D802                		add.b	d2,d4
    2022/    123C : DD07                		addx.b	d7,d6
    2023/    123E : 6100 070A           		bsr	addr_Read
    2024/    1242 : 1207                		move.b	d7,d1
    2025/    1244 : 40C5                		move	sr,d5
    2026/    1246 : 0245 000C           		andi.w	#$C,d5
    2027/    124A : 0203 00F3           		andi.b	#$F3,d3
    2028/    124E : 8645                		or.w	d5,d3
    2029/    1250 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2030/    1256 :                     ; ----------------------------------------------------------------
    2031/    1256 :                     
    2032/    1256 :                     loc_1836:				; DATA XREF: ROM:00000CB2o
    2033/    1256 : 1418                		move.b	(a0)+,d2
    2034/    1258 : 40C5                		move	sr,d5
    2035/    125A : 0245 000C           		andi.w	#$C,d5
    2036/    125E : 0203 00F3           		andi.b	#$F3,d3
    2037/    1262 : 8645                		or.w	d5,d3
    2038/    1264 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2039/    126A :                     ; ----------------------------------------------------------------
    2040/    126A :                     
    2041/    126A :                     loc_1848:				; DATA XREF: ROM:00000CC2o
    2042/    126A : 4246                		clr.w	d6
    2043/    126C : 1C18                		move.b	(a0)+,d6
    2044/    126E : 1432 6000           		move.b	(a2,d6.w),d2
    2045/    1272 : 40C5                		move	sr,d5
    2046/    1274 : 0245 000C           		andi.w	#$C,d5
    2047/    1278 : 0203 00F3           		andi.b	#$F3,d3
    2048/    127C : 8645                		or.w	d5,d3
    2049/    127E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2050/    1284 :                     ; ----------------------------------------------------------------
    2051/    1284 :                     
    2052/    1284 :                     loc_1860:				; DATA XREF: ROM:00000D02o
    2053/    1284 : 4246                		clr.w	d6
    2054/    1286 : 1C18                		move.b	(a0)+,d6
    2055/    1288 : DC01                		add.b	d1,d6
    2056/    128A : 1432 6000           		move.b	(a2,d6.w),d2
    2057/    128E : 40C5                		move	sr,d5
    2058/    1290 : 0245 000C           		andi.w	#$C,d5
    2059/    1294 : 0203 00F3           		andi.b	#$F3,d3
    2060/    1298 : 8645                		or.w	d5,d3
    2061/    129A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2062/    12A0 :                     ; ----------------------------------------------------------------
    2063/    12A0 :                     
    2064/    12A0 :                     loc_187A:				; DATA XREF: ROM:00000CE2o
    2065/    12A0 : 4244                		clr.w	d4
    2066/    12A2 : 1818                		move.b	(a0)+,d4
    2067/    12A4 : 4246                		clr.w	d6
    2068/    12A6 : 1C18                		move.b	(a0)+,d6
    2069/    12A8 : 6100 06A0           		bsr	addr_Read
    2070/    12AC : 1407                		move.b	d7,d2
    2071/    12AE : 40C5                		move	sr,d5
    2072/    12B0 : 0245 000C           		andi.w	#$C,d5
    2073/    12B4 : 0203 00F3           		andi.b	#$F3,d3
    2074/    12B8 : 8645                		or.w	d5,d3
    2075/    12BA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2076/    12C0 :                     ; ----------------------------------------------------------------
    2077/    12C0 :                     
    2078/    12C0 :                     loc_189A:				; DATA XREF: ROM:00000D22o
    2079/    12C0 : 4244                		clr.w	d4
    2080/    12C2 : 1818                		move.b	(a0)+,d4
    2081/    12C4 : 4246                		clr.w	d6
    2082/    12C6 : 1C18                		move.b	(a0)+,d6
    2083/    12C8 : 4207                		clr.b	d7
    2084/    12CA : D801                		add.b	d1,d4
    2085/    12CC : DD07                		addx.b	d7,d6
    2086/    12CE : 6100 067A           		bsr	addr_Read
    2087/    12D2 : 1407                		move.b	d7,d2
    2088/    12D4 : 40C5                		move	sr,d5
    2089/    12D6 : 0245 000C           		andi.w	#$C,d5
    2090/    12DA : 0203 00F3           		andi.b	#$F3,d3
    2091/    12DE : 8645                		or.w	d5,d3
    2092/    12E0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2093/    12E6 :                     ; ----------------------------------------------------------------
    2094/    12E6 :                     
    2095/    12E6 :                     loc_18C0:				; DATA XREF: ROM:00000B5Ao
    2096/    12E6 : E208                		lsr.b	#1,d0
    2097/    12E8 : 40C5                		move	sr,d5
    2098/    12EA : 0245 001D           		andi.w	#$1D,d5
    2099/    12EE : 0203 00E2           		andi.b	#$E2,d3
    2100/    12F2 : 8645                		or.w	d5,d3
    2101/    12F4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2102/    12FA :                     ; ----------------------------------------------------------------
    2103/    12FA :                     
    2104/    12FA :                     loc_18D2:				; DATA XREF: ROM:00000B4Ao
    2105/    12FA : 4246                		clr.w	d6
    2106/    12FC : 1C18                		move.b	(a0)+,d6
    2107/    12FE : 1E32 6000           		move.b	(a2,d6.w),d7
    2108/    1302 : E20F                		lsr.b	#1,d7
    2109/    1304 : 40C5                		move	sr,d5
    2110/    1306 : 0245 001D           		andi.w	#$1D,d5
    2111/    130A : 0203 00E2           		andi.b	#$E2,d3
    2112/    130E : 8645                		or.w	d5,d3
    2113/    1310 : 1587 6000           		move.b	d7,(a2,d6.w)
    2114/    1314 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2115/    131A :                     ; ----------------------------------------------------------------
    2116/    131A :                     
    2117/    131A :                     loc_18F0:				; DATA XREF: ROM:00000B8Ao
    2118/    131A : 4246                		clr.w	d6
    2119/    131C : 1C18                		move.b	(a0)+,d6
    2120/    131E : DC01                		add.b	d1,d6
    2121/    1320 : 1E32 6000           		move.b	(a2,d6.w),d7
    2122/    1324 : E20F                		lsr.b	#1,d7
    2123/    1326 : 40C5                		move	sr,d5
    2124/    1328 : 0245 001D           		andi.w	#$1D,d5
    2125/    132C : 0203 00E2           		andi.b	#$E2,d3
    2126/    1330 : 8645                		or.w	d5,d3
    2127/    1332 : 1587 6000           		move.b	d7,(a2,d6.w)
    2128/    1336 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2129/    133C :                     ; ----------------------------------------------------------------
    2130/    133C :                     
    2131/    133C :                     loc_1910:				; DATA XREF: ROM:00000B6Ao
    2132/    133C : 1818                		move.b	(a0)+,d4
    2133/    133E : 1C18                		move.b	(a0)+,d6
    2134/    1340 : E14E                		lsl.w	#8,d6
    2135/    1342 : 1C04                		move.b	d4,d6
    2136/    1344 : 1E32 6000           		move.b	(a2,d6.w),d7
    2137/    1348 : E20F                		lsr.b	#1,d7
    2138/    134A : 40C5                		move	sr,d5
    2139/    134C : 0245 001D           		andi.w	#$1D,d5
    2140/    1350 : 0203 00E2           		andi.b	#$E2,d3
    2141/    1354 : 8645                		or.w	d5,d3
    2142/    1356 : 1587 6000           		move.b	d7,(a2,d6.w)
    2143/    135A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2144/    1360 :                     ; ----------------------------------------------------------------
    2145/    1360 :                     
    2146/    1360 :                     loc_1932:				; DATA XREF: ROM:00000BAAo
    2147/    1360 : 1818                		move.b	(a0)+,d4
    2148/    1362 : 1C18                		move.b	(a0)+,d6
    2149/    1364 : E14E                		lsl.w	#8,d6
    2150/    1366 : 1C04                		move.b	d4,d6
    2151/    1368 : DC41                		add.w	d1,d6
    2152/    136A : 1E32 6000           		move.b	(a2,d6.w),d7
    2153/    136E : E20F                		lsr.b	#1,d7
    2154/    1370 : 40C5                		move	sr,d5
    2155/    1372 : 0245 001D           		andi.w	#$1D,d5
    2156/    1376 : 0203 00E2           		andi.b	#$E2,d3
    2157/    137A : 8645                		or.w	d5,d3
    2158/    137C : 1587 6000           		move.b	d7,(a2,d6.w)
    2159/    1380 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2160/    1386 :                     ; ----------------------------------------------------------------
    2161/    1386 :                     
    2162/    1386 :                     loc_1956:				; DATA XREF: ROM:00000DDAo
    2163/    1386 : 4E71                		nop
    2164/    1388 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2165/    138E :                     ; ----------------------------------------------------------------
    2166/    138E :                     
    2167/    138E :                     loc_195C:				; DATA XREF: ROM:00000A56o
    2168/    138E : 1E18                		move.b	(a0)+,d7
    2169/    1390 : 8007                		or.b	d7,d0
    2170/    1392 : 40C5                		move	sr,d5
    2171/    1394 : 0245 000C           		andi.w	#$C,d5
    2172/    1398 : 0203 00F3           		andi.b	#$F3,d3
    2173/    139C : 8645                		or.w	d5,d3
    2174/    139E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2175/    13A4 :                     ; ----------------------------------------------------------------
    2176/    13A4 :                     
    2177/    13A4 :                     loc_1970:				; DATA XREF: ROM:00000A46o
    2178/    13A4 : 4246                		clr.w	d6
    2179/    13A6 : 1C18                		move.b	(a0)+,d6
    2180/    13A8 : 1E32 6000           		move.b	(a2,d6.w),d7
    2181/    13AC : 8007                		or.b	d7,d0
    2182/    13AE : 40C5                		move	sr,d5
    2183/    13B0 : 0245 000C           		andi.w	#$C,d5
    2184/    13B4 : 0203 00F3           		andi.b	#$F3,d3
    2185/    13B8 : 8645                		or.w	d5,d3
    2186/    13BA : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2187/    13C0 :                     ; ----------------------------------------------------------------
    2188/    13C0 :                     
    2189/    13C0 :                     loc_198A:				; DATA XREF: ROM:00000A86o
    2190/    13C0 : 4246                		clr.w	d6
    2191/    13C2 : 1C18                		move.b	(a0)+,d6
    2192/    13C4 : DC01                		add.b	d1,d6
    2193/    13C6 : 1E32 6000           		move.b	(a2,d6.w),d7
    2194/    13CA : 8007                		or.b	d7,d0
    2195/    13CC : 40C5                		move	sr,d5
    2196/    13CE : 0245 000C           		andi.w	#$C,d5
    2197/    13D2 : 0203 00F3           		andi.b	#$F3,d3
    2198/    13D6 : 8645                		or.w	d5,d3
    2199/    13D8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2200/    13DE :                     ; ----------------------------------------------------------------
    2201/    13DE :                     
    2202/    13DE :                     loc_19A6:				; DATA XREF: ROM:00000A66o
    2203/    13DE : 4244                		clr.w	d4
    2204/    13E0 : 1818                		move.b	(a0)+,d4
    2205/    13E2 : 4246                		clr.w	d6
    2206/    13E4 : 1C18                		move.b	(a0)+,d6
    2207/    13E6 : 6100 0562           		bsr	addr_Read
    2208/    13EA : 8007                		or.b	d7,d0
    2209/    13EC : 40C5                		move	sr,d5
    2210/    13EE : 0245 000C           		andi.w	#$C,d5
    2211/    13F2 : 0203 00F3           		andi.b	#$F3,d3
    2212/    13F6 : 8645                		or.w	d5,d3
    2213/    13F8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2214/    13FE :                     ; ----------------------------------------------------------------
    2215/    13FE :                     
    2216/    13FE :                     loc_19C6:				; DATA XREF: ROM:00000AA6o
    2217/    13FE : 4244                		clr.w	d4
    2218/    1400 : 1818                		move.b	(a0)+,d4
    2219/    1402 : 4246                		clr.w	d6
    2220/    1404 : 1C18                		move.b	(a0)+,d6
    2221/    1406 : 4207                		clr.b	d7
    2222/    1408 : D801                		add.b	d1,d4
    2223/    140A : DD07                		addx.b	d7,d6
    2224/    140C : 6100 053C           		bsr	addr_Read
    2225/    1410 : 8007                		or.b	d7,d0
    2226/    1412 : 40C5                		move	sr,d5
    2227/    1414 : 0245 000C           		andi.w	#$C,d5
    2228/    1418 : 0203 00F3           		andi.b	#$F3,d3
    2229/    141C : 8645                		or.w	d5,d3
    2230/    141E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2231/    1424 :                     ; ----------------------------------------------------------------
    2232/    1424 :                     
    2233/    1424 :                     loc_19EC:				; DATA XREF: ROM:00000A96o
    2234/    1424 : 4244                		clr.w	d4
    2235/    1426 : 1818                		move.b	(a0)+,d4
    2236/    1428 : 4246                		clr.w	d6
    2237/    142A : 1C18                		move.b	(a0)+,d6
    2238/    142C : 4207                		clr.b	d7
    2239/    142E : D802                		add.b	d2,d4
    2240/    1430 : DD07                		addx.b	d7,d6
    2241/    1432 : 6100 0516           		bsr	addr_Read
    2242/    1436 : 8007                		or.b	d7,d0
    2243/    1438 : 40C5                		move	sr,d5
    2244/    143A : 0245 000C           		andi.w	#$C,d5
    2245/    143E : 0203 00F3           		andi.b	#$F3,d3
    2246/    1442 : 8645                		or.w	d5,d3
    2247/    1444 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2248/    144A :                     ; ----------------------------------------------------------------
    2249/    144A :                     
    2250/    144A :                     loc_1A12:
    2251/    144A : 4245                		clr.w	d5
    2252/    144C : 1A18                		move.b	(a0)+,d5
    2253/    144E : DA01                		add.b	d1,d5
    2254/    1450 : 4244                		clr.w	d4
    2255/    1452 : 1832 5000           		move.b	(a2,d5.w),d4
    2256/    1456 : 4246                		clr.w	d6
    2257/    1458 : 1C32 5001           		move.b	1(a2,d5.w),d6
    2258/    145C : 6100 04EC           		bsr	addr_Read
    2259/    1460 : 8007                		or.b	d7,d0
    2260/    1462 : 40C5                		move	sr,d5
    2261/    1464 : 0245 000C           		andi.w	#$C,d5
    2262/    1468 : 0203 00F3           		andi.b	#$F3,d3
    2263/    146C : 8645                		or.w	d5,d3
    2264/    146E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2265/    1474 :                     ; ----------------------------------------------------------------
    2266/    1474 :                     
    2267/    1474 :                     loc_1A3C:
    2268/    1474 : 4245                		clr.w	d5
    2269/    1476 : 1A18                		move.b	(a0)+,d5
    2270/    1478 : 4244                		clr.w	d4
    2271/    147A : 1832 5000           		move.b	(a2,d5.w),d4
    2272/    147E : 4246                		clr.w	d6
    2273/    1480 : 1C32 5001           		move.b	1(a2,d5.w),d6
    2274/    1484 : 4207                		clr.b	d7
    2275/    1486 : D802                		add.b	d2,d4
    2276/    1488 : DD07                		addx.b	d7,d6
    2277/    148A : 6100 04BE           		bsr	addr_Read
    2278/    148E : 8007                		or.b	d7,d0
    2279/    1490 : 40C5                		move	sr,d5
    2280/    1492 : 0245 000C           		andi.w	#$C,d5
    2281/    1496 : 0203 00F3           		andi.b	#$F3,d3
    2282/    149A : 8645                		or.w	d5,d3
    2283/    149C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2284/    14A2 :                     ; ----------------------------------------------------------------
    2285/    14A2 :                     
    2286/    14A2 :                     loc_1A6A:				; DATA XREF: ROM:00000B52o
    2287/    14A2 : 4843                		swap	d3
    2288/    14A4 : 1580 3000           		move.b	d0,(a2,d3.w)
    2289/    14A8 : 5303                		subq.b	#1,d3
    2290/    14AA : 4843                		swap	d3
    2291/    14AC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2292/    14B2 :                     ; ----------------------------------------------------------------
    2293/    14B2 :                     
    2294/    14B2 :                     loc_1A78:				; DATA XREF: ROM:00000A52o
    2295/    14B2 : 3A03                		move.w	d3,d5
    2296/    14B4 : 4843                		swap	d3
    2297/    14B6 : 1585 3000           		move.b	d5,(a2,d3.w)
    2298/    14BA : 5303                		subq.b	#1,d3
    2299/    14BC : 4843                		swap	d3
    2300/    14BE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2301/    14C4 :                     ; ----------------------------------------------------------------
    2302/    14C4 :                     
    2303/    14C4 :                     loc_1A88:				; DATA XREF: ROM:00000BD2o
    2304/    14C4 : 0683 0001 0000      		addi.l	#$10000,d3
    2305/    14CA : 2A03                		move.l	d3,d5
    2306/    14CC : 4845                		swap	d5
    2307/    14CE : 1032 5000           		move.b	(a2,d5.w),d0
    2308/    14D2 : 40C5                		move	sr,d5
    2309/    14D4 : 0245 000C           		andi.w	#$C,d5
    2310/    14D8 : 0203 00F3           		andi.b	#$F3,d3
    2311/    14DC : 8645                		or.w	d5,d3
    2312/    14DE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2313/    14E4 :                     ; ----------------------------------------------------------------
    2314/    14E4 :                     
    2315/    14E4 :                     loc_1AA6:				; DATA XREF: ROM:00000AD2o
    2316/    14E4 : 4843                		swap	d3
    2317/    14E6 : 5203                		addq.b	#1,d3
    2318/    14E8 : 1A32 3000           		move.b	(a2,d3.w),d5
    2319/    14EC : 4843                		swap	d3
    2320/    14EE : 1605                		move.b	d5,d3
    2321/    14F0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2322/    14F6 :                     ; ----------------------------------------------------------------
    2323/    14F6 :                     
    2324/    14F6 :                     loc_1AB6:				; DATA XREF: ROM:00000ADAo
    2325/    14F6 : 46C3                		move	d3,sr
    2326/    14F8 : E310                		roxl.b	#1,d0
    2327/    14FA : 40C5                		move	sr,d5
    2328/    14FC : 0245 001D           		andi.w	#$1D,d5
    2329/    1500 : 0203 00E2           		andi.b	#$E2,d3
    2330/    1504 : 8645                		or.w	d5,d3
    2331/    1506 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2332/    150C :                     ; ----------------------------------------------------------------
    2333/    150C :                     
    2334/    150C :                     loc_1ACA:				; DATA XREF: ROM:00000ACAo
    2335/    150C : 4246                		clr.w	d6
    2336/    150E : 1C18                		move.b	(a0)+,d6
    2337/    1510 : 1E32 6000           		move.b	(a2,d6.w),d7
    2338/    1514 : 46C3                		move	d3,sr
    2339/    1516 : E317                		roxl.b	#1,d7
    2340/    1518 : 40C5                		move	sr,d5
    2341/    151A : 0245 001D           		andi.w	#$1D,d5
    2342/    151E : 0203 00E2           		andi.b	#$E2,d3
    2343/    1522 : 8645                		or.w	d5,d3
    2344/    1524 : 1587 6000           		move.b	d7,(a2,d6.w)
    2345/    1528 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2346/    152E :                     ; ----------------------------------------------------------------
    2347/    152E :                     
    2348/    152E :                     loc_1AEA:				; DATA XREF: ROM:00000B0Ao
    2349/    152E : 4246                		clr.w	d6
    2350/    1530 : 1C18                		move.b	(a0)+,d6
    2351/    1532 : DC01                		add.b	d1,d6
    2352/    1534 : 1E32 6000           		move.b	(a2,d6.w),d7
    2353/    1538 : 46C3                		move	d3,sr
    2354/    153A : E317                		roxl.b	#1,d7
    2355/    153C : 40C5                		move	sr,d5
    2356/    153E : 0245 001D           		andi.w	#$1D,d5
    2357/    1542 : 0203 00E2           		andi.b	#$E2,d3
    2358/    1546 : 8645                		or.w	d5,d3
    2359/    1548 : 1587 6000           		move.b	d7,(a2,d6.w)
    2360/    154C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2361/    1552 :                     ; ----------------------------------------------------------------
    2362/    1552 :                     
    2363/    1552 :                     loc_1B0C:				; DATA XREF: ROM:00000AEAo
    2364/    1552 : 1818                		move.b	(a0)+,d4
    2365/    1554 : 1C18                		move.b	(a0)+,d6
    2366/    1556 : E14E                		lsl.w	#8,d6
    2367/    1558 : 1C04                		move.b	d4,d6
    2368/    155A : 1E32 6000           		move.b	(a2,d6.w),d7
    2369/    155E : 46C3                		move	d3,sr
    2370/    1560 : E317                		roxl.b	#1,d7
    2371/    1562 : 40C5                		move	sr,d5
    2372/    1564 : 0245 001D           		andi.w	#$1D,d5
    2373/    1568 : 0203 00E2           		andi.b	#$E2,d3
    2374/    156C : 8645                		or.w	d5,d3
    2375/    156E : 1587 6000           		move.b	d7,(a2,d6.w)
    2376/    1572 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2377/    1578 :                     ; ----------------------------------------------------------------
    2378/    1578 :                     
    2379/    1578 :                     loc_1B30:				; DATA XREF: ROM:00000B2Ao
    2380/    1578 : 1818                		move.b	(a0)+,d4
    2381/    157A : 1C18                		move.b	(a0)+,d6
    2382/    157C : E14E                		lsl.w	#8,d6
    2383/    157E : 1C04                		move.b	d4,d6
    2384/    1580 : DC41                		add.w	d1,d6
    2385/    1582 : 1E32 6000           		move.b	(a2,d6.w),d7
    2386/    1586 : 46C3                		move	d3,sr
    2387/    1588 : E317                		roxl.b	#1,d7
    2388/    158A : 40C5                		move	sr,d5
    2389/    158C : 0245 001D           		andi.w	#$1D,d5
    2390/    1590 : 0203 00E2           		andi.b	#$E2,d3
    2391/    1594 : 8645                		or.w	d5,d3
    2392/    1596 : 1587 6000           		move.b	d7,(a2,d6.w)
    2393/    159A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2394/    15A0 :                     ; ----------------------------------------------------------------
    2395/    15A0 :                     
    2396/    15A0 :                     loc_1B56:				; DATA XREF: ROM:00000BDAo
    2397/    15A0 : 46C3                		move	d3,sr
    2398/    15A2 : E210                		roxr.b	#1,d0
    2399/    15A4 : 40C5                		move	sr,d5
    2400/    15A6 : 0245 001D           		andi.w	#$1D,d5
    2401/    15AA : 0203 00E2           		andi.b	#$E2,d3
    2402/    15AE : 8645                		or.w	d5,d3
    2403/    15B0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2404/    15B6 :                     ; ----------------------------------------------------------------
    2405/    15B6 :                     
    2406/    15B6 :                     loc_1B6A:				; DATA XREF: ROM:00000BCAo
    2407/    15B6 : 4246                		clr.w	d6
    2408/    15B8 : 1C18                		move.b	(a0)+,d6
    2409/    15BA : 1E32 6000           		move.b	(a2,d6.w),d7
    2410/    15BE : 46C3                		move	d3,sr
    2411/    15C0 : E217                		roxr.b	#1,d7
    2412/    15C2 : 40C5                		move	sr,d5
    2413/    15C4 : 0245 001D           		andi.w	#$1D,d5
    2414/    15C8 : 0203 00E2           		andi.b	#$E2,d3
    2415/    15CC : 8645                		or.w	d5,d3
    2416/    15CE : 1587 6000           		move.b	d7,(a2,d6.w)
    2417/    15D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2418/    15D8 :                     ; ----------------------------------------------------------------
    2419/    15D8 :                     
    2420/    15D8 :                     loc_1B8A:				; DATA XREF: ROM:00000C0Ao
    2421/    15D8 : 4246                		clr.w	d6
    2422/    15DA : 1C18                		move.b	(a0)+,d6
    2423/    15DC : DC01                		add.b	d1,d6
    2424/    15DE : 1E32 6000           		move.b	(a2,d6.w),d7
    2425/    15E2 : 46C3                		move	d3,sr
    2426/    15E4 : E217                		roxr.b	#1,d7
    2427/    15E6 : 40C5                		move	sr,d5
    2428/    15E8 : 0245 001D           		andi.w	#$1D,d5
    2429/    15EC : 0203 00E2           		andi.b	#$E2,d3
    2430/    15F0 : 8645                		or.w	d5,d3
    2431/    15F2 : 1587 6000           		move.b	d7,(a2,d6.w)
    2432/    15F6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2433/    15FC :                     ; ----------------------------------------------------------------
    2434/    15FC :                     
    2435/    15FC :                     loc_1BAC:				; DATA XREF: ROM:00000BEAo
    2436/    15FC : 1818                		move.b	(a0)+,d4
    2437/    15FE : 1C18                		move.b	(a0)+,d6
    2438/    1600 : E14E                		lsl.w	#8,d6
    2439/    1602 : 1C04                		move.b	d4,d6
    2440/    1604 : 1E32 6000           		move.b	(a2,d6.w),d7
    2441/    1608 : 46C3                		move	d3,sr
    2442/    160A : E217                		roxr.b	#1,d7
    2443/    160C : 40C5                		move	sr,d5
    2444/    160E : 0245 001D           		andi.w	#$1D,d5
    2445/    1612 : 0203 00E2           		andi.b	#$E2,d3
    2446/    1616 : 8645                		or.w	d5,d3
    2447/    1618 : 1587 6000           		move.b	d7,(a2,d6.w)
    2448/    161C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2449/    1622 :                     ; ----------------------------------------------------------------
    2450/    1622 :                     
    2451/    1622 :                     loc_1BD0:				; DATA XREF: ROM:00000C2Ao
    2452/    1622 : 1818                		move.b	(a0)+,d4
    2453/    1624 : 1C18                		move.b	(a0)+,d6
    2454/    1626 : E14E                		lsl.w	#8,d6
    2455/    1628 : 1C04                		move.b	d4,d6
    2456/    162A : DC41                		add.w	d1,d6
    2457/    162C : 1E32 6000           		move.b	(a2,d6.w),d7
    2458/    1630 : 46C3                		move	d3,sr
    2459/    1632 : E217                		roxr.b	#1,d7
    2460/    1634 : 40C5                		move	sr,d5
    2461/    1636 : 0245 001D           		andi.w	#$1D,d5
    2462/    163A : 0203 00E2           		andi.b	#$E2,d3
    2463/    163E : 8645                		or.w	d5,d3
    2464/    1640 : 1587 6000           		move.b	d7,(a2,d6.w)
    2465/    1644 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2466/    164A :                     
    2467/    164A :                     ; ----------------------------------------------------------------
    2468/    164A :                     ; $40 - RTI
    2469/    164A :                     ; 
    2470/    164A :                     ; NOTE: Interrupt exit
    2471/    164A :                     ; ----------------------------------------------------------------
    2472/    164A :                     
    2473/    164A :                     loc_1BF6:
    2474/    164A : 361F                		move.w	(sp)+,d3
    2475/    164C : 4CDF 2110           		movem.l	(sp)+,d4/a0/a5
    2476/    1650 :                     
    2477/    1650 : 23FC 0000 0566 FFFF 		move.l	#emuLoop,(RAM_EmuLoop+2).l
                    8FF2                
    2478/    165A : 397C 0000 0010      		move.w	#0,cpuFamiVint(a4)
    2479/    1660 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2480/    1666 :                     
    2481/    1666 :                     ; ----------------------------------------------------------------
    2482/    1666 :                     ; $60 - RTS
    2483/    1666 :                     ; ----------------------------------------------------------------
    2484/    1666 :                     
    2485/    1666 :                     loc_1C32:
    2486/    1666 : 4843                		swap	d3
    2487/    1668 : 7C00                		moveq	#0,d6
    2488/    166A : 5203                		addq.b	#1,d3
    2489/    166C : 1832 3000           		move.b	(a2,d3.w),d4
    2490/    1670 : 5203                		addq.b	#1,d3
    2491/    1672 : 1C32 3000           		move.b	(a2,d3.w),d6
    2492/    1676 : E14E                		lsl.w	#8,d6
    2493/    1678 : 1C04                		move.b	d4,d6
    2494/    167A : 4843                		swap	d3
    2495/    167C : 5246                		addq.w	#1,d6
    2496/    167E :                     ; 		lea	(a2,d6.l),a0
    2497/    167E :                     
    2498/    167E : CCBC 0000 7FFF      		and.l	#$7FFF,d6
    2499/    1684 : 2049                		movea.l a1,a0
    2500/    1686 : D1C6                		add.l 	d6,a0
    2501/    1688 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2502/    168E :                     ; ----------------------------------------------------------------
    2503/    168E :                     
    2504/    168E :                     loc_1C52:
    2505/    168E : 1E18                		move.b	(a0)+,d7
    2506/    1690 : 0A03 0011           		eori.b	#$11,d3
    2507/    1694 : 0003 0004           		ori.b	#4,d3
    2508/    1698 : 46C3                		move	d3,sr
    2509/    169A : 9107                		subx.b	d7,d0
    2510/    169C : 40C3                		move	sr,d3
    2511/    169E : 0A03 0011           		eori.b	#$11,d3
    2512/    16A2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2513/    16A8 :                     ; ----------------------------------------------------------------
    2514/    16A8 :                     
    2515/    16A8 :                     loc_1C6A:
    2516/    16A8 : 4246                		clr.w	d6
    2517/    16AA : 1C18                		move.b	(a0)+,d6
    2518/    16AC : 1E32 6000           		move.b	(a2,d6.w),d7
    2519/    16B0 : 0A03 0011           		eori.b	#$11,d3
    2520/    16B4 : 0003 0004           		ori.b	#4,d3
    2521/    16B8 : 46C3                		move	d3,sr
    2522/    16BA : 9107                		subx.b	d7,d0
    2523/    16BC : 40C3                		move	sr,d3
    2524/    16BE : 0A03 0011           		eori.b	#$11,d3
    2525/    16C2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2526/    16C8 :                     ; ----------------------------------------------------------------
    2527/    16C8 :                     
    2528/    16C8 :                     loc_1C88:				; DATA XREF: ROM:00000E06o
    2529/    16C8 : 4246                		clr.w	d6
    2530/    16CA : 1C18                		move.b	(a0)+,d6
    2531/    16CC : DC01                		add.b	d1,d6
    2532/    16CE : 1E32 6000           		move.b	(a2,d6.w),d7
    2533/    16D2 : 0A03 0011           		eori.b	#$11,d3
    2534/    16D6 : 0003 0004           		ori.b	#4,d3
    2535/    16DA : 46C3                		move	d3,sr
    2536/    16DC : 9107                		subx.b	d7,d0
    2537/    16DE : 40C3                		move	sr,d3
    2538/    16E0 : 0A03 0011           		eori.b	#$11,d3
    2539/    16E4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2540/    16EA :                     ; ----------------------------------------------------------------
    2541/    16EA :                     
    2542/    16EA :                     loc_1CA8:				; DATA XREF: ROM:00000DE6o
    2543/    16EA : 4244                		clr.w	d4
    2544/    16EC : 1818                		move.b	(a0)+,d4
    2545/    16EE : 4246                		clr.w	d6
    2546/    16F0 : 1C18                		move.b	(a0)+,d6
    2547/    16F2 : 6100 0256           		bsr	addr_Read
    2548/    16F6 : 0A03 0011           		eori.b	#$11,d3
    2549/    16FA : 0003 0004           		ori.b	#4,d3
    2550/    16FE : 46C3                		move	d3,sr
    2551/    1700 : 9107                		subx.b	d7,d0
    2552/    1702 : 40C3                		move	sr,d3
    2553/    1704 : 0A03 0011           		eori.b	#$11,d3
    2554/    1708 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2555/    170E :                     ; ----------------------------------------------------------------
    2556/    170E :                     
    2557/    170E :                     loc_1CCC:				; DATA XREF: ROM:00000E26o
    2558/    170E : 4244                		clr.w	d4
    2559/    1710 : 1818                		move.b	(a0)+,d4
    2560/    1712 : 4246                		clr.w	d6
    2561/    1714 : 1C18                		move.b	(a0)+,d6
    2562/    1716 : 4207                		clr.b	d7
    2563/    1718 : D801                		add.b	d1,d4
    2564/    171A : DD07                		addx.b	d7,d6
    2565/    171C : 6100 022C           		bsr	addr_Read
    2566/    1720 : 0A03 0011           		eori.b	#$11,d3
    2567/    1724 : 0003 0004           		ori.b	#4,d3
    2568/    1728 : 46C3                		move	d3,sr
    2569/    172A : 9107                		subx.b	d7,d0
    2570/    172C : 40C3                		move	sr,d3
    2571/    172E : 0A03 0011           		eori.b	#$11,d3
    2572/    1732 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2573/    1738 :                     ; ----------------------------------------------------------------
    2574/    1738 :                     
    2575/    1738 :                     loc_1CF6:				; DATA XREF: ROM:00000E16o
    2576/    1738 : 4244                		clr.w	d4
    2577/    173A : 1818                		move.b	(a0)+,d4
    2578/    173C : 4246                		clr.w	d6
    2579/    173E : 1C18                		move.b	(a0)+,d6
    2580/    1740 : 4207                		clr.b	d7
    2581/    1742 : D802                		add.b	d2,d4
    2582/    1744 : DD07                		addx.b	d7,d6
    2583/    1746 : 6100 0202           		bsr	addr_Read
    2584/    174A : 0A03 0011           		eori.b	#$11,d3
    2585/    174E : 0003 0004           		ori.b	#4,d3
    2586/    1752 : 46C3                		move	d3,sr
    2587/    1754 : 9107                		subx.b	d7,d0
    2588/    1756 : 40C3                		move	sr,d3
    2589/    1758 : 0A03 0011           		eori.b	#$11,d3
    2590/    175C : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2591/    1762 :                     ; ----------------------------------------------------------------
    2592/    1762 :                     
    2593/    1762 :                     loc_1D20:				; DATA XREF: ROM:00000DB6o
    2594/    1762 : 4245                		clr.w	d5
    2595/    1764 : 1A18                		move.b	(a0)+,d5
    2596/    1766 : DA01                		add.b	d1,d5
    2597/    1768 : 4244                		clr.w	d4
    2598/    176A : 1832 5000           		move.b	(a2,d5.w),d4
    2599/    176E : 4246                		clr.w	d6
    2600/    1770 : 1C32 5001           		move.b	1(a2,d5.w),d6
    2601/    1774 : 6100 01D4           		bsr	addr_Read
    2602/    1778 : 0A03 0011           		eori.b	#$11,d3
    2603/    177C : 0003 0004           		ori.b	#4,d3
    2604/    1780 : 46C3                		move	d3,sr
    2605/    1782 : 9107                		subx.b	d7,d0
    2606/    1784 : 40C3                		move	sr,d3
    2607/    1786 : 0A03 0011           		eori.b	#$11,d3
    2608/    178A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2609/    1790 :                     ; ----------------------------------------------------------------
    2610/    1790 :                     
    2611/    1790 :                     loc_1D4E:				; DATA XREF: ROM:00000DF6o
    2612/    1790 : 4245                		clr.w	d5
    2613/    1792 : 1A18                		move.b	(a0)+,d5
    2614/    1794 : 4244                		clr.w	d4
    2615/    1796 : 1832 5000           		move.b	(a2,d5.w),d4
    2616/    179A : 4246                		clr.w	d6
    2617/    179C : 1C32 5001           		move.b	1(a2,d5.w),d6
    2618/    17A0 : 4207                		clr.b	d7
    2619/    17A2 : D802                		add.b	d2,d4
    2620/    17A4 : DD07                		addx.b	d7,d6
    2621/    17A6 : 6100 01A2           		bsr	addr_Read
    2622/    17AA : 0A03 0011           		eori.b	#$11,d3
    2623/    17AE : 0003 0004           		ori.b	#4,d3
    2624/    17B2 : 46C3                		move	d3,sr
    2625/    17B4 : 9107                		subx.b	d7,d0
    2626/    17B6 : 40C3                		move	sr,d3
    2627/    17B8 : 0A03 0011           		eori.b	#$11,d3
    2628/    17BC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2629/    17C2 :                     ; ----------------------------------------------------------------
    2630/    17C2 :                     
    2631/    17C2 :                     loc_1D80:
    2632/    17C2 : 0003 0011           		ori.b	#$11,d3
    2633/    17C6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2634/    17CC :                     
    2635/    17CC :                     ; ----------------------------------------------------------------
    2636/    17CC :                     ; SED - Set Decimal mode
    2637/    17CC :                     ; ----------------------------------------------------------------
    2638/    17CC :                     
    2639/    17CC :                     loc_1D88:
    2640/    17CC : 397C 0001 0016      		move.w	#1,cpuModeDec(a4)
    2641/    17D2 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2642/    17D8 :                     
    2643/    17D8 :                     ; ----------------------------------------------------------------
    2644/    17D8 :                     ; SEI - Set Interrupt disable
    2645/    17D8 :                     ; ----------------------------------------------------------------
    2646/    17D8 :                     
    2647/    17D8 :                     loc_1D92:
    2648/    17D8 : 397C 0001 001A      		move.w	#1,cpuModeIntDis(a4)
    2649/    17DE : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2650/    17E4 :                     
    2651/    17E4 :                     ; ----------------------------------------------------------------
    2652/    17E4 :                     
    2653/    17E4 :                     loc_1D9C:
    2654/    17E4 : 4244                		clr.w	d4
    2655/    17E6 : 1818                		move.b	(a0)+,d4
    2656/    17E8 : 1580 4000           		move.b	d0,(a2,d4.w)
    2657/    17EC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2658/    17F2 :                     ; ----------------------------------------------------------------
    2659/    17F2 :                     
    2660/    17F2 :                     loc_1DA8:
    2661/    17F2 : 4244                		clr.w	d4
    2662/    17F4 : 1818                		move.b	(a0)+,d4
    2663/    17F6 : D801                		add.b	d1,d4
    2664/    17F8 : 1580 4000           		move.b	d0,(a2,d4.w)
    2665/    17FC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2666/    1802 :                     ; ----------------------------------------------------------------
    2667/    1802 :                     
    2668/    1802 :                     loc_1DB6:				; DATA XREF: ROM:00000C66o
    2669/    1802 : 4244                		clr.w	d4
    2670/    1804 : 1818                		move.b	(a0)+,d4
    2671/    1806 : 4246                		clr.w	d6
    2672/    1808 : 1C18                		move.b	(a0)+,d6
    2673/    180A : 1E00                		move.b	d0,d7
    2674/    180C : 6000 0208           		bra	addr_Write
    2675/    1810 :                     ; ----------------------------------------------------------------
    2676/    1810 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2677/    1816 :                     ; ----------------------------------------------------------------
    2678/    1816 :                     
    2679/    1816 :                     loc_1DCA:
    2680/    1816 : 4244                		clr.w	d4
    2681/    1818 : 1818                		move.b	(a0)+,d4
    2682/    181A : 4246                		clr.w	d6
    2683/    181C : 1C18                		move.b	(a0)+,d6
    2684/    181E : 4207                		clr.b	d7
    2685/    1820 : D801                		add.b	d1,d4
    2686/    1822 : DD07                		addx.b	d7,d6
    2687/    1824 : 1E00                		move.b	d0,d7
    2688/    1826 : 6000 01EE           		bra	addr_Write
    2689/    182A :                     ; ----------------------------------------------------------------
    2690/    182A :                     
    2691/    182A :                     loc_1DE0:
    2692/    182A : 4244                		clr.w	d4
    2693/    182C : 1818                		move.b	(a0)+,d4
    2694/    182E : 4246                		clr.w	d6
    2695/    1830 : 1C18                		move.b	(a0)+,d6
    2696/    1832 : 4207                		clr.b	d7
    2697/    1834 : D802                		add.b	d2,d4
    2698/    1836 : DD07                		addx.b	d7,d6
    2699/    1838 : 1E00                		move.b	d0,d7
    2700/    183A : 6000 01DA           		bra	addr_Write
    2701/    183E :                     ; ----------------------------------------------------------------
    2702/    183E :                     
    2703/    183E :                     loc_1DF6:
    2704/    183E : 4245                		clr.w	d5
    2705/    1840 : 1A18                		move.b	(a0)+,d5
    2706/    1842 : DA01                		add.b	d1,d5
    2707/    1844 : 4244                		clr.w	d4
    2708/    1846 : 1832 5000           		move.b	(a2,d5.w),d4
    2709/    184A : 4246                		clr.w	d6
    2710/    184C : 1C32 5001           		move.b	1(a2,d5.w),d6
    2711/    1850 : 1E00                		move.b	d0,d7
    2712/    1852 : 6000 01C2           		bra	addr_Write
    2713/    1856 :                     ; ----------------------------------------------------------------
    2714/    1856 :                     
    2715/    1856 :                     loc_1E10:
    2716/    1856 : 4245                		clr.w	d5
    2717/    1858 : 1A18                		move.b	(a0)+,d5
    2718/    185A : 4244                		clr.w	d4
    2719/    185C : 1832 5000           		move.b	(a2,d5.w),d4
    2720/    1860 : 4246                		clr.w	d6
    2721/    1862 : 1C32 5001           		move.b	1(a2,d5.w),d6
    2722/    1866 : 4207                		clr.b	d7
    2723/    1868 : D802                		add.b	d2,d4
    2724/    186A : DD07                		addx.b	d7,d6
    2725/    186C : 1E00                		move.b	d0,d7
    2726/    186E : 6000 01A6           		bra	addr_Write
    2727/    1872 :                     ; ----------------------------------------------------------------
    2728/    1872 :                     
    2729/    1872 :                     loc_1E2E:
    2730/    1872 : 4244                		clr.w	d4
    2731/    1874 : 1818                		move.b	(a0)+,d4
    2732/    1876 : 1581 4000           		move.b	d1,(a2,d4.w)
    2733/    187A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2734/    1880 :                     ; ----------------------------------------------------------------
    2735/    1880 :                     
    2736/    1880 :                     loc_1E3A:
    2737/    1880 : 4244                		clr.w	d4
    2738/    1882 : 1818                		move.b	(a0)+,d4
    2739/    1884 : D802                		add.b	d2,d4
    2740/    1886 : 1581 4000           		move.b	d1,(a2,d4.w)
    2741/    188A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2742/    1890 :                     ; ----------------------------------------------------------------
    2743/    1890 :                     
    2744/    1890 :                     loc_1E48:
    2745/    1890 : 4244                		clr.w	d4
    2746/    1892 : 1818                		move.b	(a0)+,d4
    2747/    1894 : 4246                		clr.w	d6
    2748/    1896 : 1C18                		move.b	(a0)+,d6
    2749/    1898 : 1E01                		move.b	d1,d7
    2750/    189A : 6000 017A           		bra	addr_Write
    2751/    189E :                     ; ----------------------------------------------------------------
    2752/    189E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2753/    18A4 :                     ; ----------------------------------------------------------------
    2754/    18A4 :                     
    2755/    18A4 :                     loc_1E5C:
    2756/    18A4 : 4244                		clr.w	d4
    2757/    18A6 : 1818                		move.b	(a0)+,d4
    2758/    18A8 : 1582 4000           		move.b	d2,(a2,d4.w)
    2759/    18AC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2760/    18B2 :                     ; ----------------------------------------------------------------
    2761/    18B2 :                     
    2762/    18B2 :                     loc_1E68:
    2763/    18B2 : 4244                		clr.w	d4
    2764/    18B4 : 1818                		move.b	(a0)+,d4
    2765/    18B6 : D801                		add.b	d1,d4
    2766/    18B8 : 1582 4000           		move.b	d2,(a2,d4.w)
    2767/    18BC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2768/    18C2 :                     ; ----------------------------------------------------------------
    2769/    18C2 :                     
    2770/    18C2 :                     loc_1E76:
    2771/    18C2 : 4244                		clr.w	d4
    2772/    18C4 : 1818                		move.b	(a0)+,d4
    2773/    18C6 : 4246                		clr.w	d6
    2774/    18C8 : 1C18                		move.b	(a0)+,d6
    2775/    18CA : 1E02                		move.b	d2,d7
    2776/    18CC : 6000 0148           		bra	addr_Write
    2777/    18D0 :                     ; ----------------------------------------------------------------
    2778/    18D0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2779/    18D6 :                     ; ----------------------------------------------------------------
    2780/    18D6 :                     
    2781/    18D6 :                     loc_1E8A:
    2782/    18D6 : 1200                		move.b	d0,d1
    2783/    18D8 : 40C5                		move	sr,d5
    2784/    18DA : 0245 000C           		andi.w	#$C,d5
    2785/    18DE : 0203 00F3           		andi.b	#$F3,d3
    2786/    18E2 : 8645                		or.w	d5,d3
    2787/    18E4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2788/    18EA :                     ; ----------------------------------------------------------------
    2789/    18EA :                     
    2790/    18EA :                     loc_1E9C:
    2791/    18EA : 1400                		move.b	d0,d2
    2792/    18EC : 40C5                		move	sr,d5
    2793/    18EE : 0245 000C           		andi.w	#$C,d5
    2794/    18F2 : 0203 00F3           		andi.b	#$F3,d3
    2795/    18F6 : 8645                		or.w	d5,d3
    2796/    18F8 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2797/    18FE :                     ; ----------------------------------------------------------------
    2798/    18FE :                     
    2799/    18FE :                     loc_1EAE:
    2800/    18FE : 2A03                		move.l	d3,d5
    2801/    1900 : 4845                		swap	d5
    2802/    1902 : 1205                		move.b	d5,d1
    2803/    1904 : 40C5                		move	sr,d5
    2804/    1906 : 0245 000C           		andi.w	#$C,d5
    2805/    190A : 0203 00F3           		andi.b	#$F3,d3
    2806/    190E : 8645                		or.w	d5,d3
    2807/    1910 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2808/    1916 :                     ; ----------------------------------------------------------------
    2809/    1916 :                     
    2810/    1916 :                     loc_1EC4:
    2811/    1916 : 1001                		move.b	d1,d0
    2812/    1918 : 40C5                		move	sr,d5
    2813/    191A : 0245 000C           		andi.w	#$C,d5
    2814/    191E : 0203 00F3           		andi.b	#$F3,d3
    2815/    1922 : 8645                		or.w	d5,d3
    2816/    1924 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2817/    192A :                     ; ----------------------------------------------------------------
    2818/    192A :                     
    2819/    192A :                     loc_1Ed3:				; DATA XREF: ROM:00000C9Ao
    2820/    192A : 4843                		swap	d3
    2821/    192C : 1601                		move.b	d1,d3
    2822/    192E : 4843                		swap	d3
    2823/    1930 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2824/    1936 :                     ; ----------------------------------------------------------------
    2825/    1936 :                     
    2826/    1936 :                     loc_1EE0:				; DATA XREF: ROM:00000C92o
    2827/    1936 : 1002                		move.b	d2,d0
    2828/    1938 : 40C5                		move	sr,d5
    2829/    193A : 0245 000C           		andi.w	#$C,d5
    2830/    193E : 0203 00F3           		andi.b	#$F3,d3
    2831/    1942 : 8645                		or.w	d5,d3
    2832/    1944 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2833/    194A :                     
    2834/    194A :                     ; ====================================================================
    2835/    194A :                     ; ----------------------------------------------------------------
    2836/    194A :                     ; Read request
    2837/    194A :                     ; 
    2838/    194A :                     ; d6 - XX00
    2839/    194A :                     ; d4 - 00XX
    2840/    194A :                     ; ----------------------------------------------------------------
    2841/    194A :                     
    2842/    194A :                     addr_Read:
    2843/    194A : 4A06                		tst.b	d6		; $8000
    2844/    194C : 6B1A                		bmi	rdFrom_PRG
    2845/    194E :                     	; TODO: $6000-$7FFF
    2846/    194E : BC3C 0040           		cmp.b	#$40,d6		; $4000
    2847/    1952 : 6C22                		bge	rdFrom_APU
    2848/    1954 : BC3C 0020           		cmp.b	#$20,d6		; $2000
    2849/    1958 : 6C52                		bge	rdFrom_PPU
    2850/    195A :                     
    2851/    195A :                     ; ----------------------------------------------------------------
    2852/    195A :                     
    2853/    195A :                     rdFrom_RAM:
    2854/    195A : E14E                		lsl.w	#8,d6
    2855/    195C : 1C04                		move.b	d4,d6
    2856/    195E : 0246 07FF           		andi.w	#$7FF,d6
    2857/    1962 : 1E32 6000           		move.b	(a2,d6.w),d7
    2858/    1966 : 4E75                		rts
    2859/    1968 :                     ; ----------------------------------------------------------------
    2860/    1968 :                     
    2861/    1968 :                     rdFrom_PRG:
    2862/    1968 : E14E                		lsl.w	#8,d6
    2863/    196A : 1C04                		move.b	d4,d6
    2864/    196C : 0246 7FFF           		andi.w	#$7FFF,d6
    2865/    1970 : 1E31 6000           		move.b	(a1,d6.w),d7
    2866/    1974 : 4E75                		rts
    2867/    1976 :                     ; ----------------------------------------------------------------
    2868/    1976 :                     
    2869/    1976 :                     rdFrom_APU:
    2870/    1976 : 0C04 001F           		cmpi.b	#$1F,d4
    2871/    197A : 6200 0010           		bhi.w	loc_23A6
    2872/    197E :                     
    2873/    197E : B83C 0016           		cmp.b	#$16,d4		; $4016
    2874/    1982 : 670C                		beq.s	APU_Input_1
    2875/    1984 : B83C 0017           		cmp.b	#$17,d4		; $4017
    2876/    1988 : 6714                		beq.s	APU_Input_2
    2877/    198A :                     
    2878/    198A :                     ; ----------------------------------------------------------------
    2879/    198A :                     
    2880/    198A :                     APU_Rd_Null:
    2881/    198A : 4E75                		rts
    2882/    198C :                     
    2883/    198C :                     ; ----------------------------------------------------------------
    2884/    198C :                     
    2885/    198C :                     loc_23A6:
    2886/    198C : 3E03                		move.w	d3,d7
    2887/    198E : 4E75                		rts
    2888/    1990 :                     
    2889/    1990 :                     ; ----------------------------------------------------------------
    2890/    1990 :                     
    2891/    1990 :                     APU_Input_1:
    2892/    1990 : 3E2C 0012           		move.w	cpuInputData(a4),d7
    2893/    1994 : 0247 0001           		andi.w	#1,d7
    2894/    1998 : E2EC 0012           		lsr	cpuInputData(a4)
    2895/    199C : 4E75                		rts
    2896/    199E :                     ; ----------------------------------------------------------------
    2897/    199E :                     
    2898/    199E :                     APU_Input_2:
    2899/    199E : 3E2C 0014           		move.w	cpuInputData+2(a4),d7
    2900/    19A2 : 0247 0001           		andi.w	#1,d7
    2901/    19A6 : E2EC 0014           		lsr	cpuInputData+2(a4)
    2902/    19AA : 4E75                		rts
    2903/    19AC :                     ; ----------------------------------------------------------------
    2904/    19AC :                     
    2905/    19AC :                     rdFrom_PPU:
    2906/    19AC : 0244 0007           		andi.w	#7,d4
    2907/    19B0 : D844                		add.w	d4,d4
    2908/    19B2 : 383B 4006           		move.w	off_23D4(pc,d4.w),d4
    2909/    19B6 : 4EFB 4002           		jmp	off_23D4(pc,d4.w)
    2910/    19BA :                     ; ----------------------------------------------------------------
    2911/    19BA : 0010                off_23D4:	dc.w loc_23F4-off_23D4		; $2000
    2912/    19BC : 0010                		dc.w loc_23F4-off_23D4		; $2001
    2913/    19BE : 0016                		dc.w rdPPU_Status-off_23D4	; $2002
    2914/    19C0 : 0010                		dc.w loc_23F4-off_23D4		; $2003
    2915/    19C2 : 0042                		dc.w return_241A-off_23D4	; $2004
    2916/    19C4 : 0010                		dc.w loc_23F4-off_23D4		; $2005
    2917/    19C6 : 0010                		dc.w loc_23F4-off_23D4		; $2006
    2918/    19C8 : 0044                		dc.w rdPPU_Data-off_23D4	; $2007
    2919/    19CA :                     ; ----------------------------------------------------------------
    2920/    19CA :                     
    2921/    19CA :                     loc_23F4:
    2922/    19CA : 3E31 3000           		move.w	(a1,d3.w),d7
    2923/    19CE : 4E75                		rts
    2924/    19D0 :                     ; ----------------------------------------------------------------
    2925/    19D0 :                     
    2926/    19D0 :                     rdPPU_Status:
    2927/    19D0 : 397C 0000 002C      		move.w	#0,ppuAddrLatch(a4)
    2928/    19D6 : 3E2C 0032           		move.w	ppuStatus(a4),d7
    2929/    19DA : 397C 0000 0032      		move.w	#0,ppuStatus(a4)
    2930/    19E0 :                     
    2931/    19E0 :                     	; sprite 0 beam hit
    2932/    19E0 :                     ; 		move.w	ppuSp0Ypos(a4),d4
    2933/    19E0 :                     ; 		move.w	8(a6),d5
    2934/    19E0 :                     ; 		lsr.w	#8,d5
    2935/    19E0 :                     ; 		cmp.b	d5,d4
    2936/    19E0 :                     ; 		bcs.s	return_2418
    2937/    19E0 :                     ; 		ori.w	#$40,d7
    2938/    19E0 :                     ; return_2418:
    2939/    19E0 : 382C 0034           		move.w	vdpHintSp0(a4),d4
    2940/    19E4 : 6704                		beq.s	.no_hit
    2941/    19E6 : 0047 0040           		ori.w	#$40,d7
    2942/    19EA :                     ; 		clr.w	vdpHintSp0(a4)
    2943/    19EA :                     .no_hit:
    2944/    19EA : 3839 00C0 0004      		move.w	(vdp_ctrl),d4
    2945/    19F0 : 0804 0003           		btst	#bitVint,d4
    2946/    19F4 : 6704                		beq.s	.novflag
    2947/    19F6 : 0047 0080           		ori.w	#$80,d7
    2948/    19FA :                     .novflag:
    2949/    19FA : 4E75                		rts
    2950/    19FC :                     ; ----------------------------------------------------------------
    2951/    19FC :                     
    2952/    19FC :                     return_241A:				; DATA XREF: ROM:000023E4o
    2953/    19FC : 4E75                		rts
    2954/    19FE :                     ; ----------------------------------------------------------------
    2955/    19FE :                     
    2956/    19FE :                     rdPPU_Data:
    2957/    19FE : 3E2C 0026           		move.w	ppuDataLast(a4),d7
    2958/    1A02 : 382C 0024           		move.w	ppuAddrBase(a4),d4
    2959/    1A06 : 1973 4000 0027      		move.b	(a3,d4.w),ppuDataLast+1(a4)
    2960/    1A0C : 382C 0022           		move.w	ppuAddrIncr(a4),d4
    2961/    1A10 : D96C 0024           		add.w	d4,ppuAddrBase(a4)
    2962/    1A14 : 4E75                		rts
    2963/    1A16 :                     
    2964/    1A16 :                     ; ====================================================================
    2965/    1A16 :                     ; ----------------------------------------------------------------
    2966/    1A16 :                     ; Write request
    2967/    1A16 :                     ; 
    2968/    1A16 :                     ; d6 - XX00
    2969/    1A16 :                     ; d4 - 00XX
    2970/    1A16 :                     ; ----------------------------------------------------------------
    2971/    1A16 :                     
    2972/    1A16 :                     addr_Write:
    2973/    1A16 : 4A06                		tst.b	d6		; $8000
    2974/    1A18 : 6B20                		bmi	wrTo_PRG
    2975/    1A1A :                     	; TODO: $6000-$7FFF
    2976/    1A1A : BC3C 0040           		cmp.b	#$40,d6		; $4000
    2977/    1A1E : 6C50                		bge	wrTo_APU
    2978/    1A20 : BC3C 0020           		cmp.b	#$20,d6		; $2000
    2979/    1A24 : 6C00 0170           		bge	wrTo_PPU
    2980/    1A28 :                     
    2981/    1A28 :                     ; ====================================================================
    2982/    1A28 :                     ; ----------------------------------------------------------------
    2983/    1A28 :                     ; WRITE request to RAM
    2984/    1A28 :                     ; ----------------------------------------------------------------
    2985/    1A28 :                     
    2986/    1A28 :                     wrTo_RAM:
    2987/    1A28 : E14E                		lsl.w	#8,d6
    2988/    1A2A : 1C04                		move.b	d4,d6
    2989/    1A2C : 0246 07FF           		andi.w	#$7FF,d6
    2990/    1A30 : 1587 6000           		move.b	d7,(a2,d6.w)
    2991/    1A34 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    2992/    1A3A :                     
    2993/    1A3A :                     ; ====================================================================
    2994/    1A3A :                     ; ----------------------------------------------------------------
    2995/    1A3A :                     ; WRITE request to ROM area, mappers
    2996/    1A3A :                     ; ----------------------------------------------------------------
    2997/    1A3A :                     
    2998/    1A3A :                     wrTo_PRG:
    2999/    1A3A : 0C6C 0003 000E      		cmp.w	#3,cpuMapper(a4)
    3000/    1A40 : 6706                		beq.s	.mapper_3
    3001/    1A42 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3002/    1A48 :                     
    3003/    1A48 :                     ; --------------------------------------------------------
    3004/    1A48 :                     ; Mapper $03, CNROM
    3005/    1A48 :                     ; 
    3006/    1A48 :                     ; Bank select ($8000-$FFFF)
    3007/    1A48 :                     ; 
    3008/    1A48 :                     ; 7  bit  0
    3009/    1A48 :                     ; ---- ----
    3010/    1A48 :                     ; xxDD xxCC
    3011/    1A48 :                     ;   ||   ||
    3012/    1A48 :                     ;   ||   ++- Select 8 KB CHR ROM bank for PPU $0000-$1FFF
    3013/    1A48 :                     ;   ++------ Security diodes config
    3014/    1A48 :                     ; --------------------------------------------------------
    3015/    1A48 :                     
    3016/    1A48 :                     .mapper_3:
    3017/    1A48 : 2F0C                		move.l	a4,-(sp)
    3018/    1A4A : 2A6C 0004           		movea.l	emuChrRom(a4),a5
    3019/    1A4E : CE7C 0003           		and.w	#%11,d7
    3020/    1A52 : E14F                		lsl.w	#8,d7
    3021/    1A54 : EB4F                		lsl.w	#5,d7
    3022/    1A56 : DAC7                		adda	d7,a5
    3023/    1A58 : 284B                		move.l	a3,a4
    3024/    1A5A : 3E3C 07FE           		move.w	#($1FFF/4)-1,d7
    3025/    1A5E :                     .copychr:
    3026/    1A5E : 28DD                		move.l	(a5)+,(a4)+
    3027/    1A60 : 51CF FFFC           		dbf	d7,.copychr
    3028/    1A64 : 285F                		move.l	(sp)+,a4
    3029/    1A66 : 6100 0444           		bsr	Nemul_LoadChr
    3030/    1A6A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3031/    1A70 :                     
    3032/    1A70 :                     ; ====================================================================
    3033/    1A70 :                     ; ----------------------------------------------------------------
    3034/    1A70 :                     ; WRITE to APU
    3035/    1A70 :                     ; ----------------------------------------------------------------
    3036/    1A70 :                     
    3037/    1A70 :                     wrTo_APU:
    3038/    1A70 : 0C04 001F           		cmpi.b	#$1F,d4
    3039/    1A74 : 624A                		bhi.s	APU_Null
    3040/    1A76 : D844                		add.w	d4,d4
    3041/    1A78 : 383B 4006           		move.w	off_2866(pc,d4.w),d4
    3042/    1A7C : 4EFB 4002           		jmp	off_2866(pc,d4.w)
    3043/    1A80 :                     
    3044/    1A80 :                     ; ----------------------------------------------------------------
    3045/    1A80 : 0040                off_2866:	dc.w APU_Null-off_2866
    3046/    1A82 : 0040                		dc.w APU_Null-off_2866
    3047/    1A84 : 0040                		dc.w APU_Null-off_2866
    3048/    1A86 : 0040                		dc.w APU_Null-off_2866
    3049/    1A88 : 0040                		dc.w APU_Null-off_2866
    3050/    1A8A : 0040                		dc.w APU_Null-off_2866
    3051/    1A8C : 0040                		dc.w APU_Null-off_2866
    3052/    1A8E : 0040                		dc.w APU_Null-off_2866
    3053/    1A90 : 0040                		dc.w APU_Null-off_2866
    3054/    1A92 : 0040                		dc.w APU_Null-off_2866
    3055/    1A94 : 0040                		dc.w APU_Null-off_2866
    3056/    1A96 : 0040                		dc.w APU_Null-off_2866
    3057/    1A98 : 0040                		dc.w APU_Null-off_2866
    3058/    1A9A : 0040                		dc.w APU_Null-off_2866
    3059/    1A9C : 0040                		dc.w APU_Null-off_2866
    3060/    1A9E : 0040                		dc.w APU_Null-off_2866
    3061/    1AA0 : 0040                		dc.w APU_Null-off_2866
    3062/    1AA2 : 0040                		dc.w APU_Null-off_2866
    3063/    1AA4 : 0040                		dc.w APU_Null-off_2866
    3064/    1AA6 : 0040                		dc.w APU_Null-off_2866
    3065/    1AA8 : 00A6                		dc.w APU_OAMDMA-off_2866
    3066/    1AAA : 0040                		dc.w APU_Null-off_2866
    3067/    1AAC : 0046                		dc.w APU_Input-off_2866
    3068/    1AAE : 0040                		dc.w APU_Null-off_2866
    3069/    1AB0 : 0040                		dc.w APU_Null-off_2866
    3070/    1AB2 : 0040                		dc.w APU_Null-off_2866
    3071/    1AB4 : 0040                		dc.w APU_Null-off_2866
    3072/    1AB6 : 0040                		dc.w APU_Null-off_2866
    3073/    1AB8 : 0040                		dc.w APU_Null-off_2866
    3074/    1ABA : 0040                		dc.w APU_Null-off_2866
    3075/    1ABC : 0040                		dc.w APU_Null-off_2866
    3076/    1ABE : 0040                		dc.w APU_Null-off_2866
    3077/    1AC0 :                     
    3078/    1AC0 :                     APU_Null:
    3079/    1AC0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3080/    1AC6 :                     
    3081/    1AC6 :                     ; =============== S U B	R O U T	I N E =======================================
    3082/    1AC6 :                     
    3083/    1AC6 :                     
    3084/    1AC6 :                     APU_Input:				; DATA XREF: ROM:000028BEo
    3085/    1AC6 : 4A07                		tst.b	d7
    3086/    1AC8 : 67F6                		beq.s	APU_Null
    3087/    1ACA : 6106                		bsr	readInput
    3088/    1ACC : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3089/    1AD2 :                     
    3090/    1AD2 :                     ; =============== S U B	R O U T	I N E =======================================
    3091/    1AD2 :                     
    3092/    1AD2 :                     
    3093/    1AD2 :                     readInput:
    3094/    1AD2 : 2F0B                		move.l	a3,-(sp)
    3095/    1AD4 : 47F9 00A1 0003      		lea	($A10003).l,a3
    3096/    1ADA : 4BEC 0012           		lea	cpuInputData(a4),a5
    3097/    1ADE : 6108                		bsr	.this_pad
    3098/    1AE0 : 544B                		addq.w	#2,a3
    3099/    1AE2 : 6104                		bsr	.this_pad		
    3100/    1AE4 : 265F                		move.l	(sp)+,a3
    3101/    1AE6 : 4E75                		rts
    3102/    1AE8 :                     		
    3103/    1AE8 :                     .this_pad:
    3104/    1AE8 : 16BC 0000           		move.b	#0,(a3)
    3105/    1AEC : 4E71                		nop
    3106/    1AEE : 4E71                		nop
    3107/    1AF0 : 1A13                		move.b	(a3),d5
    3108/    1AF2 : E50D                		lsl.b	#2,d5
    3109/    1AF4 : 0205 00C0           		andi.b	#$C0,d5
    3110/    1AF8 : 16BC 0040           		move.b	#$40,(a3)
    3111/    1AFC : 4E71                		nop
    3112/    1AFE : 4E71                		nop
    3113/    1B00 : 1813                		move.b	(a3),d4
    3114/    1B02 : 0204 003F           		andi.b	#$3F,d4
    3115/    1B06 : 8A04                		or.b	d4,d5
    3116/    1B08 : 4605                		not.b	d5
    3117/    1B0A : 4244                		clr.w	d4
    3118/    1B0C : E30D                		lsl.b	#1,d5
    3119/    1B0E : D904                		addx.b	d4,d4
    3120/    1B10 : E34D                		lsl.w	#1,d5
    3121/    1B12 : E30D                		lsl.b	#1,d5
    3122/    1B14 : D904                		addx.b	d4,d4
    3123/    1B16 : E24D                		lsr.w	#1,d5
    3124/    1B18 : E30D                		lsl.b	#1,d5
    3125/    1B1A : D904                		addx.b	d4,d4
    3126/    1B1C : E30D                		lsl.b	#1,d5
    3127/    1B1E : D904                		addx.b	d4,d4
    3128/    1B20 : 8805                		or.b	d5,d4
    3129/    1B22 : 3AC4                		move.w	d4,(a5)+
    3130/    1B24 : 4E75                		rts
    3131/    1B26 :                     
    3132/    1B26 :                     
    3133/    1B26 :                     ; =============== S U B	R O U T	I N E =======================================
    3134/    1B26 :                     
    3135/    1B26 :                     
    3136/    1B26 :                     APU_OAMDMA:
    3137/    1B26 : E14F                		lsl.w	#8,d7
    3138/    1B28 : 3C2C 002E           		move.w	ppuOamUnk(a4),d6
    3139/    1B2C : 0A46 0001           		eori.w	#1,d6
    3140/    1B30 : 1E34 6020           		move.b	ppuOamAddr(a4,d6.w),d7
    3141/    1B34 : 4BF2 7000           		lea	(a2,d7.w),a5
    3142/    1B38 : 3E3C 8A00           		move.w	#$8A00,d7
    3143/    1B3C : 1E15                		move.b	(a5),d7
    3144/    1B3E : 1947 002B           		move.b	d7,ppuSp0Ypos+1(a4)		; sprite 0 ypos
    3145/    1B42 : 9E7C 0001           		sub.w	#1,d7
    3146/    1B46 : 3D47 0004           		move.w	d7,4(a6)
    3147/    1B4A :                     
    3148/    1B4A : 2F0B                		move.l	a3,-(sp)
    3149/    1B4C : 47EC 00C0           		lea 	oamSprData(a4),a3
    3150/    1B50 : 7A3F                		moveq	#$3F,d5
    3151/    1B52 : 7E00                		moveq	#0,d7
    3152/    1B54 :                     .lp_sprnormal:
    3153/    1B54 : 1E1D                		move.b	(a5)+,d7
    3154/    1B56 : 3C07                		move.w	d7,d6
    3155/    1B58 : 0646 0079           		addi.w	#$79,d6
    3156/    1B5C : 36C6                		move.w	d6,(a3)+
    3157/    1B5E : 7C40                		moveq	#64,d6
    3158/    1B60 : 9C05                		sub.b	d5,d6
    3159/    1B62 : 36C6                		move.w	d6,(a3)+
    3160/    1B64 : 1E1D                		move.b	(a5)+,d7
    3161/    1B66 : 3C07                		move.w	d7,d6
    3162/    1B68 : 0046 0100           		ori.w	#$100,d6
    3163/    1B6C : 1E1D                		move.b	(a5)+,d7
    3164/    1B6E : 3807                		move.w	d7,d4
    3165/    1B70 : E51C                		rol.b	#2,d4
    3166/    1B72 : E34C                		lsl.w	#1,d4
    3167/    1B74 : E70C                		lsl.b	#3,d4
    3168/    1B76 : EF4C                		lsl.w	#7,d4
    3169/    1B78 : 8846                		or.w	d6,d4
    3170/    1B7A : 0A44 8000           		eori.w	#$8000,d4
    3171/    1B7E : 36C4                		move.w	d4,(a3)+
    3172/    1B80 : 1E1D                		move.b	(a5)+,d7
    3173/    1B82 : 3C07                		move.w	d7,d6
    3174/    1B84 : 0646 0080           		addi.w	#$80,d6
    3175/    1B88 : 36C6                		move.w	d6,(a3)+
    3176/    1B8A : 51CD FFC8           		dbf	d5,.lp_sprnormal
    3177/    1B8E : 265F                		move.l	(sp)+,a3
    3178/    1B90 :                     
    3179/    1B90 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3180/    1B96 :                     
    3181/    1B96 :                     
    3182/    1B96 :                     ; =============== S U B	R O U T	I N E =======================================
    3183/    1B96 :                     
    3184/    1B96 :                     
    3185/    1B96 :                     wrTo_PPU:
    3186/    1B96 : 0244 0007           		andi.w	#7,d4
    3187/    1B9A : D844                		add.w	d4,d4
    3188/    1B9C : 383B 4006           		move.w	off_29F6(pc,d4.w),d4
    3189/    1BA0 : 4EFB 4002           		jmp	off_29F6(pc,d4.w)
    3190/    1BA4 :                     
    3191/    1BA4 :                     ; ----------------------------------------------------------------
    3192/    1BA4 : 0010                off_29F6:	dc.w loc_2A16-off_29F6 ; $2000
    3193/    1BA6 : 0058                		dc.w loc_2A5E-off_29F6 ; $2001
    3194/    1BA8 : 00E2                		dc.w loc_2ACC-off_29F6 ; $2002
    3195/    1BAA : 00E8                		dc.w loc_2AD0-off_29F6 ; $2003
    3196/    1BAC : 00FC                		dc.w loc_2AE2-off_29F6 ; $2004
    3197/    1BAE : 008C                		dc.w wrPPU_Scroll-off_29F6 ; $2005
    3198/    1BB0 : 0102                		dc.w loc_2AE6-off_29F6 ; $2006
    3199/    1BB2 : 0116                		dc.w wrPPU_Data-off_29F6 ; $2007
    3200/    1BB4 :                     ; ----------------------------------------------------------------
    3201/    1BB4 :                     
    3202/    1BB4 :                     loc_2A16:
    3203/    1BB4 :                     
    3204/    1BB4 :                     	; NMI on/off
    3205/    1BB4 : 4246                		clr.w	d6
    3206/    1BB6 : E30F                		lsl.b	#1,d7			; $80
    3207/    1BB8 : 6404                		bcc.s	.noVintFlag
    3208/    1BBA : 1C3C 0080           		move.b	#$80,d6			; NMI ON
    3209/    1BBE :                     .noVintFlag:
    3210/    1BBE : 3946 0030           		move.w	d6,ppuNmiFlag(a4)
    3211/    1BC2 :                     		
    3212/    1BC2 :                     	; 8x8 or 8x16 sprites
    3213/    1BC2 : 4246                		clr.w	d6
    3214/    1BC4 : E50F                		lsl.b	#2,d7
    3215/    1BC6 : 6402                		bcc.s	loc_2A2C
    3216/    1BC8 : 7C01                		moveq	#1,d6
    3217/    1BCA :                     loc_2A2C:
    3218/    1BCA : 3946 0028           		move.w	d6,ppuSprWide(a4)
    3219/    1BCE :                     		
    3220/    1BCE :                     	; PPU VRAM BG bank/Sprites bank
    3221/    1BCE : 1C07                		move.b	d7,d6
    3222/    1BD0 : 0246 00C0           		andi.w	#$C0,d6
    3223/    1BD4 : BC6C 001E           		cmp.w	ppuChrBank(a4),d6
    3224/    1BD8 : 6708                		beq.s	.no_reload
    3225/    1BDA : 3946 001E           		move.w	d6,ppuChrBank(a4)
    3226/    1BDE : 6100 02CC           		bsr	Nemul_LoadChr
    3227/    1BE2 :                     .no_reload:
    3228/    1BE2 :                     
    3229/    1BE2 :                     	; PPU VRAM increment
    3230/    1BE2 : 7C01                		moveq	#1,d6
    3231/    1BE4 : E70F                		lsl.b	#3,d7
    3232/    1BE6 : 6402                		bcc.s	.nrml_incr
    3233/    1BE8 : 7C20                		moveq	#$20,d6
    3234/    1BEA :                     .nrml_incr:
    3235/    1BEA : 3946 0022           		move.w	d6,ppuAddrIncr(a4)
    3236/    1BEE :                     
    3237/    1BEE :                     	; PPU Name table base
    3238/    1BEE : 0247 00C0           		andi.w	#$C0,d7
    3239/    1BF2 : 3947 001C           		move.w	d7,ppuNTblBase(a4)
    3240/    1BF6 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3241/    1BFC :                     
    3242/    1BFC :                     ; ----------------------------------------------------------------
    3243/    1BFC :                     ; $2002 - PPU MASK
    3244/    1BFC :                     ; ----------------------------------------------------------------
    3245/    1BFC :                     
    3246/    1BFC :                     loc_2A5E:
    3247/    1BFC : 3C3C 8550           		move.w	#$8500+(($A000)>>9),d6
    3248/    1C00 : 4846                		swap	d6
    3249/    1C02 : 3C2C 000A           		move.w	vdpReg01(a4),d6		; REGISTER 81
    3250/    1C06 : CC3C 00BF           		and.b	#$BF,d6
    3251/    1C0A : 0807 0003           		btst	#3,d7
    3252/    1C0E : 6704                		beq.s	.hidebg
    3253/    1C10 : 0006 0040           		ori.b	#$40,d6
    3254/    1C14 :                     .hidebg:
    3255/    1C14 : 4846                		swap	d6
    3256/    1C16 : 0807 0004           		btst	#4,d7
    3257/    1C1A : 6704                		beq.s	.hidesp
    3258/    1C1C : 3C3C 855E           		move.w	#$8500+(($BC00)>>9),d6
    3259/    1C20 :                     .hidesp:
    3260/    1C20 : 2D46 0004           		move.l	d6,4(a6)
    3261/    1C24 : 4846                		swap	d6
    3262/    1C26 : 3946 000A           		move.w	d6,vdpReg01(a4)
    3263/    1C2A :                     
    3264/    1C2A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3265/    1C30 :                     
    3266/    1C30 :                     ; ----------------------------------------------------------------
    3267/    1C30 :                     ; $2005 - PPU SCROLL
    3268/    1C30 :                     ; -----------------------------------------------------------------
    3269/    1C30 :                     
    3270/    1C30 :                     wrPPU_Scroll:
    3271/    1C30 : 3C2C 001C           		move.w	ppuNTblBase(a4),d6
    3272/    1C34 : 0A6C 0001 002C      		eori.w	#1,ppuAddrLatch(a4)
    3273/    1C3A : 671C                		beq.s	loc_2AA4
    3274/    1C3C :                     		
    3275/    1C3C : 0247 00FF           		andi.w	#$FF,d7
    3276/    1C40 : CC7C 0001           		and.w	#1,d6
    3277/    1C44 : E14E                		lsl.w	#8,d6
    3278/    1C46 : DE46                		add.w	d6,d7
    3279/    1C48 : 4447                		neg.w	d7
    3280/    1C4A : 3947 0038           		move.w	d7,vdpScrlX(a4)
    3281/    1C4E : 3947 003A           		move.w	d7,vdpScrlX+2(a4)
    3282/    1C52 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3283/    1C58 :                     
    3284/    1C58 :                     ; --------------------------------------------------------
    3285/    1C58 :                     ; Vertical
    3286/    1C58 :                     ; --------------------------------------------------------
    3287/    1C58 :                     
    3288/    1C58 :                     loc_2AA4:
    3289/    1C58 : CE7C 00FF           		and.w	#$FF,d7
    3290/    1C5C : 5047                		addq.w	#8,d7
    3291/    1C5E : E30E                		lsl.b	#1,d6
    3292/    1C60 : 6512                		bcs.s	loc_2ABE
    3293/    1C62 : 3947 003C           		move.w	d7,vdpScrlY(a4)
    3294/    1C66 : DE7C 0110           		add.w	#$110,d7
    3295/    1C6A : 3947 003E           		move.w	d7,vdpScrlY+2(a4)
    3296/    1C6E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3297/    1C74 :                     loc_2ABE:
    3298/    1C74 : 3947 003E           		move.w	d7,vdpScrlY+2(a4)
    3299/    1C78 : DE7C 0110           		add.w	#$110,d7
    3300/    1C7C : 3947 003C           		move.w	d7,vdpScrlY(a4)
    3301/    1C80 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3302/    1C86 :                     
    3303/    1C86 :                     ; ----------------------------------------------------------------
    3304/    1C86 :                     
    3305/    1C86 :                     loc_2ACC:				; DATA XREF: ROM:000029FEo
    3306/    1C86 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3307/    1C8C :                     ; ----------------------------------------------------------------
    3308/    1C8C :                     
    3309/    1C8C :                     loc_2AD0:
    3310/    1C8C : 382C 002E           		move.w	ppuOamUnk(a4),d4
    3311/    1C90 : 1987 4020           		move.b	d7,ppuOamAddr(a4,d4.w)
    3312/    1C94 : 0A6C 0001 002E      		eori.w	#1,ppuOamUnk(a4)
    3313/    1C9A : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3314/    1CA0 :                     ; ----------------------------------------------------------------
    3315/    1CA0 :                     
    3316/    1CA0 :                     loc_2AE2:
    3317/    1CA0 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3318/    1CA6 :                     ; ----------------------------------------------------------------
    3319/    1CA6 :                     
    3320/    1CA6 :                     loc_2AE6:
    3321/    1CA6 : 382C 002C           		move.w	ppuAddrLatch(a4),d4
    3322/    1CAA : 1987 4024           		move.b	d7,ppuAddrBase(a4,d4.w)
    3323/    1CAE : 0A6C 0001 002C      		eori.w	#1,ppuAddrLatch(a4)
    3324/    1CB4 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3325/    1CBA :                     ; ----------------------------------------------------------------
    3326/    1CBA :                     
    3327/    1CBA :                     wrPPU_Data:
    3328/    1CBA : 382C 0024           		move.w	ppuAddrBase(a4),d4
    3329/    1CBE : 3C2C 0022           		move.w	ppuAddrIncr(a4),d6
    3330/    1CC2 : DD6C 0024           		add.w	d6,ppuAddrBase(a4)
    3331/    1CC6 : 0244 3FFF           		andi.w	#$3FFF,d4
    3332/    1CCA : 1787 4000           		move.b	d7,(a3,d4.w)
    3333/    1CCE : 0C44 3F00           		cmpi.w	#$3F00,d4
    3334/    1CD2 : 6452                		bcc.s	ppuSetColor
    3335/    1CD4 : 3A04                		move.w	d4,d5
    3336/    1CD6 : 0245 03C0           		andi.w	#$3C0,d5
    3337/    1CDA : 0C45 03C0           		cmpi.w	#$3C0,d5
    3338/    1CDE : 6600 00E8           		bne.w	ppuDrwCell
    3339/    1CE2 : 6000 017A           		bra.w	ppuDrwCellPal
    3340/    1CE6 :                     ; ----------------------------------------------------------------
    3341/    1CE6 :                     
    3342/    1CE6 :                     ppuVdpIndex:
    3343/    1CE6 : 0000 0002 0004 0006 		dc.w $0000,$0002,$0004,$0006
    3344/    1CEE : 0020 0022 0024 0026 		dc.w $0020,$0022,$0024,$0026
    3345/    1CF6 : 0040 0042 0044 0046 		dc.w $0040,$0042,$0044,$0046
    3346/    1CFE : 0060 0062 0064 0066 		dc.w $0060,$0062,$0064,$0066
    3347/    1D06 : 0008 000A 000C 000E 		dc.w $0008,$000A,$000C,$000E
    3348/    1D0E : 0028 002A 002C 002E 		dc.w $0028,$002A,$002C,$002E
    3349/    1D16 : 0048 004A 004C 004E 		dc.w $0048,$004A,$004C,$004E
    3350/    1D1E : 0068 006A 006C 006E 		dc.w $0068,$006A,$006C,$006E
    3351/    1D26 :                     		align 2
    3352/    1D26 :                     
    3353/    1D26 :                     ppuSetColor:
    3354/    1D26 : 0244 001F           		andi.w	#$1F,d4
    3355/    1D2A : D844                		add.w	d4,d4
    3356/    1D2C : 383B 40B8           		move.w	ppuVdpIndex(pc,d4.w),d4
    3357/    1D30 : 4BF4 4040           		lea 	vdpPalette(a4,d4.w),a5
    3358/    1D34 : 0207 003F           		andi.b	#$3F,d7
    3359/    1D38 : DE47                		add.w	d7,d7
    3360/    1D3A : 3ABB 700C           		move.w	ppuVdpColors(pc,d7.w),(a5)
    3361/    1D3E : 4BF8 8040           		lea	(RAM_Fami_Emu+vdpPalette),a5
    3362/    1D42 :                     ; 		move.w	$08(a5),$00(a5)
    3363/    1D42 :                     ; 		move.w	$28(a5),$20(a5)	
    3364/    1D42 :                     ; 		move.w	$38(a5),$30(a5)
    3365/    1D42 :                     ; 		move.w	$48(a5),$40(a5)
    3366/    1D42 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3367/    1D48 :                     ; ----------------------------------------------------------------
    3368/    1D48 :                     
    3369/    1D48 : 0666                ppuVdpColors:	dc.w $666
    3370/    1D4A : 0820                		dc.w $820
    3371/    1D4C : 0A00                		dc.w $A00
    3372/    1D4E : 0A04                		dc.w $A04
    3373/    1D50 : 0806                		dc.w $806
    3374/    1D52 : 0406                		dc.w $406
    3375/    1D54 : 0006                		dc.w 6
    3376/    1D56 : 0026                		dc.w $26
    3377/    1D58 : 0044                		dc.w $44
    3378/    1D5A : 0040                		dc.w $40
    3379/    1D5C : 0060                		dc.w $60
    3380/    1D5E : 0040                		dc.w $40
    3381/    1D60 : 0440                		dc.w $440
    3382/    1D62 : 0000                		dc.w 0
    3383/    1D64 : 0000                		dc.w 0
    3384/    1D66 : 0000                		dc.w 0
    3385/    1D68 : 0AAA                		dc.w $AAA
    3386/    1D6A : 0E60                		dc.w $E60
    3387/    1D6C : 0E40                		dc.w $E40
    3388/    1D6E : 0E28                		dc.w $E28
    3389/    1D70 : 0C2A                		dc.w $C2A
    3390/    1D72 : 082C                		dc.w $82C
    3391/    1D74 : 024C                		dc.w $24C
    3392/    1D76 : 004A                		dc.w $4A
    3393/    1D78 : 0066                		dc.w $66
    3394/    1D7A : 0084                		dc.w $84
    3395/    1D7C : 00A0                		dc.w $A0
    3396/    1D7E : 0480                		dc.w $480
    3397/    1D80 : 0880                		dc.w $880
    3398/    1D82 : 0000                		dc.w 0
    3399/    1D84 : 0000                		dc.w 0
    3400/    1D86 : 0000                		dc.w 0
    3401/    1D88 : 0EEE                		dc.w $EEE
    3402/    1D8A : 0EC6                		dc.w $EC6
    3403/    1D8C : 0EAA                		dc.w $EAA
    3404/    1D8E : 0E8C                		dc.w $E8C
    3405/    1D90 : 0E6E                		dc.w $E6E
    3406/    1D92 : 0C6E                		dc.w $C6E
    3407/    1D94 : 088E                		dc.w $88E
    3408/    1D96 : 02AE                		dc.w $2AE
    3409/    1D98 : 00CC                		dc.w $CC
    3410/    1D9A : 00E8                		dc.w $E8
    3411/    1D9C : 04E6                		dc.w $4E6
    3412/    1D9E : 08E4                		dc.w $8E4
    3413/    1DA0 : 0EC4                		dc.w $EC4
    3414/    1DA2 : 0444                		dc.w $444
    3415/    1DA4 : 0000                		dc.w 0
    3416/    1DA6 : 0000                		dc.w 0
    3417/    1DA8 : 0EEE                		dc.w $EEE
    3418/    1DAA : 0EEC                		dc.w $EEC
    3419/    1DAC : 0ECC                		dc.w $ECC
    3420/    1DAE : 0ECE                		dc.w $ECE
    3421/    1DB0 : 0ECE                		dc.w $ECE
    3422/    1DB2 : 0ECE                		dc.w $ECE
    3423/    1DB4 : 0CCE                		dc.w $CCE
    3424/    1DB6 : 0AEE                		dc.w $AEE
    3425/    1DB8 : 08EE                		dc.w $8EE
    3426/    1DBA : 0AEC                		dc.w $AEC
    3427/    1DBC : 08EC                		dc.w $8EC
    3428/    1DBE : 0CEC                		dc.w $CEC
    3429/    1DC0 : 0EEC                		dc.w $EEC
    3430/    1DC2 : 0CCC                		dc.w $CCC
    3431/    1DC4 : 0000                		dc.w 0
    3432/    1DC6 : 0000                		dc.w 0
    3433/    1DC8 :                     ; ----------------------------------------------------------------
    3434/    1DC8 :                     
    3435/    1DC8 :                     ppuDrwCell:
    3436/    1DC8 :                     	; d4 - ppu address
    3437/    1DC8 :                     	; d7 - cell 0-255
    3438/    1DC8 :                     
    3439/    1DC8 :                     ; 	; d4 - X pos
    3440/    1DC8 :                     ; 	; d5 - Y pos
    3441/    1DC8 :                     ; 	; d7 - Page
    3442/    1DC8 :                     
    3443/    1DC8 :                     
    3444/    1DC8 : CE7C 00FF           		and.w	#$FF,d7
    3445/    1DCC : 3A04                		move.w	d4,d5
    3446/    1DCE : 3C04                		move.w	d4,d6
    3447/    1DD0 : CA7C 001F           		and.w	#$1F,d5
    3448/    1DD4 : CC7C 03E0           		and.w	#$3E0,d6
    3449/    1DD8 : DA45                		add.w	d5,d5
    3450/    1DDA : E54E                		lsl.w	#2,d6
    3451/    1DDC : DC45                		add.w	d5,d6
    3452/    1DDE :                     
    3453/    1DDE : 3A04                		move.w	d4,d5
    3454/    1DE0 : E04D                		lsr.w	#8,d5
    3455/    1DE2 : E44D                		lsr.w	#2,d5
    3456/    1DE4 : 0805 0001           		btst	#1,d5
    3457/    1DE8 : 6704                		beq.s	.top_lyr
    3458/    1DEA : DC7C 2000           		add.w	#$2000,d6
    3459/    1DEE :                     .top_lyr:
    3460/    1DEE : 0805 0000           		btst	#0,d5
    3461/    1DF2 : 6704                		beq.s	.left_pg
    3462/    1DF4 : DC7C 0040           		add.w	#$40,d6
    3463/    1DF8 :                     .left_pg:
    3464/    1DF8 : 8E7C 8000           		or.w	#$8000,d7
    3465/    1DFC : 8C7C 4000           		or.w	#$4000,d6
    3466/    1E00 : 46FC 2700           		move.w	#$2700,sr
    3467/    1E04 : 3D46 0004           		move.w	d6,4(a6)
    3468/    1E08 : 3D7C 0003 0004      		move.w	#3,4(a6)
    3469/    1E0E : 3C87                		move.w	d7,(a6)
    3470/    1E10 : 4A6C 000C           		tst.w	ppuMirror(a4)			; horizontal mirror check
    3471/    1E14 : 6626                		bne.s	.vermirror
    3472/    1E16 : 3A06                		move.w	d6,d5	
    3473/    1E18 : DC7C 0040           		add.w	#$40,d6
    3474/    1E1C : CC7C 0040           		and.w	#$40,d6
    3475/    1E20 : CA7C FFBF           		and.w	#$FFBF,d5
    3476/    1E24 : 8C45                		or.w	d5,d6
    3477/    1E26 : 3D46 0004           		move.w	d6,4(a6)
    3478/    1E2A : 3D7C 0003 0004      		move.w	#3,4(a6)
    3479/    1E30 : 3C87                		move.w	d7,(a6)
    3480/    1E32 : 46FC 2000           		move.w	#$2000,sr
    3481/    1E36 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3482/    1E3C :                     .vermirror:
    3483/    1E3C : CC7C 3FFF           		and.w	#$3FFF,d6
    3484/    1E40 : DC7C 2000           		add.w	#$2000,d6
    3485/    1E44 : 8C7C 4000           		or.w	#$4000,d6
    3486/    1E48 : 3D46 0004           		move.w	d6,4(a6)
    3487/    1E4C : 3D7C 0003 0004      		move.w	#3,4(a6)
    3488/    1E52 : 3C87                		move.w	d7,(a6)
    3489/    1E54 : 46FC 2000           		move.w	#$2000,sr
    3490/    1E58 : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3491/    1E5E :                     
    3492/    1E5E :                     ; ----------------------------------------------------------------
    3493/    1E5E :                     
    3494/    1E5E :                     ppuDrwCellPal:
    3495/    1E5E :                     	; TODO: rewrite
    3496/    1E5E : 4EF9 FFFF 8FF0      		jmp	(RAM_EmuLoop).l
    3497/    1E64 :                     
    3498/    1E64 :                     
    3499/    1E64 :                     ; =============== S U B	R O U T	I N E =======================================
    3500/    1E64 :                     
    3501/    1E64 :                     
    3502/    1E64 :                     romGrabPrg:
    3503/    1E64 : 49E8 0010           		lea	$10(a0),a4
    3504/    1E68 : 0C07 0001           		cmpi.b	#1,d7
    3505/    1E6C : 6700 000C           		beq.w	loc_29C0
    3506/    1E70 : 0C07 0002           		cmpi.b	#2,d7
    3507/    1E74 : 6700 0022           		beq.w	loc_29D8
    3508/    1E78 : 4E42                		trap	#2
    3509/    1E7A :                     ; ----------------------------------------------------------------
    3510/    1E7A :                     loc_29C0:
    3511/    1E7A : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3512/    1E80 : 47F9 FFFF 4000      		lea	(RAM_Fami_ROM+$4000).l,a3
    3513/    1E86 : 2E3C 0000 0FFF      		move.l	#$FFF,d7
    3514/    1E8C :                     .rom_1:
    3515/    1E8C : 261C                		move.l	(a4)+,d3
    3516/    1E8E : 2AC3                		move.l	d3,(a5)+
    3517/    1E90 : 26C3                		move.l	d3,(a3)+
    3518/    1E92 : 51CF FFF8           		dbf	d7,.rom_1
    3519/    1E96 : 4E75                		rts
    3520/    1E98 :                     ; ----------------------------------------------------------------
    3521/    1E98 :                     
    3522/    1E98 :                     loc_29D8:
    3523/    1E98 : 4BF9 FFFF 0000      		lea	(RAM_Fami_ROM).l,a5
    3524/    1E9E : 2E3C 0000 1FFF      		move.l	#$1FFF,d7
    3525/    1EA4 :                     loc_29E2:
    3526/    1EA4 : 2ADC                		move.l	(a4)+,(a5)+
    3527/    1EA6 : 51CF FFFC           		dbf	d7,loc_29E2
    3528/    1EAA : 4E75                		rts
    3529/    1EAC :                     
    3530/    1EAC :                     ; =============== S U B	R O U T	I N E =======================================
    3531/    1EAC :                     
    3532/    1EAC :                     ; a6 - $C00000
    3533/    1EAC :                     ; a4 - RAM_Fami_Emu
    3534/    1EAC :                     
    3535/    1EAC :                     Nemul_LoadChr:
    3536/    1EAC : 46FC 2700           		move.w	#$2700,sr
    3537/    1EB0 : 3D7C 8F02 0004      		move.w	#$8F02,4(a6)
    3538/    1EB6 : 2D7C 4000 0000 0004 		move.l	#$40000000,4(a6)
    3539/    1EBE : 7A00                		moveq	#0,d5
    3540/    1EC0 : 3C2C 001E           		move.w	ppuChrBank(a4),d6
    3541/    1EC4 : 6100 0014           		bsr.w	.make_chr
    3542/    1EC8 : 7A04                		moveq	#4,d5
    3543/    1ECA : 3C2C 001E           		move.w	ppuChrBank(a4),d6
    3544/    1ECE : E30E                		lsl.b	#1,d6
    3545/    1ED0 : 6100 0008           		bsr.w	.make_chr
    3546/    1ED4 : 46FC 2000           		move.w	#$2000,sr
    3547/    1ED8 : 4E75                		rts
    3548/    1EDA :                     
    3549/    1EDA :                     .make_chr:
    3550/    1EDA : 2A4B                		movea.l	a3,a5
    3551/    1EDC : E30E                		lsl.b	#1,d6
    3552/    1EDE : 6406                		bcc.s	loc_8DBA
    3553/    1EE0 : DBFC 0000 1000      		adda.l	#$1000,a5
    3554/    1EE6 :                     loc_8DBA:
    3555/    1EE6 : 48E7 FF00           		movem.l	d0-d2/d3-d7,-(sp)
    3556/    1EEA : 2E3C 0000 00FF      		move.l	#$FF,d7
    3557/    1EF0 :                     loc_8DC4:
    3558/    1EF0 : 7607                		moveq	#7,d3
    3559/    1EF2 :                     loc_8DC6:
    3560/    1EF2 : 1215                		move.b	(a5),d1
    3561/    1EF4 : 142D 0008           		move.b	8(a5),d2
    3562/    1EF8 : 7000                		moveq	#0,d0
    3563/    1EFA : 7C07                		moveq	#7,d6
    3564/    1EFC :                     loc_8DD0:
    3565/    1EFC : D402                		add.b	d2,d2
    3566/    1EFE : D140                		addx.w	d0,d0
    3567/    1F00 : D201                		add.b	d1,d1
    3568/    1F02 : D140                		addx.w	d0,d0
    3569/    1F04 : 51CE FFF6           		dbf	d6,loc_8DD0
    3570/    1F08 : 7800                		moveq	#0,d4
    3571/    1F0A : 7C07                		moveq	#7,d6
    3572/    1F0C :                     loc_8DE0:
    3573/    1F0C : 1200                		move.b	d0,d1
    3574/    1F0E : E448                		lsr.w	#2,d0
    3575/    1F10 : 0281 0000 0003      		andi.l	#3,d1
    3576/    1F16 : 6702                		beq.s	loc_8DEE
    3577/    1F18 : 8205                		or.b	d5,d1
    3578/    1F1A :                     loc_8DEE:
    3579/    1F1A : 8801                		or.b	d1,d4
    3580/    1F1C : E89C                		ror.l	#4,d4
    3581/    1F1E : 51CE FFEC           		dbf	d6,loc_8DE0
    3582/    1F22 : 2C84                		move.l	d4,(a6)
    3583/    1F24 : 528D                		addq.l	#1,a5
    3584/    1F26 : 51CB FFCA           		dbf	d3,loc_8DC6
    3585/    1F2A : 508D                		addq.l	#8,a5
    3586/    1F2C : 51CF FFC2           		dbf	d7,loc_8DC4
    3587/    1F30 : 4CDF 00FF           		movem.l	(sp)+,d0-d2/d3-d7
    3588/    1F34 :                     return_8E08:
    3589/    1F34 : 4E75                		rts
    3590/    1F36 :                     
    3591/    1F36 :                     ; ====================================================================
    3592/    1F36 :                     
    3593/    1F36 :                     		align $8000
    3594/    8000 :                     EndOfRom:
    3595/    8000 :                     
    3596/    8000 :                     ; ====================================================================
    3597/    8000 :                     ; ----------------------------------------------------------------
    3598/    8000 :                     ; ROM are here
    3599/    8000 :                     ; ----------------------------------------------------------------
    3600/    8000 :                     
    3601/    8000 :                     ROM_FILE:	binclude "roms/paperboy.nes"
    3602/   18010 :                     
 AS V1.42 Beta [Bld 118] - source file md.asm - page 2 - 10/13/2020 3:07:37


  symbol table (* = unused):
  ------------------------

 ADDR_READ :                   194A C |  ADDR_WRITE :                  1A16 C |
 APU_INPUT :                   1AC6 C |  APU_INPUT_1 :                 1990 C |
 APU_INPUT_2 :                 199E C |  APU_NULL :                    1AC0 C |
 APU_OAMDMA :                  1B26 C |  APU_OAMDMA.LP_SPRNORMAL :     1B54 C |
*APU_RD_NULL :                 198A C |
*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BITDISPENBL :                    6 - |
*BITDMA :                         1 - | *BITDMAENBL :                     4 - |
*BITHINT :                        2 - | *BITHINTENBL :                    4 - |
*BITHVSTOP :                      1 - | *BITJOYA :                        6 - |
*BITJOYB :                        4 - | *BITJOYC :                        5 - |
*BITJOYDOWN :                     1 - | *BITJOYLEFT :                     2 - |
*BITJOYMODE :                     3 - | *BITJOYRIGHT :                    3 - |
*BITJOYSTART :                    7 - | *BITJOYUP :                       0 - |
*BITJOYX :                        2 - | *BITJOYY :                        1 - |
*BITJOYZ :                        0 - | *BITV30 :                         3 - |
 BITVINT :                        3 - | *BITVINTENBL :                    5 - |
*BRANCHEXT :                      0 - |  BYTE_910 :                     34E C |
*CASESENSITIVE :                  0 - |  CLRSTACK :                     244 C |
*CONSTPI :        3.141592653589793 - |  CPUENTRY :                    7FFC - |
 CPUFAMIVINT :                   10 C |  CPUFLAG2 :                      18 C |
 CPUINPUTDATA :                  12 C |  CPUIRQ :                      7FFE - |
 CPUMAPPER :                      E C |  CPUMODEDEC :                    16 C |
 CPUMODEINTDIS :                 1A C |  CPUNMI :                      7FFA - |
*CPUSPRHINT :                     8 C | *DATE :                  10/13/2020 - |
*DISPENBL :                      40 - | *DMAENBL :                       10 - |
*DOTTEDSTRUCTS :                  0 - | *DOVINT :                       590 C |
 EMUCHRROM :                      4 C |  EMULOOP :                      566 C |
 EMUPRGROM :                      0 C |  EMUSTART :                     508 C |
 EMUVINT :                      56C C |  ENDOFROM :                    8000 C |
*FALSE :                          0 - |  FAMIMDVINT :                    36 C |
 FAMIVINT :                     57A C |  FAMI_INITVIDEO :               2B6 C |
 FAMI_INITVIDEO.LOOPBG :        2DC C |  FAMI_INITVIDEO.LOOPFG :        2C8 C |
 FAMI_LOADROM :                 476 C |  FAMI_LOADROM.CLRRAM :          48C C |
 FAMI_LOADROM.CLRVRAM :         49E C | *FULLPMMU :                       1 - |
 GLBL_LASTORG :                   0 - |  GLBL_LASTPC :                    0 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*HINTENBL :                      10 - | *HVSTOP :                         2 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      1 - | *JOYA :                          40 - |
*JOYB :                          10 - | *JOYC :                          20 - |
*JOYDOWN :                        2 - | *JOYLEFT :                        4 - |
*JOYMODE :                      800 - | *JOYRIGHT :                       8 - |
*JOYSTART :                      80 - | *JOYUP :                          1 - |
*JOYX :                         400 - | *JOYY :                         200 - |
*JOYZ :                         100 - | *LISTON :                         3 - |
 LIST_INITREGS :                26E C |  LOC_1002 :                     9A0 C |
 LOC_1030 :                     9CE C |  LOC_1042 :                     9E2 C |
 LOC_1060 :                     A02 C |  LOC_1080 :                     A24 C |
 LOC_10A2 :                     A48 C |  LOC_10C6 :                     A6E C |
 LOC_10D0 :                     A78 C |  LOC_10D4 :                     A7E C |
 LOC_10DE :                     A88 C |  LOC_10E2 :                     A8E C |
 LOC_10EC :                     A98 C |  LOC_10F0 :                     A9E C |
 LOC_1106 :                     AB4 C |  LOC_110E :                     ABC C |
 LOC_1116 :                     AC4 C |  LOC_111A :                     ACA C |
 LOC_1136 :                     AE4 C |  LOC_113E :                     AEC C |
 LOC_1146 :                     AF4 C |  LOC_114A :                     AFA C |
 LOC_1154 :                     B04 C |  LOC_1158 :                     B0A C |
 LOC_1162 :                     B14 C |  LOC_1166 :                     B1A C |
 LOC_1170 :                     B24 C |  LOC_118E :                     B4E C |
 LOC_1198 :                     B58 C |  LOC_119C :                     B5E C |
 LOC_11A6 :                     B68 C |  LOC_11AA :                     B6E C |
 LOC_11B2 :                     B78 C |  LOC_11BC :                     B84 C |
 LOC_11C6 :                     B90 C |  LOC_11CE :                     B9A C |
 LOC_11EE :                     BBC C |  LOC_1214 :                     BE4 C |
 LOC_123C :                     C0E C |  LOC_1268 :                     C3A C |
 LOC_129A :                     C6C C |  LOC_12CC :                     C9E C |
 LOC_1302 :                     CD4 C |  LOC_133C :                     D0E C |
 LOC_135C :                     D30 C |  LOC_1382 :                     D58 C |
 LOC_13AE :                     D84 C |  LOC_13CE :                     DA6 C |
 LOC_13F4 :                     DCE C |  LOC_1420 :                     DFA C |
 LOC_1438 :                     E14 C |  LOC_1452 :                     E30 C |
 LOC_146E :                     E4E C |  LOC_148C :                     E6E C |
 LOC_149E :                     E82 C |  LOC_14B0 :                     E96 C |
 LOC_14C4 :                     EAC C |  LOC_14DE :                     EC8 C |
 LOC_14FA :                     EE6 C |  LOC_151A :                     F06 C |
 LOC_1540 :                     F2C C |  LOC_1566 :                     F52 C |
 LOC_1590 :                     F7C C |  LOC_15BE :                     FAA C |
 LOC_15D3 :                     FC4 C |  LOC_15F0 :                     FE0 C |
 LOC_160C :                     FFE C |  LOC_162A :                    101E C |
 LOC_163C :                    1032 C |  LOC_164E :                    1046 C |
 LOC_1660 :                    1060 C |  LOC_167C :                    1084 C |
 LOC_1686 :                    108E C |  LOC_16A4 :                    10B8 C |
 LOC_16B6 :                    10CC C |  LOC_16CE :                    10E6 C |
 LOC_16E8 :                    1102 C |  LOC_1708 :                    1122 C |
 LOC_172E :                    1148 C |  LOC_1754 :                    116E C |
 LOC_177E :                    1198 C |  LOC_17AC :                    11C6 C |
 LOC_17BE :                    11DA C |  LOC_17D3 :                    11F4 C |
 LOC_17F0 :                    1210 C |  LOC_1810 :                    1230 C |
 LOC_1836 :                    1256 C |  LOC_1848 :                    126A C |
 LOC_1860 :                    1284 C |  LOC_187A :                    12A0 C |
 LOC_189A :                    12C0 C |  LOC_18C0 :                    12E6 C |
 LOC_18D2 :                    12FA C |  LOC_18F0 :                    131A C |
 LOC_1910 :                    133C C |  LOC_1932 :                    1360 C |
 LOC_1956 :                    1386 C |  LOC_195C :                    138E C |
 LOC_1970 :                    13A4 C |  LOC_198A :                    13C0 C |
 LOC_19A6 :                    13DE C |  LOC_19C6 :                    13FE C |
 LOC_19EC :                    1424 C |  LOC_1A12 :                    144A C |
 LOC_1A3C :                    1474 C |  LOC_1A6A :                    14A2 C |
 LOC_1A78 :                    14B2 C |  LOC_1A88 :                    14C4 C |
 LOC_1AA6 :                    14E4 C |  LOC_1AB6 :                    14F6 C |
 LOC_1ACA :                    150C C |  LOC_1AEA :                    152E C |
 LOC_1B0C :                    1552 C |  LOC_1B30 :                    1578 C |
 LOC_1B56 :                    15A0 C |  LOC_1B6A :                    15B6 C |
 LOC_1B8A :                    15D8 C |  LOC_1BAC :                    15FC C |
 LOC_1BD0 :                    1622 C |  LOC_1BF6 :                    164A C |
 LOC_1C32 :                    1666 C |  LOC_1C52 :                    168E C |
 LOC_1C6A :                    16A8 C |  LOC_1C88 :                    16C8 C |
 LOC_1CA8 :                    16EA C |  LOC_1CCC :                    170E C |
 LOC_1CF6 :                    1738 C |  LOC_1D20 :                    1762 C |
 LOC_1D4E :                    1790 C |  LOC_1D80 :                    17C2 C |
 LOC_1D88 :                    17CC C |  LOC_1D92 :                    17D8 C |
 LOC_1D9C :                    17E4 C |  LOC_1DA8 :                    17F2 C |
 LOC_1DB6 :                    1802 C |  LOC_1DCA :                    1816 C |
 LOC_1DE0 :                    182A C |  LOC_1DF6 :                    183E C |
 LOC_1E10 :                    1856 C |  LOC_1E2E :                    1872 C |
 LOC_1E3A :                    1880 C |  LOC_1E48 :                    1890 C |
 LOC_1E5C :                    18A4 C |  LOC_1E68 :                    18B2 C |
 LOC_1E76 :                    18C2 C |  LOC_1E8A :                    18D6 C |
 LOC_1E9C :                    18EA C |  LOC_1EAE :                    18FE C |
 LOC_1EC4 :                    1916 C |  LOC_1ED3 :                    192A C |
 LOC_1EE0 :                    1936 C |  LOC_210 :                      214 C |
 LOC_23A6 :                    198C C |  LOC_23F4 :                    19CA C |
 LOC_270 :                      26A C |  LOC_29C0 :                    1E7A C |
 LOC_29C0.ROM_1 :              1E8C C |  LOC_29D8 :                    1E98 C |
 LOC_29E2 :                    1EA4 C |  LOC_2A16 :                    1BB4 C |
 LOC_2A16.NOVINTFLAG :         1BBE C |  LOC_2A2C :                    1BCA C |
 LOC_2A2C.NO_RELOAD :          1BE2 C |  LOC_2A2C.NRML_INCR :          1BEA C |
 LOC_2A5E :                    1BFC C |  LOC_2A5E.HIDEBG :             1C14 C |
 LOC_2A5E.HIDESP :             1C20 C |  LOC_2AA4 :                    1C58 C |
 LOC_2ABE :                    1C74 C |  LOC_2ACC :                    1C86 C |
 LOC_2AD0 :                    1C8C C |  LOC_2AE2 :                    1CA0 C |
 LOC_2AE6 :                    1CA6 C |  LOC_51E :                      30A C |
 LOC_8DA :                      318 C |  LOC_8DBA :                    1EE6 C |
 LOC_8DC4 :                    1EF0 C |  LOC_8DC6 :                    1EF2 C |
 LOC_8DD0 :                    1EFC C |  LOC_8DE0 :                    1F0C C |
 LOC_8DEE :                    1F1A C |  LOC_8E0 :                      31E C |
 LOC_8F0 :                      32E C |  LOC_904 :                      342 C |
 LOC_9F4 :                      4E6 C |  LOC_A10 :                      4FA C |
 LOC_E34 :                      7C6 C |  LOC_E44 :                      7D8 C |
 LOC_E5A :                      7F0 C |  LOC_E72 :                      80A C |
 LOC_E8E :                      826 C |  LOC_EB0 :                      848 C |
 LOC_ED2 :                      86A C |  LOC_EF8 :                      890 C |
 LOC_F22 :                      8BA C |  LOC_F36 :                      8D0 C |
 LOC_F50 :                      8EC C |  LOC_F6C :                      90A C |
 LOC_F8C :                      92A C |  LOC_FB2 :                      950 C |
 LOC_FD8 :                      976 C | *MACEXP :                         7 - |
*MARS :                           0 - | *MARSCD :                         0 - |
*MCD :                            0 - | *MD_BANK_SRAM :              A130F1 - |
 MD_ENTRY :                     202 C |  MD_ERROR :                     200 C |
 MD_HINT :                      44C C |  MD_INIT :                      362 C |
 MD_INIT.WAIT :                 382 C | *MD_MARS_ID :                A130EC - |
 MD_VINT :                      3AE C |  MD_VINT.WAIT :                 3F8 C |
 MD_VINT.WAIT2 :                42E C | *MOMCPU :                     68000 - |
*MOMCPUNAME :                 68000 - |  MOSCPU :                       5C4 C |
 MOS_BRK :                      B2A C |  MOS_NULL :                     7C4 C |
 NEMUL_LOADCHR :               1EAC C |  NEMUL_LOADCHR.MAKE_CHR :      1EDA C |
*NESTMAX :                      100 - |  OAMSPRDATA :                    C0 C |
 OFF_23D4 :                    19BA C |  OFF_2866 :                    1A80 C |
 OFF_29F6 :                    1BA4 C |  OLD_MD :                       23E C |
*PACKING :                        0 - | *PADDING :                        0 - |
*PADDINGSOFAR :                   0 - |  PPUADDRBASE :                   24 C |
 PPUADDRINCR :                   22 C |  PPUADDRLATCH :                  2C C |
 PPUCHRBANK :                    1E C |  PPUDATALAST :                   26 C |
 PPUDRWCELL :                  1DC8 C |  PPUDRWCELL.LEFT_PG :          1DF8 C |
 PPUDRWCELL.TOP_LYR :          1DEE C |  PPUDRWCELL.VERMIRROR :        1E3C C |
 PPUDRWCELLPAL :               1E5E C |  PPUMIRROR :                      C C |
 PPUNMIFLAG :                    30 C |  PPUNTBLBASE :                   1C C |
 PPUOAMADDR :                    20 C |  PPUOAMUNK :                     2E C |
 PPUSETCOLOR :                 1D26 C |  PPUSP0YPOS :                    2A C |
 PPUSPRWIDE :                    28 C |  PPUSTATUS :                     32 C |
 PPUVDPCOLORS :                1D48 C |  PPUVDPINDEX :                 1CE6 C |
*PSG_CTRL :                  C00011 - |  RAM_EMULOOP :     FFFFFFFFFFFF8FF0 C |
 RAM_FAMI_EMU :            FFFF8000 - |  RAM_FAMI_PPU :            FFFFA000 - |
 RAM_FAMI_RAM :            FFFF9000 - |  RAM_FAMI_ROM :            FFFF0000 - |
 RDFROM_APU :                  1976 C |  RDFROM_PPU :                  19AC C |
 RDFROM_PRG :                  1968 C | *RDFROM_RAM :                  195A C |
 RDPPU_DATA :                  19FE C |  RDPPU_STATUS :                19D0 C |
 RDPPU_STATUS.NOVFLAG :        19FA C |  RDPPU_STATUS.NO_HIT :         19EA C |
 READINPUT :                   1AD2 C |  READINPUT.THIS_PAD :          1AE8 C |
*RELAXED :                        0 - |  RETURN_241A :                 19FC C |
*RETURN_8E08 :                 1F34 C |  ROMGRABPRG :                  1E64 C |
 ROM_FILE :                    8000 C |  SOUND_LOADZ80 :                314 C |
 SOUND_PSGINIT :                32C C | *SYSCD_ARGS_M :              A12010 - |
*SYSCD_ARGS_S :              A12020 - | *SYSCD_BUS :                 A12000 - |
*SYSCD_CDCHOST :             A12008 - | *SYSCD_CDCMODE :             A12004 - |
*SYSCD_COMM_M :              A1200E - | *SYSCD_COMM_S :              A1200F - |
*SYSCD_HINT :                A12006 - | *SYSCD_MEMORY :              A12003 - |
*SYSCD_PRGRAM :               20000 - | *SYSCD_STOPWTCH :            A12008 - |
*SYSCD_WORDRAM :             200000 - | *SYS_CTRL_1 :                A10009 - |
*SYS_CTRL_2 :                A1000B - | *SYS_CTRL_3 :                A1000D - |
*SYS_DATA_1 :                A10003 - | *SYS_DATA_2 :                A10005 - |
*SYS_DATA_3 :                A10007 - | *SYS_EXRAM :                 200000 - |
*SYS_IO :                    A10001 - | *SYS_TMSS :                  A14000 - |
*TIME :                     3:07:37 - | *TRUE :                           1 - |
*VARNULLVRAM :                  7FF - |  VDPHINTSP0 :                    34 C |
 VDPPALETTE :                    40 C |  VDPREG01 :                       A C |
 VDPSCRLX :                      38 C |  VDPSCRLY :                      3C C |
 VDP_CTRL :                  C00004 - | *VDP_DATA :                  C00000 - |
*VDP_PALETTE :             C0000000 - | *VDP_VSRAM :               40000010 - |
*VERSION :                     142F - |  VIDEO_INIT :                   33A C |
*VINTENBL :                      20 - |  WRPPU_DATA :                  1CBA C |
 WRPPU_SCROLL :                1C30 C |  WRTO_APU :                    1A70 C |
 WRTO_PPU :                    1B96 C |  WRTO_PRG :                    1A3A C |
 WRTO_PRG.COPYCHR :            1A5E C |  WRTO_PRG.MAPPER_3 :           1A48 C |
*WRTO_RAM :                    1A28 C | *YM_CTRL_1 :                 A04000 - |
*YM_CTRL_2 :                 A04002 - | *YM_DATA_1 :                 A04001 - |
*YM_DATA_2 :                 A04003 - |  Z80_BUS :                   A11100 - |
*Z80_CPU :                   A00000 - |  Z80_RESET :                 A11200 - |
*ZBANK :                       6000 - | *ZPSG_CTRL :                   7F11 - |
*ZVDP_CTRL :                   7F04 - | *ZVDP_DATA :                   7F00 - |
*ZYM_CTRL_1 :                  4000 - | *ZYM_CTRL_2 :                  4002 - |
*ZYM_DATA_1 :                  4001 - | *ZYM_DATA_2 :                  4003 - |

    428 symbols
    117 unused symbols

 AS V1.42 Beta [Bld 118] - source file md.asm - page 3 - 10/13/2020 3:07:37


  defined macros:
  ---------------

FINISH                                | ISO_FILE                             
ISO_SETFS                             | ORG                                  
ROMPAD                                | STRUCT                               

      6 macros

 AS V1.42 Beta [Bld 118] - source file md.asm - page 4 - 10/13/2020 3:07:37


  defined functions:
  ------------------

NOTZ80                                | LOCATE                               
MAPSIZE                               | DOUBLEWORD                           
M68K_ADDR                             |

 AS V1.42 Beta [Bld 118] - source file md.asm - page 5 - 10/13/2020 3:07:37


  codepages:
  ----------

STANDARD (0 changed characters)


0.03 seconds assembly time

   3911 lines source file
   3923 lines incl. macro expansions
      3 passes
      0 errors
      0 warnings
